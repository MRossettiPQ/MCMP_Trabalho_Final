

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu May 06 04:10:03 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    45                           	dabs	1,0x7E,2
    46  0000                     
    47                           ; Version 2.20
    48                           ; Generated 12/02/2020 GMT
    49                           ; 
    50                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC16F877A Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     	;# 
    82  0001                     	;# 
    83  0002                     	;# 
    84  0003                     	;# 
    85  0004                     	;# 
    86  0005                     	;# 
    87  0006                     	;# 
    88  0007                     	;# 
    89  0008                     	;# 
    90  0009                     	;# 
    91  000A                     	;# 
    92  000B                     	;# 
    93  000C                     	;# 
    94  000D                     	;# 
    95  000E                     	;# 
    96  000E                     	;# 
    97  000F                     	;# 
    98  0010                     	;# 
    99  0011                     	;# 
   100  0012                     	;# 
   101  0013                     	;# 
   102  0014                     	;# 
   103  0015                     	;# 
   104  0015                     	;# 
   105  0016                     	;# 
   106  0017                     	;# 
   107  0018                     	;# 
   108  0019                     	;# 
   109  001A                     	;# 
   110  001B                     	;# 
   111  001B                     	;# 
   112  001C                     	;# 
   113  001D                     	;# 
   114  001E                     	;# 
   115  001F                     	;# 
   116  0081                     	;# 
   117  0085                     	;# 
   118  0086                     	;# 
   119  0087                     	;# 
   120  0088                     	;# 
   121  0089                     	;# 
   122  008C                     	;# 
   123  008D                     	;# 
   124  008E                     	;# 
   125  0091                     	;# 
   126  0092                     	;# 
   127  0093                     	;# 
   128  0094                     	;# 
   129  0098                     	;# 
   130  0099                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009E                     	;# 
   134  009F                     	;# 
   135  010C                     	;# 
   136  010D                     	;# 
   137  010E                     	;# 
   138  010F                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  0000                     	;# 
   142  0001                     	;# 
   143  0002                     	;# 
   144  0003                     	;# 
   145  0004                     	;# 
   146  0005                     	;# 
   147  0006                     	;# 
   148  0007                     	;# 
   149  0008                     	;# 
   150  0009                     	;# 
   151  000A                     	;# 
   152  000B                     	;# 
   153  000C                     	;# 
   154  000D                     	;# 
   155  000E                     	;# 
   156  000E                     	;# 
   157  000F                     	;# 
   158  0010                     	;# 
   159  0011                     	;# 
   160  0012                     	;# 
   161  0013                     	;# 
   162  0014                     	;# 
   163  0015                     	;# 
   164  0015                     	;# 
   165  0016                     	;# 
   166  0017                     	;# 
   167  0018                     	;# 
   168  0019                     	;# 
   169  001A                     	;# 
   170  001B                     	;# 
   171  001B                     	;# 
   172  001C                     	;# 
   173  001D                     	;# 
   174  001E                     	;# 
   175  001F                     	;# 
   176  0081                     	;# 
   177  0085                     	;# 
   178  0086                     	;# 
   179  0087                     	;# 
   180  0088                     	;# 
   181  0089                     	;# 
   182  008C                     	;# 
   183  008D                     	;# 
   184  008E                     	;# 
   185  0091                     	;# 
   186  0092                     	;# 
   187  0093                     	;# 
   188  0094                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  018C                     	;# 
   200  018D                     	;# 
   201                           
   202                           	psect	idataBANK1
   203  0EEC                     __pidataBANK1:
   204                           
   205                           ;initializer for _buffer1
   206  0EEC  3449               	retlw	73
   207  0EED  344E               	retlw	78
   208  0EEE  3449               	retlw	73
   209  0EEF  3443               	retlw	67
   210  0EF0  3449               	retlw	73
   211  0EF1  3441               	retlw	65
   212  0EF2  3400               	retlw	0
   213  0EF3  3400               	retlw	0
   214  0EF4  3400               	retlw	0
   215  0EF5  3400               	retlw	0
   216  0EF6  3400               	retlw	0
   217  0EF7  3400               	retlw	0
   218  0EF8  3400               	retlw	0
   219  0EF9  3400               	retlw	0
   220  0EFA  3400               	retlw	0
   221  0EFB  3400               	retlw	0
   222  0EFC  3400               	retlw	0
   223  0EFD  3400               	retlw	0
   224  0EFE  3400               	retlw	0
   225  0EFF  3400               	retlw	0
   226  0F00  3400               	retlw	0
   227  0F01  3400               	retlw	0
   228  0F02  3400               	retlw	0
   229  0F03  3400               	retlw	0
   230  0F04  3400               	retlw	0
   231  0F05  3400               	retlw	0
   232  0F06  3400               	retlw	0
   233  0F07  3400               	retlw	0
   234  0F08  3400               	retlw	0
   235  0F09  3400               	retlw	0
   236                           
   237                           ;initializer for _buffer0
   238  0F0A  3449               	retlw	73
   239  0F0B  344E               	retlw	78
   240  0F0C  3449               	retlw	73
   241  0F0D  3443               	retlw	67
   242  0F0E  3449               	retlw	73
   243  0F0F  3441               	retlw	65
   244  0F10  3400               	retlw	0
   245  0F11  3400               	retlw	0
   246  0F12  3400               	retlw	0
   247  0F13  3400               	retlw	0
   248  0F14  3400               	retlw	0
   249  0F15  3400               	retlw	0
   250  0F16  3400               	retlw	0
   251  0F17  3400               	retlw	0
   252  0F18  3400               	retlw	0
   253  0F19  3400               	retlw	0
   254  0F1A  3400               	retlw	0
   255  0F1B  3400               	retlw	0
   256  0F1C  3400               	retlw	0
   257  0F1D  3400               	retlw	0
   258  0F1E  3400               	retlw	0
   259  0F1F  3400               	retlw	0
   260  0F20  3400               	retlw	0
   261  0F21  3400               	retlw	0
   262  0F22  3400               	retlw	0
   263  0F23  3400               	retlw	0
   264  0F24  3400               	retlw	0
   265  0F25  3400               	retlw	0
   266  0F26  3400               	retlw	0
   267  0F27  3400               	retlw	0
   268                           
   269                           	psect	strings
   270  0800                     __pstrings:
   271  0800                     stringtab:
   272  0800                     __stringtab:
   273  0800                     stringcode:	
   274                           ;	String table - string pointers are 1 byte each
   275                           
   276  0800                     stringdir:
   277  0800  3008               	movlw	high stringdir
   278  0801  008A               	movwf	10
   279  0802  0804               	movf	4,w
   280  0803  0A84               	incf	4,f
   281  0804  0782               	addwf	2,f
   282  0805                     __stringbase:
   283  0805  3400               	retlw	0
   284  0806                     __end_of__stringtab:
   285  0806                     _dpowers:
   286  0806  3401               	retlw	1
   287  0807  3400               	retlw	0
   288  0808  340A               	retlw	10
   289  0809  3400               	retlw	0
   290  080A  3464               	retlw	100
   291  080B  3400               	retlw	0
   292  080C  34E8               	retlw	232
   293  080D  3403               	retlw	3
   294  080E  3410               	retlw	16
   295  080F  3427               	retlw	39
   296  0810                     __end_of_dpowers:
   297  0008                     _PORTDbits	set	8
   298  0007                     _PORTCbits	set	7
   299  0010                     _T1CONbits	set	16
   300  000B                     _INTCONbits	set	11
   301  001E                     _ADRESH	set	30
   302  001F                     _ADCON0bits	set	31
   303  000F                     _TMR1H	set	15
   304  000E                     _TMR1L	set	14
   305  0006                     _PORTBbits	set	6
   306  0047                     _RD7	set	71
   307  003A                     _RC2	set	58
   308  003B                     _RC3	set	59
   309  0040                     _RD0	set	64
   310  0046                     _RD6	set	70
   311  0042                     _RD2	set	66
   312  0039                     _RC1	set	57
   313  0044                     _RD4	set	68
   314  0038                     _RC0	set	56
   315  0041                     _RD1	set	65
   316  0043                     _RD3	set	67
   317  0045                     _RD5	set	69
   318  003D                     _RC5	set	61
   319  003C                     _RC4	set	60
   320  003F                     _RC7	set	63
   321  003E                     _RC6	set	62
   322  0060                     _TMR1IF	set	96
   323  0059                     _INTF	set	89
   324  0031                     _RB1	set	49
   325  0032                     _RB2	set	50
   326  0037                     _RB7	set	55
   327  0036                     _RB6	set	54
   328  0035                     _RB5	set	53
   329  0034                     _RB4	set	52
   330  009E                     _ADRESL	set	158
   331  009F                     _ADCON1bits	set	159
   332  0088                     _TRISD	set	136
   333  0087                     _TRISC	set	135
   334  0085                     _TRISA	set	133
   335  008C                     _PIE1bits	set	140
   336  0086                     _TRISBbits	set	134
   337  0081                     _OPTION_REGbits	set	129
   338  0810                     STR_1:
   339  0810  3443               	retlw	67	;'C'
   340  0811  343A               	retlw	58	;':'
   341  0812  3425               	retlw	37	;'%'
   342  0813  3469               	retlw	105	;'i'
   343  0814  3420               	retlw	32	;' '
   344  0815  3441               	retlw	65	;'A'
   345  0816  343A               	retlw	58	;':'
   346  0817  3425               	retlw	37	;'%'
   347  0818  3469               	retlw	105	;'i'
   348  0819  3420               	retlw	32	;' '
   349  081A  344C               	retlw	76	;'L'
   350  081B  343A               	retlw	58	;':'
   351  081C  3425               	retlw	37	;'%'
   352  081D  3469               	retlw	105	;'i'
   353  081E  3420               	retlw	32	;' '
   354  081F  3453               	retlw	83	;'S'
   355  0820  3431               	retlw	49	;'1'
   356  0821  343A               	retlw	58	;':'
   357  0822  3425               	retlw	37	;'%'
   358  0823  3469               	retlw	105	;'i'
   359  0824  3400               	retlw	0
   360  0825                     STR_2:
   361  0825  3453               	retlw	83	;'S'
   362  0826  3432               	retlw	50	;'2'
   363  0827  343A               	retlw	58	;':'
   364  0828  3425               	retlw	37	;'%'
   365  0829  3469               	retlw	105	;'i'
   366  082A  3420               	retlw	32	;' '
   367  082B  3453               	retlw	83	;'S'
   368  082C  3433               	retlw	51	;'3'
   369  082D  343A               	retlw	58	;':'
   370  082E  3425               	retlw	37	;'%'
   371  082F  3469               	retlw	105	;'i'
   372  0830  3420               	retlw	32	;' '
   373  0831  3453               	retlw	83	;'S'
   374  0832  3434               	retlw	52	;'4'
   375  0833  343A               	retlw	58	;':'
   376  0834  3425               	retlw	37	;'%'
   377  0835  3469               	retlw	105	;'i'
   378  0836  3420               	retlw	32	;' '
   379  0837  3400               	retlw	0
   380                           
   381                           	psect	cinit
   382  0015                     start_initialization:	
   383                           ; #config settings
   384                           
   385  0015                     __initialization:
   386                           
   387                           ; Initialize objects allocated to BANK1
   388  0015  1383               	bcf	3,7	;select IRP bank0
   389  0016  30DC               	movlw	low (__pdataBANK1+60)
   390  0017  00FD               	movwf	btemp+-1
   391  0018  300E               	movlw	high __pidataBANK1
   392  0019  00FE               	movwf	btemp
   393  001A  30EC               	movlw	low __pidataBANK1
   394  001B  00FF               	movwf	btemp+1
   395  001C  30A0               	movlw	low __pdataBANK1
   396  001D  0084               	movwf	4
   397  001E  120A  158A  24CB  120A  118A  	fcall	init_ram0
   398                           
   399                           ; Clear objects allocated to BANK0
   400  0023  3020               	movlw	low __pbssBANK0
   401  0024  0084               	movwf	4
   402  0025  303C               	movlw	low (__pbssBANK0+28)
   403  0026  120A  158A  24B2  120A  118A  	fcall	clear_ram0
   404  002B                     end_of_initialization:	
   405                           ;End of C runtime variable initialization code
   406                           
   407  002B                     __end_of__initialization:
   408  002B  0183               	clrf	3
   409  002C  120A  118A  282F   	ljmp	_main	;jump to C main() function
   410                           
   411                           	psect	bssBANK0
   412  0020                     __pbssBANK0:
   413  0020                     _valor_entry6:
   414  0020                     	ds	4
   415  0024                     _valor_entry5:
   416  0024                     	ds	4
   417  0028                     _valor_entry4:
   418  0028                     	ds	4
   419  002C                     _valor_entry3:
   420  002C                     	ds	4
   421  0030                     _valor_entry2:
   422  0030                     	ds	4
   423  0034                     _valor_entry1:
   424  0034                     	ds	4
   425  0038                     _valor_entry0:
   426  0038                     	ds	4
   427                           
   428                           	psect	dataBANK1
   429  00A0                     __pdataBANK1:
   430  00A0                     _buffer1:
   431  00A0                     	ds	30
   432  00BE                     _buffer0:
   433  00BE                     	ds	30
   434                           
   435                           	psect	inittext
   436  0CC7                     init_fetch0:	
   437                           ;	Called with low address in FSR and high address in W
   438                           
   439  0CC7  087E               	movf	btemp,w
   440  0CC8  008A               	movwf	10
   441  0CC9  087F               	movf	btemp+1,w
   442  0CCA  0082               	movwf	2
   443  0CCB                     init_ram0:	
   444                           ;Called with:
   445                           ;	high address of idata address in btemp 
   446                           ;	low address of idata address in btemp+1 
   447                           ;	low address of data in FSR
   448                           ;	high address + 1 of data in btemp-1
   449                           
   450  0CCB  120A  158A  24C7  120A  158A  	fcall	init_fetch0
   451  0CD0  0080               	movwf	0
   452  0CD1  0A84               	incf	4,f
   453  0CD2  0804               	movf	4,w
   454  0CD3  067D               	xorwf	btemp+-1,w
   455  0CD4  1903               	btfsc	3,2
   456  0CD5  3400               	retlw	0
   457  0CD6  0AFF               	incf	btemp+1,f
   458  0CD7  1903               	btfsc	3,2
   459  0CD8  0AFE               	incf	btemp,f
   460  0CD9  2CCB               	goto	init_ram0
   461                           
   462                           	psect	clrtext
   463  0CB2                     clear_ram0:	
   464                           ;	Called with FSR containing the base address, and
   465                           ;	W with the last address+1
   466                           
   467  0CB2  0064               	clrwdt	;clear the watchdog before getting into this loop
   468  0CB3                     clrloop0:
   469  0CB3  0180               	clrf	0	;clear RAM location pointed to by FSR
   470  0CB4  0A84               	incf	4,f	;increment pointer
   471  0CB5  0604               	xorwf	4,w	;XOR with final address
   472  0CB6  1903               	btfsc	3,2	;have we reached the end yet?
   473  0CB7  3400               	retlw	0	;all done for this memory range, return
   474  0CB8  0604               	xorwf	4,w	;XOR again to restore value
   475  0CB9  2CB3               	goto	clrloop0	;do the next byte
   476                           
   477                           	psect	cstackBANK3
   478  0190                     __pcstackBANK3:
   479  0190                     ??_main:
   480                           
   481                           ; 1 bytes @ 0x0
   482  0190                     	ds	3
   483                           
   484                           	psect	cstackBANK1
   485  00DC                     __pcstackBANK1:
   486  00DC                     ?___flge:
   487  00DC                     ??_iniciaPinos:	
   488                           ; 1 bit 
   489                           
   490  00DC                     ??_expandeTela:	
   491                           ; 1 bytes @ 0x0
   492                           
   493  00DC                     ??_recolheTela:	
   494                           ; 1 bytes @ 0x0
   495                           
   496  00DC                     ??_estufaUm:	
   497                           ; 1 bytes @ 0x0
   498                           
   499  00DC                     ??_estufaDois:	
   500                           ; 1 bytes @ 0x0
   501                           
   502  00DC                     ??_estufaTres:	
   503                           ; 1 bytes @ 0x0
   504                           
   505  00DC                     ??_estufaQuatro:	
   506                           ; 1 bytes @ 0x0
   507                           
   508  00DC                     ??_Lcd_Port:	
   509                           ; 1 bytes @ 0x0
   510                           
   511  00DC                     ?___xxtofl:	
   512                           ; 1 bytes @ 0x0
   513                           
   514  00DC                     Lcd_Port@a:	
   515                           ; 4 bytes @ 0x0
   516                           
   517  00DC                     ___flge@ff1:	
   518                           ; 1 bytes @ 0x0
   519                           
   520  00DC                     ___xxtofl@val:	
   521                           ; 4 bytes @ 0x0
   522                           
   523                           
   524                           ; 4 bytes @ 0x0
   525  00DC                     	ds	1
   526  00DD                     ??_Lcd_Cmd:
   527                           
   528                           ; 1 bytes @ 0x1
   529  00DD                     	ds	2
   530  00DF                     Lcd_Cmd@a:
   531                           
   532                           ; 1 bytes @ 0x3
   533  00DF                     	ds	1
   534  00E0                     ??_Lcd_Init:
   535  00E0                     ??___xxtofl:	
   536                           ; 1 bytes @ 0x4
   537                           
   538  00E0                     ___flge@ff2:	
   539                           ; 1 bytes @ 0x4
   540                           
   541                           
   542                           ; 4 bytes @ 0x4
   543  00E0                     	ds	4
   544  00E4                     ??___flge:
   545  00E4                     ___xxtofl@sign:	
   546                           ; 1 bytes @ 0x8
   547                           
   548                           
   549                           ; 1 bytes @ 0x8
   550  00E4                     	ds	1
   551  00E5                     ___xxtofl@exp:
   552                           
   553                           ; 1 bytes @ 0x9
   554  00E5                     	ds	1
   555  00E6                     ___xxtofl@arg:
   556                           
   557                           ; 4 bytes @ 0xA
   558  00E6                     	ds	4
   559  00EA                     ??_lerSensores:
   560                           
   561                           ; 1 bytes @ 0xE
   562  00EA                     	ds	4
   563                           
   564                           	psect	cstackCOMMON
   565  0070                     __pcstackCOMMON:
   566  0070                     ?_iniciaPinos:
   567  0070                     ?_lerSensores:	
   568                           ; 1 bytes @ 0x0
   569                           
   570  0070                     ?_expandeTela:	
   571                           ; 1 bytes @ 0x0
   572                           
   573  0070                     ?_recolheTela:	
   574                           ; 1 bytes @ 0x0
   575                           
   576  0070                     ?_estufaUm:	
   577                           ; 1 bytes @ 0x0
   578                           
   579  0070                     ?_estufaDois:	
   580                           ; 1 bytes @ 0x0
   581                           
   582  0070                     ?_estufaTres:	
   583                           ; 1 bytes @ 0x0
   584                           
   585  0070                     ?_estufaQuatro:	
   586                           ; 1 bytes @ 0x0
   587                           
   588  0070                     ?_atualizaLCD:	
   589                           ; 1 bytes @ 0x0
   590                           
   591  0070                     ?_Lcd_Port:	
   592                           ; 1 bytes @ 0x0
   593                           
   594  0070                     ?_Lcd_Cmd:	
   595                           ; 1 bytes @ 0x0
   596                           
   597  0070                     ?_Lcd_Clear:	
   598                           ; 1 bytes @ 0x0
   599                           
   600  0070                     ?_Lcd_Init:	
   601                           ; 1 bytes @ 0x0
   602                           
   603  0070                     ?_Lcd_Write_Char:	
   604                           ; 1 bytes @ 0x0
   605                           
   606  0070                     ?_Lcd_Write_String:	
   607                           ; 1 bytes @ 0x0
   608                           
   609  0070                     ?_TrataINT:	
   610                           ; 1 bytes @ 0x0
   611                           
   612  0070                     ?i1_Lcd_Port:	
   613                           ; 1 bytes @ 0x0
   614                           
   615  0070                     ??i1_Lcd_Port:	
   616                           ; 1 bytes @ 0x0
   617                           
   618  0070                     ?i1_Lcd_Cmd:	
   619                           ; 1 bytes @ 0x0
   620                           
   621  0070                     ?i1_recolheTela:	
   622                           ; 1 bytes @ 0x0
   623                           
   624  0070                     ??i1_recolheTela:	
   625                           ; 1 bytes @ 0x0
   626                           
   627  0070                     ?i1_expandeTela:	
   628                           ; 1 bytes @ 0x0
   629                           
   630  0070                     ??i1_expandeTela:	
   631                           ; 1 bytes @ 0x0
   632                           
   633  0070                     ?_main:	
   634                           ; 1 bytes @ 0x0
   635                           
   636  0070                     ?___lwdiv:	
   637                           ; 2 bytes @ 0x0
   638                           
   639  0070                     ?___fltol:	
   640                           ; 2 bytes @ 0x0
   641                           
   642  0070                     i1Lcd_Port@a:	
   643                           ; 4 bytes @ 0x0
   644                           
   645  0070                     ___lwdiv@divisor:	
   646                           ; 1 bytes @ 0x0
   647                           
   648  0070                     ___fltol@f1:	
   649                           ; 2 bytes @ 0x0
   650                           
   651                           
   652                           ; 4 bytes @ 0x0
   653  0070                     	ds	1
   654  0071                     ??_Lcd_Write_Char:
   655  0071                     ??i1_Lcd_Cmd:	
   656                           ; 1 bytes @ 0x1
   657                           
   658                           
   659                           ; 1 bytes @ 0x1
   660  0071                     	ds	1
   661  0072                     Lcd_Write_Char@temp:
   662  0072                     ___lwdiv@dividend:	
   663                           ; 1 bytes @ 0x2
   664                           
   665                           
   666                           ; 2 bytes @ 0x2
   667  0072                     	ds	1
   668  0073                     Lcd_Write_Char@y:
   669  0073                     i1Lcd_Cmd@a:	
   670                           ; 1 bytes @ 0x3
   671                           
   672                           
   673                           ; 1 bytes @ 0x3
   674  0073                     	ds	1
   675  0074                     ??_Lcd_Clear:
   676  0074                     ?_Lcd_Set_Cursor:	
   677                           ; 1 bytes @ 0x4
   678                           
   679  0074                     ??___fltol:	
   680                           ; 1 bytes @ 0x4
   681                           
   682  0074                     ??___lwdiv:	
   683                           ; 1 bytes @ 0x4
   684                           
   685  0074                     Lcd_Set_Cursor@b:	
   686                           ; 1 bytes @ 0x4
   687                           
   688  0074                     Lcd_Write_Char@a:	
   689                           ; 1 bytes @ 0x4
   690                           
   691                           
   692                           ; 1 bytes @ 0x4
   693  0074                     	ds	1
   694  0075                     ??_Lcd_Set_Cursor:
   695  0075                     ??_Lcd_Write_String:	
   696                           ; 1 bytes @ 0x5
   697                           
   698  0075                     ___lwdiv@quotient:	
   699                           ; 1 bytes @ 0x5
   700                           
   701                           
   702                           ; 2 bytes @ 0x5
   703  0075                     	ds	1
   704  0076                     Lcd_Write_String@i:
   705                           
   706                           ; 2 bytes @ 0x6
   707  0076                     	ds	1
   708  0077                     Lcd_Set_Cursor@a:
   709  0077                     ___lwdiv@counter:	
   710                           ; 1 bytes @ 0x7
   711                           
   712                           
   713                           ; 1 bytes @ 0x7
   714  0077                     	ds	1
   715  0078                     ?___lwmod:
   716  0078                     Lcd_Set_Cursor@z:	
   717                           ; 2 bytes @ 0x8
   718                           
   719  0078                     Lcd_Write_String@a:	
   720                           ; 1 bytes @ 0x8
   721                           
   722  0078                     ___lwmod@divisor:	
   723                           ; 1 bytes @ 0x8
   724                           
   725                           
   726                           ; 2 bytes @ 0x8
   727  0078                     	ds	1
   728  0079                     Lcd_Set_Cursor@y:
   729  0079                     ___fltol@sign1:	
   730                           ; 1 bytes @ 0x9
   731                           
   732                           
   733                           ; 1 bytes @ 0x9
   734  0079                     	ds	1
   735  007A                     Lcd_Set_Cursor@temp:
   736  007A                     ___fltol@exp1:	
   737                           ; 1 bytes @ 0xA
   738                           
   739  007A                     ___lwmod@dividend:	
   740                           ; 1 bytes @ 0xA
   741                           
   742                           
   743                           ; 2 bytes @ 0xA
   744  007A                     	ds	2
   745  007C                     ??___lwmod:
   746                           
   747                           ; 1 bytes @ 0xC
   748  007C                     	ds	1
   749  007D                     ___lwmod@counter:
   750                           
   751                           ; 1 bytes @ 0xD
   752  007D                     	ds	1
   753                           
   754                           	psect	cstackBANK0
   755  003C                     __pcstackBANK0:
   756  003C                     ?_sprintf:
   757  003C                     sprintf@f:	
   758                           ; 2 bytes @ 0x0
   759                           
   760                           
   761                           ; 1 bytes @ 0x0
   762  003C                     	ds	9
   763  0045                     ??_sprintf:
   764                           
   765                           ; 1 bytes @ 0x9
   766  0045                     	ds	3
   767  0048                     sprintf@ap:
   768                           
   769                           ; 1 bytes @ 0xC
   770  0048                     	ds	1
   771  0049                     sprintf@flag:
   772                           
   773                           ; 1 bytes @ 0xD
   774  0049                     	ds	1
   775  004A                     sprintf@prec:
   776                           
   777                           ; 1 bytes @ 0xE
   778  004A                     	ds	1
   779  004B                     sprintf@val:
   780                           
   781                           ; 2 bytes @ 0xF
   782  004B                     	ds	2
   783  004D                     sprintf@sp:
   784                           
   785                           ; 1 bytes @ 0x11
   786  004D                     	ds	1
   787  004E                     sprintf@c:
   788                           
   789                           ; 1 bytes @ 0x12
   790  004E                     	ds	1
   791  004F                     ??_atualizaLCD:
   792                           
   793                           ; 1 bytes @ 0x13
   794  004F                     	ds	2
   795  0051                     ??_TrataINT:
   796                           
   797                           ; 1 bytes @ 0x15
   798  0051                     	ds	7
   799                           
   800                           	psect	maintext
   801  002F                     __pmaintext:	
   802 ;;
   803 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   804 ;;
   805 ;; *************** function _main *****************
   806 ;; Defined at:
   807 ;;		line 39 in file "main.c"
   808 ;; Parameters:    Size  Location     Type
   809 ;;		None
   810 ;; Auto vars:     Size  Location     Type
   811 ;;		None
   812 ;; Return value:  Size  Location     Type
   813 ;;                  2  167[None  ] int 
   814 ;; Registers used:
   815 ;;		wreg, status,2, status,0, pclath, cstack
   816 ;; Tracked objects:
   817 ;;		On entry : B00/0
   818 ;;		On exit  : 0/0
   819 ;;		Unchanged: 0/0
   820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   821 ;;      Params:         0       0       0       0       0
   822 ;;      Locals:         0       0       0       0       0
   823 ;;      Temps:          0       0       0       3       0
   824 ;;      Totals:         0       0       0       3       0
   825 ;;Total ram usage:        3 bytes
   826 ;; Hardware stack levels required when called: 8
   827 ;; This function calls:
   828 ;;		_Lcd_Init
   829 ;;		___flge
   830 ;;		_estufaDois
   831 ;;		_estufaQuatro
   832 ;;		_estufaTres
   833 ;;		_estufaUm
   834 ;;		_expandeTela
   835 ;;		_iniciaPinos
   836 ;;		_lerSensores
   837 ;;		_recolheTela
   838 ;; This function is called by:
   839 ;;		Startup code after reset
   840 ;; This function uses a non-reentrant model
   841 ;;
   842                           
   843                           
   844                           ;psect for function _main
   845  002F                     _main:
   846  002F                     l2497:	
   847                           ;incstack = 0
   848                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   849                           
   850                           
   851                           ;main.c: 41:     iniciaPinos();
   852  002F  120A  118A  27AE  120A  118A  	fcall	_iniciaPinos
   853                           
   854                           ;main.c: 42:     Lcd_Init();
   855  0034  120A  118A  274B  120A  118A  	fcall	_Lcd_Init
   856  0039                     l168:	
   857                           ;main.c: 43:     while(1)
   858                           
   859                           
   860                           ;main.c: 44:     {;main.c: 45:         lerSensores();
   861  0039  120A  118A  2210  120A  118A  	fcall	_lerSensores
   862                           
   863                           ;main.c: 48:         if(valor_entry0 > 192 )
   864  003E  3043               	movlw	67
   865  003F  1683               	bsf	3,5	;RP0=1, select bank1
   866  0040  1303               	bcf	3,6	;RP1=0, select bank1
   867  0041  00DF               	movwf	(___flge@ff1+3)^(0+128)
   868  0042  3040               	movlw	64
   869  0043  00DE               	movwf	(___flge@ff1+2)^(0+128)
   870  0044  3000               	movlw	0
   871  0045  00DD               	movwf	(___flge@ff1+1)^(0+128)
   872  0046  3000               	movlw	0
   873  0047  00DC               	movwf	___flge@ff1^(0+128)
   874  0048  1283               	bcf	3,5	;RP0=0, select bank0
   875  0049  1303               	bcf	3,6	;RP1=0, select bank0
   876  004A  083B               	movf	_valor_entry0+3,w
   877  004B  1683               	bsf	3,5	;RP0=1, select bank1
   878  004C  1303               	bcf	3,6	;RP1=0, select bank1
   879  004D  00E3               	movwf	(___flge@ff2+3)^(0+128)
   880  004E  1283               	bcf	3,5	;RP0=0, select bank0
   881  004F  1303               	bcf	3,6	;RP1=0, select bank0
   882  0050  083A               	movf	_valor_entry0+2,w
   883  0051  1683               	bsf	3,5	;RP0=1, select bank1
   884  0052  1303               	bcf	3,6	;RP1=0, select bank1
   885  0053  00E2               	movwf	(___flge@ff2+2)^(0+128)
   886  0054  1283               	bcf	3,5	;RP0=0, select bank0
   887  0055  1303               	bcf	3,6	;RP1=0, select bank0
   888  0056  0839               	movf	_valor_entry0+1,w
   889  0057  1683               	bsf	3,5	;RP0=1, select bank1
   890  0058  1303               	bcf	3,6	;RP1=0, select bank1
   891  0059  00E1               	movwf	(___flge@ff2+1)^(0+128)
   892  005A  1283               	bcf	3,5	;RP0=0, select bank0
   893  005B  1303               	bcf	3,6	;RP1=0, select bank0
   894  005C  0838               	movf	_valor_entry0,w
   895  005D  1683               	bsf	3,5	;RP0=1, select bank1
   896  005E  1303               	bcf	3,6	;RP1=0, select bank1
   897  005F  00E0               	movwf	___flge@ff2^(0+128)
   898  0060  120A  118A  262D  120A  118A  	fcall	___flge
   899  0065  1803               	btfsc	3,0
   900  0066  2868               	goto	u1801
   901  0067  2869               	goto	u1800
   902  0068                     u1801:
   903  0068  286E               	goto	l169
   904  0069                     u1800:
   905  0069                     l2499:
   906                           
   907                           ;main.c: 49:         {;main.c: 50:             expandeTela();
   908  0069  120A  158A  25F7  120A  118A  	fcall	_expandeTela
   909  006E                     l169:	
   910                           ;main.c: 51:         }
   911                           
   912                           
   913                           ;main.c: 54:         if(valor_entry2 < 127)
   914  006E  1283               	bcf	3,5	;RP0=0, select bank0
   915  006F  1303               	bcf	3,6	;RP1=0, select bank0
   916  0070  0833               	movf	_valor_entry2+3,w
   917  0071  1683               	bsf	3,5	;RP0=1, select bank1
   918  0072  1303               	bcf	3,6	;RP1=0, select bank1
   919  0073  00DF               	movwf	(___flge@ff1+3)^(0+128)
   920  0074  1283               	bcf	3,5	;RP0=0, select bank0
   921  0075  1303               	bcf	3,6	;RP1=0, select bank0
   922  0076  0832               	movf	_valor_entry2+2,w
   923  0077  1683               	bsf	3,5	;RP0=1, select bank1
   924  0078  1303               	bcf	3,6	;RP1=0, select bank1
   925  0079  00DE               	movwf	(___flge@ff1+2)^(0+128)
   926  007A  1283               	bcf	3,5	;RP0=0, select bank0
   927  007B  1303               	bcf	3,6	;RP1=0, select bank0
   928  007C  0831               	movf	_valor_entry2+1,w
   929  007D  1683               	bsf	3,5	;RP0=1, select bank1
   930  007E  1303               	bcf	3,6	;RP1=0, select bank1
   931  007F  00DD               	movwf	(___flge@ff1+1)^(0+128)
   932  0080  1283               	bcf	3,5	;RP0=0, select bank0
   933  0081  1303               	bcf	3,6	;RP1=0, select bank0
   934  0082  0830               	movf	_valor_entry2,w
   935  0083  1683               	bsf	3,5	;RP0=1, select bank1
   936  0084  1303               	bcf	3,6	;RP1=0, select bank1
   937  0085  00DC               	movwf	___flge@ff1^(0+128)
   938  0086  3042               	movlw	66
   939  0087  00E3               	movwf	(___flge@ff2+3)^(0+128)
   940  0088  30FE               	movlw	254
   941  0089  00E2               	movwf	(___flge@ff2+2)^(0+128)
   942  008A  3000               	movlw	0
   943  008B  00E1               	movwf	(___flge@ff2+1)^(0+128)
   944  008C  3000               	movlw	0
   945  008D  00E0               	movwf	___flge@ff2^(0+128)
   946  008E  120A  118A  262D  120A  118A  	fcall	___flge
   947  0093  1803               	btfsc	3,0
   948  0094  2896               	goto	u1811
   949  0095  2897               	goto	u1810
   950  0096                     u1811:
   951  0096  289D               	goto	l2503
   952  0097                     u1810:
   953  0097                     l2501:
   954                           
   955                           ;main.c: 55:         {;main.c: 56:             recolheTela();
   956  0097  120A  158A  261E  120A  118A  	fcall	_recolheTela
   957                           
   958                           ;main.c: 57:         }
   959  009C  28A2               	goto	l171
   960  009D                     l2503:
   961                           
   962                           ;main.c: 59:         {;main.c: 60:             expandeTela();
   963  009D  120A  158A  25F7  120A  118A  	fcall	_expandeTela
   964  00A2                     l171:	
   965                           ;main.c: 61:         }
   966                           
   967                           
   968                           ;main.c: 64:         if(valor_entry1 < 64)
   969  00A2  1283               	bcf	3,5	;RP0=0, select bank0
   970  00A3  1303               	bcf	3,6	;RP1=0, select bank0
   971  00A4  0837               	movf	_valor_entry1+3,w
   972  00A5  1683               	bsf	3,5	;RP0=1, select bank1
   973  00A6  1303               	bcf	3,6	;RP1=0, select bank1
   974  00A7  00DF               	movwf	(___flge@ff1+3)^(0+128)
   975  00A8  1283               	bcf	3,5	;RP0=0, select bank0
   976  00A9  1303               	bcf	3,6	;RP1=0, select bank0
   977  00AA  0836               	movf	_valor_entry1+2,w
   978  00AB  1683               	bsf	3,5	;RP0=1, select bank1
   979  00AC  1303               	bcf	3,6	;RP1=0, select bank1
   980  00AD  00DE               	movwf	(___flge@ff1+2)^(0+128)
   981  00AE  1283               	bcf	3,5	;RP0=0, select bank0
   982  00AF  1303               	bcf	3,6	;RP1=0, select bank0
   983  00B0  0835               	movf	_valor_entry1+1,w
   984  00B1  1683               	bsf	3,5	;RP0=1, select bank1
   985  00B2  1303               	bcf	3,6	;RP1=0, select bank1
   986  00B3  00DD               	movwf	(___flge@ff1+1)^(0+128)
   987  00B4  1283               	bcf	3,5	;RP0=0, select bank0
   988  00B5  1303               	bcf	3,6	;RP1=0, select bank0
   989  00B6  0834               	movf	_valor_entry1,w
   990  00B7  1683               	bsf	3,5	;RP0=1, select bank1
   991  00B8  1303               	bcf	3,6	;RP1=0, select bank1
   992  00B9  00DC               	movwf	___flge@ff1^(0+128)
   993  00BA  3042               	movlw	66
   994  00BB  00E3               	movwf	(___flge@ff2+3)^(0+128)
   995  00BC  3080               	movlw	128
   996  00BD  00E2               	movwf	(___flge@ff2+2)^(0+128)
   997  00BE  3000               	movlw	0
   998  00BF  00E1               	movwf	(___flge@ff2+1)^(0+128)
   999  00C0  3000               	movlw	0
  1000  00C1  00E0               	movwf	___flge@ff2^(0+128)
  1001  00C2  120A  118A  262D  120A  118A  	fcall	___flge
  1002  00C7  1803               	btfsc	3,0
  1003  00C8  28CA               	goto	u1821
  1004  00C9  28CB               	goto	u1820
  1005  00CA                     u1821:
  1006  00CA  28F9               	goto	l172
  1007  00CB                     u1820:
  1008  00CB                     l2505:
  1009                           
  1010                           ;main.c: 65:         {;main.c: 68:             if(valor_entry3 < 128)
  1011  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  1012  00CC  1303               	bcf	3,6	;RP1=0, select bank0
  1013  00CD  082F               	movf	_valor_entry3+3,w
  1014  00CE  1683               	bsf	3,5	;RP0=1, select bank1
  1015  00CF  1303               	bcf	3,6	;RP1=0, select bank1
  1016  00D0  00DF               	movwf	(___flge@ff1+3)^(0+128)
  1017  00D1  1283               	bcf	3,5	;RP0=0, select bank0
  1018  00D2  1303               	bcf	3,6	;RP1=0, select bank0
  1019  00D3  082E               	movf	_valor_entry3+2,w
  1020  00D4  1683               	bsf	3,5	;RP0=1, select bank1
  1021  00D5  1303               	bcf	3,6	;RP1=0, select bank1
  1022  00D6  00DE               	movwf	(___flge@ff1+2)^(0+128)
  1023  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  1024  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  1025  00D9  082D               	movf	_valor_entry3+1,w
  1026  00DA  1683               	bsf	3,5	;RP0=1, select bank1
  1027  00DB  1303               	bcf	3,6	;RP1=0, select bank1
  1028  00DC  00DD               	movwf	(___flge@ff1+1)^(0+128)
  1029  00DD  1283               	bcf	3,5	;RP0=0, select bank0
  1030  00DE  1303               	bcf	3,6	;RP1=0, select bank0
  1031  00DF  082C               	movf	_valor_entry3,w
  1032  00E0  1683               	bsf	3,5	;RP0=1, select bank1
  1033  00E1  1303               	bcf	3,6	;RP1=0, select bank1
  1034  00E2  00DC               	movwf	___flge@ff1^(0+128)
  1035  00E3  3043               	movlw	67
  1036  00E4  00E3               	movwf	(___flge@ff2+3)^(0+128)
  1037  00E5  3000               	movlw	0
  1038  00E6  00E2               	movwf	(___flge@ff2+2)^(0+128)
  1039  00E7  3000               	movlw	0
  1040  00E8  00E1               	movwf	(___flge@ff2+1)^(0+128)
  1041  00E9  3000               	movlw	0
  1042  00EA  00E0               	movwf	___flge@ff2^(0+128)
  1043  00EB  120A  118A  262D  120A  118A  	fcall	___flge
  1044  00F0  1803               	btfsc	3,0
  1045  00F1  28F3               	goto	u1831
  1046  00F2  28F4               	goto	u1830
  1047  00F3                     u1831:
  1048  00F3  28F9               	goto	l172
  1049  00F4                     u1830:
  1050  00F4                     l2507:
  1051                           
  1052                           ;main.c: 69:             {;main.c: 70:                 estufaUm();
  1053  00F4  120A  158A  2519  120A  118A  	fcall	_estufaUm
  1054  00F9                     l172:	
  1055                           ;main.c: 72:         }
  1056                           
  1057                           
  1058                           ;main.c: 73:         if (valor_entry1 < 128)
  1059  00F9  1283               	bcf	3,5	;RP0=0, select bank0
  1060  00FA  1303               	bcf	3,6	;RP1=0, select bank0
  1061  00FB  0837               	movf	_valor_entry1+3,w
  1062  00FC  1683               	bsf	3,5	;RP0=1, select bank1
  1063  00FD  1303               	bcf	3,6	;RP1=0, select bank1
  1064  00FE  00DF               	movwf	(___flge@ff1+3)^(0+128)
  1065  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  1066  0100  1303               	bcf	3,6	;RP1=0, select bank0
  1067  0101  0836               	movf	_valor_entry1+2,w
  1068  0102  1683               	bsf	3,5	;RP0=1, select bank1
  1069  0103  1303               	bcf	3,6	;RP1=0, select bank1
  1070  0104  00DE               	movwf	(___flge@ff1+2)^(0+128)
  1071  0105  1283               	bcf	3,5	;RP0=0, select bank0
  1072  0106  1303               	bcf	3,6	;RP1=0, select bank0
  1073  0107  0835               	movf	_valor_entry1+1,w
  1074  0108  1683               	bsf	3,5	;RP0=1, select bank1
  1075  0109  1303               	bcf	3,6	;RP1=0, select bank1
  1076  010A  00DD               	movwf	(___flge@ff1+1)^(0+128)
  1077  010B  1283               	bcf	3,5	;RP0=0, select bank0
  1078  010C  1303               	bcf	3,6	;RP1=0, select bank0
  1079  010D  0834               	movf	_valor_entry1,w
  1080  010E  1683               	bsf	3,5	;RP0=1, select bank1
  1081  010F  1303               	bcf	3,6	;RP1=0, select bank1
  1082  0110  00DC               	movwf	___flge@ff1^(0+128)
  1083  0111  3043               	movlw	67
  1084  0112  00E3               	movwf	(___flge@ff2+3)^(0+128)
  1085  0113  3000               	movlw	0
  1086  0114  00E2               	movwf	(___flge@ff2+2)^(0+128)
  1087  0115  3000               	movlw	0
  1088  0116  00E1               	movwf	(___flge@ff2+1)^(0+128)
  1089  0117  3000               	movlw	0
  1090  0118  00E0               	movwf	___flge@ff2^(0+128)
  1091  0119  120A  118A  262D  120A  118A  	fcall	___flge
  1092  011E  1803               	btfsc	3,0
  1093  011F  2921               	goto	u1841
  1094  0120  2922               	goto	u1840
  1095  0121                     u1841:
  1096  0121  2950               	goto	l174
  1097  0122                     u1840:
  1098  0122                     l2509:
  1099                           
  1100                           ;main.c: 74:         {;main.c: 77:             if(valor_entry4 < 128)
  1101  0122  1283               	bcf	3,5	;RP0=0, select bank0
  1102  0123  1303               	bcf	3,6	;RP1=0, select bank0
  1103  0124  082B               	movf	_valor_entry4+3,w
  1104  0125  1683               	bsf	3,5	;RP0=1, select bank1
  1105  0126  1303               	bcf	3,6	;RP1=0, select bank1
  1106  0127  00DF               	movwf	(___flge@ff1+3)^(0+128)
  1107  0128  1283               	bcf	3,5	;RP0=0, select bank0
  1108  0129  1303               	bcf	3,6	;RP1=0, select bank0
  1109  012A  082A               	movf	_valor_entry4+2,w
  1110  012B  1683               	bsf	3,5	;RP0=1, select bank1
  1111  012C  1303               	bcf	3,6	;RP1=0, select bank1
  1112  012D  00DE               	movwf	(___flge@ff1+2)^(0+128)
  1113  012E  1283               	bcf	3,5	;RP0=0, select bank0
  1114  012F  1303               	bcf	3,6	;RP1=0, select bank0
  1115  0130  0829               	movf	_valor_entry4+1,w
  1116  0131  1683               	bsf	3,5	;RP0=1, select bank1
  1117  0132  1303               	bcf	3,6	;RP1=0, select bank1
  1118  0133  00DD               	movwf	(___flge@ff1+1)^(0+128)
  1119  0134  1283               	bcf	3,5	;RP0=0, select bank0
  1120  0135  1303               	bcf	3,6	;RP1=0, select bank0
  1121  0136  0828               	movf	_valor_entry4,w
  1122  0137  1683               	bsf	3,5	;RP0=1, select bank1
  1123  0138  1303               	bcf	3,6	;RP1=0, select bank1
  1124  0139  00DC               	movwf	___flge@ff1^(0+128)
  1125  013A  3043               	movlw	67
  1126  013B  00E3               	movwf	(___flge@ff2+3)^(0+128)
  1127  013C  3000               	movlw	0
  1128  013D  00E2               	movwf	(___flge@ff2+2)^(0+128)
  1129  013E  3000               	movlw	0
  1130  013F  00E1               	movwf	(___flge@ff2+1)^(0+128)
  1131  0140  3000               	movlw	0
  1132  0141  00E0               	movwf	___flge@ff2^(0+128)
  1133  0142  120A  118A  262D  120A  118A  	fcall	___flge
  1134  0147  1803               	btfsc	3,0
  1135  0148  294A               	goto	u1851
  1136  0149  294B               	goto	u1850
  1137  014A                     u1851:
  1138  014A  2950               	goto	l174
  1139  014B                     u1850:
  1140  014B                     l2511:
  1141                           
  1142                           ;main.c: 78:             {;main.c: 79:                 estufaDois();
  1143  014B  120A  158A  24DA  120A  118A  	fcall	_estufaDois
  1144  0150                     l174:	
  1145                           ;main.c: 81:         }
  1146                           
  1147                           
  1148                           ;main.c: 82:         if (valor_entry1 < 192)
  1149  0150  1283               	bcf	3,5	;RP0=0, select bank0
  1150  0151  1303               	bcf	3,6	;RP1=0, select bank0
  1151  0152  0837               	movf	_valor_entry1+3,w
  1152  0153  1683               	bsf	3,5	;RP0=1, select bank1
  1153  0154  1303               	bcf	3,6	;RP1=0, select bank1
  1154  0155  00DF               	movwf	(___flge@ff1+3)^(0+128)
  1155  0156  1283               	bcf	3,5	;RP0=0, select bank0
  1156  0157  1303               	bcf	3,6	;RP1=0, select bank0
  1157  0158  0836               	movf	_valor_entry1+2,w
  1158  0159  1683               	bsf	3,5	;RP0=1, select bank1
  1159  015A  1303               	bcf	3,6	;RP1=0, select bank1
  1160  015B  00DE               	movwf	(___flge@ff1+2)^(0+128)
  1161  015C  1283               	bcf	3,5	;RP0=0, select bank0
  1162  015D  1303               	bcf	3,6	;RP1=0, select bank0
  1163  015E  0835               	movf	_valor_entry1+1,w
  1164  015F  1683               	bsf	3,5	;RP0=1, select bank1
  1165  0160  1303               	bcf	3,6	;RP1=0, select bank1
  1166  0161  00DD               	movwf	(___flge@ff1+1)^(0+128)
  1167  0162  1283               	bcf	3,5	;RP0=0, select bank0
  1168  0163  1303               	bcf	3,6	;RP1=0, select bank0
  1169  0164  0834               	movf	_valor_entry1,w
  1170  0165  1683               	bsf	3,5	;RP0=1, select bank1
  1171  0166  1303               	bcf	3,6	;RP1=0, select bank1
  1172  0167  00DC               	movwf	___flge@ff1^(0+128)
  1173  0168  3043               	movlw	67
  1174  0169  00E3               	movwf	(___flge@ff2+3)^(0+128)
  1175  016A  3040               	movlw	64
  1176  016B  00E2               	movwf	(___flge@ff2+2)^(0+128)
  1177  016C  3000               	movlw	0
  1178  016D  00E1               	movwf	(___flge@ff2+1)^(0+128)
  1179  016E  3000               	movlw	0
  1180  016F  00E0               	movwf	___flge@ff2^(0+128)
  1181  0170  120A  118A  262D  120A  118A  	fcall	___flge
  1182  0175  1803               	btfsc	3,0
  1183  0176  2978               	goto	u1861
  1184  0177  2979               	goto	u1860
  1185  0178                     u1861:
  1186  0178  29A7               	goto	l176
  1187  0179                     u1860:
  1188  0179                     l2513:
  1189                           
  1190                           ;main.c: 83:         {;main.c: 86:            if(valor_entry5 < 128)
  1191  0179  1283               	bcf	3,5	;RP0=0, select bank0
  1192  017A  1303               	bcf	3,6	;RP1=0, select bank0
  1193  017B  0827               	movf	_valor_entry5+3,w
  1194  017C  1683               	bsf	3,5	;RP0=1, select bank1
  1195  017D  1303               	bcf	3,6	;RP1=0, select bank1
  1196  017E  00DF               	movwf	(___flge@ff1+3)^(0+128)
  1197  017F  1283               	bcf	3,5	;RP0=0, select bank0
  1198  0180  1303               	bcf	3,6	;RP1=0, select bank0
  1199  0181  0826               	movf	_valor_entry5+2,w
  1200  0182  1683               	bsf	3,5	;RP0=1, select bank1
  1201  0183  1303               	bcf	3,6	;RP1=0, select bank1
  1202  0184  00DE               	movwf	(___flge@ff1+2)^(0+128)
  1203  0185  1283               	bcf	3,5	;RP0=0, select bank0
  1204  0186  1303               	bcf	3,6	;RP1=0, select bank0
  1205  0187  0825               	movf	_valor_entry5+1,w
  1206  0188  1683               	bsf	3,5	;RP0=1, select bank1
  1207  0189  1303               	bcf	3,6	;RP1=0, select bank1
  1208  018A  00DD               	movwf	(___flge@ff1+1)^(0+128)
  1209  018B  1283               	bcf	3,5	;RP0=0, select bank0
  1210  018C  1303               	bcf	3,6	;RP1=0, select bank0
  1211  018D  0824               	movf	_valor_entry5,w
  1212  018E  1683               	bsf	3,5	;RP0=1, select bank1
  1213  018F  1303               	bcf	3,6	;RP1=0, select bank1
  1214  0190  00DC               	movwf	___flge@ff1^(0+128)
  1215  0191  3043               	movlw	67
  1216  0192  00E3               	movwf	(___flge@ff2+3)^(0+128)
  1217  0193  3000               	movlw	0
  1218  0194  00E2               	movwf	(___flge@ff2+2)^(0+128)
  1219  0195  3000               	movlw	0
  1220  0196  00E1               	movwf	(___flge@ff2+1)^(0+128)
  1221  0197  3000               	movlw	0
  1222  0198  00E0               	movwf	___flge@ff2^(0+128)
  1223  0199  120A  118A  262D  120A  118A  	fcall	___flge
  1224  019E  1803               	btfsc	3,0
  1225  019F  29A1               	goto	u1871
  1226  01A0  29A2               	goto	u1870
  1227  01A1                     u1871:
  1228  01A1  29A7               	goto	l176
  1229  01A2                     u1870:
  1230  01A2                     l2515:
  1231                           
  1232                           ;main.c: 87:            {;main.c: 88:                estufaTres();
  1233  01A2  120A  158A  2504  120A  118A  	fcall	_estufaTres
  1234  01A7                     l176:	
  1235                           ;main.c: 90:         }
  1236                           
  1237                           
  1238                           ;main.c: 91:         if (valor_entry1 < 256)
  1239  01A7  1283               	bcf	3,5	;RP0=0, select bank0
  1240  01A8  1303               	bcf	3,6	;RP1=0, select bank0
  1241  01A9  0837               	movf	_valor_entry1+3,w
  1242  01AA  1683               	bsf	3,5	;RP0=1, select bank1
  1243  01AB  1303               	bcf	3,6	;RP1=0, select bank1
  1244  01AC  00DF               	movwf	(___flge@ff1+3)^(0+128)
  1245  01AD  1283               	bcf	3,5	;RP0=0, select bank0
  1246  01AE  1303               	bcf	3,6	;RP1=0, select bank0
  1247  01AF  0836               	movf	_valor_entry1+2,w
  1248  01B0  1683               	bsf	3,5	;RP0=1, select bank1
  1249  01B1  1303               	bcf	3,6	;RP1=0, select bank1
  1250  01B2  00DE               	movwf	(___flge@ff1+2)^(0+128)
  1251  01B3  1283               	bcf	3,5	;RP0=0, select bank0
  1252  01B4  1303               	bcf	3,6	;RP1=0, select bank0
  1253  01B5  0835               	movf	_valor_entry1+1,w
  1254  01B6  1683               	bsf	3,5	;RP0=1, select bank1
  1255  01B7  1303               	bcf	3,6	;RP1=0, select bank1
  1256  01B8  00DD               	movwf	(___flge@ff1+1)^(0+128)
  1257  01B9  1283               	bcf	3,5	;RP0=0, select bank0
  1258  01BA  1303               	bcf	3,6	;RP1=0, select bank0
  1259  01BB  0834               	movf	_valor_entry1,w
  1260  01BC  1683               	bsf	3,5	;RP0=1, select bank1
  1261  01BD  1303               	bcf	3,6	;RP1=0, select bank1
  1262  01BE  00DC               	movwf	___flge@ff1^(0+128)
  1263  01BF  3043               	movlw	67
  1264  01C0  00E3               	movwf	(___flge@ff2+3)^(0+128)
  1265  01C1  3080               	movlw	128
  1266  01C2  00E2               	movwf	(___flge@ff2+2)^(0+128)
  1267  01C3  3000               	movlw	0
  1268  01C4  00E1               	movwf	(___flge@ff2+1)^(0+128)
  1269  01C5  3000               	movlw	0
  1270  01C6  00E0               	movwf	___flge@ff2^(0+128)
  1271  01C7  120A  118A  262D  120A  118A  	fcall	___flge
  1272  01CC  1803               	btfsc	3,0
  1273  01CD  29CF               	goto	u1881
  1274  01CE  29D0               	goto	u1880
  1275  01CF                     u1881:
  1276  01CF  29FE               	goto	l2521
  1277  01D0                     u1880:
  1278  01D0                     l2517:
  1279                           
  1280                           ;main.c: 92:         {;main.c: 95:             if(valor_entry6 < 128)
  1281  01D0  1283               	bcf	3,5	;RP0=0, select bank0
  1282  01D1  1303               	bcf	3,6	;RP1=0, select bank0
  1283  01D2  0823               	movf	_valor_entry6+3,w
  1284  01D3  1683               	bsf	3,5	;RP0=1, select bank1
  1285  01D4  1303               	bcf	3,6	;RP1=0, select bank1
  1286  01D5  00DF               	movwf	(___flge@ff1+3)^(0+128)
  1287  01D6  1283               	bcf	3,5	;RP0=0, select bank0
  1288  01D7  1303               	bcf	3,6	;RP1=0, select bank0
  1289  01D8  0822               	movf	_valor_entry6+2,w
  1290  01D9  1683               	bsf	3,5	;RP0=1, select bank1
  1291  01DA  1303               	bcf	3,6	;RP1=0, select bank1
  1292  01DB  00DE               	movwf	(___flge@ff1+2)^(0+128)
  1293  01DC  1283               	bcf	3,5	;RP0=0, select bank0
  1294  01DD  1303               	bcf	3,6	;RP1=0, select bank0
  1295  01DE  0821               	movf	_valor_entry6+1,w
  1296  01DF  1683               	bsf	3,5	;RP0=1, select bank1
  1297  01E0  1303               	bcf	3,6	;RP1=0, select bank1
  1298  01E1  00DD               	movwf	(___flge@ff1+1)^(0+128)
  1299  01E2  1283               	bcf	3,5	;RP0=0, select bank0
  1300  01E3  1303               	bcf	3,6	;RP1=0, select bank0
  1301  01E4  0820               	movf	_valor_entry6,w
  1302  01E5  1683               	bsf	3,5	;RP0=1, select bank1
  1303  01E6  1303               	bcf	3,6	;RP1=0, select bank1
  1304  01E7  00DC               	movwf	___flge@ff1^(0+128)
  1305  01E8  3043               	movlw	67
  1306  01E9  00E3               	movwf	(___flge@ff2+3)^(0+128)
  1307  01EA  3000               	movlw	0
  1308  01EB  00E2               	movwf	(___flge@ff2+2)^(0+128)
  1309  01EC  3000               	movlw	0
  1310  01ED  00E1               	movwf	(___flge@ff2+1)^(0+128)
  1311  01EE  3000               	movlw	0
  1312  01EF  00E0               	movwf	___flge@ff2^(0+128)
  1313  01F0  120A  118A  262D  120A  118A  	fcall	___flge
  1314  01F5  1803               	btfsc	3,0
  1315  01F6  29F8               	goto	u1891
  1316  01F7  29F9               	goto	u1890
  1317  01F8                     u1891:
  1318  01F8  29FE               	goto	l2521
  1319  01F9                     u1890:
  1320  01F9                     l2519:
  1321                           
  1322                           ;main.c: 96:             {;main.c: 97:                 estufaQuatro();
  1323  01F9  120A  158A  24EF  120A  118A  	fcall	_estufaQuatro
  1324  01FE                     l2521:
  1325                           
  1326                           ;main.c: 102:         _delay((unsigned long)((250)*(4000000/4000.0)));
  1327  01FE  3002               	movlw	2
  1328  01FF  1683               	bsf	3,5	;RP0=1, select bank3
  1329  0200  1703               	bsf	3,6	;RP1=1, select bank3
  1330  0201  0092               	movwf	(??_main^(0+384)+2)
  1331  0202  3045               	movlw	69
  1332  0203  0091               	movwf	(??_main^(0+384)+1)
  1333  0204  30A9               	movlw	169
  1334  0205  0090               	movwf	??_main^(0+384)
  1335  0206                     u1907:
  1336  0206  0B90               	decfsz	??_main^(0+384),f
  1337  0207  2A06               	goto	u1907
  1338  0208  0B91               	decfsz	(??_main^(0+384)+1),f
  1339  0209  2A06               	goto	u1907
  1340  020A  0B92               	decfsz	(??_main^(0+384)+2),f
  1341  020B  2A06               	goto	u1907
  1342  020C  2839               	goto	l168
  1343  020D  120A  118A  2812   	ljmp	start
  1344  0210                     __end_of_main:
  1345                           
  1346                           	psect	text1
  1347  0E1E                     __ptext1:	
  1348 ;; *************** function _recolheTela *****************
  1349 ;; Defined at:
  1350 ;;		line 233 in file "main.c"
  1351 ;; Parameters:    Size  Location     Type
  1352 ;;		None
  1353 ;; Auto vars:     Size  Location     Type
  1354 ;;		None
  1355 ;; Return value:  Size  Location     Type
  1356 ;;                  1    wreg      void 
  1357 ;; Registers used:
  1358 ;;		wreg
  1359 ;; Tracked objects:
  1360 ;;		On entry : 0/0
  1361 ;;		On exit  : 0/0
  1362 ;;		Unchanged: 0/0
  1363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1364 ;;      Params:         0       0       0       0       0
  1365 ;;      Locals:         0       0       0       0       0
  1366 ;;      Temps:          0       0       3       0       0
  1367 ;;      Totals:         0       0       3       0       0
  1368 ;;Total ram usage:        3 bytes
  1369 ;; Hardware stack levels used: 1
  1370 ;; Hardware stack levels required when called: 5
  1371 ;; This function calls:
  1372 ;;		Nothing
  1373 ;; This function is called by:
  1374 ;;		_main
  1375 ;; This function uses a non-reentrant model
  1376 ;;
  1377                           
  1378                           
  1379                           ;psect for function _recolheTela
  1380  0E1E                     _recolheTela:
  1381  0E1E                     l2419:	
  1382                           ;incstack = 0
  1383                           ; Regs used in _recolheTela: [wreg]
  1384                           
  1385                           
  1386                           ;main.c: 236:     RD5 = 1;
  1387  0E1E  1283               	bcf	3,5	;RP0=0, select bank0
  1388  0E1F  1303               	bcf	3,6	;RP1=0, select bank0
  1389  0E20  1688               	bsf	8,5	;volatile
  1390                           
  1391                           ;main.c: 237:     RD3 = 1;
  1392  0E21  1588               	bsf	8,3	;volatile
  1393                           
  1394                           ;main.c: 238:     RD1 = 1;
  1395  0E22  1488               	bsf	8,1	;volatile
  1396                           
  1397                           ;main.c: 239:     RC0 = 1;
  1398  0E23  1407               	bsf	7,0	;volatile
  1399                           
  1400                           ;main.c: 242:     RD4 = 0;
  1401  0E24  1208               	bcf	8,4	;volatile
  1402                           
  1403                           ;main.c: 243:     RC1 = 1;
  1404  0E25  1487               	bsf	7,1	;volatile
  1405                           
  1406                           ;main.c: 244:     RD2 = 0;
  1407  0E26  1108               	bcf	8,2	;volatile
  1408                           
  1409                           ;main.c: 245:     RD6 = 1;
  1410  0E27  1708               	bsf	8,6	;volatile
  1411                           
  1412                           ;main.c: 247:     RD0 = 0;
  1413  0E28  1008               	bcf	8,0	;volatile
  1414                           
  1415                           ;main.c: 248:     RC3 = 1;
  1416  0E29  1587               	bsf	7,3	;volatile
  1417                           
  1418                           ;main.c: 249:     RC2 = 0;
  1419  0E2A  1107               	bcf	7,2	;volatile
  1420                           
  1421                           ;main.c: 250:     RD7 = 1;
  1422  0E2B  1788               	bsf	8,7	;volatile
  1423  0E2C                     l2421:
  1424                           
  1425                           ;main.c: 251:     _delay((unsigned long)((500)*(4000000/4000.0)));
  1426  0E2C  3003               	movlw	3
  1427  0E2D  1683               	bsf	3,5	;RP0=1, select bank1
  1428  0E2E  1303               	bcf	3,6	;RP1=0, select bank1
  1429  0E2F  00DE               	movwf	(??_recolheTela^(0+128)+2)
  1430  0E30  308A               	movlw	138
  1431  0E31  00DD               	movwf	(??_recolheTela^(0+128)+1)
  1432  0E32  3055               	movlw	85
  1433  0E33  00DC               	movwf	??_recolheTela^(0+128)
  1434  0E34                     u1917:
  1435  0E34  0BDC               	decfsz	??_recolheTela^(0+128),f
  1436  0E35  2E34               	goto	u1917
  1437  0E36  0BDD               	decfsz	(??_recolheTela^(0+128)+1),f
  1438  0E37  2E34               	goto	u1917
  1439  0E38  0BDE               	decfsz	(??_recolheTela^(0+128)+2),f
  1440  0E39  2E34               	goto	u1917
  1441  0E3A                     l2423:
  1442                           
  1443                           ;main.c: 254:     RD4 = 1;
  1444  0E3A  1283               	bcf	3,5	;RP0=0, select bank0
  1445  0E3B  1303               	bcf	3,6	;RP1=0, select bank0
  1446  0E3C  1608               	bsf	8,4	;volatile
  1447  0E3D                     l2425:
  1448                           
  1449                           ;main.c: 255:     RC1 = 1;
  1450  0E3D  1487               	bsf	7,1	;volatile
  1451  0E3E                     l2427:
  1452                           
  1453                           ;main.c: 256:     RD2 = 1;
  1454  0E3E  1508               	bsf	8,2	;volatile
  1455  0E3F                     l2429:
  1456                           
  1457                           ;main.c: 257:     RD6 = 1;
  1458  0E3F  1708               	bsf	8,6	;volatile
  1459  0E40                     l2431:
  1460                           
  1461                           ;main.c: 259:     RD0 = 1;
  1462  0E40  1408               	bsf	8,0	;volatile
  1463  0E41                     l2433:
  1464                           
  1465                           ;main.c: 260:     RC3 = 1;
  1466  0E41  1587               	bsf	7,3	;volatile
  1467  0E42                     l2435:
  1468                           
  1469                           ;main.c: 261:     RC2 = 1;
  1470  0E42  1507               	bsf	7,2	;volatile
  1471  0E43                     l2437:
  1472                           
  1473                           ;main.c: 262:     RD7 = 1;
  1474  0E43  1788               	bsf	8,7	;volatile
  1475  0E44                     l208:
  1476  0E44  0008               	return
  1477  0E45                     __end_of_recolheTela:
  1478                           
  1479                           	psect	text2
  1480  0210                     __ptext2:	
  1481 ;; *************** function _lerSensores *****************
  1482 ;; Defined at:
  1483 ;;		line 159 in file "main.c"
  1484 ;; Parameters:    Size  Location     Type
  1485 ;;		None
  1486 ;; Auto vars:     Size  Location     Type
  1487 ;;		None
  1488 ;; Return value:  Size  Location     Type
  1489 ;;                  1    wreg      void 
  1490 ;; Registers used:
  1491 ;;		wreg, status,2, status,0, pclath, cstack
  1492 ;; Tracked objects:
  1493 ;;		On entry : 0/0
  1494 ;;		On exit  : 0/0
  1495 ;;		Unchanged: 0/0
  1496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1497 ;;      Params:         0       0       0       0       0
  1498 ;;      Locals:         0       0       0       0       0
  1499 ;;      Temps:          0       0       4       0       0
  1500 ;;      Totals:         0       0       4       0       0
  1501 ;;Total ram usage:        4 bytes
  1502 ;; Hardware stack levels used: 1
  1503 ;; Hardware stack levels required when called: 6
  1504 ;; This function calls:
  1505 ;;		___xxtofl
  1506 ;; This function is called by:
  1507 ;;		_main
  1508 ;; This function uses a non-reentrant model
  1509 ;;
  1510                           
  1511                           
  1512                           ;psect for function _lerSensores
  1513  0210                     _lerSensores:
  1514  0210                     l2325:	
  1515                           ;incstack = 0
  1516                           ; Regs used in _lerSensores: [wreg+status,2+status,0+pclath+cstack]
  1517                           
  1518                           
  1519                           ;main.c: 163:     ADCON0bits.CHS0 = 0;
  1520  0210  1283               	bcf	3,5	;RP0=0, select bank0
  1521  0211  1303               	bcf	3,6	;RP1=0, select bank0
  1522  0212  119F               	bcf	31,3	;volatile
  1523                           
  1524                           ;main.c: 164:     ADCON0bits.CHS1 = 0;
  1525  0213  121F               	bcf	31,4	;volatile
  1526                           
  1527                           ;main.c: 165:     ADCON0bits.CHS2 = 0;
  1528  0214  129F               	bcf	31,5	;volatile
  1529                           
  1530                           ;main.c: 167:     ADCON0bits.GO = 1;
  1531  0215  151F               	bsf	31,2	;volatile
  1532  0216                     l2327:
  1533                           
  1534                           ;main.c: 168:     _delay((unsigned long)((20)*(4000000/4000000.0)));
  1535  0216  3005               	movlw	5
  1536  0217  1683               	bsf	3,5	;RP0=1, select bank1
  1537  0218  1303               	bcf	3,6	;RP1=0, select bank1
  1538  0219  00EA               	movwf	??_lerSensores^(0+128)
  1539  021A                     u1927:
  1540  021A  0BEA               	decfsz	??_lerSensores^(0+128),f
  1541  021B  2A1A               	goto	u1927
  1542  021C  2A1D               	nop2
  1543  021D                     l2329:
  1544                           
  1545                           ;main.c: 169:     valor_entry0 = ADRESH;
  1546  021D  1283               	bcf	3,5	;RP0=0, select bank0
  1547  021E  1303               	bcf	3,6	;RP1=0, select bank0
  1548  021F  081E               	movf	30,w	;volatile
  1549  0220  1683               	bsf	3,5	;RP0=1, select bank1
  1550  0221  1303               	bcf	3,6	;RP1=0, select bank1
  1551  0222  00EA               	movwf	??_lerSensores^(0+128)
  1552  0223  01EB               	clrf	(??_lerSensores^(0+128)+1)
  1553  0224  01EC               	clrf	(??_lerSensores^(0+128)+2)
  1554  0225  01ED               	clrf	(??_lerSensores^(0+128)+3)
  1555  0226  086D               	movf	(??_lerSensores+3)^(0+128),w
  1556  0227  00DF               	movwf	(___xxtofl@val+3)^(0+128)
  1557  0228  086C               	movf	(??_lerSensores+2)^(0+128),w
  1558  0229  00DE               	movwf	(___xxtofl@val+2)^(0+128)
  1559  022A  086B               	movf	(??_lerSensores+1)^(0+128),w
  1560  022B  00DD               	movwf	(___xxtofl@val+1)^(0+128)
  1561  022C  086A               	movf	??_lerSensores^(0+128),w
  1562  022D  00DC               	movwf	___xxtofl@val^(0+128)
  1563  022E  3000               	movlw	0
  1564  022F  120A  118A  2571  120A  118A  	fcall	___xxtofl
  1565  0234  1683               	bsf	3,5	;RP0=1, select bank1
  1566  0235  1303               	bcf	3,6	;RP1=0, select bank1
  1567  0236  085F               	movf	(?___xxtofl+3)^(0+128),w
  1568  0237  1283               	bcf	3,5	;RP0=0, select bank0
  1569  0238  1303               	bcf	3,6	;RP1=0, select bank0
  1570  0239  00BB               	movwf	_valor_entry0+3
  1571  023A  1683               	bsf	3,5	;RP0=1, select bank1
  1572  023B  1303               	bcf	3,6	;RP1=0, select bank1
  1573  023C  085E               	movf	(?___xxtofl+2)^(0+128),w
  1574  023D  1283               	bcf	3,5	;RP0=0, select bank0
  1575  023E  1303               	bcf	3,6	;RP1=0, select bank0
  1576  023F  00BA               	movwf	_valor_entry0+2
  1577  0240  1683               	bsf	3,5	;RP0=1, select bank1
  1578  0241  1303               	bcf	3,6	;RP1=0, select bank1
  1579  0242  085D               	movf	(?___xxtofl+1)^(0+128),w
  1580  0243  1283               	bcf	3,5	;RP0=0, select bank0
  1581  0244  1303               	bcf	3,6	;RP1=0, select bank0
  1582  0245  00B9               	movwf	_valor_entry0+1
  1583  0246  1683               	bsf	3,5	;RP0=1, select bank1
  1584  0247  1303               	bcf	3,6	;RP1=0, select bank1
  1585  0248  085C               	movf	?___xxtofl^(0+128),w
  1586  0249  1283               	bcf	3,5	;RP0=0, select bank0
  1587  024A  1303               	bcf	3,6	;RP1=0, select bank0
  1588  024B  00B8               	movwf	_valor_entry0
  1589  024C                     l2331:
  1590                           
  1591                           ;main.c: 173:     ADCON0bits.CHS0 = 1;
  1592  024C  159F               	bsf	31,3	;volatile
  1593  024D                     l2333:
  1594                           
  1595                           ;main.c: 174:     ADCON0bits.CHS1 = 0;
  1596  024D  121F               	bcf	31,4	;volatile
  1597  024E                     l2335:
  1598                           
  1599                           ;main.c: 175:     ADCON0bits.CHS2 = 0;
  1600  024E  129F               	bcf	31,5	;volatile
  1601  024F                     l2337:
  1602                           
  1603                           ;main.c: 177:     ADCON0bits.GO = 1;
  1604  024F  151F               	bsf	31,2	;volatile
  1605  0250                     l2339:
  1606                           
  1607                           ;main.c: 178:     _delay((unsigned long)((20)*(4000000/4000000.0)));
  1608  0250  3005               	movlw	5
  1609  0251  1683               	bsf	3,5	;RP0=1, select bank1
  1610  0252  1303               	bcf	3,6	;RP1=0, select bank1
  1611  0253  00EA               	movwf	??_lerSensores^(0+128)
  1612  0254                     u1937:
  1613  0254  0BEA               	decfsz	??_lerSensores^(0+128),f
  1614  0255  2A54               	goto	u1937
  1615  0256  2A57               	nop2
  1616                           
  1617                           ;main.c: 179:     valor_entry1 = ADRESH;
  1618  0257  1283               	bcf	3,5	;RP0=0, select bank0
  1619  0258  1303               	bcf	3,6	;RP1=0, select bank0
  1620  0259  081E               	movf	30,w	;volatile
  1621  025A  1683               	bsf	3,5	;RP0=1, select bank1
  1622  025B  1303               	bcf	3,6	;RP1=0, select bank1
  1623  025C  00EA               	movwf	??_lerSensores^(0+128)
  1624  025D  01EB               	clrf	(??_lerSensores^(0+128)+1)
  1625  025E  01EC               	clrf	(??_lerSensores^(0+128)+2)
  1626  025F  01ED               	clrf	(??_lerSensores^(0+128)+3)
  1627  0260  086D               	movf	(??_lerSensores+3)^(0+128),w
  1628  0261  00DF               	movwf	(___xxtofl@val+3)^(0+128)
  1629  0262  086C               	movf	(??_lerSensores+2)^(0+128),w
  1630  0263  00DE               	movwf	(___xxtofl@val+2)^(0+128)
  1631  0264  086B               	movf	(??_lerSensores+1)^(0+128),w
  1632  0265  00DD               	movwf	(___xxtofl@val+1)^(0+128)
  1633  0266  086A               	movf	??_lerSensores^(0+128),w
  1634  0267  00DC               	movwf	___xxtofl@val^(0+128)
  1635  0268  3000               	movlw	0
  1636  0269  120A  118A  2571  120A  118A  	fcall	___xxtofl
  1637  026E  1683               	bsf	3,5	;RP0=1, select bank1
  1638  026F  1303               	bcf	3,6	;RP1=0, select bank1
  1639  0270  085F               	movf	(?___xxtofl+3)^(0+128),w
  1640  0271  1283               	bcf	3,5	;RP0=0, select bank0
  1641  0272  1303               	bcf	3,6	;RP1=0, select bank0
  1642  0273  00B7               	movwf	_valor_entry1+3
  1643  0274  1683               	bsf	3,5	;RP0=1, select bank1
  1644  0275  1303               	bcf	3,6	;RP1=0, select bank1
  1645  0276  085E               	movf	(?___xxtofl+2)^(0+128),w
  1646  0277  1283               	bcf	3,5	;RP0=0, select bank0
  1647  0278  1303               	bcf	3,6	;RP1=0, select bank0
  1648  0279  00B6               	movwf	_valor_entry1+2
  1649  027A  1683               	bsf	3,5	;RP0=1, select bank1
  1650  027B  1303               	bcf	3,6	;RP1=0, select bank1
  1651  027C  085D               	movf	(?___xxtofl+1)^(0+128),w
  1652  027D  1283               	bcf	3,5	;RP0=0, select bank0
  1653  027E  1303               	bcf	3,6	;RP1=0, select bank0
  1654  027F  00B5               	movwf	_valor_entry1+1
  1655  0280  1683               	bsf	3,5	;RP0=1, select bank1
  1656  0281  1303               	bcf	3,6	;RP1=0, select bank1
  1657  0282  085C               	movf	?___xxtofl^(0+128),w
  1658  0283  1283               	bcf	3,5	;RP0=0, select bank0
  1659  0284  1303               	bcf	3,6	;RP1=0, select bank0
  1660  0285  00B4               	movwf	_valor_entry1
  1661  0286                     l2341:
  1662                           
  1663                           ;main.c: 183:     ADCON0bits.CHS0 = 0;
  1664  0286  119F               	bcf	31,3	;volatile
  1665  0287                     l2343:
  1666                           
  1667                           ;main.c: 184:     ADCON0bits.CHS1 = 1;
  1668  0287  161F               	bsf	31,4	;volatile
  1669  0288                     l2345:
  1670                           
  1671                           ;main.c: 185:     ADCON0bits.CHS2 = 0;
  1672  0288  129F               	bcf	31,5	;volatile
  1673  0289                     l2347:
  1674                           
  1675                           ;main.c: 187:     ADCON0bits.GO = 1;
  1676  0289  151F               	bsf	31,2	;volatile
  1677  028A                     l2349:
  1678                           
  1679                           ;main.c: 188:     _delay((unsigned long)((20)*(4000000/4000000.0)));
  1680  028A  3005               	movlw	5
  1681  028B  1683               	bsf	3,5	;RP0=1, select bank1
  1682  028C  1303               	bcf	3,6	;RP1=0, select bank1
  1683  028D  00EA               	movwf	??_lerSensores^(0+128)
  1684  028E                     u1947:
  1685  028E  0BEA               	decfsz	??_lerSensores^(0+128),f
  1686  028F  2A8E               	goto	u1947
  1687  0290  2A91               	nop2
  1688  0291                     l2351:
  1689                           
  1690                           ;main.c: 189:     valor_entry2 = ADRESH;
  1691  0291  1283               	bcf	3,5	;RP0=0, select bank0
  1692  0292  1303               	bcf	3,6	;RP1=0, select bank0
  1693  0293  081E               	movf	30,w	;volatile
  1694  0294  1683               	bsf	3,5	;RP0=1, select bank1
  1695  0295  1303               	bcf	3,6	;RP1=0, select bank1
  1696  0296  00EA               	movwf	??_lerSensores^(0+128)
  1697  0297  01EB               	clrf	(??_lerSensores^(0+128)+1)
  1698  0298  01EC               	clrf	(??_lerSensores^(0+128)+2)
  1699  0299  01ED               	clrf	(??_lerSensores^(0+128)+3)
  1700  029A  086D               	movf	(??_lerSensores+3)^(0+128),w
  1701  029B  00DF               	movwf	(___xxtofl@val+3)^(0+128)
  1702  029C  086C               	movf	(??_lerSensores+2)^(0+128),w
  1703  029D  00DE               	movwf	(___xxtofl@val+2)^(0+128)
  1704  029E  086B               	movf	(??_lerSensores+1)^(0+128),w
  1705  029F  00DD               	movwf	(___xxtofl@val+1)^(0+128)
  1706  02A0  086A               	movf	??_lerSensores^(0+128),w
  1707  02A1  00DC               	movwf	___xxtofl@val^(0+128)
  1708  02A2  3000               	movlw	0
  1709  02A3  120A  118A  2571  120A  118A  	fcall	___xxtofl
  1710  02A8  1683               	bsf	3,5	;RP0=1, select bank1
  1711  02A9  1303               	bcf	3,6	;RP1=0, select bank1
  1712  02AA  085F               	movf	(?___xxtofl+3)^(0+128),w
  1713  02AB  1283               	bcf	3,5	;RP0=0, select bank0
  1714  02AC  1303               	bcf	3,6	;RP1=0, select bank0
  1715  02AD  00B3               	movwf	_valor_entry2+3
  1716  02AE  1683               	bsf	3,5	;RP0=1, select bank1
  1717  02AF  1303               	bcf	3,6	;RP1=0, select bank1
  1718  02B0  085E               	movf	(?___xxtofl+2)^(0+128),w
  1719  02B1  1283               	bcf	3,5	;RP0=0, select bank0
  1720  02B2  1303               	bcf	3,6	;RP1=0, select bank0
  1721  02B3  00B2               	movwf	_valor_entry2+2
  1722  02B4  1683               	bsf	3,5	;RP0=1, select bank1
  1723  02B5  1303               	bcf	3,6	;RP1=0, select bank1
  1724  02B6  085D               	movf	(?___xxtofl+1)^(0+128),w
  1725  02B7  1283               	bcf	3,5	;RP0=0, select bank0
  1726  02B8  1303               	bcf	3,6	;RP1=0, select bank0
  1727  02B9  00B1               	movwf	_valor_entry2+1
  1728  02BA  1683               	bsf	3,5	;RP0=1, select bank1
  1729  02BB  1303               	bcf	3,6	;RP1=0, select bank1
  1730  02BC  085C               	movf	?___xxtofl^(0+128),w
  1731  02BD  1283               	bcf	3,5	;RP0=0, select bank0
  1732  02BE  1303               	bcf	3,6	;RP1=0, select bank0
  1733  02BF  00B0               	movwf	_valor_entry2
  1734  02C0                     l2353:
  1735                           
  1736                           ;main.c: 193:     ADCON0bits.CHS0 = 1;
  1737  02C0  159F               	bsf	31,3	;volatile
  1738  02C1                     l2355:
  1739                           
  1740                           ;main.c: 194:     ADCON0bits.CHS1 = 1;
  1741  02C1  161F               	bsf	31,4	;volatile
  1742  02C2                     l2357:
  1743                           
  1744                           ;main.c: 195:     ADCON0bits.CHS2 = 0;
  1745  02C2  129F               	bcf	31,5	;volatile
  1746  02C3                     l2359:
  1747                           
  1748                           ;main.c: 197:     ADCON0bits.GO = 1;
  1749  02C3  151F               	bsf	31,2	;volatile
  1750                           
  1751                           ;main.c: 198:     _delay((unsigned long)((20)*(4000000/4000000.0)));
  1752  02C4  3005               	movlw	5
  1753  02C5  1683               	bsf	3,5	;RP0=1, select bank1
  1754  02C6  1303               	bcf	3,6	;RP1=0, select bank1
  1755  02C7  00EA               	movwf	??_lerSensores^(0+128)
  1756  02C8                     u1957:
  1757  02C8  0BEA               	decfsz	??_lerSensores^(0+128),f
  1758  02C9  2AC8               	goto	u1957
  1759  02CA  2ACB               	nop2
  1760  02CB                     l2361:
  1761                           
  1762                           ;main.c: 199:     valor_entry3 = ADRESH;
  1763  02CB  1283               	bcf	3,5	;RP0=0, select bank0
  1764  02CC  1303               	bcf	3,6	;RP1=0, select bank0
  1765  02CD  081E               	movf	30,w	;volatile
  1766  02CE  1683               	bsf	3,5	;RP0=1, select bank1
  1767  02CF  1303               	bcf	3,6	;RP1=0, select bank1
  1768  02D0  00EA               	movwf	??_lerSensores^(0+128)
  1769  02D1  01EB               	clrf	(??_lerSensores^(0+128)+1)
  1770  02D2  01EC               	clrf	(??_lerSensores^(0+128)+2)
  1771  02D3  01ED               	clrf	(??_lerSensores^(0+128)+3)
  1772  02D4  086D               	movf	(??_lerSensores+3)^(0+128),w
  1773  02D5  00DF               	movwf	(___xxtofl@val+3)^(0+128)
  1774  02D6  086C               	movf	(??_lerSensores+2)^(0+128),w
  1775  02D7  00DE               	movwf	(___xxtofl@val+2)^(0+128)
  1776  02D8  086B               	movf	(??_lerSensores+1)^(0+128),w
  1777  02D9  00DD               	movwf	(___xxtofl@val+1)^(0+128)
  1778  02DA  086A               	movf	??_lerSensores^(0+128),w
  1779  02DB  00DC               	movwf	___xxtofl@val^(0+128)
  1780  02DC  3000               	movlw	0
  1781  02DD  120A  118A  2571  120A  118A  	fcall	___xxtofl
  1782  02E2  1683               	bsf	3,5	;RP0=1, select bank1
  1783  02E3  1303               	bcf	3,6	;RP1=0, select bank1
  1784  02E4  085F               	movf	(?___xxtofl+3)^(0+128),w
  1785  02E5  1283               	bcf	3,5	;RP0=0, select bank0
  1786  02E6  1303               	bcf	3,6	;RP1=0, select bank0
  1787  02E7  00AF               	movwf	_valor_entry3+3
  1788  02E8  1683               	bsf	3,5	;RP0=1, select bank1
  1789  02E9  1303               	bcf	3,6	;RP1=0, select bank1
  1790  02EA  085E               	movf	(?___xxtofl+2)^(0+128),w
  1791  02EB  1283               	bcf	3,5	;RP0=0, select bank0
  1792  02EC  1303               	bcf	3,6	;RP1=0, select bank0
  1793  02ED  00AE               	movwf	_valor_entry3+2
  1794  02EE  1683               	bsf	3,5	;RP0=1, select bank1
  1795  02EF  1303               	bcf	3,6	;RP1=0, select bank1
  1796  02F0  085D               	movf	(?___xxtofl+1)^(0+128),w
  1797  02F1  1283               	bcf	3,5	;RP0=0, select bank0
  1798  02F2  1303               	bcf	3,6	;RP1=0, select bank0
  1799  02F3  00AD               	movwf	_valor_entry3+1
  1800  02F4  1683               	bsf	3,5	;RP0=1, select bank1
  1801  02F5  1303               	bcf	3,6	;RP1=0, select bank1
  1802  02F6  085C               	movf	?___xxtofl^(0+128),w
  1803  02F7  1283               	bcf	3,5	;RP0=0, select bank0
  1804  02F8  1303               	bcf	3,6	;RP1=0, select bank0
  1805  02F9  00AC               	movwf	_valor_entry3
  1806  02FA                     l2363:
  1807                           
  1808                           ;main.c: 203:     ADCON0bits.CHS0 = 0;
  1809  02FA  119F               	bcf	31,3	;volatile
  1810  02FB                     l2365:
  1811                           
  1812                           ;main.c: 204:     ADCON0bits.CHS1 = 0;
  1813  02FB  121F               	bcf	31,4	;volatile
  1814  02FC                     l2367:
  1815                           
  1816                           ;main.c: 205:     ADCON0bits.CHS2 = 1;
  1817  02FC  169F               	bsf	31,5	;volatile
  1818  02FD                     l2369:
  1819                           
  1820                           ;main.c: 207:     ADCON0bits.GO = 1;
  1821  02FD  151F               	bsf	31,2	;volatile
  1822  02FE                     l2371:
  1823                           
  1824                           ;main.c: 208:     _delay((unsigned long)((20)*(4000000/4000000.0)));
  1825  02FE  3005               	movlw	5
  1826  02FF  1683               	bsf	3,5	;RP0=1, select bank1
  1827  0300  1303               	bcf	3,6	;RP1=0, select bank1
  1828  0301  00EA               	movwf	??_lerSensores^(0+128)
  1829  0302                     u1967:
  1830  0302  0BEA               	decfsz	??_lerSensores^(0+128),f
  1831  0303  2B02               	goto	u1967
  1832  0304  2B05               	nop2
  1833                           
  1834                           ;main.c: 209:     valor_entry4 = ADRESH;
  1835  0305  1283               	bcf	3,5	;RP0=0, select bank0
  1836  0306  1303               	bcf	3,6	;RP1=0, select bank0
  1837  0307  081E               	movf	30,w	;volatile
  1838  0308  1683               	bsf	3,5	;RP0=1, select bank1
  1839  0309  1303               	bcf	3,6	;RP1=0, select bank1
  1840  030A  00EA               	movwf	??_lerSensores^(0+128)
  1841  030B  01EB               	clrf	(??_lerSensores^(0+128)+1)
  1842  030C  01EC               	clrf	(??_lerSensores^(0+128)+2)
  1843  030D  01ED               	clrf	(??_lerSensores^(0+128)+3)
  1844  030E  086D               	movf	(??_lerSensores+3)^(0+128),w
  1845  030F  00DF               	movwf	(___xxtofl@val+3)^(0+128)
  1846  0310  086C               	movf	(??_lerSensores+2)^(0+128),w
  1847  0311  00DE               	movwf	(___xxtofl@val+2)^(0+128)
  1848  0312  086B               	movf	(??_lerSensores+1)^(0+128),w
  1849  0313  00DD               	movwf	(___xxtofl@val+1)^(0+128)
  1850  0314  086A               	movf	??_lerSensores^(0+128),w
  1851  0315  00DC               	movwf	___xxtofl@val^(0+128)
  1852  0316  3000               	movlw	0
  1853  0317  120A  118A  2571  120A  118A  	fcall	___xxtofl
  1854  031C  1683               	bsf	3,5	;RP0=1, select bank1
  1855  031D  1303               	bcf	3,6	;RP1=0, select bank1
  1856  031E  085F               	movf	(?___xxtofl+3)^(0+128),w
  1857  031F  1283               	bcf	3,5	;RP0=0, select bank0
  1858  0320  1303               	bcf	3,6	;RP1=0, select bank0
  1859  0321  00AB               	movwf	_valor_entry4+3
  1860  0322  1683               	bsf	3,5	;RP0=1, select bank1
  1861  0323  1303               	bcf	3,6	;RP1=0, select bank1
  1862  0324  085E               	movf	(?___xxtofl+2)^(0+128),w
  1863  0325  1283               	bcf	3,5	;RP0=0, select bank0
  1864  0326  1303               	bcf	3,6	;RP1=0, select bank0
  1865  0327  00AA               	movwf	_valor_entry4+2
  1866  0328  1683               	bsf	3,5	;RP0=1, select bank1
  1867  0329  1303               	bcf	3,6	;RP1=0, select bank1
  1868  032A  085D               	movf	(?___xxtofl+1)^(0+128),w
  1869  032B  1283               	bcf	3,5	;RP0=0, select bank0
  1870  032C  1303               	bcf	3,6	;RP1=0, select bank0
  1871  032D  00A9               	movwf	_valor_entry4+1
  1872  032E  1683               	bsf	3,5	;RP0=1, select bank1
  1873  032F  1303               	bcf	3,6	;RP1=0, select bank1
  1874  0330  085C               	movf	?___xxtofl^(0+128),w
  1875  0331  1283               	bcf	3,5	;RP0=0, select bank0
  1876  0332  1303               	bcf	3,6	;RP1=0, select bank0
  1877  0333  00A8               	movwf	_valor_entry4
  1878  0334                     l2373:
  1879                           
  1880                           ;main.c: 213:     ADCON0bits.CHS0 = 1;
  1881  0334  159F               	bsf	31,3	;volatile
  1882  0335                     l2375:
  1883                           
  1884                           ;main.c: 214:     ADCON0bits.CHS1 = 0;
  1885  0335  121F               	bcf	31,4	;volatile
  1886  0336                     l2377:
  1887                           
  1888                           ;main.c: 215:     ADCON0bits.CHS2 = 1;
  1889  0336  169F               	bsf	31,5	;volatile
  1890  0337                     l2379:
  1891                           
  1892                           ;main.c: 217:     ADCON0bits.GO = 1;
  1893  0337  151F               	bsf	31,2	;volatile
  1894  0338                     l2381:
  1895                           
  1896                           ;main.c: 218:     _delay((unsigned long)((20)*(4000000/4000000.0)));
  1897  0338  3005               	movlw	5
  1898  0339  1683               	bsf	3,5	;RP0=1, select bank1
  1899  033A  1303               	bcf	3,6	;RP1=0, select bank1
  1900  033B  00EA               	movwf	??_lerSensores^(0+128)
  1901  033C                     u1977:
  1902  033C  0BEA               	decfsz	??_lerSensores^(0+128),f
  1903  033D  2B3C               	goto	u1977
  1904  033E  2B3F               	nop2
  1905  033F                     l2383:
  1906                           
  1907                           ;main.c: 219:     valor_entry5 = ADRESH;
  1908  033F  1283               	bcf	3,5	;RP0=0, select bank0
  1909  0340  1303               	bcf	3,6	;RP1=0, select bank0
  1910  0341  081E               	movf	30,w	;volatile
  1911  0342  1683               	bsf	3,5	;RP0=1, select bank1
  1912  0343  1303               	bcf	3,6	;RP1=0, select bank1
  1913  0344  00EA               	movwf	??_lerSensores^(0+128)
  1914  0345  01EB               	clrf	(??_lerSensores^(0+128)+1)
  1915  0346  01EC               	clrf	(??_lerSensores^(0+128)+2)
  1916  0347  01ED               	clrf	(??_lerSensores^(0+128)+3)
  1917  0348  086D               	movf	(??_lerSensores+3)^(0+128),w
  1918  0349  00DF               	movwf	(___xxtofl@val+3)^(0+128)
  1919  034A  086C               	movf	(??_lerSensores+2)^(0+128),w
  1920  034B  00DE               	movwf	(___xxtofl@val+2)^(0+128)
  1921  034C  086B               	movf	(??_lerSensores+1)^(0+128),w
  1922  034D  00DD               	movwf	(___xxtofl@val+1)^(0+128)
  1923  034E  086A               	movf	??_lerSensores^(0+128),w
  1924  034F  00DC               	movwf	___xxtofl@val^(0+128)
  1925  0350  3000               	movlw	0
  1926  0351  120A  118A  2571  120A  118A  	fcall	___xxtofl
  1927  0356  1683               	bsf	3,5	;RP0=1, select bank1
  1928  0357  1303               	bcf	3,6	;RP1=0, select bank1
  1929  0358  085F               	movf	(?___xxtofl+3)^(0+128),w
  1930  0359  1283               	bcf	3,5	;RP0=0, select bank0
  1931  035A  1303               	bcf	3,6	;RP1=0, select bank0
  1932  035B  00A7               	movwf	_valor_entry5+3
  1933  035C  1683               	bsf	3,5	;RP0=1, select bank1
  1934  035D  1303               	bcf	3,6	;RP1=0, select bank1
  1935  035E  085E               	movf	(?___xxtofl+2)^(0+128),w
  1936  035F  1283               	bcf	3,5	;RP0=0, select bank0
  1937  0360  1303               	bcf	3,6	;RP1=0, select bank0
  1938  0361  00A6               	movwf	_valor_entry5+2
  1939  0362  1683               	bsf	3,5	;RP0=1, select bank1
  1940  0363  1303               	bcf	3,6	;RP1=0, select bank1
  1941  0364  085D               	movf	(?___xxtofl+1)^(0+128),w
  1942  0365  1283               	bcf	3,5	;RP0=0, select bank0
  1943  0366  1303               	bcf	3,6	;RP1=0, select bank0
  1944  0367  00A5               	movwf	_valor_entry5+1
  1945  0368  1683               	bsf	3,5	;RP0=1, select bank1
  1946  0369  1303               	bcf	3,6	;RP1=0, select bank1
  1947  036A  085C               	movf	?___xxtofl^(0+128),w
  1948  036B  1283               	bcf	3,5	;RP0=0, select bank0
  1949  036C  1303               	bcf	3,6	;RP1=0, select bank0
  1950  036D  00A4               	movwf	_valor_entry5
  1951  036E                     l2385:
  1952                           
  1953                           ;main.c: 223:     ADCON0bits.CHS0 = 0;
  1954  036E  119F               	bcf	31,3	;volatile
  1955  036F                     l2387:
  1956                           
  1957                           ;main.c: 224:     ADCON0bits.CHS1 = 1;
  1958  036F  161F               	bsf	31,4	;volatile
  1959  0370                     l2389:
  1960                           
  1961                           ;main.c: 225:     ADCON0bits.CHS2 = 1;
  1962  0370  169F               	bsf	31,5	;volatile
  1963  0371                     l2391:
  1964                           
  1965                           ;main.c: 227:     ADCON0bits.GO = 1;
  1966  0371  151F               	bsf	31,2	;volatile
  1967                           
  1968                           ;main.c: 228:     _delay((unsigned long)((20)*(4000000/4000000.0)));
  1969  0372  3005               	movlw	5
  1970  0373  1683               	bsf	3,5	;RP0=1, select bank1
  1971  0374  1303               	bcf	3,6	;RP1=0, select bank1
  1972  0375  00EA               	movwf	??_lerSensores^(0+128)
  1973  0376                     u1987:
  1974  0376  0BEA               	decfsz	??_lerSensores^(0+128),f
  1975  0377  2B76               	goto	u1987
  1976  0378  2B79               	nop2
  1977  0379                     l2393:
  1978                           
  1979                           ;main.c: 229:     valor_entry6 = ADRESH;
  1980  0379  1283               	bcf	3,5	;RP0=0, select bank0
  1981  037A  1303               	bcf	3,6	;RP1=0, select bank0
  1982  037B  081E               	movf	30,w	;volatile
  1983  037C  1683               	bsf	3,5	;RP0=1, select bank1
  1984  037D  1303               	bcf	3,6	;RP1=0, select bank1
  1985  037E  00EA               	movwf	??_lerSensores^(0+128)
  1986  037F  01EB               	clrf	(??_lerSensores^(0+128)+1)
  1987  0380  01EC               	clrf	(??_lerSensores^(0+128)+2)
  1988  0381  01ED               	clrf	(??_lerSensores^(0+128)+3)
  1989  0382  086D               	movf	(??_lerSensores+3)^(0+128),w
  1990  0383  00DF               	movwf	(___xxtofl@val+3)^(0+128)
  1991  0384  086C               	movf	(??_lerSensores+2)^(0+128),w
  1992  0385  00DE               	movwf	(___xxtofl@val+2)^(0+128)
  1993  0386  086B               	movf	(??_lerSensores+1)^(0+128),w
  1994  0387  00DD               	movwf	(___xxtofl@val+1)^(0+128)
  1995  0388  086A               	movf	??_lerSensores^(0+128),w
  1996  0389  00DC               	movwf	___xxtofl@val^(0+128)
  1997  038A  3000               	movlw	0
  1998  038B  120A  118A  2571  120A  118A  	fcall	___xxtofl
  1999  0390  1683               	bsf	3,5	;RP0=1, select bank1
  2000  0391  1303               	bcf	3,6	;RP1=0, select bank1
  2001  0392  085F               	movf	(?___xxtofl+3)^(0+128),w
  2002  0393  1283               	bcf	3,5	;RP0=0, select bank0
  2003  0394  1303               	bcf	3,6	;RP1=0, select bank0
  2004  0395  00A3               	movwf	_valor_entry6+3
  2005  0396  1683               	bsf	3,5	;RP0=1, select bank1
  2006  0397  1303               	bcf	3,6	;RP1=0, select bank1
  2007  0398  085E               	movf	(?___xxtofl+2)^(0+128),w
  2008  0399  1283               	bcf	3,5	;RP0=0, select bank0
  2009  039A  1303               	bcf	3,6	;RP1=0, select bank0
  2010  039B  00A2               	movwf	_valor_entry6+2
  2011  039C  1683               	bsf	3,5	;RP0=1, select bank1
  2012  039D  1303               	bcf	3,6	;RP1=0, select bank1
  2013  039E  085D               	movf	(?___xxtofl+1)^(0+128),w
  2014  039F  1283               	bcf	3,5	;RP0=0, select bank0
  2015  03A0  1303               	bcf	3,6	;RP1=0, select bank0
  2016  03A1  00A1               	movwf	_valor_entry6+1
  2017  03A2  1683               	bsf	3,5	;RP0=1, select bank1
  2018  03A3  1303               	bcf	3,6	;RP1=0, select bank1
  2019  03A4  085C               	movf	?___xxtofl^(0+128),w
  2020  03A5  1283               	bcf	3,5	;RP0=0, select bank0
  2021  03A6  1303               	bcf	3,6	;RP1=0, select bank0
  2022  03A7  00A0               	movwf	_valor_entry6
  2023  03A8                     l205:
  2024  03A8  0008               	return
  2025  03A9                     __end_of_lerSensores:
  2026                           
  2027                           	psect	text3
  2028  0571                     __ptext3:	
  2029 ;; *************** function ___xxtofl *****************
  2030 ;; Defined at:
  2031 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\xxtofl.c"
  2032 ;; Parameters:    Size  Location     Type
  2033 ;;  sign            1    wreg     unsigned char 
  2034 ;;  val             4    0[BANK1 ] long 
  2035 ;; Auto vars:     Size  Location     Type
  2036 ;;  sign            1    8[BANK1 ] unsigned char 
  2037 ;;  arg             4   10[BANK1 ] unsigned long 
  2038 ;;  exp             1    9[BANK1 ] unsigned char 
  2039 ;; Return value:  Size  Location     Type
  2040 ;;                  4    0[BANK1 ] unsigned char 
  2041 ;; Registers used:
  2042 ;;		wreg, status,2, status,0
  2043 ;; Tracked objects:
  2044 ;;		On entry : 0/0
  2045 ;;		On exit  : 0/0
  2046 ;;		Unchanged: 0/0
  2047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2048 ;;      Params:         0       0       4       0       0
  2049 ;;      Locals:         0       0       6       0       0
  2050 ;;      Temps:          0       0       4       0       0
  2051 ;;      Totals:         0       0      14       0       0
  2052 ;;Total ram usage:       14 bytes
  2053 ;; Hardware stack levels used: 1
  2054 ;; Hardware stack levels required when called: 5
  2055 ;; This function calls:
  2056 ;;		Nothing
  2057 ;; This function is called by:
  2058 ;;		_lerSensores
  2059 ;; This function uses a non-reentrant model
  2060 ;;
  2061                           
  2062                           
  2063                           ;psect for function ___xxtofl
  2064  0571                     ___xxtofl:
  2065                           
  2066                           ;incstack = 0
  2067                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2068                           ;___xxtofl@sign stored from wreg
  2069  0571  1683               	bsf	3,5	;RP0=1, select bank1
  2070  0572  1303               	bcf	3,6	;RP1=0, select bank1
  2071  0573  00E4               	movwf	___xxtofl@sign^(0+128)
  2072  0574                     l2189:
  2073  0574  0864               	movf	___xxtofl@sign^(0+128),w
  2074  0575  1903               	btfsc	3,2
  2075  0576  2D78               	goto	u1591
  2076  0577  2D79               	goto	u1590
  2077  0578                     u1591:
  2078  0578  2D8D               	goto	l2195
  2079  0579                     u1590:
  2080  0579                     l2191:
  2081  0579  1FDF               	btfss	(___xxtofl@val+3)^(0+128),7
  2082  057A  2D7C               	goto	u1601
  2083  057B  2D7D               	goto	u1600
  2084  057C                     u1601:
  2085  057C  2D8D               	goto	l2195
  2086  057D                     u1600:
  2087  057D                     l2193:
  2088  057D  095C               	comf	___xxtofl@val^(0+128),w
  2089  057E  00E6               	movwf	___xxtofl@arg^(0+128)
  2090  057F  095D               	comf	(___xxtofl@val^(0+128)+1),w
  2091  0580  00E7               	movwf	(___xxtofl@arg+1)^(0+128)
  2092  0581  095E               	comf	(___xxtofl@val^(0+128)+2),w
  2093  0582  00E8               	movwf	(___xxtofl@arg+2)^(0+128)
  2094  0583  095F               	comf	(___xxtofl@val^(0+128)+3),w
  2095  0584  00E9               	movwf	(___xxtofl@arg+3)^(0+128)
  2096  0585  0AE6               	incf	___xxtofl@arg^(0+128),f
  2097  0586  1903               	skipnz
  2098  0587  0AE7               	incf	(___xxtofl@arg+1)^(0+128),f
  2099  0588  1903               	skipnz
  2100  0589  0AE8               	incf	(___xxtofl@arg+2)^(0+128),f
  2101  058A  1903               	skipnz
  2102  058B  0AE9               	incf	(___xxtofl@arg+3)^(0+128),f
  2103  058C  2D95               	goto	l764
  2104  058D                     l2195:
  2105  058D  085F               	movf	(___xxtofl@val+3)^(0+128),w
  2106  058E  00E9               	movwf	(___xxtofl@arg+3)^(0+128)
  2107  058F  085E               	movf	(___xxtofl@val+2)^(0+128),w
  2108  0590  00E8               	movwf	(___xxtofl@arg+2)^(0+128)
  2109  0591  085D               	movf	(___xxtofl@val+1)^(0+128),w
  2110  0592  00E7               	movwf	(___xxtofl@arg+1)^(0+128)
  2111  0593  085C               	movf	___xxtofl@val^(0+128),w
  2112  0594  00E6               	movwf	___xxtofl@arg^(0+128)
  2113  0595                     l764:
  2114  0595  085F               	movf	(___xxtofl@val+3)^(0+128),w
  2115  0596  045E               	iorwf	(___xxtofl@val+2)^(0+128),w
  2116  0597  045D               	iorwf	(___xxtofl@val+1)^(0+128),w
  2117  0598  045C               	iorwf	___xxtofl@val^(0+128),w
  2118  0599  1D03               	skipz
  2119  059A  2D9C               	goto	u1611
  2120  059B  2D9D               	goto	u1610
  2121  059C                     u1611:
  2122  059C  2DA6               	goto	l2201
  2123  059D                     u1610:
  2124  059D                     l2197:
  2125  059D  3000               	movlw	0
  2126  059E  00DF               	movwf	(?___xxtofl+3)^(0+128)
  2127  059F  3000               	movlw	0
  2128  05A0  00DE               	movwf	(?___xxtofl+2)^(0+128)
  2129  05A1  3000               	movlw	0
  2130  05A2  00DD               	movwf	(?___xxtofl+1)^(0+128)
  2131  05A3  3000               	movlw	0
  2132  05A4  00DC               	movwf	?___xxtofl^(0+128)
  2133  05A5  2E2C               	goto	l766
  2134  05A6                     l2201:
  2135  05A6  3096               	movlw	150
  2136  05A7  00E0               	movwf	??___xxtofl^(0+128)
  2137  05A8  0860               	movf	??___xxtofl^(0+128),w
  2138  05A9  00E5               	movwf	___xxtofl@exp^(0+128)
  2139  05AA  2DB8               	goto	l2205
  2140  05AB                     l2203:
  2141  05AB  3001               	movlw	1
  2142  05AC  00E0               	movwf	??___xxtofl^(0+128)
  2143  05AD  0860               	movf	??___xxtofl^(0+128),w
  2144  05AE  07E5               	addwf	___xxtofl@exp^(0+128),f
  2145  05AF  3001               	movlw	1
  2146  05B0                     u1625:
  2147  05B0  1003               	clrc
  2148  05B1  0CE9               	rrf	(___xxtofl@arg+3)^(0+128),f
  2149  05B2  0CE8               	rrf	(___xxtofl@arg+2)^(0+128),f
  2150  05B3  0CE7               	rrf	(___xxtofl@arg+1)^(0+128),f
  2151  05B4  0CE6               	rrf	___xxtofl@arg^(0+128),f
  2152  05B5  3EFF               	addlw	-1
  2153  05B6  1D03               	skipz
  2154  05B7  2DB0               	goto	u1625
  2155  05B8                     l2205:
  2156  05B8  30FE               	movlw	254
  2157  05B9  0569               	andwf	(___xxtofl@arg+3)^(0+128),w
  2158  05BA  1D03               	btfss	3,2
  2159  05BB  2DBD               	goto	u1631
  2160  05BC  2DBE               	goto	u1630
  2161  05BD                     u1631:
  2162  05BD  2DAB               	goto	l2203
  2163  05BE                     u1630:
  2164  05BE  2DDA               	goto	l770
  2165  05BF                     l2207:
  2166  05BF  3001               	movlw	1
  2167  05C0  00E0               	movwf	??___xxtofl^(0+128)
  2168  05C1  0860               	movf	??___xxtofl^(0+128),w
  2169  05C2  07E5               	addwf	___xxtofl@exp^(0+128),f
  2170  05C3                     l2209:
  2171  05C3  3001               	movlw	1
  2172  05C4  07E6               	addwf	___xxtofl@arg^(0+128),f
  2173  05C5  3000               	movlw	0
  2174  05C6  1803               	skipnc
  2175  05C7  3001               	movlw	1
  2176  05C8  07E7               	addwf	(___xxtofl@arg+1)^(0+128),f
  2177  05C9  3000               	movlw	0
  2178  05CA  1803               	skipnc
  2179  05CB  3001               	movlw	1
  2180  05CC  07E8               	addwf	(___xxtofl@arg+2)^(0+128),f
  2181  05CD  3000               	movlw	0
  2182  05CE  1803               	skipnc
  2183  05CF  3001               	movlw	1
  2184  05D0  07E9               	addwf	(___xxtofl@arg+3)^(0+128),f
  2185  05D1                     l2211:
  2186  05D1  3001               	movlw	1
  2187  05D2                     u1645:
  2188  05D2  1003               	clrc
  2189  05D3  0CE9               	rrf	(___xxtofl@arg+3)^(0+128),f
  2190  05D4  0CE8               	rrf	(___xxtofl@arg+2)^(0+128),f
  2191  05D5  0CE7               	rrf	(___xxtofl@arg+1)^(0+128),f
  2192  05D6  0CE6               	rrf	___xxtofl@arg^(0+128),f
  2193  05D7  3EFF               	addlw	-1
  2194  05D8  1D03               	skipz
  2195  05D9  2DD2               	goto	u1645
  2196  05DA                     l770:
  2197  05DA  30FF               	movlw	255
  2198  05DB  0569               	andwf	(___xxtofl@arg+3)^(0+128),w
  2199  05DC  1D03               	btfss	3,2
  2200  05DD  2DDF               	goto	u1651
  2201  05DE  2DE0               	goto	u1650
  2202  05DF                     u1651:
  2203  05DF  2DBF               	goto	l2207
  2204  05E0                     u1650:
  2205  05E0  2DEC               	goto	l2215
  2206  05E1                     l2213:
  2207  05E1  3001               	movlw	1
  2208  05E2  02E5               	subwf	___xxtofl@exp^(0+128),f
  2209  05E3  3001               	movlw	1
  2210  05E4  00E0               	movwf	??___xxtofl^(0+128)
  2211  05E5                     u1665:
  2212  05E5  1003               	clrc
  2213  05E6  0DE6               	rlf	___xxtofl@arg^(0+128),f
  2214  05E7  0DE7               	rlf	(___xxtofl@arg+1)^(0+128),f
  2215  05E8  0DE8               	rlf	(___xxtofl@arg+2)^(0+128),f
  2216  05E9  0DE9               	rlf	(___xxtofl@arg+3)^(0+128),f
  2217  05EA  0BE0               	decfsz	??___xxtofl^(0+128),f
  2218  05EB  2DE5               	goto	u1665
  2219  05EC                     l2215:
  2220  05EC  1BE8               	btfsc	(___xxtofl@arg+2)^(0+128),7
  2221  05ED  2DEF               	goto	u1671
  2222  05EE  2DF0               	goto	u1670
  2223  05EF                     u1671:
  2224  05EF  2DF6               	goto	l777
  2225  05F0                     u1670:
  2226  05F0                     l2217:
  2227  05F0  3002               	movlw	2
  2228  05F1  0265               	subwf	___xxtofl@exp^(0+128),w
  2229  05F2  1803               	skipnc
  2230  05F3  2DF5               	goto	u1681
  2231  05F4  2DF6               	goto	u1680
  2232  05F5                     u1681:
  2233  05F5  2DE1               	goto	l2213
  2234  05F6                     u1680:
  2235  05F6                     l777:
  2236  05F6  1865               	btfsc	___xxtofl@exp^(0+128),0
  2237  05F7  2DF9               	goto	u1691
  2238  05F8  2DFA               	goto	u1690
  2239  05F9                     u1691:
  2240  05F9  2E02               	goto	l778
  2241  05FA                     u1690:
  2242  05FA                     l2219:
  2243  05FA  30FF               	movlw	255
  2244  05FB  05E6               	andwf	___xxtofl@arg^(0+128),f
  2245  05FC  30FF               	movlw	255
  2246  05FD  05E7               	andwf	(___xxtofl@arg+1)^(0+128),f
  2247  05FE  307F               	movlw	127
  2248  05FF  05E8               	andwf	(___xxtofl@arg+2)^(0+128),f
  2249  0600  30FF               	movlw	255
  2250  0601  05E9               	andwf	(___xxtofl@arg+3)^(0+128),f
  2251  0602                     l778:
  2252  0602  1003               	clrc
  2253  0603  0CE5               	rrf	___xxtofl@exp^(0+128),f
  2254  0604                     l2221:
  2255  0604  0865               	movf	___xxtofl@exp^(0+128),w
  2256  0605  00E0               	movwf	??___xxtofl^(0+128)
  2257  0606  01E1               	clrf	(??___xxtofl^(0+128)+1)
  2258  0607  01E2               	clrf	(??___xxtofl^(0+128)+2)
  2259  0608  01E3               	clrf	(??___xxtofl^(0+128)+3)
  2260  0609  3018               	movlw	24
  2261  060A                     u1705:
  2262  060A  1003               	clrc
  2263  060B  0DE0               	rlf	??___xxtofl^(0+128),f
  2264  060C  0DE1               	rlf	(??___xxtofl^(0+128)+1),f
  2265  060D  0DE2               	rlf	(??___xxtofl^(0+128)+2),f
  2266  060E  0DE3               	rlf	(??___xxtofl^(0+128)+3),f
  2267  060F                     u1700:
  2268  060F  3EFF               	addlw	-1
  2269  0610  1D03               	skipz
  2270  0611  2E0A               	goto	u1705
  2271  0612  0860               	movf	??___xxtofl^(0+128),w
  2272  0613  04E6               	iorwf	___xxtofl@arg^(0+128),f
  2273  0614  0861               	movf	(??___xxtofl+1)^(0+128),w
  2274  0615  04E7               	iorwf	(___xxtofl@arg+1)^(0+128),f
  2275  0616  0862               	movf	(??___xxtofl+2)^(0+128),w
  2276  0617  04E8               	iorwf	(___xxtofl@arg+2)^(0+128),f
  2277  0618  0863               	movf	(??___xxtofl+3)^(0+128),w
  2278  0619  04E9               	iorwf	(___xxtofl@arg+3)^(0+128),f
  2279  061A                     l2223:
  2280  061A  0864               	movf	___xxtofl@sign^(0+128),w
  2281  061B  1903               	btfsc	3,2
  2282  061C  2E1E               	goto	u1711
  2283  061D  2E1F               	goto	u1710
  2284  061E                     u1711:
  2285  061E  2E24               	goto	l2229
  2286  061F                     u1710:
  2287  061F                     l2225:
  2288  061F  1FDF               	btfss	(___xxtofl@val+3)^(0+128),7
  2289  0620  2E22               	goto	u1721
  2290  0621  2E23               	goto	u1720
  2291  0622                     u1721:
  2292  0622  2E24               	goto	l2229
  2293  0623                     u1720:
  2294  0623                     l2227:
  2295  0623  17E9               	bsf	(___xxtofl@arg^(0+128)+3),7
  2296  0624                     l2229:
  2297  0624  0869               	movf	(___xxtofl@arg+3)^(0+128),w
  2298  0625  00DF               	movwf	(?___xxtofl+3)^(0+128)
  2299  0626  0868               	movf	(___xxtofl@arg+2)^(0+128),w
  2300  0627  00DE               	movwf	(?___xxtofl+2)^(0+128)
  2301  0628  0867               	movf	(___xxtofl@arg+1)^(0+128),w
  2302  0629  00DD               	movwf	(?___xxtofl+1)^(0+128)
  2303  062A  0866               	movf	___xxtofl@arg^(0+128),w
  2304  062B  00DC               	movwf	?___xxtofl^(0+128)
  2305  062C                     l766:
  2306  062C  0008               	return
  2307  062D                     __end_of___xxtofl:
  2308                           
  2309                           	psect	text4
  2310  07AE                     __ptext4:	
  2311 ;; *************** function _iniciaPinos *****************
  2312 ;; Defined at:
  2313 ;;		line 313 in file "main.c"
  2314 ;; Parameters:    Size  Location     Type
  2315 ;;		None
  2316 ;; Auto vars:     Size  Location     Type
  2317 ;;		None
  2318 ;; Return value:  Size  Location     Type
  2319 ;;                  1    wreg      void 
  2320 ;; Registers used:
  2321 ;;		wreg, status,2
  2322 ;; Tracked objects:
  2323 ;;		On entry : 0/0
  2324 ;;		On exit  : 0/0
  2325 ;;		Unchanged: 0/0
  2326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2327 ;;      Params:         0       0       0       0       0
  2328 ;;      Locals:         0       0       0       0       0
  2329 ;;      Temps:          0       0       0       0       0
  2330 ;;      Totals:         0       0       0       0       0
  2331 ;;Total ram usage:        0 bytes
  2332 ;; Hardware stack levels used: 1
  2333 ;; Hardware stack levels required when called: 5
  2334 ;; This function calls:
  2335 ;;		Nothing
  2336 ;; This function is called by:
  2337 ;;		_main
  2338 ;; This function uses a non-reentrant model
  2339 ;;
  2340                           
  2341                           
  2342                           ;psect for function _iniciaPinos
  2343  07AE                     _iniciaPinos:
  2344  07AE                     l2243:	
  2345                           ;incstack = 0
  2346                           ; Regs used in _iniciaPinos: [wreg+status,2]
  2347                           
  2348                           
  2349                           ;main.c: 315:     OPTION_REGbits.nRBPU = 1;
  2350  07AE  1683               	bsf	3,5	;RP0=1, select bank1
  2351  07AF  1303               	bcf	3,6	;RP1=0, select bank1
  2352  07B0  1781               	bsf	1,7	;volatile
  2353                           
  2354                           ;main.c: 317:     TRISBbits.TRISB0 = 1;
  2355  07B1  1406               	bsf	6,0	;volatile
  2356                           
  2357                           ;main.c: 318:     TRISBbits.TRISB1 = 0;
  2358  07B2  1086               	bcf	6,1	;volatile
  2359                           
  2360                           ;main.c: 319:     TRISBbits.TRISB2 = 0;
  2361  07B3  1106               	bcf	6,2	;volatile
  2362                           
  2363                           ;main.c: 320:     TRISBbits.TRISB3 = 0;
  2364  07B4  1186               	bcf	6,3	;volatile
  2365                           
  2366                           ;main.c: 321:     TRISBbits.TRISB4 = 0;
  2367  07B5  1206               	bcf	6,4	;volatile
  2368                           
  2369                           ;main.c: 322:     TRISBbits.TRISB5 = 0;
  2370  07B6  1286               	bcf	6,5	;volatile
  2371                           
  2372                           ;main.c: 323:     TRISBbits.TRISB6 = 0;
  2373  07B7  1306               	bcf	6,6	;volatile
  2374                           
  2375                           ;main.c: 324:     TRISBbits.TRISB7 = 0;
  2376  07B8  1386               	bcf	6,7	;volatile
  2377                           
  2378                           ;main.c: 326:     OPTION_REGbits.INTEDG = 1;
  2379  07B9  1701               	bsf	1,6	;volatile
  2380                           
  2381                           ;main.c: 327:     INTCONbits.GIE = 1;
  2382  07BA  178B               	bsf	11,7	;volatile
  2383                           
  2384                           ;main.c: 328:     INTCONbits.INTE = 1;
  2385  07BB  160B               	bsf	11,4	;volatile
  2386                           
  2387                           ;main.c: 329:     INTCONbits.INTF = 0;
  2388  07BC  108B               	bcf	11,1	;volatile
  2389                           
  2390                           ;main.c: 330:     INTCONbits.PEIE = 1;
  2391  07BD  170B               	bsf	11,6	;volatile
  2392                           
  2393                           ;main.c: 332:     OPTION_REGbits.PS0 = 1;
  2394  07BE  1401               	bsf	1,0	;volatile
  2395                           
  2396                           ;main.c: 333:     OPTION_REGbits.PS1 = 1;
  2397  07BF  1481               	bsf	1,1	;volatile
  2398                           
  2399                           ;main.c: 334:     OPTION_REGbits.PS2 = 1;
  2400  07C0  1501               	bsf	1,2	;volatile
  2401                           
  2402                           ;main.c: 335:     OPTION_REGbits.PSA = 1;
  2403  07C1  1581               	bsf	1,3	;volatile
  2404                           
  2405                           ;main.c: 337:     T1CONbits.TMR1CS = 0;
  2406  07C2  1283               	bcf	3,5	;RP0=0, select bank0
  2407  07C3  1303               	bcf	3,6	;RP1=0, select bank0
  2408  07C4  1090               	bcf	16,1	;volatile
  2409                           
  2410                           ;main.c: 338:     T1CONbits.T1CKPS0 = 1;
  2411  07C5  1610               	bsf	16,4	;volatile
  2412                           
  2413                           ;main.c: 339:     T1CONbits.T1CKPS1 = 1;
  2414  07C6  1690               	bsf	16,5	;volatile
  2415  07C7                     l2245:
  2416                           
  2417                           ;main.c: 341:     TMR1L = 0xDC;
  2418  07C7  30DC               	movlw	220
  2419  07C8  008E               	movwf	14	;volatile
  2420                           
  2421                           ;main.c: 342:     TMR1H = 0x0B;
  2422  07C9  300B               	movlw	11
  2423  07CA  008F               	movwf	15	;volatile
  2424  07CB                     l2247:
  2425                           
  2426                           ;main.c: 344:     PIE1bits.TMR1IE=1;
  2427  07CB  1683               	bsf	3,5	;RP0=1, select bank1
  2428  07CC  1303               	bcf	3,6	;RP1=0, select bank1
  2429  07CD  140C               	bsf	12,0	;volatile
  2430  07CE                     l2249:
  2431                           
  2432                           ;main.c: 346:     T1CONbits.TMR1ON = 1;
  2433  07CE  1283               	bcf	3,5	;RP0=0, select bank0
  2434  07CF  1303               	bcf	3,6	;RP1=0, select bank0
  2435  07D0  1410               	bsf	16,0	;volatile
  2436                           
  2437                           ;main.c: 348:     TRISA = 0b11111111;
  2438  07D1  30FF               	movlw	255
  2439  07D2  1683               	bsf	3,5	;RP0=1, select bank1
  2440  07D3  1303               	bcf	3,6	;RP1=0, select bank1
  2441  07D4  0085               	movwf	5	;volatile
  2442  07D5                     l2251:
  2443                           
  2444                           ;main.c: 349:     TRISC = 0b00000000;
  2445  07D5  0187               	clrf	7	;volatile
  2446  07D6                     l2253:
  2447                           
  2448                           ;main.c: 350:     TRISD = 0b00000000;
  2449  07D6  0188               	clrf	8	;volatile
  2450  07D7                     l2255:
  2451                           
  2452                           ;main.c: 353:     ADCON1bits.PCFG0 = 0;
  2453  07D7  101F               	bcf	31,0	;volatile
  2454  07D8                     l2257:
  2455                           
  2456                           ;main.c: 354:     ADCON1bits.PCFG1 = 0;
  2457  07D8  109F               	bcf	31,1	;volatile
  2458  07D9                     l2259:
  2459                           
  2460                           ;main.c: 355:     ADCON1bits.PCFG2 = 0;
  2461  07D9  111F               	bcf	31,2	;volatile
  2462  07DA                     l2261:
  2463                           
  2464                           ;main.c: 356:     ADCON1bits.PCFG3 = 0;
  2465  07DA  119F               	bcf	31,3	;volatile
  2466  07DB                     l2263:
  2467                           
  2468                           ;main.c: 359:     ADCON0bits.ADCS0 = 0 ;
  2469  07DB  1283               	bcf	3,5	;RP0=0, select bank0
  2470  07DC  1303               	bcf	3,6	;RP1=0, select bank0
  2471  07DD  131F               	bcf	31,6	;volatile
  2472  07DE                     l2265:
  2473                           
  2474                           ;main.c: 360:     ADCON0bits.ADCS1 = 0 ;
  2475  07DE  139F               	bcf	31,7	;volatile
  2476  07DF                     l2267:
  2477                           
  2478                           ;main.c: 362:     ADCON1bits.ADFM = 0 ;
  2479  07DF  1683               	bsf	3,5	;RP0=1, select bank1
  2480  07E0  1303               	bcf	3,6	;RP1=0, select bank1
  2481  07E1  139F               	bcf	31,7	;volatile
  2482  07E2                     l2269:
  2483                           
  2484                           ;main.c: 369:     ADRESL = 0x00;
  2485  07E2  019E               	clrf	30	;volatile
  2486  07E3                     l2271:
  2487                           
  2488                           ;main.c: 370:     ADRESH = 0x00;
  2489  07E3  1283               	bcf	3,5	;RP0=0, select bank0
  2490  07E4  1303               	bcf	3,6	;RP1=0, select bank0
  2491  07E5  019E               	clrf	30	;volatile
  2492  07E6                     l2273:
  2493                           
  2494                           ;main.c: 372:     ADCON0bits.ADON = 1;
  2495  07E6  141F               	bsf	31,0	;volatile
  2496  07E7                     l2275:
  2497                           
  2498                           ;main.c: 374:     PORTBbits.RB0 = 0;
  2499  07E7  1006               	bcf	6,0	;volatile
  2500  07E8                     l2277:
  2501                           
  2502                           ;main.c: 375:     PORTBbits.RB1 = 0;
  2503  07E8  1086               	bcf	6,1	;volatile
  2504  07E9                     l2279:
  2505                           
  2506                           ;main.c: 376:     PORTBbits.RB2 = 0;
  2507  07E9  1106               	bcf	6,2	;volatile
  2508  07EA                     l2281:
  2509                           
  2510                           ;main.c: 377:     PORTBbits.RB3 = 0;
  2511  07EA  1186               	bcf	6,3	;volatile
  2512  07EB                     l2283:
  2513                           
  2514                           ;main.c: 378:     PORTBbits.RB4 = 0;
  2515  07EB  1206               	bcf	6,4	;volatile
  2516  07EC                     l2285:
  2517                           
  2518                           ;main.c: 379:     PORTBbits.RB5 = 0;
  2519  07EC  1286               	bcf	6,5	;volatile
  2520  07ED                     l2287:
  2521                           
  2522                           ;main.c: 380:     PORTBbits.RB6 = 0;
  2523  07ED  1306               	bcf	6,6	;volatile
  2524  07EE                     l2289:
  2525                           
  2526                           ;main.c: 381:     PORTBbits.RB7 = 0;
  2527  07EE  1386               	bcf	6,7	;volatile
  2528  07EF                     l2291:
  2529                           
  2530                           ;main.c: 383:     PORTCbits.RC0 = 0;
  2531  07EF  1007               	bcf	7,0	;volatile
  2532  07F0                     l2293:
  2533                           
  2534                           ;main.c: 384:     PORTCbits.RC1 = 0;
  2535  07F0  1087               	bcf	7,1	;volatile
  2536  07F1                     l2295:
  2537                           
  2538                           ;main.c: 385:     PORTCbits.RC2 = 0;
  2539  07F1  1107               	bcf	7,2	;volatile
  2540  07F2                     l2297:
  2541                           
  2542                           ;main.c: 386:     PORTCbits.RC3 = 0;
  2543  07F2  1187               	bcf	7,3	;volatile
  2544  07F3                     l2299:
  2545                           
  2546                           ;main.c: 387:     PORTCbits.RC4 = 0;
  2547  07F3  1207               	bcf	7,4	;volatile
  2548  07F4                     l2301:
  2549                           
  2550                           ;main.c: 388:     PORTCbits.RC5 = 0;
  2551  07F4  1287               	bcf	7,5	;volatile
  2552  07F5                     l2303:
  2553                           
  2554                           ;main.c: 389:     PORTCbits.RC6 = 0;
  2555  07F5  1307               	bcf	7,6	;volatile
  2556  07F6                     l2305:
  2557                           
  2558                           ;main.c: 390:     PORTCbits.RC7 = 0;
  2559  07F6  1387               	bcf	7,7	;volatile
  2560  07F7                     l2307:
  2561                           
  2562                           ;main.c: 392:     PORTDbits.RD0 = 0;
  2563  07F7  1008               	bcf	8,0	;volatile
  2564  07F8                     l2309:
  2565                           
  2566                           ;main.c: 393:     PORTDbits.RD1 = 0;
  2567  07F8  1088               	bcf	8,1	;volatile
  2568  07F9                     l2311:
  2569                           
  2570                           ;main.c: 394:     PORTDbits.RD2 = 0;
  2571  07F9  1108               	bcf	8,2	;volatile
  2572  07FA                     l2313:
  2573                           
  2574                           ;main.c: 395:     PORTDbits.RD3 = 0;
  2575  07FA  1188               	bcf	8,3	;volatile
  2576  07FB                     l2315:
  2577                           
  2578                           ;main.c: 396:     PORTDbits.RD4 = 0;
  2579  07FB  1208               	bcf	8,4	;volatile
  2580  07FC                     l2317:
  2581                           
  2582                           ;main.c: 397:     PORTDbits.RD5 = 0;
  2583  07FC  1288               	bcf	8,5	;volatile
  2584  07FD                     l2319:
  2585                           
  2586                           ;main.c: 398:     PORTDbits.RD6 = 0;
  2587  07FD  1308               	bcf	8,6	;volatile
  2588  07FE                     l2321:
  2589                           
  2590                           ;main.c: 399:     PORTDbits.RD7 = 0;
  2591  07FE  1388               	bcf	8,7	;volatile
  2592  07FF                     l217:
  2593  07FF  0008               	return
  2594  0800                     __end_of_iniciaPinos:
  2595                           
  2596                           	psect	text5
  2597  0DF7                     __ptext5:	
  2598 ;; *************** function _expandeTela *****************
  2599 ;; Defined at:
  2600 ;;		line 266 in file "main.c"
  2601 ;; Parameters:    Size  Location     Type
  2602 ;;		None
  2603 ;; Auto vars:     Size  Location     Type
  2604 ;;		None
  2605 ;; Return value:  Size  Location     Type
  2606 ;;                  1    wreg      void 
  2607 ;; Registers used:
  2608 ;;		wreg
  2609 ;; Tracked objects:
  2610 ;;		On entry : 0/0
  2611 ;;		On exit  : 0/0
  2612 ;;		Unchanged: 0/0
  2613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2614 ;;      Params:         0       0       0       0       0
  2615 ;;      Locals:         0       0       0       0       0
  2616 ;;      Temps:          0       0       3       0       0
  2617 ;;      Totals:         0       0       3       0       0
  2618 ;;Total ram usage:        3 bytes
  2619 ;; Hardware stack levels used: 1
  2620 ;; Hardware stack levels required when called: 5
  2621 ;; This function calls:
  2622 ;;		Nothing
  2623 ;; This function is called by:
  2624 ;;		_main
  2625 ;; This function uses a non-reentrant model
  2626 ;;
  2627                           
  2628                           
  2629                           ;psect for function _expandeTela
  2630  0DF7                     _expandeTela:
  2631  0DF7                     l2397:	
  2632                           ;incstack = 0
  2633                           ; Regs used in _expandeTela: [wreg]
  2634                           
  2635                           
  2636                           ;main.c: 269:     RD5 = 1;
  2637  0DF7  1283               	bcf	3,5	;RP0=0, select bank0
  2638  0DF8  1303               	bcf	3,6	;RP1=0, select bank0
  2639  0DF9  1688               	bsf	8,5	;volatile
  2640                           
  2641                           ;main.c: 270:     RD3 = 1;
  2642  0DFA  1588               	bsf	8,3	;volatile
  2643                           
  2644                           ;main.c: 271:     RD1 = 1;
  2645  0DFB  1488               	bsf	8,1	;volatile
  2646                           
  2647                           ;main.c: 272:     RC0 = 1;
  2648  0DFC  1407               	bsf	7,0	;volatile
  2649                           
  2650                           ;main.c: 275:     RD4 = 0;
  2651  0DFD  1208               	bcf	8,4	;volatile
  2652                           
  2653                           ;main.c: 276:     RC1 = 1;
  2654  0DFE  1487               	bsf	7,1	;volatile
  2655                           
  2656                           ;main.c: 277:     RD2 = 0;
  2657  0DFF  1108               	bcf	8,2	;volatile
  2658                           
  2659                           ;main.c: 278:     RD6 = 1;
  2660  0E00  1708               	bsf	8,6	;volatile
  2661                           
  2662                           ;main.c: 280:     RD0 = 0;
  2663  0E01  1008               	bcf	8,0	;volatile
  2664                           
  2665                           ;main.c: 281:     RC3 = 1;
  2666  0E02  1587               	bsf	7,3	;volatile
  2667                           
  2668                           ;main.c: 282:     RC2 = 0;
  2669  0E03  1107               	bcf	7,2	;volatile
  2670                           
  2671                           ;main.c: 283:     RD7 = 1;
  2672  0E04  1788               	bsf	8,7	;volatile
  2673  0E05                     l2399:
  2674                           
  2675                           ;main.c: 284:     _delay((unsigned long)((500)*(4000000/4000.0)));
  2676  0E05  3003               	movlw	3
  2677  0E06  1683               	bsf	3,5	;RP0=1, select bank1
  2678  0E07  1303               	bcf	3,6	;RP1=0, select bank1
  2679  0E08  00DE               	movwf	(??_expandeTela^(0+128)+2)
  2680  0E09  308A               	movlw	138
  2681  0E0A  00DD               	movwf	(??_expandeTela^(0+128)+1)
  2682  0E0B  3055               	movlw	85
  2683  0E0C  00DC               	movwf	??_expandeTela^(0+128)
  2684  0E0D                     u1997:
  2685  0E0D  0BDC               	decfsz	??_expandeTela^(0+128),f
  2686  0E0E  2E0D               	goto	u1997
  2687  0E0F  0BDD               	decfsz	(??_expandeTela^(0+128)+1),f
  2688  0E10  2E0D               	goto	u1997
  2689  0E11  0BDE               	decfsz	(??_expandeTela^(0+128)+2),f
  2690  0E12  2E0D               	goto	u1997
  2691  0E13                     l2401:
  2692                           
  2693                           ;main.c: 287:     RD4 = 1;
  2694  0E13  1283               	bcf	3,5	;RP0=0, select bank0
  2695  0E14  1303               	bcf	3,6	;RP1=0, select bank0
  2696  0E15  1608               	bsf	8,4	;volatile
  2697  0E16                     l2403:
  2698                           
  2699                           ;main.c: 288:     RC1 = 1;
  2700  0E16  1487               	bsf	7,1	;volatile
  2701  0E17                     l2405:
  2702                           
  2703                           ;main.c: 289:     RD2 = 1;
  2704  0E17  1508               	bsf	8,2	;volatile
  2705  0E18                     l2407:
  2706                           
  2707                           ;main.c: 290:     RD6 = 1;
  2708  0E18  1708               	bsf	8,6	;volatile
  2709  0E19                     l2409:
  2710                           
  2711                           ;main.c: 292:     RD0 = 1;
  2712  0E19  1408               	bsf	8,0	;volatile
  2713  0E1A                     l2411:
  2714                           
  2715                           ;main.c: 293:     RC3 = 1;
  2716  0E1A  1587               	bsf	7,3	;volatile
  2717  0E1B                     l2413:
  2718                           
  2719                           ;main.c: 294:     RC2 = 1;
  2720  0E1B  1507               	bsf	7,2	;volatile
  2721  0E1C                     l2415:
  2722                           
  2723                           ;main.c: 295:     RD7 = 1;
  2724  0E1C  1788               	bsf	8,7	;volatile
  2725  0E1D                     l211:
  2726  0E1D  0008               	return
  2727  0E1E                     __end_of_expandeTela:
  2728                           
  2729                           	psect	text6
  2730  0D19                     __ptext6:	
  2731 ;; *************** function _estufaUm *****************
  2732 ;; Defined at:
  2733 ;;		line 131 in file "main.c"
  2734 ;; Parameters:    Size  Location     Type
  2735 ;;		None
  2736 ;; Auto vars:     Size  Location     Type
  2737 ;;		None
  2738 ;; Return value:  Size  Location     Type
  2739 ;;                  1    wreg      void 
  2740 ;; Registers used:
  2741 ;;		wreg
  2742 ;; Tracked objects:
  2743 ;;		On entry : 0/0
  2744 ;;		On exit  : 0/0
  2745 ;;		Unchanged: 0/0
  2746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2747 ;;      Params:         0       0       0       0       0
  2748 ;;      Locals:         0       0       0       0       0
  2749 ;;      Temps:          0       0       3       0       0
  2750 ;;      Totals:         0       0       3       0       0
  2751 ;;Total ram usage:        3 bytes
  2752 ;; Hardware stack levels used: 1
  2753 ;; Hardware stack levels required when called: 5
  2754 ;; This function calls:
  2755 ;;		Nothing
  2756 ;; This function is called by:
  2757 ;;		_main
  2758 ;; This function uses a non-reentrant model
  2759 ;;
  2760                           
  2761                           
  2762                           ;psect for function _estufaUm
  2763  0D19                     _estufaUm:
  2764  0D19                     l2441:	
  2765                           ;incstack = 0
  2766                           ; Regs used in _estufaUm: [wreg]
  2767                           
  2768                           
  2769                           ;main.c: 133:     RC6 = 1;
  2770  0D19  1283               	bcf	3,5	;RP0=0, select bank0
  2771  0D1A  1303               	bcf	3,6	;RP1=0, select bank0
  2772  0D1B  1707               	bsf	7,6	;volatile
  2773  0D1C                     l2443:
  2774                           
  2775                           ;main.c: 134:     _delay((unsigned long)((500)*(4000000/4000.0)));
  2776  0D1C  3003               	movlw	3
  2777  0D1D  1683               	bsf	3,5	;RP0=1, select bank1
  2778  0D1E  1303               	bcf	3,6	;RP1=0, select bank1
  2779  0D1F  00DE               	movwf	(??_estufaUm^(0+128)+2)
  2780  0D20  308A               	movlw	138
  2781  0D21  00DD               	movwf	(??_estufaUm^(0+128)+1)
  2782  0D22  3055               	movlw	85
  2783  0D23  00DC               	movwf	??_estufaUm^(0+128)
  2784  0D24                     u2007:
  2785  0D24  0BDC               	decfsz	??_estufaUm^(0+128),f
  2786  0D25  2D24               	goto	u2007
  2787  0D26  0BDD               	decfsz	(??_estufaUm^(0+128)+1),f
  2788  0D27  2D24               	goto	u2007
  2789  0D28  0BDE               	decfsz	(??_estufaUm^(0+128)+2),f
  2790  0D29  2D24               	goto	u2007
  2791  0D2A                     l2445:
  2792                           
  2793                           ;main.c: 135:     RC6 = 0;
  2794  0D2A  1283               	bcf	3,5	;RP0=0, select bank0
  2795  0D2B  1303               	bcf	3,6	;RP1=0, select bank0
  2796  0D2C  1307               	bcf	7,6	;volatile
  2797  0D2D                     l193:
  2798  0D2D  0008               	return
  2799  0D2E                     __end_of_estufaUm:
  2800                           
  2801                           	psect	text7
  2802  0D04                     __ptext7:	
  2803 ;; *************** function _estufaTres *****************
  2804 ;; Defined at:
  2805 ;;		line 145 in file "main.c"
  2806 ;; Parameters:    Size  Location     Type
  2807 ;;		None
  2808 ;; Auto vars:     Size  Location     Type
  2809 ;;		None
  2810 ;; Return value:  Size  Location     Type
  2811 ;;                  1    wreg      void 
  2812 ;; Registers used:
  2813 ;;		wreg
  2814 ;; Tracked objects:
  2815 ;;		On entry : 0/0
  2816 ;;		On exit  : 0/0
  2817 ;;		Unchanged: 0/0
  2818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2819 ;;      Params:         0       0       0       0       0
  2820 ;;      Locals:         0       0       0       0       0
  2821 ;;      Temps:          0       0       3       0       0
  2822 ;;      Totals:         0       0       3       0       0
  2823 ;;Total ram usage:        3 bytes
  2824 ;; Hardware stack levels used: 1
  2825 ;; Hardware stack levels required when called: 5
  2826 ;; This function calls:
  2827 ;;		Nothing
  2828 ;; This function is called by:
  2829 ;;		_main
  2830 ;; This function uses a non-reentrant model
  2831 ;;
  2832                           
  2833                           
  2834                           ;psect for function _estufaTres
  2835  0D04                     _estufaTres:
  2836  0D04                     l2457:	
  2837                           ;incstack = 0
  2838                           ; Regs used in _estufaTres: [wreg]
  2839                           
  2840                           
  2841                           ;main.c: 147:     RC4 = 1;
  2842  0D04  1283               	bcf	3,5	;RP0=0, select bank0
  2843  0D05  1303               	bcf	3,6	;RP1=0, select bank0
  2844  0D06  1607               	bsf	7,4	;volatile
  2845  0D07                     l2459:
  2846                           
  2847                           ;main.c: 148:     _delay((unsigned long)((500)*(4000000/4000.0)));
  2848  0D07  3003               	movlw	3
  2849  0D08  1683               	bsf	3,5	;RP0=1, select bank1
  2850  0D09  1303               	bcf	3,6	;RP1=0, select bank1
  2851  0D0A  00DE               	movwf	(??_estufaTres^(0+128)+2)
  2852  0D0B  308A               	movlw	138
  2853  0D0C  00DD               	movwf	(??_estufaTres^(0+128)+1)
  2854  0D0D  3055               	movlw	85
  2855  0D0E  00DC               	movwf	??_estufaTres^(0+128)
  2856  0D0F                     u2017:
  2857  0D0F  0BDC               	decfsz	??_estufaTres^(0+128),f
  2858  0D10  2D0F               	goto	u2017
  2859  0D11  0BDD               	decfsz	(??_estufaTres^(0+128)+1),f
  2860  0D12  2D0F               	goto	u2017
  2861  0D13  0BDE               	decfsz	(??_estufaTres^(0+128)+2),f
  2862  0D14  2D0F               	goto	u2017
  2863  0D15                     l2461:
  2864                           
  2865                           ;main.c: 149:     RC4 = 0;
  2866  0D15  1283               	bcf	3,5	;RP0=0, select bank0
  2867  0D16  1303               	bcf	3,6	;RP1=0, select bank0
  2868  0D17  1207               	bcf	7,4	;volatile
  2869  0D18                     l199:
  2870  0D18  0008               	return
  2871  0D19                     __end_of_estufaTres:
  2872                           
  2873                           	psect	text8
  2874  0CEF                     __ptext8:	
  2875 ;; *************** function _estufaQuatro *****************
  2876 ;; Defined at:
  2877 ;;		line 152 in file "main.c"
  2878 ;; Parameters:    Size  Location     Type
  2879 ;;		None
  2880 ;; Auto vars:     Size  Location     Type
  2881 ;;		None
  2882 ;; Return value:  Size  Location     Type
  2883 ;;                  1    wreg      void 
  2884 ;; Registers used:
  2885 ;;		wreg
  2886 ;; Tracked objects:
  2887 ;;		On entry : 0/0
  2888 ;;		On exit  : 0/0
  2889 ;;		Unchanged: 0/0
  2890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2891 ;;      Params:         0       0       0       0       0
  2892 ;;      Locals:         0       0       0       0       0
  2893 ;;      Temps:          0       0       3       0       0
  2894 ;;      Totals:         0       0       3       0       0
  2895 ;;Total ram usage:        3 bytes
  2896 ;; Hardware stack levels used: 1
  2897 ;; Hardware stack levels required when called: 5
  2898 ;; This function calls:
  2899 ;;		Nothing
  2900 ;; This function is called by:
  2901 ;;		_main
  2902 ;; This function uses a non-reentrant model
  2903 ;;
  2904                           
  2905                           
  2906                           ;psect for function _estufaQuatro
  2907  0CEF                     _estufaQuatro:
  2908  0CEF                     l2465:	
  2909                           ;incstack = 0
  2910                           ; Regs used in _estufaQuatro: [wreg]
  2911                           
  2912                           
  2913                           ;main.c: 154:     RC5 = 1;
  2914  0CEF  1283               	bcf	3,5	;RP0=0, select bank0
  2915  0CF0  1303               	bcf	3,6	;RP1=0, select bank0
  2916  0CF1  1687               	bsf	7,5	;volatile
  2917  0CF2                     l2467:
  2918                           
  2919                           ;main.c: 155:     _delay((unsigned long)((500)*(4000000/4000.0)));
  2920  0CF2  3003               	movlw	3
  2921  0CF3  1683               	bsf	3,5	;RP0=1, select bank1
  2922  0CF4  1303               	bcf	3,6	;RP1=0, select bank1
  2923  0CF5  00DE               	movwf	(??_estufaQuatro^(0+128)+2)
  2924  0CF6  308A               	movlw	138
  2925  0CF7  00DD               	movwf	(??_estufaQuatro^(0+128)+1)
  2926  0CF8  3055               	movlw	85
  2927  0CF9  00DC               	movwf	??_estufaQuatro^(0+128)
  2928  0CFA                     u2027:
  2929  0CFA  0BDC               	decfsz	??_estufaQuatro^(0+128),f
  2930  0CFB  2CFA               	goto	u2027
  2931  0CFC  0BDD               	decfsz	(??_estufaQuatro^(0+128)+1),f
  2932  0CFD  2CFA               	goto	u2027
  2933  0CFE  0BDE               	decfsz	(??_estufaQuatro^(0+128)+2),f
  2934  0CFF  2CFA               	goto	u2027
  2935  0D00                     l2469:
  2936                           
  2937                           ;main.c: 156:     RC5 = 0;
  2938  0D00  1283               	bcf	3,5	;RP0=0, select bank0
  2939  0D01  1303               	bcf	3,6	;RP1=0, select bank0
  2940  0D02  1287               	bcf	7,5	;volatile
  2941  0D03                     l202:
  2942  0D03  0008               	return
  2943  0D04                     __end_of_estufaQuatro:
  2944                           
  2945                           	psect	text9
  2946  0CDA                     __ptext9:	
  2947 ;; *************** function _estufaDois *****************
  2948 ;; Defined at:
  2949 ;;		line 138 in file "main.c"
  2950 ;; Parameters:    Size  Location     Type
  2951 ;;		None
  2952 ;; Auto vars:     Size  Location     Type
  2953 ;;		None
  2954 ;; Return value:  Size  Location     Type
  2955 ;;                  1    wreg      void 
  2956 ;; Registers used:
  2957 ;;		wreg
  2958 ;; Tracked objects:
  2959 ;;		On entry : 0/0
  2960 ;;		On exit  : 0/0
  2961 ;;		Unchanged: 0/0
  2962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2963 ;;      Params:         0       0       0       0       0
  2964 ;;      Locals:         0       0       0       0       0
  2965 ;;      Temps:          0       0       3       0       0
  2966 ;;      Totals:         0       0       3       0       0
  2967 ;;Total ram usage:        3 bytes
  2968 ;; Hardware stack levels used: 1
  2969 ;; Hardware stack levels required when called: 5
  2970 ;; This function calls:
  2971 ;;		Nothing
  2972 ;; This function is called by:
  2973 ;;		_main
  2974 ;; This function uses a non-reentrant model
  2975 ;;
  2976                           
  2977                           
  2978                           ;psect for function _estufaDois
  2979  0CDA                     _estufaDois:
  2980  0CDA                     l2449:	
  2981                           ;incstack = 0
  2982                           ; Regs used in _estufaDois: [wreg]
  2983                           
  2984                           
  2985                           ;main.c: 140:     RC7 = 1;
  2986  0CDA  1283               	bcf	3,5	;RP0=0, select bank0
  2987  0CDB  1303               	bcf	3,6	;RP1=0, select bank0
  2988  0CDC  1787               	bsf	7,7	;volatile
  2989  0CDD                     l2451:
  2990                           
  2991                           ;main.c: 141:     _delay((unsigned long)((500)*(4000000/4000.0)));
  2992  0CDD  3003               	movlw	3
  2993  0CDE  1683               	bsf	3,5	;RP0=1, select bank1
  2994  0CDF  1303               	bcf	3,6	;RP1=0, select bank1
  2995  0CE0  00DE               	movwf	(??_estufaDois^(0+128)+2)
  2996  0CE1  308A               	movlw	138
  2997  0CE2  00DD               	movwf	(??_estufaDois^(0+128)+1)
  2998  0CE3  3055               	movlw	85
  2999  0CE4  00DC               	movwf	??_estufaDois^(0+128)
  3000  0CE5                     u2037:
  3001  0CE5  0BDC               	decfsz	??_estufaDois^(0+128),f
  3002  0CE6  2CE5               	goto	u2037
  3003  0CE7  0BDD               	decfsz	(??_estufaDois^(0+128)+1),f
  3004  0CE8  2CE5               	goto	u2037
  3005  0CE9  0BDE               	decfsz	(??_estufaDois^(0+128)+2),f
  3006  0CEA  2CE5               	goto	u2037
  3007  0CEB                     l2453:
  3008                           
  3009                           ;main.c: 142:     RC7 = 0;
  3010  0CEB  1283               	bcf	3,5	;RP0=0, select bank0
  3011  0CEC  1303               	bcf	3,6	;RP1=0, select bank0
  3012  0CED  1387               	bcf	7,7	;volatile
  3013  0CEE                     l196:
  3014  0CEE  0008               	return
  3015  0CEF                     __end_of_estufaDois:
  3016                           
  3017                           	psect	text10
  3018  062D                     __ptext10:	
  3019 ;; *************** function ___flge *****************
  3020 ;; Defined at:
  3021 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\flge.c"
  3022 ;; Parameters:    Size  Location     Type
  3023 ;;  ff1             4    0[BANK1 ] void 
  3024 ;;  ff2             4    4[BANK1 ] void 
  3025 ;; Auto vars:     Size  Location     Type
  3026 ;;		None
  3027 ;; Return value:  Size  Location     Type
  3028 ;;		None               void
  3029 ;; Registers used:
  3030 ;;		wreg, status,2, status,0
  3031 ;; Tracked objects:
  3032 ;;		On entry : 0/0
  3033 ;;		On exit  : 0/0
  3034 ;;		Unchanged: 0/0
  3035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3036 ;;      Params:         0       0       8       0       0
  3037 ;;      Locals:         0       0       0       0       0
  3038 ;;      Temps:          0       0       4       0       0
  3039 ;;      Totals:         0       0      12       0       0
  3040 ;;Total ram usage:       12 bytes
  3041 ;; Hardware stack levels used: 1
  3042 ;; Hardware stack levels required when called: 5
  3043 ;; This function calls:
  3044 ;;		Nothing
  3045 ;; This function is called by:
  3046 ;;		_main
  3047 ;; This function uses a non-reentrant model
  3048 ;;
  3049                           
  3050                           
  3051                           ;psect for function ___flge
  3052  062D                     ___flge:
  3053  062D                     l2473:	
  3054                           ;incstack = 0
  3055                           ; Regs used in ___flge: [wreg+status,2+status,0]
  3056                           
  3057  062D  3000               	movlw	0
  3058  062E  1683               	bsf	3,5	;RP0=1, select bank1
  3059  062F  1303               	bcf	3,6	;RP1=0, select bank1
  3060  0630  055C               	andwf	___flge@ff1^(0+128),w
  3061  0631  00E4               	movwf	??___flge^(0+128)
  3062  0632  3000               	movlw	0
  3063  0633  055D               	andwf	(___flge@ff1+1)^(0+128),w
  3064  0634  00E5               	movwf	(??___flge^(0+128)+1)
  3065  0635  3080               	movlw	128
  3066  0636  055E               	andwf	(___flge@ff1+2)^(0+128),w
  3067  0637  00E6               	movwf	(??___flge^(0+128)+2)
  3068  0638  307F               	movlw	127
  3069  0639  055F               	andwf	(___flge@ff1+3)^(0+128),w
  3070  063A  00E7               	movwf	(??___flge^(0+128)+3)
  3071  063B  0867               	movf	(??___flge+3)^(0+128),w
  3072  063C  0466               	iorwf	(??___flge+2)^(0+128),w
  3073  063D  0465               	iorwf	(??___flge+1)^(0+128),w
  3074  063E  0464               	iorwf	??___flge^(0+128),w
  3075  063F  1D03               	skipz
  3076  0640  2E42               	goto	u1731
  3077  0641  2E43               	goto	u1730
  3078  0642                     u1731:
  3079  0642  2E4B               	goto	l505
  3080  0643                     u1730:
  3081  0643                     l2475:
  3082  0643  3000               	movlw	0
  3083  0644  00DF               	movwf	(___flge@ff1+3)^(0+128)
  3084  0645  3000               	movlw	0
  3085  0646  00DE               	movwf	(___flge@ff1+2)^(0+128)
  3086  0647  3000               	movlw	0
  3087  0648  00DD               	movwf	(___flge@ff1+1)^(0+128)
  3088  0649  3000               	movlw	0
  3089  064A  00DC               	movwf	___flge@ff1^(0+128)
  3090  064B                     l505:
  3091  064B  3000               	movlw	0
  3092  064C  0560               	andwf	___flge@ff2^(0+128),w
  3093  064D  00E4               	movwf	??___flge^(0+128)
  3094  064E  3000               	movlw	0
  3095  064F  0561               	andwf	(___flge@ff2+1)^(0+128),w
  3096  0650  00E5               	movwf	(??___flge^(0+128)+1)
  3097  0651  3080               	movlw	128
  3098  0652  0562               	andwf	(___flge@ff2+2)^(0+128),w
  3099  0653  00E6               	movwf	(??___flge^(0+128)+2)
  3100  0654  307F               	movlw	127
  3101  0655  0563               	andwf	(___flge@ff2+3)^(0+128),w
  3102  0656  00E7               	movwf	(??___flge^(0+128)+3)
  3103  0657  0867               	movf	(??___flge+3)^(0+128),w
  3104  0658  0466               	iorwf	(??___flge+2)^(0+128),w
  3105  0659  0465               	iorwf	(??___flge+1)^(0+128),w
  3106  065A  0464               	iorwf	??___flge^(0+128),w
  3107  065B  1D03               	skipz
  3108  065C  2E5E               	goto	u1741
  3109  065D  2E5F               	goto	u1740
  3110  065E                     u1741:
  3111  065E  2E67               	goto	l2479
  3112  065F                     u1740:
  3113  065F                     l2477:
  3114  065F  3000               	movlw	0
  3115  0660  00E3               	movwf	(___flge@ff2+3)^(0+128)
  3116  0661  3000               	movlw	0
  3117  0662  00E2               	movwf	(___flge@ff2+2)^(0+128)
  3118  0663  3000               	movlw	0
  3119  0664  00E1               	movwf	(___flge@ff2+1)^(0+128)
  3120  0665  3000               	movlw	0
  3121  0666  00E0               	movwf	___flge@ff2^(0+128)
  3122  0667                     l2479:
  3123  0667  1FDF               	btfss	(___flge@ff1+3)^(0+128),7
  3124  0668  2E6A               	goto	u1751
  3125  0669  2E6B               	goto	u1750
  3126  066A                     u1751:
  3127  066A  2E8F               	goto	l2483
  3128  066B                     u1750:
  3129  066B                     l2481:
  3130  066B  3000               	movlw	0
  3131  066C  00E4               	movwf	??___flge^(0+128)
  3132  066D  3000               	movlw	0
  3133  066E  00E5               	movwf	(??___flge^(0+128)+1)
  3134  066F  3000               	movlw	0
  3135  0670  00E6               	movwf	(??___flge^(0+128)+2)
  3136  0671  3080               	movlw	128
  3137  0672  00E7               	movwf	(??___flge^(0+128)+3)
  3138  0673  085C               	movf	___flge@ff1^(0+128),w
  3139  0674  02E4               	subwf	??___flge^(0+128),f
  3140  0675  085D               	movf	(___flge@ff1+1)^(0+128),w
  3141  0676  1C03               	skipc
  3142  0677  0F5D               	incfsz	(___flge@ff1+1)^(0+128),w
  3143  0678  2E7A               	goto	u1761
  3144  0679  2E7B               	goto	u1762
  3145  067A                     u1761:
  3146  067A  02E5               	subwf	(??___flge^(0+128)+1),f
  3147  067B                     u1762:
  3148  067B  085E               	movf	(___flge@ff1+2)^(0+128),w
  3149  067C  1C03               	skipc
  3150  067D  0F5E               	incfsz	(___flge@ff1+2)^(0+128),w
  3151  067E  2E80               	goto	u1763
  3152  067F  2E81               	goto	u1764
  3153  0680                     u1763:
  3154  0680  02E6               	subwf	(??___flge^(0+128)+2),f
  3155  0681                     u1764:
  3156  0681  085F               	movf	(___flge@ff1+3)^(0+128),w
  3157  0682  1C03               	skipc
  3158  0683  0F5F               	incfsz	(___flge@ff1+3)^(0+128),w
  3159  0684  2E86               	goto	u1765
  3160  0685  2E87               	goto	u1766
  3161  0686                     u1765:
  3162  0686  02E7               	subwf	(??___flge^(0+128)+3),f
  3163  0687                     u1766:
  3164  0687  0867               	movf	(??___flge+3)^(0+128),w
  3165  0688  00DF               	movwf	(___flge@ff1+3)^(0+128)
  3166  0689  0866               	movf	(??___flge+2)^(0+128),w
  3167  068A  00DE               	movwf	(___flge@ff1+2)^(0+128)
  3168  068B  0865               	movf	(??___flge+1)^(0+128),w
  3169  068C  00DD               	movwf	(___flge@ff1+1)^(0+128)
  3170  068D  0864               	movf	??___flge^(0+128),w
  3171  068E  00DC               	movwf	___flge@ff1^(0+128)
  3172  068F                     l2483:
  3173  068F  1FE3               	btfss	(___flge@ff2+3)^(0+128),7
  3174  0690  2E92               	goto	u1771
  3175  0691  2E93               	goto	u1770
  3176  0692                     u1771:
  3177  0692  2EB7               	goto	l508
  3178  0693                     u1770:
  3179  0693                     l2485:
  3180  0693  3000               	movlw	0
  3181  0694  00E4               	movwf	??___flge^(0+128)
  3182  0695  3000               	movlw	0
  3183  0696  00E5               	movwf	(??___flge^(0+128)+1)
  3184  0697  3000               	movlw	0
  3185  0698  00E6               	movwf	(??___flge^(0+128)+2)
  3186  0699  3080               	movlw	128
  3187  069A  00E7               	movwf	(??___flge^(0+128)+3)
  3188  069B  0860               	movf	___flge@ff2^(0+128),w
  3189  069C  02E4               	subwf	??___flge^(0+128),f
  3190  069D  0861               	movf	(___flge@ff2+1)^(0+128),w
  3191  069E  1C03               	skipc
  3192  069F  0F61               	incfsz	(___flge@ff2+1)^(0+128),w
  3193  06A0  2EA2               	goto	u1781
  3194  06A1  2EA3               	goto	u1782
  3195  06A2                     u1781:
  3196  06A2  02E5               	subwf	(??___flge^(0+128)+1),f
  3197  06A3                     u1782:
  3198  06A3  0862               	movf	(___flge@ff2+2)^(0+128),w
  3199  06A4  1C03               	skipc
  3200  06A5  0F62               	incfsz	(___flge@ff2+2)^(0+128),w
  3201  06A6  2EA8               	goto	u1783
  3202  06A7  2EA9               	goto	u1784
  3203  06A8                     u1783:
  3204  06A8  02E6               	subwf	(??___flge^(0+128)+2),f
  3205  06A9                     u1784:
  3206  06A9  0863               	movf	(___flge@ff2+3)^(0+128),w
  3207  06AA  1C03               	skipc
  3208  06AB  0F63               	incfsz	(___flge@ff2+3)^(0+128),w
  3209  06AC  2EAE               	goto	u1785
  3210  06AD  2EAF               	goto	u1786
  3211  06AE                     u1785:
  3212  06AE  02E7               	subwf	(??___flge^(0+128)+3),f
  3213  06AF                     u1786:
  3214  06AF  0867               	movf	(??___flge+3)^(0+128),w
  3215  06B0  00E3               	movwf	(___flge@ff2+3)^(0+128)
  3216  06B1  0866               	movf	(??___flge+2)^(0+128),w
  3217  06B2  00E2               	movwf	(___flge@ff2+2)^(0+128)
  3218  06B3  0865               	movf	(??___flge+1)^(0+128),w
  3219  06B4  00E1               	movwf	(___flge@ff2+1)^(0+128)
  3220  06B5  0864               	movf	??___flge^(0+128),w
  3221  06B6  00E0               	movwf	___flge@ff2^(0+128)
  3222  06B7                     l508:
  3223  06B7  3080               	movlw	128
  3224  06B8  06DF               	xorwf	(___flge@ff1+3)^(0+128),f
  3225  06B9  3080               	movlw	128
  3226  06BA  06E3               	xorwf	(___flge@ff2+3)^(0+128),f
  3227  06BB  0863               	movf	(___flge@ff2+3)^(0+128),w
  3228  06BC  025F               	subwf	(___flge@ff1+3)^(0+128),w
  3229  06BD  1D03               	skipz
  3230  06BE  2EC9               	goto	u1795
  3231  06BF  0862               	movf	(___flge@ff2+2)^(0+128),w
  3232  06C0  025E               	subwf	(___flge@ff1+2)^(0+128),w
  3233  06C1  1D03               	skipz
  3234  06C2  2EC9               	goto	u1795
  3235  06C3  0861               	movf	(___flge@ff2+1)^(0+128),w
  3236  06C4  025D               	subwf	(___flge@ff1+1)^(0+128),w
  3237  06C5  1D03               	skipz
  3238  06C6  2EC9               	goto	u1795
  3239  06C7  0860               	movf	___flge@ff2^(0+128),w
  3240  06C8  025C               	subwf	___flge@ff1^(0+128),w
  3241  06C9                     u1795:
  3242  06C9  1803               	skipnc
  3243  06CA  2ECC               	goto	u1791
  3244  06CB  2ECD               	goto	u1790
  3245  06CC                     u1791:
  3246  06CC  2ECF               	goto	l2489
  3247  06CD                     u1790:
  3248  06CD                     l2487:
  3249  06CD  1003               	clrc
  3250  06CE  2ED0               	goto	l509
  3251  06CF                     l2489:
  3252  06CF  1403               	setc
  3253  06D0                     l509:
  3254  06D0  0008               	return
  3255  06D1                     __end_of___flge:
  3256                           
  3257                           	psect	text11
  3258  074B                     __ptext11:	
  3259 ;; *************** function _Lcd_Init *****************
  3260 ;; Defined at:
  3261 ;;		line 62 in file "./lcd.h"
  3262 ;; Parameters:    Size  Location     Type
  3263 ;;		None
  3264 ;; Auto vars:     Size  Location     Type
  3265 ;;		None
  3266 ;; Return value:  Size  Location     Type
  3267 ;;                  1    wreg      void 
  3268 ;; Registers used:
  3269 ;;		wreg, status,2, status,0, pclath, cstack
  3270 ;; Tracked objects:
  3271 ;;		On entry : 0/0
  3272 ;;		On exit  : 0/0
  3273 ;;		Unchanged: 0/0
  3274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3275 ;;      Params:         0       0       0       0       0
  3276 ;;      Locals:         0       0       0       0       0
  3277 ;;      Temps:          0       0       2       0       0
  3278 ;;      Totals:         0       0       2       0       0
  3279 ;;Total ram usage:        2 bytes
  3280 ;; Hardware stack levels used: 1
  3281 ;; Hardware stack levels required when called: 7
  3282 ;; This function calls:
  3283 ;;		_Lcd_Cmd
  3284 ;;		_Lcd_Port
  3285 ;; This function is called by:
  3286 ;;		_main
  3287 ;; This function uses a non-reentrant model
  3288 ;;
  3289                           
  3290                           
  3291                           ;psect for function _Lcd_Init
  3292  074B                     _Lcd_Init:
  3293  074B                     l2233:	
  3294                           ;incstack = 0
  3295                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3296                           
  3297                           
  3298                           ;./lcd.h: 64:   Lcd_Port(0x00);
  3299  074B  3000               	movlw	0
  3300  074C  120A  158A  2645  120A  118A  	fcall	_Lcd_Port
  3301  0751                     l2235:
  3302                           
  3303                           ;./lcd.h: 65:    _delay((unsigned long)((20)*(4000000/4000.0)));
  3304  0751  301A               	movlw	26
  3305  0752  1683               	bsf	3,5	;RP0=1, select bank1
  3306  0753  1303               	bcf	3,6	;RP1=0, select bank1
  3307  0754  00E1               	movwf	(??_Lcd_Init^(0+128)+1)
  3308  0755  30F7               	movlw	247
  3309  0756  00E0               	movwf	??_Lcd_Init^(0+128)
  3310  0757                     u2047:
  3311  0757  0BE0               	decfsz	??_Lcd_Init^(0+128),f
  3312  0758  2F57               	goto	u2047
  3313  0759  0BE1               	decfsz	(??_Lcd_Init^(0+128)+1),f
  3314  075A  2F57               	goto	u2047
  3315  075B  2F5C               	nop2
  3316  075C                     l2237:
  3317                           
  3318                           ;./lcd.h: 66:   Lcd_Cmd(0x03);
  3319  075C  3003               	movlw	3
  3320  075D  120A  158A  2548  120A  118A  	fcall	_Lcd_Cmd
  3321                           
  3322                           ;./lcd.h: 67:  _delay((unsigned long)((5)*(4000000/4000.0)));
  3323  0762  3007               	movlw	7
  3324  0763  1683               	bsf	3,5	;RP0=1, select bank1
  3325  0764  1303               	bcf	3,6	;RP1=0, select bank1
  3326  0765  00E1               	movwf	(??_Lcd_Init^(0+128)+1)
  3327  0766  307C               	movlw	124
  3328  0767  00E0               	movwf	??_Lcd_Init^(0+128)
  3329  0768                     u2057:
  3330  0768  0BE0               	decfsz	??_Lcd_Init^(0+128),f
  3331  0769  2F68               	goto	u2057
  3332  076A  0BE1               	decfsz	(??_Lcd_Init^(0+128)+1),f
  3333  076B  2F68               	goto	u2057
  3334  076C  0000               	nop
  3335  076D                     l2239:
  3336                           
  3337                           ;./lcd.h: 68:   Lcd_Cmd(0x03);
  3338  076D  3003               	movlw	3
  3339  076E  120A  158A  2548  120A  118A  	fcall	_Lcd_Cmd
  3340  0773                     l2241:
  3341                           
  3342                           ;./lcd.h: 69:  _delay((unsigned long)((11)*(4000000/4000.0)));
  3343  0773  300F               	movlw	15
  3344  0774  1683               	bsf	3,5	;RP0=1, select bank1
  3345  0775  1303               	bcf	3,6	;RP1=0, select bank1
  3346  0776  00E1               	movwf	(??_Lcd_Init^(0+128)+1)
  3347  0777  3047               	movlw	71
  3348  0778  00E0               	movwf	??_Lcd_Init^(0+128)
  3349  0779                     u2067:
  3350  0779  0BE0               	decfsz	??_Lcd_Init^(0+128),f
  3351  077A  2F79               	goto	u2067
  3352  077B  0BE1               	decfsz	(??_Lcd_Init^(0+128)+1),f
  3353  077C  2F79               	goto	u2067
  3354                           
  3355                           ;./lcd.h: 70:   Lcd_Cmd(0x03);
  3356  077D  3003               	movlw	3
  3357  077E  120A  158A  2548  120A  118A  	fcall	_Lcd_Cmd
  3358                           
  3359                           ;./lcd.h: 72:   Lcd_Cmd(0x02);
  3360  0783  3002               	movlw	2
  3361  0784  120A  158A  2548  120A  118A  	fcall	_Lcd_Cmd
  3362                           
  3363                           ;./lcd.h: 73:   Lcd_Cmd(0x02);
  3364  0789  3002               	movlw	2
  3365  078A  120A  158A  2548  120A  118A  	fcall	_Lcd_Cmd
  3366                           
  3367                           ;./lcd.h: 74:   Lcd_Cmd(0x08);
  3368  078F  3008               	movlw	8
  3369  0790  120A  158A  2548  120A  118A  	fcall	_Lcd_Cmd
  3370                           
  3371                           ;./lcd.h: 75:   Lcd_Cmd(0x00);
  3372  0795  3000               	movlw	0
  3373  0796  120A  158A  2548  120A  118A  	fcall	_Lcd_Cmd
  3374                           
  3375                           ;./lcd.h: 76:   Lcd_Cmd(0x0C);
  3376  079B  300C               	movlw	12
  3377  079C  120A  158A  2548  120A  118A  	fcall	_Lcd_Cmd
  3378                           
  3379                           ;./lcd.h: 77:   Lcd_Cmd(0x00);
  3380  07A1  3000               	movlw	0
  3381  07A2  120A  158A  2548  120A  118A  	fcall	_Lcd_Cmd
  3382                           
  3383                           ;./lcd.h: 78:   Lcd_Cmd(0x06);
  3384  07A7  3006               	movlw	6
  3385  07A8  120A  158A  2548  120A  118A  	fcall	_Lcd_Cmd
  3386  07AD                     l130:
  3387  07AD  0008               	return
  3388  07AE                     __end_of_Lcd_Init:
  3389                           
  3390                           	psect	text12
  3391  0D48                     __ptext12:	
  3392 ;; *************** function _Lcd_Cmd *****************
  3393 ;; Defined at:
  3394 ;;		line 26 in file "./lcd.h"
  3395 ;; Parameters:    Size  Location     Type
  3396 ;;  a               1    wreg     unsigned char 
  3397 ;; Auto vars:     Size  Location     Type
  3398 ;;  a               1    3[BANK1 ] unsigned char 
  3399 ;; Return value:  Size  Location     Type
  3400 ;;                  1    wreg      void 
  3401 ;; Registers used:
  3402 ;;		wreg, status,2, status,0, pclath, cstack
  3403 ;; Tracked objects:
  3404 ;;		On entry : 0/0
  3405 ;;		On exit  : 0/0
  3406 ;;		Unchanged: 0/0
  3407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3408 ;;      Params:         0       0       0       0       0
  3409 ;;      Locals:         0       0       1       0       0
  3410 ;;      Temps:          0       0       2       0       0
  3411 ;;      Totals:         0       0       3       0       0
  3412 ;;Total ram usage:        3 bytes
  3413 ;; Hardware stack levels used: 1
  3414 ;; Hardware stack levels required when called: 6
  3415 ;; This function calls:
  3416 ;;		_Lcd_Port
  3417 ;; This function is called by:
  3418 ;;		_Lcd_Init
  3419 ;;		_Lcd_Shift_Right
  3420 ;;		_Lcd_Shift_Left
  3421 ;; This function uses a non-reentrant model
  3422 ;;
  3423                           
  3424                           
  3425                           ;psect for function _Lcd_Cmd
  3426  0D48                     _Lcd_Cmd:
  3427                           
  3428                           ;incstack = 0
  3429                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3430                           ;Lcd_Cmd@a stored from wreg
  3431  0D48  1683               	bsf	3,5	;RP0=1, select bank1
  3432  0D49  1303               	bcf	3,6	;RP1=0, select bank1
  3433  0D4A  00DF               	movwf	Lcd_Cmd@a^(0+128)
  3434  0D4B                     l2179:
  3435                           
  3436                           ;./lcd.h: 26: void Lcd_Cmd(char a);./lcd.h: 27: {;./lcd.h: 28:  RB2 = 0;
  3437  0D4B  1283               	bcf	3,5	;RP0=0, select bank0
  3438  0D4C  1303               	bcf	3,6	;RP1=0, select bank0
  3439  0D4D  1106               	bcf	6,2	;volatile
  3440  0D4E                     l2181:
  3441                           
  3442                           ;./lcd.h: 29:  Lcd_Port(a);
  3443  0D4E  1683               	bsf	3,5	;RP0=1, select bank1
  3444  0D4F  1303               	bcf	3,6	;RP1=0, select bank1
  3445  0D50  085F               	movf	Lcd_Cmd@a^(0+128),w
  3446  0D51  120A  158A  2645  120A  158A  	fcall	_Lcd_Port
  3447  0D56                     l2183:
  3448                           
  3449                           ;./lcd.h: 30:  RB1 = 1;
  3450  0D56  1283               	bcf	3,5	;RP0=0, select bank0
  3451  0D57  1303               	bcf	3,6	;RP1=0, select bank0
  3452  0D58  1486               	bsf	6,1	;volatile
  3453  0D59                     l2185:
  3454                           
  3455                           ;./lcd.h: 31:         _delay((unsigned long)((4)*(4000000/4000.0)));
  3456  0D59  3006               	movlw	6
  3457  0D5A  1683               	bsf	3,5	;RP0=1, select bank1
  3458  0D5B  1303               	bcf	3,6	;RP1=0, select bank1
  3459  0D5C  00DE               	movwf	(??_Lcd_Cmd^(0+128)+1)
  3460  0D5D  302F               	movlw	47
  3461  0D5E  00DD               	movwf	??_Lcd_Cmd^(0+128)
  3462  0D5F                     u2077:
  3463  0D5F  0BDD               	decfsz	??_Lcd_Cmd^(0+128),f
  3464  0D60  2D5F               	goto	u2077
  3465  0D61  0BDE               	decfsz	(??_Lcd_Cmd^(0+128)+1),f
  3466  0D62  2D5F               	goto	u2077
  3467  0D63  2D64               	nop2
  3468  0D64                     l2187:
  3469                           
  3470                           ;./lcd.h: 32:         RB1 = 0;
  3471  0D64  1283               	bcf	3,5	;RP0=0, select bank0
  3472  0D65  1303               	bcf	3,6	;RP1=0, select bank0
  3473  0D66  1086               	bcf	6,1	;volatile
  3474  0D67                     l118:
  3475  0D67  0008               	return
  3476  0D68                     __end_of_Lcd_Cmd:
  3477                           
  3478                           	psect	text13
  3479  0E45                     __ptext13:	
  3480 ;; *************** function _Lcd_Port *****************
  3481 ;; Defined at:
  3482 ;;		line 4 in file "./lcd.h"
  3483 ;; Parameters:    Size  Location     Type
  3484 ;;  a               1    wreg     unsigned char 
  3485 ;; Auto vars:     Size  Location     Type
  3486 ;;  a               1    0[BANK1 ] unsigned char 
  3487 ;; Return value:  Size  Location     Type
  3488 ;;                  1    wreg      void 
  3489 ;; Registers used:
  3490 ;;		wreg
  3491 ;; Tracked objects:
  3492 ;;		On entry : 0/0
  3493 ;;		On exit  : 0/0
  3494 ;;		Unchanged: 0/0
  3495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3496 ;;      Params:         0       0       0       0       0
  3497 ;;      Locals:         0       0       1       0       0
  3498 ;;      Temps:          0       0       0       0       0
  3499 ;;      Totals:         0       0       1       0       0
  3500 ;;Total ram usage:        1 bytes
  3501 ;; Hardware stack levels used: 1
  3502 ;; Hardware stack levels required when called: 5
  3503 ;; This function calls:
  3504 ;;		Nothing
  3505 ;; This function is called by:
  3506 ;;		_Lcd_Cmd
  3507 ;;		_Lcd_Init
  3508 ;; This function uses a non-reentrant model
  3509 ;;
  3510                           
  3511                           
  3512                           ;psect for function _Lcd_Port
  3513  0E45                     _Lcd_Port:
  3514                           
  3515                           ;incstack = 0
  3516                           ; Regs used in _Lcd_Port: [wreg]
  3517                           ;Lcd_Port@a stored from wreg
  3518  0E45  1683               	bsf	3,5	;RP0=1, select bank1
  3519  0E46  1303               	bcf	3,6	;RP1=0, select bank1
  3520  0E47  00DC               	movwf	Lcd_Port@a^(0+128)
  3521  0E48                     l2169:
  3522                           
  3523                           ;./lcd.h: 4: void Lcd_Port(char a);./lcd.h: 5: {;./lcd.h: 6:  if(a & 1)
  3524  0E48  1C5C               	btfss	Lcd_Port@a^(0+128),0
  3525  0E49  2E4B               	goto	u1551
  3526  0E4A  2E4C               	goto	u1550
  3527  0E4B                     u1551:
  3528  0E4B  2E50               	goto	l107
  3529  0E4C                     u1550:
  3530  0E4C                     l2171:
  3531                           
  3532                           ;./lcd.h: 7:   RB4 = 1;
  3533  0E4C  1283               	bcf	3,5	;RP0=0, select bank0
  3534  0E4D  1303               	bcf	3,6	;RP1=0, select bank0
  3535  0E4E  1606               	bsf	6,4	;volatile
  3536  0E4F  2E53               	goto	l108
  3537  0E50                     l107:	
  3538                           ;./lcd.h: 8:  else
  3539                           
  3540                           
  3541                           ;./lcd.h: 9:   RB4 = 0;
  3542  0E50  1283               	bcf	3,5	;RP0=0, select bank0
  3543  0E51  1303               	bcf	3,6	;RP1=0, select bank0
  3544  0E52  1206               	bcf	6,4	;volatile
  3545  0E53                     l108:
  3546                           
  3547                           ;./lcd.h: 11:  if(a & 2)
  3548  0E53  1683               	bsf	3,5	;RP0=1, select bank1
  3549  0E54  1303               	bcf	3,6	;RP1=0, select bank1
  3550  0E55  1CDC               	btfss	Lcd_Port@a^(0+128),1
  3551  0E56  2E58               	goto	u1561
  3552  0E57  2E59               	goto	u1560
  3553  0E58                     u1561:
  3554  0E58  2E5D               	goto	l109
  3555  0E59                     u1560:
  3556  0E59                     l2173:
  3557                           
  3558                           ;./lcd.h: 12:   RB5 = 1;
  3559  0E59  1283               	bcf	3,5	;RP0=0, select bank0
  3560  0E5A  1303               	bcf	3,6	;RP1=0, select bank0
  3561  0E5B  1686               	bsf	6,5	;volatile
  3562  0E5C  2E60               	goto	l110
  3563  0E5D                     l109:	
  3564                           ;./lcd.h: 13:  else
  3565                           
  3566                           
  3567                           ;./lcd.h: 14:   RB5 = 0;
  3568  0E5D  1283               	bcf	3,5	;RP0=0, select bank0
  3569  0E5E  1303               	bcf	3,6	;RP1=0, select bank0
  3570  0E5F  1286               	bcf	6,5	;volatile
  3571  0E60                     l110:
  3572                           
  3573                           ;./lcd.h: 16:  if(a & 4)
  3574  0E60  1683               	bsf	3,5	;RP0=1, select bank1
  3575  0E61  1303               	bcf	3,6	;RP1=0, select bank1
  3576  0E62  1D5C               	btfss	Lcd_Port@a^(0+128),2
  3577  0E63  2E65               	goto	u1571
  3578  0E64  2E66               	goto	u1570
  3579  0E65                     u1571:
  3580  0E65  2E6A               	goto	l111
  3581  0E66                     u1570:
  3582  0E66                     l2175:
  3583                           
  3584                           ;./lcd.h: 17:   RB6 = 1;
  3585  0E66  1283               	bcf	3,5	;RP0=0, select bank0
  3586  0E67  1303               	bcf	3,6	;RP1=0, select bank0
  3587  0E68  1706               	bsf	6,6	;volatile
  3588  0E69  2E6D               	goto	l112
  3589  0E6A                     l111:	
  3590                           ;./lcd.h: 18:  else
  3591                           
  3592                           
  3593                           ;./lcd.h: 19:   RB6 = 0;
  3594  0E6A  1283               	bcf	3,5	;RP0=0, select bank0
  3595  0E6B  1303               	bcf	3,6	;RP1=0, select bank0
  3596  0E6C  1306               	bcf	6,6	;volatile
  3597  0E6D                     l112:
  3598                           
  3599                           ;./lcd.h: 21:  if(a & 8)
  3600  0E6D  1683               	bsf	3,5	;RP0=1, select bank1
  3601  0E6E  1303               	bcf	3,6	;RP1=0, select bank1
  3602  0E6F  1DDC               	btfss	Lcd_Port@a^(0+128),3
  3603  0E70  2E72               	goto	u1581
  3604  0E71  2E73               	goto	u1580
  3605  0E72                     u1581:
  3606  0E72  2E77               	goto	l113
  3607  0E73                     u1580:
  3608  0E73                     l2177:
  3609                           
  3610                           ;./lcd.h: 22:   RB7 = 1;
  3611  0E73  1283               	bcf	3,5	;RP0=0, select bank0
  3612  0E74  1303               	bcf	3,6	;RP1=0, select bank0
  3613  0E75  1786               	bsf	6,7	;volatile
  3614  0E76  2E7A               	goto	l115
  3615  0E77                     l113:	
  3616                           ;./lcd.h: 23:  else
  3617                           
  3618                           
  3619                           ;./lcd.h: 24:   RB7 = 0;
  3620  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  3621  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  3622  0E79  1386               	bcf	6,7	;volatile
  3623  0E7A                     l115:
  3624  0E7A  0008               	return
  3625  0E7B                     __end_of_Lcd_Port:
  3626                           
  3627                           	psect	text14
  3628  0F28                     __ptext14:	
  3629 ;; *************** function _TrataINT *****************
  3630 ;; Defined at:
  3631 ;;		line 106 in file "main.c"
  3632 ;; Parameters:    Size  Location     Type
  3633 ;;		None
  3634 ;; Auto vars:     Size  Location     Type
  3635 ;;		None
  3636 ;; Return value:  Size  Location     Type
  3637 ;;                  1    wreg      void 
  3638 ;; Registers used:
  3639 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3640 ;; Tracked objects:
  3641 ;;		On entry : 0/0
  3642 ;;		On exit  : 0/0
  3643 ;;		Unchanged: 0/0
  3644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3645 ;;      Params:         0       0       0       0       0
  3646 ;;      Locals:         0       0       0       0       0
  3647 ;;      Temps:          0       7       0       0       0
  3648 ;;      Totals:         0       7       0       0       0
  3649 ;;Total ram usage:        7 bytes
  3650 ;; Hardware stack levels used: 1
  3651 ;; Hardware stack levels required when called: 4
  3652 ;; This function calls:
  3653 ;;		_atualizaLCD
  3654 ;;		i1_expandeTela
  3655 ;;		i1_recolheTela
  3656 ;; This function is called by:
  3657 ;;		Interrupt level 1
  3658 ;; This function uses a non-reentrant model
  3659 ;;
  3660                           
  3661                           
  3662                           ;psect for function _TrataINT
  3663  0F28                     _TrataINT:
  3664  0F28                     i1l2119:
  3665                           
  3666                           ;main.c: 108:     if(INTF == 1)
  3667  0F28  1C8B               	btfss	11,1	;volatile
  3668  0F29  2F2B               	goto	u153_21
  3669  0F2A  2F2C               	goto	u153_20
  3670  0F2B                     u153_21:
  3671  0F2B  2F4A               	goto	i1l187
  3672  0F2C                     u153_20:
  3673  0F2C                     i1l2121:
  3674                           
  3675                           ;main.c: 109:     {;main.c: 110:         PORTBbits.RB3 = 1;
  3676  0F2C  1586               	bsf	6,3	;volatile
  3677  0F2D                     i1l2123:
  3678                           
  3679                           ;main.c: 111:         recolheTela();
  3680  0F2D  120A  158A  25D1  120A  158A  	fcall	i1_recolheTela
  3681  0F32                     i1l2125:
  3682                           
  3683                           ;main.c: 112:         _delay((unsigned long)((600)*(4000000/4000.0)));
  3684  0F32  3004               	movlw	4
  3685  0F33  1283               	bcf	3,5	;RP0=0, select bank0
  3686  0F34  1303               	bcf	3,6	;RP1=0, select bank0
  3687  0F35  00D3               	movwf	??_TrataINT+2
  3688  0F36  300C               	movlw	12
  3689  0F37  00D2               	movwf	??_TrataINT+1
  3690  0F38  3033               	movlw	51
  3691  0F39  00D1               	movwf	??_TrataINT
  3692  0F3A                     u208_27:
  3693  0F3A  0BD1               	decfsz	??_TrataINT,f
  3694  0F3B  2F3A               	goto	u208_27
  3695  0F3C  0BD2               	decfsz	??_TrataINT+1,f
  3696  0F3D  2F3A               	goto	u208_27
  3697  0F3E  0BD3               	decfsz	??_TrataINT+2,f
  3698  0F3F  2F3A               	goto	u208_27
  3699  0F40                     i1l2127:
  3700                           
  3701                           ;main.c: 113:         expandeTela();
  3702  0F40  120A  158A  25AB  120A  158A  	fcall	i1_expandeTela
  3703  0F45                     i1l2129:
  3704                           
  3705                           ;main.c: 114:         INTF = 0;
  3706  0F45  108B               	bcf	11,1	;volatile
  3707  0F46                     i1l2131:
  3708                           
  3709                           ;main.c: 115:         PORTBbits.RB3 = 0;
  3710  0F46  1283               	bcf	3,5	;RP0=0, select bank0
  3711  0F47  1303               	bcf	3,6	;RP1=0, select bank0
  3712  0F48  1186               	bcf	6,3	;volatile
  3713                           
  3714                           ;main.c: 116:     }
  3715  0F49  2F5F               	goto	i1l190
  3716  0F4A                     i1l187:	
  3717                           ;main.c: 117:     else if (TMR1IF == 1)
  3718                           
  3719  0F4A  1C0C               	btfss	12,0	;volatile
  3720  0F4B  2F4D               	goto	u154_21
  3721  0F4C  2F4E               	goto	u154_20
  3722  0F4D                     u154_21:
  3723  0F4D  2F5F               	goto	i1l190
  3724  0F4E                     u154_20:
  3725  0F4E                     i1l2133:
  3726                           
  3727                           ;main.c: 118:     {;main.c: 119:         TMR1IF = 0;
  3728  0F4E  100C               	bcf	12,0	;volatile
  3729  0F4F                     i1l2135:
  3730                           
  3731                           ;main.c: 120:         TMR1L = 0xDC;
  3732  0F4F  30DC               	movlw	220
  3733  0F50  008E               	movwf	14	;volatile
  3734                           
  3735                           ;main.c: 121:         TMR1H = 0x0B;
  3736  0F51  300B               	movlw	11
  3737  0F52  008F               	movwf	15	;volatile
  3738  0F53  0064               	clrwdt	;# 
  3739  0F54                     i1l2137:
  3740                           
  3741                           ;main.c: 125:         PORTBbits.RB3 = 1;
  3742  0F54  1283               	bcf	3,5	;RP0=0, select bank0
  3743  0F55  1303               	bcf	3,6	;RP1=0, select bank0
  3744  0F56  1586               	bsf	6,3	;volatile
  3745  0F57                     i1l2139:
  3746                           
  3747                           ;main.c: 126:         atualizaLCD();
  3748  0F57  120A  118A  2491  120A  158A  	fcall	_atualizaLCD
  3749  0F5C                     i1l2141:
  3750                           
  3751                           ;main.c: 127:         PORTBbits.RB3 = 0;
  3752  0F5C  1283               	bcf	3,5	;RP0=0, select bank0
  3753  0F5D  1303               	bcf	3,6	;RP1=0, select bank0
  3754  0F5E  1186               	bcf	6,3	;volatile
  3755  0F5F                     i1l190:
  3756  0F5F  0857               	movf	??_TrataINT+6,w
  3757  0F60  00FF               	movwf	btemp+1
  3758  0F61  0856               	movf	??_TrataINT+5,w
  3759  0F62  008A               	movwf	10
  3760  0F63  0855               	movf	??_TrataINT+4,w
  3761  0F64  0084               	movwf	4
  3762  0F65  0E54               	swapf	??_TrataINT+3,w
  3763  0F66  0083               	movwf	3
  3764  0F67  0EFE               	swapf	btemp,f
  3765  0F68  0E7E               	swapf	btemp,w
  3766  0F69  0009               	retfie
  3767  0F6A                     __end_of_TrataINT:
  3768                           
  3769                           	psect	intentry
  3770  0004                     __pintentry:	
  3771                           ;incstack = 0
  3772                           ; Regs used in _TrataINT: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3773                           
  3774  0004                     interrupt_function:
  3775  007E                     saved_w	set	btemp
  3776  0004  00FE               	movwf	btemp
  3777  0005  0E03               	swapf	3,w
  3778  0006  1283               	bcf	3,5	;RP0=0, select bank0
  3779  0007  1303               	bcf	3,6	;RP1=0, select bank0
  3780  0008  00D4               	movwf	??_TrataINT+3
  3781  0009  0804               	movf	4,w
  3782  000A  00D5               	movwf	??_TrataINT+4
  3783  000B  080A               	movf	10,w
  3784  000C  00D6               	movwf	??_TrataINT+5
  3785  000D  087F               	movf	btemp+1,w
  3786  000E  00D7               	movwf	??_TrataINT+6
  3787  000F  120A  158A  2F28   	ljmp	_TrataINT
  3788                           
  3789                           	psect	text15
  3790  0DD1                     __ptext15:	
  3791 ;; *************** function i1_recolheTela *****************
  3792 ;; Defined at:
  3793 ;;		line 233 in file "main.c"
  3794 ;; Parameters:    Size  Location     Type
  3795 ;;		None
  3796 ;; Auto vars:     Size  Location     Type
  3797 ;;		None
  3798 ;; Return value:  Size  Location     Type
  3799 ;;                  1    wreg      void 
  3800 ;; Registers used:
  3801 ;;		wreg
  3802 ;; Tracked objects:
  3803 ;;		On entry : 0/0
  3804 ;;		On exit  : 0/0
  3805 ;;		Unchanged: 0/0
  3806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3807 ;;      Params:         0       0       0       0       0
  3808 ;;      Locals:         0       0       0       0       0
  3809 ;;      Temps:          3       0       0       0       0
  3810 ;;      Totals:         3       0       0       0       0
  3811 ;;Total ram usage:        3 bytes
  3812 ;; Hardware stack levels used: 1
  3813 ;; This function calls:
  3814 ;;		Nothing
  3815 ;; This function is called by:
  3816 ;;		_TrataINT
  3817 ;; This function uses a non-reentrant model
  3818 ;;
  3819                           
  3820                           
  3821                           ;psect for function i1_recolheTela
  3822  0DD1                     i1_recolheTela:
  3823  0DD1                     i1l1407:	
  3824                           ;incstack = 0
  3825                           ; Regs used in i1_recolheTela: [wreg]
  3826                           
  3827                           
  3828                           ;main.c: 236:     RD5 = 1;
  3829  0DD1  1283               	bcf	3,5	;RP0=0, select bank0
  3830  0DD2  1303               	bcf	3,6	;RP1=0, select bank0
  3831  0DD3  1688               	bsf	8,5	;volatile
  3832                           
  3833                           ;main.c: 237:     RD3 = 1;
  3834  0DD4  1588               	bsf	8,3	;volatile
  3835                           
  3836                           ;main.c: 238:     RD1 = 1;
  3837  0DD5  1488               	bsf	8,1	;volatile
  3838                           
  3839                           ;main.c: 239:     RC0 = 1;
  3840  0DD6  1407               	bsf	7,0	;volatile
  3841                           
  3842                           ;main.c: 242:     RD4 = 0;
  3843  0DD7  1208               	bcf	8,4	;volatile
  3844                           
  3845                           ;main.c: 243:     RC1 = 1;
  3846  0DD8  1487               	bsf	7,1	;volatile
  3847                           
  3848                           ;main.c: 244:     RD2 = 0;
  3849  0DD9  1108               	bcf	8,2	;volatile
  3850                           
  3851                           ;main.c: 245:     RD6 = 1;
  3852  0DDA  1708               	bsf	8,6	;volatile
  3853                           
  3854                           ;main.c: 247:     RD0 = 0;
  3855  0DDB  1008               	bcf	8,0	;volatile
  3856                           
  3857                           ;main.c: 248:     RC3 = 1;
  3858  0DDC  1587               	bsf	7,3	;volatile
  3859                           
  3860                           ;main.c: 249:     RC2 = 0;
  3861  0DDD  1107               	bcf	7,2	;volatile
  3862                           
  3863                           ;main.c: 250:     RD7 = 1;
  3864  0DDE  1788               	bsf	8,7	;volatile
  3865  0DDF                     i1l1409:
  3866                           
  3867                           ;main.c: 251:     _delay((unsigned long)((500)*(4000000/4000.0)));
  3868  0DDF  3003               	movlw	3
  3869  0DE0  00F2               	movwf	??i1_recolheTela+2
  3870  0DE1  308A               	movlw	138
  3871  0DE2  00F1               	movwf	??i1_recolheTela+1
  3872  0DE3  3055               	movlw	85
  3873  0DE4  00F0               	movwf	??i1_recolheTela
  3874  0DE5                     u209_27:
  3875  0DE5  0BF0               	decfsz	??i1_recolheTela,f
  3876  0DE6  2DE5               	goto	u209_27
  3877  0DE7  0BF1               	decfsz	??i1_recolheTela+1,f
  3878  0DE8  2DE5               	goto	u209_27
  3879  0DE9  0BF2               	decfsz	??i1_recolheTela+2,f
  3880  0DEA  2DE5               	goto	u209_27
  3881  0DEB  2DEC               	nop2
  3882  0DEC                     i1l1411:
  3883                           
  3884                           ;main.c: 254:     RD4 = 1;
  3885  0DEC  1283               	bcf	3,5	;RP0=0, select bank0
  3886  0DED  1303               	bcf	3,6	;RP1=0, select bank0
  3887  0DEE  1608               	bsf	8,4	;volatile
  3888  0DEF                     i1l1413:
  3889                           
  3890                           ;main.c: 255:     RC1 = 1;
  3891  0DEF  1487               	bsf	7,1	;volatile
  3892  0DF0                     i1l1415:
  3893                           
  3894                           ;main.c: 256:     RD2 = 1;
  3895  0DF0  1508               	bsf	8,2	;volatile
  3896  0DF1                     i1l1417:
  3897                           
  3898                           ;main.c: 257:     RD6 = 1;
  3899  0DF1  1708               	bsf	8,6	;volatile
  3900  0DF2                     i1l1419:
  3901                           
  3902                           ;main.c: 259:     RD0 = 1;
  3903  0DF2  1408               	bsf	8,0	;volatile
  3904  0DF3                     i1l1421:
  3905                           
  3906                           ;main.c: 260:     RC3 = 1;
  3907  0DF3  1587               	bsf	7,3	;volatile
  3908  0DF4                     i1l1423:
  3909                           
  3910                           ;main.c: 261:     RC2 = 1;
  3911  0DF4  1507               	bsf	7,2	;volatile
  3912  0DF5                     i1l1425:
  3913                           
  3914                           ;main.c: 262:     RD7 = 1;
  3915  0DF5  1788               	bsf	8,7	;volatile
  3916  0DF6                     i1l208:
  3917  0DF6  0008               	return
  3918  0DF7                     __end_ofi1_recolheTela:
  3919                           
  3920                           	psect	text16
  3921  0DAB                     __ptext16:	
  3922 ;; *************** function i1_expandeTela *****************
  3923 ;; Defined at:
  3924 ;;		line 266 in file "main.c"
  3925 ;; Parameters:    Size  Location     Type
  3926 ;;		None
  3927 ;; Auto vars:     Size  Location     Type
  3928 ;;		None
  3929 ;; Return value:  Size  Location     Type
  3930 ;;                  1    wreg      void 
  3931 ;; Registers used:
  3932 ;;		wreg
  3933 ;; Tracked objects:
  3934 ;;		On entry : 0/0
  3935 ;;		On exit  : 0/0
  3936 ;;		Unchanged: 0/0
  3937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3938 ;;      Params:         0       0       0       0       0
  3939 ;;      Locals:         0       0       0       0       0
  3940 ;;      Temps:          3       0       0       0       0
  3941 ;;      Totals:         3       0       0       0       0
  3942 ;;Total ram usage:        3 bytes
  3943 ;; Hardware stack levels used: 1
  3944 ;; This function calls:
  3945 ;;		Nothing
  3946 ;; This function is called by:
  3947 ;;		_TrataINT
  3948 ;; This function uses a non-reentrant model
  3949 ;;
  3950                           
  3951                           
  3952                           ;psect for function i1_expandeTela
  3953  0DAB                     i1_expandeTela:
  3954  0DAB                     i1l1429:	
  3955                           ;incstack = 0
  3956                           ; Regs used in i1_expandeTela: [wreg]
  3957                           
  3958                           
  3959                           ;main.c: 269:     RD5 = 1;
  3960  0DAB  1283               	bcf	3,5	;RP0=0, select bank0
  3961  0DAC  1303               	bcf	3,6	;RP1=0, select bank0
  3962  0DAD  1688               	bsf	8,5	;volatile
  3963                           
  3964                           ;main.c: 270:     RD3 = 1;
  3965  0DAE  1588               	bsf	8,3	;volatile
  3966                           
  3967                           ;main.c: 271:     RD1 = 1;
  3968  0DAF  1488               	bsf	8,1	;volatile
  3969                           
  3970                           ;main.c: 272:     RC0 = 1;
  3971  0DB0  1407               	bsf	7,0	;volatile
  3972                           
  3973                           ;main.c: 275:     RD4 = 0;
  3974  0DB1  1208               	bcf	8,4	;volatile
  3975                           
  3976                           ;main.c: 276:     RC1 = 1;
  3977  0DB2  1487               	bsf	7,1	;volatile
  3978                           
  3979                           ;main.c: 277:     RD2 = 0;
  3980  0DB3  1108               	bcf	8,2	;volatile
  3981                           
  3982                           ;main.c: 278:     RD6 = 1;
  3983  0DB4  1708               	bsf	8,6	;volatile
  3984                           
  3985                           ;main.c: 280:     RD0 = 0;
  3986  0DB5  1008               	bcf	8,0	;volatile
  3987                           
  3988                           ;main.c: 281:     RC3 = 1;
  3989  0DB6  1587               	bsf	7,3	;volatile
  3990                           
  3991                           ;main.c: 282:     RC2 = 0;
  3992  0DB7  1107               	bcf	7,2	;volatile
  3993                           
  3994                           ;main.c: 283:     RD7 = 1;
  3995  0DB8  1788               	bsf	8,7	;volatile
  3996  0DB9                     i1l1431:
  3997                           
  3998                           ;main.c: 284:     _delay((unsigned long)((500)*(4000000/4000.0)));
  3999  0DB9  3003               	movlw	3
  4000  0DBA  00F2               	movwf	??i1_expandeTela+2
  4001  0DBB  308A               	movlw	138
  4002  0DBC  00F1               	movwf	??i1_expandeTela+1
  4003  0DBD  3055               	movlw	85
  4004  0DBE  00F0               	movwf	??i1_expandeTela
  4005  0DBF                     u210_27:
  4006  0DBF  0BF0               	decfsz	??i1_expandeTela,f
  4007  0DC0  2DBF               	goto	u210_27
  4008  0DC1  0BF1               	decfsz	??i1_expandeTela+1,f
  4009  0DC2  2DBF               	goto	u210_27
  4010  0DC3  0BF2               	decfsz	??i1_expandeTela+2,f
  4011  0DC4  2DBF               	goto	u210_27
  4012  0DC5  2DC6               	nop2
  4013  0DC6                     i1l1433:
  4014                           
  4015                           ;main.c: 287:     RD4 = 1;
  4016  0DC6  1283               	bcf	3,5	;RP0=0, select bank0
  4017  0DC7  1303               	bcf	3,6	;RP1=0, select bank0
  4018  0DC8  1608               	bsf	8,4	;volatile
  4019  0DC9                     i1l1435:
  4020                           
  4021                           ;main.c: 288:     RC1 = 1;
  4022  0DC9  1487               	bsf	7,1	;volatile
  4023  0DCA                     i1l1437:
  4024                           
  4025                           ;main.c: 289:     RD2 = 1;
  4026  0DCA  1508               	bsf	8,2	;volatile
  4027  0DCB                     i1l1439:
  4028                           
  4029                           ;main.c: 290:     RD6 = 1;
  4030  0DCB  1708               	bsf	8,6	;volatile
  4031  0DCC                     i1l1441:
  4032                           
  4033                           ;main.c: 292:     RD0 = 1;
  4034  0DCC  1408               	bsf	8,0	;volatile
  4035  0DCD                     i1l1443:
  4036                           
  4037                           ;main.c: 293:     RC3 = 1;
  4038  0DCD  1587               	bsf	7,3	;volatile
  4039  0DCE                     i1l1445:
  4040                           
  4041                           ;main.c: 294:     RC2 = 1;
  4042  0DCE  1507               	bsf	7,2	;volatile
  4043  0DCF                     i1l1447:
  4044                           
  4045                           ;main.c: 295:     RD7 = 1;
  4046  0DCF  1788               	bsf	8,7	;volatile
  4047  0DD0                     i1l211:
  4048  0DD0  0008               	return
  4049  0DD1                     __end_ofi1_expandeTela:
  4050                           
  4051                           	psect	text17
  4052  0491                     __ptext17:	
  4053 ;; *************** function _atualizaLCD *****************
  4054 ;; Defined at:
  4055 ;;		line 299 in file "main.c"
  4056 ;; Parameters:    Size  Location     Type
  4057 ;;		None
  4058 ;; Auto vars:     Size  Location     Type
  4059 ;;		None
  4060 ;; Return value:  Size  Location     Type
  4061 ;;                  1    wreg      void 
  4062 ;; Registers used:
  4063 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4064 ;; Tracked objects:
  4065 ;;		On entry : 0/0
  4066 ;;		On exit  : 0/0
  4067 ;;		Unchanged: 0/0
  4068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4069 ;;      Params:         0       0       0       0       0
  4070 ;;      Locals:         0       0       0       0       0
  4071 ;;      Temps:          0       2       0       0       0
  4072 ;;      Totals:         0       2       0       0       0
  4073 ;;Total ram usage:        2 bytes
  4074 ;; Hardware stack levels used: 1
  4075 ;; Hardware stack levels required when called: 3
  4076 ;; This function calls:
  4077 ;;		_Lcd_Clear
  4078 ;;		_Lcd_Set_Cursor
  4079 ;;		_Lcd_Write_String
  4080 ;;		___fltol
  4081 ;;		_sprintf
  4082 ;; This function is called by:
  4083 ;;		_TrataINT
  4084 ;; This function uses a non-reentrant model
  4085 ;;
  4086                           
  4087                           
  4088                           ;psect for function _atualizaLCD
  4089  0491                     _atualizaLCD:
  4090  0491                     i1l2051:	
  4091                           ;incstack = 0
  4092                           ; Regs used in _atualizaLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4093                           
  4094                           
  4095                           ;main.c: 301:     Lcd_Clear();
  4096  0491  120A  158A  24BA  120A  118A  	fcall	_Lcd_Clear
  4097                           
  4098                           ;main.c: 302:     Lcd_Set_Cursor(1,1);
  4099  0496  01F4               	clrf	Lcd_Set_Cursor@b
  4100  0497  0AF4               	incf	Lcd_Set_Cursor@b,f
  4101  0498  3001               	movlw	1
  4102  0499  120A  158A  27AE  120A  118A  	fcall	_Lcd_Set_Cursor
  4103  049E                     i1l2053:
  4104                           
  4105                           ;main.c: 303:     sprintf(buffer0, "C:%i A:%i L:%i S1:%i", (int)valor_entry0, (int)valor
      +                          _entry1, (int)valor_entry2, (int)valor_entry3);
  4106  049E  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  4107  049F  1283               	bcf	3,5	;RP0=0, select bank0
  4108  04A0  1303               	bcf	3,6	;RP1=0, select bank0
  4109  04A1  00CF               	movwf	??_atualizaLCD
  4110  04A2  084F               	movf	??_atualizaLCD,w
  4111  04A3  00BC               	movwf	sprintf@f
  4112  04A4  083B               	movf	_valor_entry0+3,w
  4113  04A5  00F3               	movwf	___fltol@f1+3
  4114  04A6  083A               	movf	_valor_entry0+2,w
  4115  04A7  00F2               	movwf	___fltol@f1+2
  4116  04A8  0839               	movf	_valor_entry0+1,w
  4117  04A9  00F1               	movwf	___fltol@f1+1
  4118  04AA  0838               	movf	_valor_entry0,w
  4119  04AB  00F0               	movwf	___fltol@f1
  4120  04AC  120A  118A  26D1  120A  118A  	fcall	___fltol
  4121  04B1  0871               	movf	?___fltol+1,w
  4122  04B2  1283               	bcf	3,5	;RP0=0, select bank0
  4123  04B3  1303               	bcf	3,6	;RP1=0, select bank0
  4124  04B4  00BE               	movwf	?_sprintf+2
  4125  04B5  0870               	movf	?___fltol,w
  4126  04B6  00BD               	movwf	?_sprintf+1
  4127  04B7  0837               	movf	_valor_entry1+3,w
  4128  04B8  00F3               	movwf	___fltol@f1+3
  4129  04B9  0836               	movf	_valor_entry1+2,w
  4130  04BA  00F2               	movwf	___fltol@f1+2
  4131  04BB  0835               	movf	_valor_entry1+1,w
  4132  04BC  00F1               	movwf	___fltol@f1+1
  4133  04BD  0834               	movf	_valor_entry1,w
  4134  04BE  00F0               	movwf	___fltol@f1
  4135  04BF  120A  118A  26D1  120A  118A  	fcall	___fltol
  4136  04C4  0871               	movf	?___fltol+1,w
  4137  04C5  1283               	bcf	3,5	;RP0=0, select bank0
  4138  04C6  1303               	bcf	3,6	;RP1=0, select bank0
  4139  04C7  00C0               	movwf	?_sprintf+4
  4140  04C8  0870               	movf	?___fltol,w
  4141  04C9  00BF               	movwf	?_sprintf+3
  4142  04CA  0833               	movf	_valor_entry2+3,w
  4143  04CB  00F3               	movwf	___fltol@f1+3
  4144  04CC  0832               	movf	_valor_entry2+2,w
  4145  04CD  00F2               	movwf	___fltol@f1+2
  4146  04CE  0831               	movf	_valor_entry2+1,w
  4147  04CF  00F1               	movwf	___fltol@f1+1
  4148  04D0  0830               	movf	_valor_entry2,w
  4149  04D1  00F0               	movwf	___fltol@f1
  4150  04D2  120A  118A  26D1  120A  118A  	fcall	___fltol
  4151  04D7  0871               	movf	?___fltol+1,w
  4152  04D8  1283               	bcf	3,5	;RP0=0, select bank0
  4153  04D9  1303               	bcf	3,6	;RP1=0, select bank0
  4154  04DA  00C2               	movwf	?_sprintf+6
  4155  04DB  0870               	movf	?___fltol,w
  4156  04DC  00C1               	movwf	?_sprintf+5
  4157  04DD  082F               	movf	_valor_entry3+3,w
  4158  04DE  00F3               	movwf	___fltol@f1+3
  4159  04DF  082E               	movf	_valor_entry3+2,w
  4160  04E0  00F2               	movwf	___fltol@f1+2
  4161  04E1  082D               	movf	_valor_entry3+1,w
  4162  04E2  00F1               	movwf	___fltol@f1+1
  4163  04E3  082C               	movf	_valor_entry3,w
  4164  04E4  00F0               	movwf	___fltol@f1
  4165  04E5  120A  118A  26D1  120A  118A  	fcall	___fltol
  4166  04EA  0871               	movf	?___fltol+1,w
  4167  04EB  1283               	bcf	3,5	;RP0=0, select bank0
  4168  04EC  1303               	bcf	3,6	;RP1=0, select bank0
  4169  04ED  00C4               	movwf	?_sprintf+8
  4170  04EE  0870               	movf	?___fltol,w
  4171  04EF  00C3               	movwf	?_sprintf+7
  4172  04F0  30BE               	movlw	(low (_buffer0| 0))& (0+255)
  4173  04F1  120A  118A  23A9  120A  118A  	fcall	_sprintf
  4174  04F6                     i1l2055:
  4175                           
  4176                           ;main.c: 304:     _delay((unsigned long)((20)*(4000000/4000.0)));
  4177  04F6  301A               	movlw	26
  4178  04F7  1283               	bcf	3,5	;RP0=0, select bank0
  4179  04F8  1303               	bcf	3,6	;RP1=0, select bank0
  4180  04F9  00D0               	movwf	??_atualizaLCD+1
  4181  04FA  30F7               	movlw	247
  4182  04FB  00CF               	movwf	??_atualizaLCD
  4183  04FC                     u211_27:
  4184  04FC  0BCF               	decfsz	??_atualizaLCD,f
  4185  04FD  2CFC               	goto	u211_27
  4186  04FE  0BD0               	decfsz	??_atualizaLCD+1,f
  4187  04FF  2CFC               	goto	u211_27
  4188  0500  2D01               	nop2
  4189  0501                     i1l2057:
  4190                           
  4191                           ;main.c: 305:     sprintf(buffer1, "S2:%i S3:%i S4:%i ", (int)valor_entry4, (int)valor_e
      +                          ntry5, (int)valor_entry6);
  4192  0501  3020               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  4193  0502  1283               	bcf	3,5	;RP0=0, select bank0
  4194  0503  1303               	bcf	3,6	;RP1=0, select bank0
  4195  0504  00CF               	movwf	??_atualizaLCD
  4196  0505  084F               	movf	??_atualizaLCD,w
  4197  0506  00BC               	movwf	sprintf@f
  4198  0507  082B               	movf	_valor_entry4+3,w
  4199  0508  00F3               	movwf	___fltol@f1+3
  4200  0509  082A               	movf	_valor_entry4+2,w
  4201  050A  00F2               	movwf	___fltol@f1+2
  4202  050B  0829               	movf	_valor_entry4+1,w
  4203  050C  00F1               	movwf	___fltol@f1+1
  4204  050D  0828               	movf	_valor_entry4,w
  4205  050E  00F0               	movwf	___fltol@f1
  4206  050F  120A  118A  26D1  120A  118A  	fcall	___fltol
  4207  0514  0871               	movf	?___fltol+1,w
  4208  0515  1283               	bcf	3,5	;RP0=0, select bank0
  4209  0516  1303               	bcf	3,6	;RP1=0, select bank0
  4210  0517  00BE               	movwf	?_sprintf+2
  4211  0518  0870               	movf	?___fltol,w
  4212  0519  00BD               	movwf	?_sprintf+1
  4213  051A  0827               	movf	_valor_entry5+3,w
  4214  051B  00F3               	movwf	___fltol@f1+3
  4215  051C  0826               	movf	_valor_entry5+2,w
  4216  051D  00F2               	movwf	___fltol@f1+2
  4217  051E  0825               	movf	_valor_entry5+1,w
  4218  051F  00F1               	movwf	___fltol@f1+1
  4219  0520  0824               	movf	_valor_entry5,w
  4220  0521  00F0               	movwf	___fltol@f1
  4221  0522  120A  118A  26D1  120A  118A  	fcall	___fltol
  4222  0527  0871               	movf	?___fltol+1,w
  4223  0528  1283               	bcf	3,5	;RP0=0, select bank0
  4224  0529  1303               	bcf	3,6	;RP1=0, select bank0
  4225  052A  00C0               	movwf	?_sprintf+4
  4226  052B  0870               	movf	?___fltol,w
  4227  052C  00BF               	movwf	?_sprintf+3
  4228  052D  0823               	movf	_valor_entry6+3,w
  4229  052E  00F3               	movwf	___fltol@f1+3
  4230  052F  0822               	movf	_valor_entry6+2,w
  4231  0530  00F2               	movwf	___fltol@f1+2
  4232  0531  0821               	movf	_valor_entry6+1,w
  4233  0532  00F1               	movwf	___fltol@f1+1
  4234  0533  0820               	movf	_valor_entry6,w
  4235  0534  00F0               	movwf	___fltol@f1
  4236  0535  120A  118A  26D1  120A  118A  	fcall	___fltol
  4237  053A  0871               	movf	?___fltol+1,w
  4238  053B  1283               	bcf	3,5	;RP0=0, select bank0
  4239  053C  1303               	bcf	3,6	;RP1=0, select bank0
  4240  053D  00C2               	movwf	?_sprintf+6
  4241  053E  0870               	movf	?___fltol,w
  4242  053F  00C1               	movwf	?_sprintf+5
  4243  0540  30A0               	movlw	(low (_buffer1| 0))& (0+255)
  4244  0541  120A  118A  23A9  120A  118A  	fcall	_sprintf
  4245  0546                     i1l2059:
  4246                           
  4247                           ;main.c: 306:     _delay((unsigned long)((20)*(4000000/4000.0)));
  4248  0546  301A               	movlw	26
  4249  0547  1283               	bcf	3,5	;RP0=0, select bank0
  4250  0548  1303               	bcf	3,6	;RP1=0, select bank0
  4251  0549  00D0               	movwf	??_atualizaLCD+1
  4252  054A  30F7               	movlw	247
  4253  054B  00CF               	movwf	??_atualizaLCD
  4254  054C                     u212_27:
  4255  054C  0BCF               	decfsz	??_atualizaLCD,f
  4256  054D  2D4C               	goto	u212_27
  4257  054E  0BD0               	decfsz	??_atualizaLCD+1,f
  4258  054F  2D4C               	goto	u212_27
  4259  0550  2D51               	nop2
  4260  0551                     i1l2061:
  4261                           
  4262                           ;main.c: 307:     Lcd_Write_String(buffer0);
  4263  0551  30BE               	movlw	(low (_buffer0| 0))& (0+255)
  4264  0552  120A  158A  2568  120A  118A  	fcall	_Lcd_Write_String
  4265  0557                     i1l2063:
  4266                           
  4267                           ;main.c: 308:     Lcd_Set_Cursor(2,1);
  4268  0557  01F4               	clrf	Lcd_Set_Cursor@b
  4269  0558  0AF4               	incf	Lcd_Set_Cursor@b,f
  4270  0559  3002               	movlw	2
  4271  055A  120A  158A  27AE  120A  118A  	fcall	_Lcd_Set_Cursor
  4272                           
  4273                           ;main.c: 309:     Lcd_Write_String(buffer1);
  4274  055F  30A0               	movlw	(low (_buffer1| 0))& (0+255)
  4275  0560  120A  158A  2568  120A  118A  	fcall	_Lcd_Write_String
  4276  0565                     i1l2065:
  4277                           
  4278                           ;main.c: 310:     _delay((unsigned long)((50)*(4000000/4000.0)));
  4279  0565  3041               	movlw	65
  4280  0566  1283               	bcf	3,5	;RP0=0, select bank0
  4281  0567  1303               	bcf	3,6	;RP1=0, select bank0
  4282  0568  00D0               	movwf	??_atualizaLCD+1
  4283  0569  30ED               	movlw	237
  4284  056A  00CF               	movwf	??_atualizaLCD
  4285  056B                     u213_27:
  4286  056B  0BCF               	decfsz	??_atualizaLCD,f
  4287  056C  2D6B               	goto	u213_27
  4288  056D  0BD0               	decfsz	??_atualizaLCD+1,f
  4289  056E  2D6B               	goto	u213_27
  4290  056F  2D70               	nop2
  4291  0570                     i1l214:
  4292  0570  0008               	return
  4293  0571                     __end_of_atualizaLCD:
  4294                           
  4295                           	psect	text18
  4296  03A9                     __ptext18:	
  4297 ;; *************** function _sprintf *****************
  4298 ;; Defined at:
  4299 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  4300 ;; Parameters:    Size  Location     Type
  4301 ;;  sp              1    wreg     PTR unsigned char 
  4302 ;;		 -> buffer1(30), buffer0(30), 
  4303 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  4304 ;;		 -> STR_2(19), STR_1(21), 
  4305 ;; Auto vars:     Size  Location     Type
  4306 ;;  sp              1   17[BANK0 ] PTR unsigned char 
  4307 ;;		 -> buffer1(30), buffer0(30), 
  4308 ;;  tmpval          4    0        struct .
  4309 ;;  val             2   15[BANK0 ] unsigned int 
  4310 ;;  cp              2    0        PTR const unsigned char 
  4311 ;;  len             2    0        unsigned int 
  4312 ;;  c               1   18[BANK0 ] unsigned char 
  4313 ;;  prec            1   14[BANK0 ] char 
  4314 ;;  flag            1   13[BANK0 ] unsigned char 
  4315 ;;  ap              1   12[BANK0 ] PTR void [1]
  4316 ;;		 -> ?_sprintf(2), 
  4317 ;; Return value:  Size  Location     Type
  4318 ;;                  2    0[BANK0 ] int 
  4319 ;; Registers used:
  4320 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4321 ;; Tracked objects:
  4322 ;;		On entry : 0/0
  4323 ;;		On exit  : 0/0
  4324 ;;		Unchanged: 0/0
  4325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4326 ;;      Params:         0       9       0       0       0
  4327 ;;      Locals:         0       7       0       0       0
  4328 ;;      Temps:          0       3       0       0       0
  4329 ;;      Totals:         0      19       0       0       0
  4330 ;;Total ram usage:       19 bytes
  4331 ;; Hardware stack levels used: 1
  4332 ;; Hardware stack levels required when called: 1
  4333 ;; This function calls:
  4334 ;;		___lwdiv
  4335 ;;		___lwmod
  4336 ;; This function is called by:
  4337 ;;		_atualizaLCD
  4338 ;; This function uses a non-reentrant model
  4339 ;;
  4340                           
  4341                           
  4342                           ;psect for function _sprintf
  4343  03A9                     _sprintf:
  4344                           
  4345                           ;incstack = 0
  4346                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4347                           ;sprintf@sp stored from wreg
  4348  03A9  1283               	bcf	3,5	;RP0=0, select bank0
  4349  03AA  1303               	bcf	3,6	;RP1=0, select bank0
  4350  03AB  00CD               	movwf	sprintf@sp
  4351  03AC                     i1l1669:
  4352                           
  4353                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  4354  03AC  303D               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  4355  03AD  00C5               	movwf	??_sprintf
  4356  03AE  0845               	movf	??_sprintf,w
  4357  03AF  00C8               	movwf	sprintf@ap
  4358                           
  4359                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  4360  03B0  2C7A               	goto	i1l1721
  4361  03B1                     i1l1671:
  4362                           
  4363                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  4364  03B1  3025               	movlw	37
  4365  03B2  064E               	xorwf	sprintf@c,w
  4366  03B3  1903               	btfsc	3,2
  4367  03B4  2BB6               	goto	u105_21
  4368  03B5  2BB7               	goto	u105_20
  4369  03B6                     u105_21:
  4370  03B6  2BC3               	goto	i1l1677
  4371  03B7                     u105_20:
  4372  03B7                     i1l1673:
  4373                           
  4374                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  4375  03B7  084E               	movf	sprintf@c,w
  4376  03B8  00C5               	movwf	??_sprintf
  4377  03B9  084D               	movf	sprintf@sp,w
  4378  03BA  0084               	movwf	4
  4379  03BB  0845               	movf	??_sprintf,w
  4380  03BC  1383               	bcf	3,7	;select IRP bank0
  4381  03BD  0080               	movwf	0
  4382  03BE                     i1l1675:
  4383  03BE  3001               	movlw	1
  4384  03BF  00C5               	movwf	??_sprintf
  4385  03C0  0845               	movf	??_sprintf,w
  4386  03C1  07CD               	addwf	sprintf@sp,f
  4387                           
  4388                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 559:    continue;
  4389  03C2  2C7A               	goto	i1l1721
  4390  03C3                     i1l1677:
  4391                           
  4392                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  4393  03C3  01C9               	clrf	sprintf@flag
  4394  03C4                     i1l1681:	
  4395                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  4396                           
  4397  03C4  3001               	movlw	1
  4398  03C5  07BC               	addwf	sprintf@f,f
  4399  03C6  30FF               	movlw	-1
  4400  03C7  073C               	addwf	sprintf@f,w
  4401  03C8  0084               	movwf	4
  4402  03C9  120A  158A  2000  120A  118A  	fcall	stringdir
  4403  03CE  00CE               	movwf	sprintf@c
  4404  03CF  00C5               	movwf	??_sprintf
  4405  03D0  01C6               	clrf	??_sprintf+1
  4406                           
  4407                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4408                           ; Switch size 1, requested type "simple"
  4409                           ; Number of cases is 1, Range of values is 0 to 0
  4410                           ; switch strategies available:
  4411                           ; Name         Instructions Cycles
  4412                           ; simple_byte            4     3 (average)
  4413                           ; direct_byte           11     8 (fixed)
  4414                           ; jumptable            260     6 (fixed)
  4415                           ;	Chosen strategy is simple_byte
  4416  03D1  0846               	movf	??_sprintf+1,w
  4417  03D2  3A00               	xorlw	0	; case 0
  4418  03D3  1903               	skipnz
  4419  03D4  2BD6               	goto	i1l2543
  4420  03D5  2C7A               	goto	i1l1721
  4421  03D6                     i1l2543:
  4422                           
  4423                           ; Switch size 1, requested type "simple"
  4424                           ; Number of cases is 3, Range of values is 0 to 105
  4425                           ; switch strategies available:
  4426                           ; Name         Instructions Cycles
  4427                           ; simple_byte           10     6 (average)
  4428                           ; jumptable            260     6 (fixed)
  4429                           ;	Chosen strategy is simple_byte
  4430  03D6  0845               	movf	??_sprintf,w
  4431  03D7  3A00               	xorlw	0	; case 0
  4432  03D8  1903               	skipnz
  4433  03D9  2C8C               	goto	i1l1723
  4434  03DA  3A64               	xorlw	100	; case 100
  4435  03DB  1903               	skipnz
  4436  03DC  2BE1               	goto	i1l1683
  4437  03DD  3A0D               	xorlw	13	; case 105
  4438  03DE  1903               	skipnz
  4439  03DF  2BE1               	goto	i1l1683
  4440  03E0  2C7A               	goto	i1l1721
  4441  03E1                     i1l1683:
  4442                           
  4443                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4444  03E1  0848               	movf	sprintf@ap,w
  4445  03E2  0084               	movwf	4
  4446  03E3  1383               	bcf	3,7	;select IRP bank0
  4447  03E4  0800               	movf	0,w
  4448  03E5  00CB               	movwf	sprintf@val
  4449  03E6  0A84               	incf	4,f
  4450  03E7  0800               	movf	0,w
  4451  03E8  00CC               	movwf	sprintf@val+1
  4452  03E9                     i1l1685:
  4453  03E9  3002               	movlw	2
  4454  03EA  00C5               	movwf	??_sprintf
  4455  03EB  0845               	movf	??_sprintf,w
  4456  03EC  07C8               	addwf	sprintf@ap,f
  4457  03ED                     i1l1687:
  4458                           
  4459                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  4460  03ED  1FCC               	btfss	sprintf@val+1,7
  4461  03EE  2BF0               	goto	u106_21
  4462  03EF  2BF1               	goto	u106_20
  4463  03F0                     u106_21:
  4464  03F0  2BFA               	goto	i1l1693
  4465  03F1                     u106_20:
  4466  03F1                     i1l1689:
  4467                           
  4468                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  4469  03F1  3003               	movlw	3
  4470  03F2  00C5               	movwf	??_sprintf
  4471  03F3  0845               	movf	??_sprintf,w
  4472  03F4  04C9               	iorwf	sprintf@flag,f
  4473  03F5                     i1l1691:
  4474                           
  4475                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  4476  03F5  09CB               	comf	sprintf@val,f
  4477  03F6  09CC               	comf	sprintf@val+1,f
  4478  03F7  0ACB               	incf	sprintf@val,f
  4479  03F8  1903               	skipnz
  4480  03F9  0ACC               	incf	sprintf@val+1,f
  4481  03FA                     i1l1693:
  4482                           
  4483                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  4484  03FA  01CE               	clrf	sprintf@c
  4485  03FB  0ACE               	incf	sprintf@c,f
  4486  03FC                     i1l1699:
  4487                           
  4488                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  4489  03FC  084E               	movf	sprintf@c,w
  4490  03FD  00C5               	movwf	??_sprintf
  4491  03FE  0745               	addwf	??_sprintf,w
  4492  03FF  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4493  0400  0084               	movwf	4
  4494  0401  120A  158A  2000  120A  118A  	fcall	stringdir
  4495  0406  00C6               	movwf	??_sprintf+1
  4496  0407  120A  158A  2000  120A  118A  	fcall	stringdir
  4497  040C  00C7               	movwf	??_sprintf+2
  4498  040D  0847               	movf	??_sprintf+2,w
  4499  040E  024C               	subwf	sprintf@val+1,w
  4500  040F  1D03               	skipz
  4501  0410  2C13               	goto	u107_25
  4502  0411  0846               	movf	??_sprintf+1,w
  4503  0412  024B               	subwf	sprintf@val,w
  4504  0413                     u107_25:
  4505  0413  1803               	skipnc
  4506  0414  2C16               	goto	u107_21
  4507  0415  2C17               	goto	u107_20
  4508  0416                     u107_21:
  4509  0416  2C18               	goto	i1l1703
  4510  0417                     u107_20:
  4511  0417  2C22               	goto	i1l1705
  4512  0418                     i1l1703:
  4513  0418  3001               	movlw	1
  4514  0419  00C5               	movwf	??_sprintf
  4515  041A  0845               	movf	??_sprintf,w
  4516  041B  07CE               	addwf	sprintf@c,f
  4517  041C  3005               	movlw	5
  4518  041D  064E               	xorwf	sprintf@c,w
  4519  041E  1D03               	btfss	3,2
  4520  041F  2C21               	goto	u108_21
  4521  0420  2C22               	goto	u108_20
  4522  0421                     u108_21:
  4523  0421  2BFC               	goto	i1l1699
  4524  0422                     u108_20:
  4525  0422                     i1l1705:
  4526                           
  4527                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  4528  0422  0849               	movf	sprintf@flag,w
  4529  0423  3903               	andlw	3
  4530  0424  1903               	btfsc	3,2
  4531  0425  2C27               	goto	u109_21
  4532  0426  2C28               	goto	u109_20
  4533  0427                     u109_21:
  4534  0427  2C33               	goto	i1l1711
  4535  0428                     u109_20:
  4536  0428                     i1l1707:
  4537                           
  4538                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  4539  0428  302D               	movlw	45
  4540  0429  00C5               	movwf	??_sprintf
  4541  042A  084D               	movf	sprintf@sp,w
  4542  042B  0084               	movwf	4
  4543  042C  0845               	movf	??_sprintf,w
  4544  042D  1383               	bcf	3,7	;select IRP bank0
  4545  042E  0080               	movwf	0
  4546  042F                     i1l1709:
  4547  042F  3001               	movlw	1
  4548  0430  00C5               	movwf	??_sprintf
  4549  0431  0845               	movf	??_sprintf,w
  4550  0432  07CD               	addwf	sprintf@sp,f
  4551  0433                     i1l1711:
  4552                           
  4553                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  4554  0433  084E               	movf	sprintf@c,w
  4555  0434  00C5               	movwf	??_sprintf
  4556  0435  0845               	movf	??_sprintf,w
  4557  0436  00CA               	movwf	sprintf@prec
  4558                           
  4559                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  4560  0437  2C71               	goto	i1l1719
  4561  0438                     i1l1713:
  4562                           
  4563                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  4564  0438  300A               	movlw	10
  4565  0439  00F8               	movwf	___lwmod@divisor
  4566  043A  3000               	movlw	0
  4567  043B  00F9               	movwf	___lwmod@divisor+1
  4568  043C  084A               	movf	sprintf@prec,w
  4569  043D  00C5               	movwf	??_sprintf
  4570  043E  0745               	addwf	??_sprintf,w
  4571  043F  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4572  0440  0084               	movwf	4
  4573  0441  120A  158A  2000  120A  118A  	fcall	stringdir
  4574  0446  00F0               	movwf	___lwdiv@divisor
  4575  0447  120A  158A  2000  120A  118A  	fcall	stringdir
  4576  044C  00F1               	movwf	___lwdiv@divisor+1
  4577  044D  084C               	movf	sprintf@val+1,w
  4578  044E  00F3               	movwf	___lwdiv@dividend+1
  4579  044F  084B               	movf	sprintf@val,w
  4580  0450  00F2               	movwf	___lwdiv@dividend
  4581  0451  120A  158A  276A  120A  118A  	fcall	___lwdiv
  4582  0456  0871               	movf	?___lwdiv+1,w
  4583  0457  00FB               	movwf	___lwmod@dividend+1
  4584  0458  0870               	movf	?___lwdiv,w
  4585  0459  00FA               	movwf	___lwmod@dividend
  4586  045A  120A  158A  26B2  120A  118A  	fcall	___lwmod
  4587  045F  0878               	movf	?___lwmod,w
  4588  0460  3E30               	addlw	48
  4589  0461  1283               	bcf	3,5	;RP0=0, select bank0
  4590  0462  1303               	bcf	3,6	;RP1=0, select bank0
  4591  0463  00C6               	movwf	??_sprintf+1
  4592  0464  0846               	movf	??_sprintf+1,w
  4593  0465  00CE               	movwf	sprintf@c
  4594  0466                     i1l1715:
  4595                           
  4596                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  4597  0466  084E               	movf	sprintf@c,w
  4598  0467  00C5               	movwf	??_sprintf
  4599  0468  084D               	movf	sprintf@sp,w
  4600  0469  0084               	movwf	4
  4601  046A  0845               	movf	??_sprintf,w
  4602  046B  1383               	bcf	3,7	;select IRP bank0
  4603  046C  0080               	movwf	0
  4604  046D                     i1l1717:
  4605  046D  3001               	movlw	1
  4606  046E  00C5               	movwf	??_sprintf
  4607  046F  0845               	movf	??_sprintf,w
  4608  0470  07CD               	addwf	sprintf@sp,f
  4609  0471                     i1l1719:
  4610                           
  4611                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  4612  0471  30FF               	movlw	255
  4613  0472  00C5               	movwf	??_sprintf
  4614  0473  0845               	movf	??_sprintf,w
  4615  0474  07CA               	addwf	sprintf@prec,f
  4616  0475  0A4A               	incf	sprintf@prec,w
  4617  0476  1D03               	btfss	3,2
  4618  0477  2C79               	goto	u110_21
  4619  0478  2C7A               	goto	u110_20
  4620  0479                     u110_21:
  4621  0479  2C38               	goto	i1l1713
  4622  047A                     u110_20:
  4623  047A                     i1l1721:
  4624                           
  4625                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  4626  047A  3001               	movlw	1
  4627  047B  07BC               	addwf	sprintf@f,f
  4628  047C  30FF               	movlw	-1
  4629  047D  073C               	addwf	sprintf@f,w
  4630  047E  0084               	movwf	4
  4631  047F  120A  158A  2000  120A  118A  	fcall	stringdir
  4632  0484  00C5               	movwf	??_sprintf
  4633  0485  0845               	movf	??_sprintf,w
  4634  0486  00CE               	movwf	sprintf@c
  4635  0487  084E               	movf	sprintf@c,w
  4636  0488  1D03               	btfss	3,2
  4637  0489  2C8B               	goto	u111_21
  4638  048A  2C8C               	goto	u111_20
  4639  048B                     u111_21:
  4640  048B  2BB1               	goto	i1l1671
  4641  048C                     u111_20:
  4642  048C                     i1l1723:
  4643                           
  4644                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  4645  048C  084D               	movf	sprintf@sp,w
  4646  048D  0084               	movwf	4
  4647  048E  1383               	bcf	3,7	;select IRP bank0
  4648  048F  0180               	clrf	0
  4649  0490                     i1l327:
  4650  0490  0008               	return
  4651  0491                     __end_of_sprintf:
  4652                           
  4653                           	psect	text19
  4654  0EB2                     __ptext19:	
  4655 ;; *************** function ___lwmod *****************
  4656 ;; Defined at:
  4657 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  4658 ;; Parameters:    Size  Location     Type
  4659 ;;  divisor         2    8[COMMON] unsigned int 
  4660 ;;  dividend        2   10[COMMON] unsigned int 
  4661 ;; Auto vars:     Size  Location     Type
  4662 ;;  counter         1   13[COMMON] unsigned char 
  4663 ;; Return value:  Size  Location     Type
  4664 ;;                  2    8[COMMON] unsigned int 
  4665 ;; Registers used:
  4666 ;;		wreg, status,2, status,0
  4667 ;; Tracked objects:
  4668 ;;		On entry : 0/0
  4669 ;;		On exit  : 0/0
  4670 ;;		Unchanged: 0/0
  4671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4672 ;;      Params:         4       0       0       0       0
  4673 ;;      Locals:         1       0       0       0       0
  4674 ;;      Temps:          1       0       0       0       0
  4675 ;;      Totals:         6       0       0       0       0
  4676 ;;Total ram usage:        6 bytes
  4677 ;; Hardware stack levels used: 1
  4678 ;; This function calls:
  4679 ;;		Nothing
  4680 ;; This function is called by:
  4681 ;;		_sprintf
  4682 ;; This function uses a non-reentrant model
  4683 ;;
  4684                           
  4685                           
  4686                           ;psect for function ___lwmod
  4687  0EB2                     ___lwmod:
  4688  0EB2                     i1l1597:	
  4689                           ;incstack = 0
  4690                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4691                           
  4692  0EB2  0878               	movf	___lwmod@divisor,w
  4693  0EB3  0479               	iorwf	___lwmod@divisor+1,w
  4694  0EB4  1903               	btfsc	3,2
  4695  0EB5  2EB7               	goto	u94_21
  4696  0EB6  2EB8               	goto	u94_20
  4697  0EB7                     u94_21:
  4698  0EB7  2EE7               	goto	i1l1615
  4699  0EB8                     u94_20:
  4700  0EB8                     i1l1599:
  4701  0EB8  01FD               	clrf	___lwmod@counter
  4702  0EB9  0AFD               	incf	___lwmod@counter,f
  4703  0EBA  2EC6               	goto	i1l1605
  4704  0EBB                     i1l1601:
  4705  0EBB  3001               	movlw	1
  4706  0EBC                     u95_25:
  4707  0EBC  1003               	clrc
  4708  0EBD  0DF8               	rlf	___lwmod@divisor,f
  4709  0EBE  0DF9               	rlf	___lwmod@divisor+1,f
  4710  0EBF  3EFF               	addlw	-1
  4711  0EC0  1D03               	skipz
  4712  0EC1  2EBC               	goto	u95_25
  4713  0EC2                     i1l1603:
  4714  0EC2  3001               	movlw	1
  4715  0EC3  00FC               	movwf	??___lwmod
  4716  0EC4  087C               	movf	??___lwmod,w
  4717  0EC5  07FD               	addwf	___lwmod@counter,f
  4718  0EC6                     i1l1605:
  4719  0EC6  1FF9               	btfss	___lwmod@divisor+1,7
  4720  0EC7  2EC9               	goto	u96_21
  4721  0EC8  2ECA               	goto	u96_20
  4722  0EC9                     u96_21:
  4723  0EC9  2EBB               	goto	i1l1601
  4724  0ECA                     u96_20:
  4725  0ECA                     i1l1607:
  4726  0ECA  0879               	movf	___lwmod@divisor+1,w
  4727  0ECB  027B               	subwf	___lwmod@dividend+1,w
  4728  0ECC  1D03               	skipz
  4729  0ECD  2ED0               	goto	u97_25
  4730  0ECE  0878               	movf	___lwmod@divisor,w
  4731  0ECF  027A               	subwf	___lwmod@dividend,w
  4732  0ED0                     u97_25:
  4733  0ED0  1C03               	skipc
  4734  0ED1  2ED3               	goto	u97_21
  4735  0ED2  2ED4               	goto	u97_20
  4736  0ED3                     u97_21:
  4737  0ED3  2EDA               	goto	i1l1611
  4738  0ED4                     u97_20:
  4739  0ED4                     i1l1609:
  4740  0ED4  0878               	movf	___lwmod@divisor,w
  4741  0ED5  02FA               	subwf	___lwmod@dividend,f
  4742  0ED6  0879               	movf	___lwmod@divisor+1,w
  4743  0ED7  1C03               	skipc
  4744  0ED8  03FB               	decf	___lwmod@dividend+1,f
  4745  0ED9  02FB               	subwf	___lwmod@dividend+1,f
  4746  0EDA                     i1l1611:
  4747  0EDA  3001               	movlw	1
  4748  0EDB                     u98_25:
  4749  0EDB  1003               	clrc
  4750  0EDC  0CF9               	rrf	___lwmod@divisor+1,f
  4751  0EDD  0CF8               	rrf	___lwmod@divisor,f
  4752  0EDE  3EFF               	addlw	-1
  4753  0EDF  1D03               	skipz
  4754  0EE0  2EDB               	goto	u98_25
  4755  0EE1                     i1l1613:
  4756  0EE1  3001               	movlw	1
  4757  0EE2  02FD               	subwf	___lwmod@counter,f
  4758  0EE3  1D03               	btfss	3,2
  4759  0EE4  2EE6               	goto	u99_21
  4760  0EE5  2EE7               	goto	u99_20
  4761  0EE6                     u99_21:
  4762  0EE6  2ECA               	goto	i1l1607
  4763  0EE7                     u99_20:
  4764  0EE7                     i1l1615:
  4765  0EE7  087B               	movf	___lwmod@dividend+1,w
  4766  0EE8  00F9               	movwf	?___lwmod+1
  4767  0EE9  087A               	movf	___lwmod@dividend,w
  4768  0EEA  00F8               	movwf	?___lwmod
  4769  0EEB                     i1l613:
  4770  0EEB  0008               	return
  4771  0EEC                     __end_of___lwmod:
  4772                           
  4773                           	psect	text20
  4774  0F6A                     __ptext20:	
  4775 ;; *************** function ___lwdiv *****************
  4776 ;; Defined at:
  4777 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  4778 ;; Parameters:    Size  Location     Type
  4779 ;;  divisor         2    0[COMMON] unsigned int 
  4780 ;;  dividend        2    2[COMMON] unsigned int 
  4781 ;; Auto vars:     Size  Location     Type
  4782 ;;  quotient        2    5[COMMON] unsigned int 
  4783 ;;  counter         1    7[COMMON] unsigned char 
  4784 ;; Return value:  Size  Location     Type
  4785 ;;                  2    0[COMMON] unsigned int 
  4786 ;; Registers used:
  4787 ;;		wreg, status,2, status,0
  4788 ;; Tracked objects:
  4789 ;;		On entry : 0/0
  4790 ;;		On exit  : 0/0
  4791 ;;		Unchanged: 0/0
  4792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4793 ;;      Params:         4       0       0       0       0
  4794 ;;      Locals:         3       0       0       0       0
  4795 ;;      Temps:          1       0       0       0       0
  4796 ;;      Totals:         8       0       0       0       0
  4797 ;;Total ram usage:        8 bytes
  4798 ;; Hardware stack levels used: 1
  4799 ;; This function calls:
  4800 ;;		Nothing
  4801 ;; This function is called by:
  4802 ;;		_sprintf
  4803 ;; This function uses a non-reentrant model
  4804 ;;
  4805                           
  4806                           
  4807                           ;psect for function ___lwdiv
  4808  0F6A                     ___lwdiv:
  4809  0F6A                     i1l1571:	
  4810                           ;incstack = 0
  4811                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4812                           
  4813  0F6A  01F5               	clrf	___lwdiv@quotient
  4814  0F6B  01F6               	clrf	___lwdiv@quotient+1
  4815  0F6C                     i1l1573:
  4816  0F6C  0870               	movf	___lwdiv@divisor,w
  4817  0F6D  0471               	iorwf	___lwdiv@divisor+1,w
  4818  0F6E  1903               	btfsc	3,2
  4819  0F6F  2F71               	goto	u87_21
  4820  0F70  2F72               	goto	u87_20
  4821  0F71                     u87_21:
  4822  0F71  2FA9               	goto	i1l1593
  4823  0F72                     u87_20:
  4824  0F72                     i1l1575:
  4825  0F72  01F7               	clrf	___lwdiv@counter
  4826  0F73  0AF7               	incf	___lwdiv@counter,f
  4827  0F74  2F80               	goto	i1l1581
  4828  0F75                     i1l1577:
  4829  0F75  3001               	movlw	1
  4830  0F76                     u88_25:
  4831  0F76  1003               	clrc
  4832  0F77  0DF0               	rlf	___lwdiv@divisor,f
  4833  0F78  0DF1               	rlf	___lwdiv@divisor+1,f
  4834  0F79  3EFF               	addlw	-1
  4835  0F7A  1D03               	skipz
  4836  0F7B  2F76               	goto	u88_25
  4837  0F7C                     i1l1579:
  4838  0F7C  3001               	movlw	1
  4839  0F7D  00F4               	movwf	??___lwdiv
  4840  0F7E  0874               	movf	??___lwdiv,w
  4841  0F7F  07F7               	addwf	___lwdiv@counter,f
  4842  0F80                     i1l1581:
  4843  0F80  1FF1               	btfss	___lwdiv@divisor+1,7
  4844  0F81  2F83               	goto	u89_21
  4845  0F82  2F84               	goto	u89_20
  4846  0F83                     u89_21:
  4847  0F83  2F75               	goto	i1l1577
  4848  0F84                     u89_20:
  4849  0F84                     i1l1583:
  4850  0F84  3001               	movlw	1
  4851  0F85                     u90_25:
  4852  0F85  1003               	clrc
  4853  0F86  0DF5               	rlf	___lwdiv@quotient,f
  4854  0F87  0DF6               	rlf	___lwdiv@quotient+1,f
  4855  0F88  3EFF               	addlw	-1
  4856  0F89  1D03               	skipz
  4857  0F8A  2F85               	goto	u90_25
  4858  0F8B  0871               	movf	___lwdiv@divisor+1,w
  4859  0F8C  0273               	subwf	___lwdiv@dividend+1,w
  4860  0F8D  1D03               	skipz
  4861  0F8E  2F91               	goto	u91_25
  4862  0F8F  0870               	movf	___lwdiv@divisor,w
  4863  0F90  0272               	subwf	___lwdiv@dividend,w
  4864  0F91                     u91_25:
  4865  0F91  1C03               	skipc
  4866  0F92  2F94               	goto	u91_21
  4867  0F93  2F95               	goto	u91_20
  4868  0F94                     u91_21:
  4869  0F94  2F9C               	goto	i1l1589
  4870  0F95                     u91_20:
  4871  0F95                     i1l1585:
  4872  0F95  0870               	movf	___lwdiv@divisor,w
  4873  0F96  02F2               	subwf	___lwdiv@dividend,f
  4874  0F97  0871               	movf	___lwdiv@divisor+1,w
  4875  0F98  1C03               	skipc
  4876  0F99  03F3               	decf	___lwdiv@dividend+1,f
  4877  0F9A  02F3               	subwf	___lwdiv@dividend+1,f
  4878  0F9B                     i1l1587:
  4879  0F9B  1475               	bsf	___lwdiv@quotient,0
  4880  0F9C                     i1l1589:
  4881  0F9C  3001               	movlw	1
  4882  0F9D                     u92_25:
  4883  0F9D  1003               	clrc
  4884  0F9E  0CF1               	rrf	___lwdiv@divisor+1,f
  4885  0F9F  0CF0               	rrf	___lwdiv@divisor,f
  4886  0FA0  3EFF               	addlw	-1
  4887  0FA1  1D03               	skipz
  4888  0FA2  2F9D               	goto	u92_25
  4889  0FA3                     i1l1591:
  4890  0FA3  3001               	movlw	1
  4891  0FA4  02F7               	subwf	___lwdiv@counter,f
  4892  0FA5  1D03               	btfss	3,2
  4893  0FA6  2FA8               	goto	u93_21
  4894  0FA7  2FA9               	goto	u93_20
  4895  0FA8                     u93_21:
  4896  0FA8  2F84               	goto	i1l1583
  4897  0FA9                     u93_20:
  4898  0FA9                     i1l1593:
  4899  0FA9  0876               	movf	___lwdiv@quotient+1,w
  4900  0FAA  00F1               	movwf	?___lwdiv+1
  4901  0FAB  0875               	movf	___lwdiv@quotient,w
  4902  0FAC  00F0               	movwf	?___lwdiv
  4903  0FAD                     i1l603:
  4904  0FAD  0008               	return
  4905  0FAE                     __end_of___lwdiv:
  4906                           
  4907                           	psect	text21
  4908  06D1                     __ptext21:	
  4909 ;; *************** function ___fltol *****************
  4910 ;; Defined at:
  4911 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fltol.c"
  4912 ;; Parameters:    Size  Location     Type
  4913 ;;  f1              4    0[COMMON] unsigned int 
  4914 ;; Auto vars:     Size  Location     Type
  4915 ;;  exp1            1   10[COMMON] unsigned char 
  4916 ;;  sign1           1    9[COMMON] unsigned char 
  4917 ;; Return value:  Size  Location     Type
  4918 ;;                  4    0[COMMON] long 
  4919 ;; Registers used:
  4920 ;;		wreg, status,2, status,0
  4921 ;; Tracked objects:
  4922 ;;		On entry : 0/0
  4923 ;;		On exit  : 0/0
  4924 ;;		Unchanged: 0/0
  4925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4926 ;;      Params:         4       0       0       0       0
  4927 ;;      Locals:         2       0       0       0       0
  4928 ;;      Temps:          5       0       0       0       0
  4929 ;;      Totals:        11       0       0       0       0
  4930 ;;Total ram usage:       11 bytes
  4931 ;; Hardware stack levels used: 1
  4932 ;; This function calls:
  4933 ;;		Nothing
  4934 ;; This function is called by:
  4935 ;;		_atualizaLCD
  4936 ;; This function uses a non-reentrant model
  4937 ;;
  4938                           
  4939                           
  4940                           ;psect for function ___fltol
  4941  06D1                     ___fltol:
  4942  06D1                     i1l1731:	
  4943                           ;incstack = 0
  4944                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  4945                           
  4946  06D1  1003               	clrc
  4947  06D2  0D72               	rlf	___fltol@f1+2,w
  4948  06D3  0D73               	rlf	___fltol@f1+3,w
  4949  06D4  00F4               	movwf	??___fltol
  4950  06D5  0874               	movf	??___fltol,w
  4951  06D6  00FA               	movwf	___fltol@exp1
  4952  06D7  087A               	movf	___fltol@exp1,w
  4953  06D8  1D03               	btfss	3,2
  4954  06D9  2EDB               	goto	u112_21
  4955  06DA  2EDC               	goto	u112_20
  4956  06DB                     u112_21:
  4957  06DB  2EE5               	goto	i1l1737
  4958  06DC                     u112_20:
  4959  06DC                     i1l1733:
  4960  06DC  3000               	movlw	0
  4961  06DD  00F3               	movwf	?___fltol+3
  4962  06DE  3000               	movlw	0
  4963  06DF  00F2               	movwf	?___fltol+2
  4964  06E0  3000               	movlw	0
  4965  06E1  00F1               	movwf	?___fltol+1
  4966  06E2  3000               	movlw	0
  4967  06E3  00F0               	movwf	?___fltol
  4968  06E4  2F4A               	goto	i1l517
  4969  06E5                     i1l1737:
  4970  06E5  0870               	movf	___fltol@f1,w
  4971  06E6  00F4               	movwf	??___fltol
  4972  06E7  0871               	movf	___fltol@f1+1,w
  4973  06E8  00F5               	movwf	??___fltol+1
  4974  06E9  0872               	movf	___fltol@f1+2,w
  4975  06EA  00F6               	movwf	??___fltol+2
  4976  06EB  0873               	movf	___fltol@f1+3,w
  4977  06EC  00F7               	movwf	??___fltol+3
  4978  06ED  301F               	movlw	31
  4979  06EE                     u113_25:
  4980  06EE  1003               	clrc
  4981  06EF  0CF7               	rrf	??___fltol+3,f
  4982  06F0  0CF6               	rrf	??___fltol+2,f
  4983  06F1  0CF5               	rrf	??___fltol+1,f
  4984  06F2  0CF4               	rrf	??___fltol,f
  4985  06F3                     u113_20:
  4986  06F3  3EFF               	addlw	-1
  4987  06F4  1D03               	skipz
  4988  06F5  2EEE               	goto	u113_25
  4989  06F6  0874               	movf	??___fltol,w
  4990  06F7  00F8               	movwf	??___fltol+4
  4991  06F8  0878               	movf	??___fltol+4,w
  4992  06F9  00F9               	movwf	___fltol@sign1
  4993  06FA                     i1l1739:
  4994  06FA  17F2               	bsf	___fltol@f1+2,7
  4995  06FB                     i1l1741:
  4996  06FB  30FF               	movlw	255
  4997  06FC  05F0               	andwf	___fltol@f1,f
  4998  06FD  30FF               	movlw	255
  4999  06FE  05F1               	andwf	___fltol@f1+1,f
  5000  06FF  30FF               	movlw	255
  5001  0700  05F2               	andwf	___fltol@f1+2,f
  5002  0701  3000               	movlw	0
  5003  0702  05F3               	andwf	___fltol@f1+3,f
  5004  0703                     i1l1743:
  5005  0703  3096               	movlw	150
  5006  0704  02FA               	subwf	___fltol@exp1,f
  5007  0705                     i1l1745:
  5008  0705  1FFA               	btfss	___fltol@exp1,7
  5009  0706  2F08               	goto	u114_21
  5010  0707  2F09               	goto	u114_20
  5011  0708                     u114_21:
  5012  0708  2F23               	goto	i1l1755
  5013  0709                     u114_20:
  5014  0709                     i1l1747:
  5015  0709  087A               	movf	___fltol@exp1,w
  5016  070A  3A80               	xorlw	128
  5017  070B  3E97               	addlw	151
  5018  070C  1803               	skipnc
  5019  070D  2F0F               	goto	u115_21
  5020  070E  2F10               	goto	u115_20
  5021  070F                     u115_21:
  5022  070F  2F11               	goto	i1l1753
  5023  0710                     u115_20:
  5024  0710  2EDC               	goto	i1l1733
  5025  0711                     i1l1753:
  5026  0711  3001               	movlw	1
  5027  0712                     u116_25:
  5028  0712  1003               	clrc
  5029  0713  0CF3               	rrf	___fltol@f1+3,f
  5030  0714  0CF2               	rrf	___fltol@f1+2,f
  5031  0715  0CF1               	rrf	___fltol@f1+1,f
  5032  0716  0CF0               	rrf	___fltol@f1,f
  5033  0717  3EFF               	addlw	-1
  5034  0718  1D03               	skipz
  5035  0719  2F12               	goto	u116_25
  5036  071A  3001               	movlw	1
  5037  071B  00F4               	movwf	??___fltol
  5038  071C  0874               	movf	??___fltol,w
  5039  071D  07FA               	addwf	___fltol@exp1,f
  5040  071E  1D03               	btfss	3,2
  5041  071F  2F21               	goto	u117_21
  5042  0720  2F22               	goto	u117_20
  5043  0721                     u117_21:
  5044  0721  2F11               	goto	i1l1753
  5045  0722                     u117_20:
  5046  0722  2F3A               	goto	i1l1763
  5047  0723                     i1l1755:
  5048  0723  3020               	movlw	32
  5049  0724  027A               	subwf	___fltol@exp1,w
  5050  0725  1C03               	skipc
  5051  0726  2F28               	goto	u118_21
  5052  0727  2F29               	goto	u118_20
  5053  0728                     u118_21:
  5054  0728  2F35               	goto	i1l524
  5055  0729                     u118_20:
  5056  0729  2EDC               	goto	i1l1733
  5057  072A                     i1l1761:
  5058  072A  3001               	movlw	1
  5059  072B  00F4               	movwf	??___fltol
  5060  072C                     u119_25:
  5061  072C  1003               	clrc
  5062  072D  0DF0               	rlf	___fltol@f1,f
  5063  072E  0DF1               	rlf	___fltol@f1+1,f
  5064  072F  0DF2               	rlf	___fltol@f1+2,f
  5065  0730  0DF3               	rlf	___fltol@f1+3,f
  5066  0731  0BF4               	decfsz	??___fltol,f
  5067  0732  2F2C               	goto	u119_25
  5068  0733  3001               	movlw	1
  5069  0734  02FA               	subwf	___fltol@exp1,f
  5070  0735                     i1l524:
  5071  0735  087A               	movf	___fltol@exp1,w
  5072  0736  1D03               	btfss	3,2
  5073  0737  2F39               	goto	u120_21
  5074  0738  2F3A               	goto	u120_20
  5075  0739                     u120_21:
  5076  0739  2F2A               	goto	i1l1761
  5077  073A                     u120_20:
  5078  073A                     i1l1763:
  5079  073A  0879               	movf	___fltol@sign1,w
  5080  073B  1903               	btfsc	3,2
  5081  073C  2F3E               	goto	u121_21
  5082  073D  2F3F               	goto	u121_20
  5083  073E                     u121_21:
  5084  073E  2F4A               	goto	i1l527
  5085  073F                     u121_20:
  5086  073F                     i1l1765:
  5087  073F  09F0               	comf	___fltol@f1,f
  5088  0740  09F1               	comf	___fltol@f1+1,f
  5089  0741  09F2               	comf	___fltol@f1+2,f
  5090  0742  09F3               	comf	___fltol@f1+3,f
  5091  0743  0AF0               	incf	___fltol@f1,f
  5092  0744  1903               	skipnz
  5093  0745  0AF1               	incf	___fltol@f1+1,f
  5094  0746  1903               	skipnz
  5095  0747  0AF2               	incf	___fltol@f1+2,f
  5096  0748  1903               	skipnz
  5097  0749  0AF3               	incf	___fltol@f1+3,f
  5098  074A                     i1l527:
  5099  074A                     i1l517:
  5100  074A  0008               	return
  5101  074B                     __end_of___fltol:
  5102                           
  5103                           	psect	text22
  5104  0D68                     __ptext22:	
  5105 ;; *************** function _Lcd_Write_String *****************
  5106 ;; Defined at:
  5107 ;;		line 97 in file "./lcd.h"
  5108 ;; Parameters:    Size  Location     Type
  5109 ;;  a               1    wreg     PTR unsigned char 
  5110 ;;		 -> buffer1(30), buffer0(30), 
  5111 ;; Auto vars:     Size  Location     Type
  5112 ;;  a               1    8[COMMON] PTR unsigned char 
  5113 ;;		 -> buffer1(30), buffer0(30), 
  5114 ;;  i               2    6[COMMON] int 
  5115 ;; Return value:  Size  Location     Type
  5116 ;;                  1    wreg      void 
  5117 ;; Registers used:
  5118 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5119 ;; Tracked objects:
  5120 ;;		On entry : 0/0
  5121 ;;		On exit  : 0/0
  5122 ;;		Unchanged: 0/0
  5123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5124 ;;      Params:         0       0       0       0       0
  5125 ;;      Locals:         3       0       0       0       0
  5126 ;;      Temps:          1       0       0       0       0
  5127 ;;      Totals:         4       0       0       0       0
  5128 ;;Total ram usage:        4 bytes
  5129 ;; Hardware stack levels used: 1
  5130 ;; Hardware stack levels required when called: 2
  5131 ;; This function calls:
  5132 ;;		_Lcd_Write_Char
  5133 ;; This function is called by:
  5134 ;;		_atualizaLCD
  5135 ;; This function uses a non-reentrant model
  5136 ;;
  5137                           
  5138                           
  5139                           ;psect for function _Lcd_Write_String
  5140  0D68                     _Lcd_Write_String:
  5141                           
  5142                           ;incstack = 0
  5143                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5144                           ;Lcd_Write_String@a stored from wreg
  5145  0D68  00F8               	movwf	Lcd_Write_String@a
  5146  0D69                     i1l1661:
  5147                           
  5148                           ;./lcd.h: 97: void Lcd_Write_String(char *a);./lcd.h: 98: {;./lcd.h: 99:  int i;;./lcd.h
      +                          : 100:  for(i=0;a[i]!='\0';i++)
  5149  0D69  01F6               	clrf	Lcd_Write_String@i
  5150  0D6A  01F7               	clrf	Lcd_Write_String@i+1
  5151  0D6B  2D7D               	goto	i1l1667
  5152  0D6C                     i1l1663:
  5153                           
  5154                           ;./lcd.h: 101:     Lcd_Write_Char(a[i]);
  5155  0D6C  0876               	movf	Lcd_Write_String@i,w
  5156  0D6D  0778               	addwf	Lcd_Write_String@a,w
  5157  0D6E  00F5               	movwf	??_Lcd_Write_String
  5158  0D6F  0875               	movf	??_Lcd_Write_String,w
  5159  0D70  0084               	movwf	4
  5160  0D71  0800               	movf	0,w
  5161  0D72  120A  158A  267B  120A  158A  	fcall	_Lcd_Write_Char
  5162  0D77                     i1l1665:
  5163  0D77  3001               	movlw	1
  5164  0D78  07F6               	addwf	Lcd_Write_String@i,f
  5165  0D79  1803               	skipnc
  5166  0D7A  0AF7               	incf	Lcd_Write_String@i+1,f
  5167  0D7B  3000               	movlw	0
  5168  0D7C  07F7               	addwf	Lcd_Write_String@i+1,f
  5169  0D7D                     i1l1667:
  5170  0D7D  0876               	movf	Lcd_Write_String@i,w
  5171  0D7E  0778               	addwf	Lcd_Write_String@a,w
  5172  0D7F  00F5               	movwf	??_Lcd_Write_String
  5173  0D80  0875               	movf	??_Lcd_Write_String,w
  5174  0D81  0084               	movwf	4
  5175  0D82  1383               	bcf	3,7	;select IRP bank0
  5176  0D83  0800               	movf	0,w
  5177  0D84  1D03               	btfss	3,2
  5178  0D85  2D87               	goto	u104_21
  5179  0D86  2D88               	goto	u104_20
  5180  0D87                     u104_21:
  5181  0D87  2D6C               	goto	i1l1663
  5182  0D88                     u104_20:
  5183  0D88                     i1l139:
  5184  0D88  0008               	return
  5185  0D89                     __end_of_Lcd_Write_String:
  5186                           
  5187                           	psect	text23
  5188  0E7B                     __ptext23:	
  5189 ;; *************** function _Lcd_Write_Char *****************
  5190 ;; Defined at:
  5191 ;;		line 81 in file "./lcd.h"
  5192 ;; Parameters:    Size  Location     Type
  5193 ;;  a               1    wreg     unsigned char 
  5194 ;; Auto vars:     Size  Location     Type
  5195 ;;  a               1    4[COMMON] unsigned char 
  5196 ;;  y               1    3[COMMON] unsigned char 
  5197 ;;  temp            1    2[COMMON] unsigned char 
  5198 ;; Return value:  Size  Location     Type
  5199 ;;                  1    wreg      void 
  5200 ;; Registers used:
  5201 ;;		wreg, status,2, status,0, pclath, cstack
  5202 ;; Tracked objects:
  5203 ;;		On entry : 0/0
  5204 ;;		On exit  : 0/0
  5205 ;;		Unchanged: 0/0
  5206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5207 ;;      Params:         0       0       0       0       0
  5208 ;;      Locals:         3       0       0       0       0
  5209 ;;      Temps:          1       0       0       0       0
  5210 ;;      Totals:         4       0       0       0       0
  5211 ;;Total ram usage:        4 bytes
  5212 ;; Hardware stack levels used: 1
  5213 ;; Hardware stack levels required when called: 1
  5214 ;; This function calls:
  5215 ;;		i1_Lcd_Port
  5216 ;; This function is called by:
  5217 ;;		_Lcd_Write_String
  5218 ;; This function uses a non-reentrant model
  5219 ;;
  5220                           
  5221                           
  5222                           ;psect for function _Lcd_Write_Char
  5223  0E7B                     _Lcd_Write_Char:
  5224                           
  5225                           ;incstack = 0
  5226                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  5227                           ;Lcd_Write_Char@a stored from wreg
  5228  0E7B  00F4               	movwf	Lcd_Write_Char@a
  5229  0E7C                     i1l1551:
  5230                           
  5231                           ;./lcd.h: 81: void Lcd_Write_Char(char a);./lcd.h: 82: {;./lcd.h: 83:    char temp,y;;./
      +                          lcd.h: 84:    temp = a&0x0F;
  5232  0E7C  0874               	movf	Lcd_Write_Char@a,w
  5233  0E7D  390F               	andlw	15
  5234  0E7E  00F1               	movwf	??_Lcd_Write_Char
  5235  0E7F  0871               	movf	??_Lcd_Write_Char,w
  5236  0E80  00F2               	movwf	Lcd_Write_Char@temp
  5237                           
  5238                           ;./lcd.h: 85:    y = a&0xF0;
  5239  0E81  0874               	movf	Lcd_Write_Char@a,w
  5240  0E82  39F0               	andlw	240
  5241  0E83  00F1               	movwf	??_Lcd_Write_Char
  5242  0E84  0871               	movf	??_Lcd_Write_Char,w
  5243  0E85  00F3               	movwf	Lcd_Write_Char@y
  5244  0E86                     i1l1553:
  5245                           
  5246                           ;./lcd.h: 86:    RB2 = 1;
  5247  0E86  1283               	bcf	3,5	;RP0=0, select bank0
  5248  0E87  1303               	bcf	3,6	;RP1=0, select bank0
  5249  0E88  1506               	bsf	6,2	;volatile
  5250  0E89                     i1l1555:
  5251                           
  5252                           ;./lcd.h: 87:    Lcd_Port(y>>4);
  5253  0E89  0873               	movf	Lcd_Write_Char@y,w
  5254  0E8A  00F1               	movwf	??_Lcd_Write_Char
  5255  0E8B  3004               	movlw	4
  5256  0E8C                     u86_25:
  5257  0E8C  1003               	clrc
  5258  0E8D  0CF1               	rrf	??_Lcd_Write_Char,f
  5259  0E8E  3EFF               	addlw	-1
  5260  0E8F  1D03               	skipz
  5261  0E90  2E8C               	goto	u86_25
  5262  0E91  0871               	movf	??_Lcd_Write_Char,w
  5263  0E92  120A  158A  2589  120A  158A  	fcall	i1_Lcd_Port
  5264  0E97                     i1l1557:
  5265                           
  5266                           ;./lcd.h: 88:    RB1 = 1;
  5267  0E97  1283               	bcf	3,5	;RP0=0, select bank0
  5268  0E98  1303               	bcf	3,6	;RP1=0, select bank0
  5269  0E99  1486               	bsf	6,1	;volatile
  5270  0E9A                     i1l1559:
  5271                           
  5272                           ;./lcd.h: 89:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  5273  0E9A  300D               	movlw	13
  5274  0E9B  00F1               	movwf	??_Lcd_Write_Char
  5275  0E9C                     u214_27:
  5276  0E9C  0BF1               	decfsz	??_Lcd_Write_Char,f
  5277  0E9D  2E9C               	goto	u214_27
  5278  0E9E                     i1l1561:
  5279                           
  5280                           ;./lcd.h: 90:    RB1 = 0;
  5281  0E9E  1283               	bcf	3,5	;RP0=0, select bank0
  5282  0E9F  1303               	bcf	3,6	;RP1=0, select bank0
  5283  0EA0  1086               	bcf	6,1	;volatile
  5284  0EA1                     i1l1563:
  5285                           
  5286                           ;./lcd.h: 91:    Lcd_Port(temp);
  5287  0EA1  0872               	movf	Lcd_Write_Char@temp,w
  5288  0EA2  120A  158A  2589  120A  158A  	fcall	i1_Lcd_Port
  5289  0EA7                     i1l1565:
  5290                           
  5291                           ;./lcd.h: 92:    RB1 = 1;
  5292  0EA7  1283               	bcf	3,5	;RP0=0, select bank0
  5293  0EA8  1303               	bcf	3,6	;RP1=0, select bank0
  5294  0EA9  1486               	bsf	6,1	;volatile
  5295  0EAA                     i1l1567:
  5296                           
  5297                           ;./lcd.h: 93:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  5298  0EAA  300D               	movlw	13
  5299  0EAB  00F1               	movwf	??_Lcd_Write_Char
  5300  0EAC                     u215_27:
  5301  0EAC  0BF1               	decfsz	??_Lcd_Write_Char,f
  5302  0EAD  2EAC               	goto	u215_27
  5303  0EAE                     i1l1569:
  5304                           
  5305                           ;./lcd.h: 94:    RB1 = 0;
  5306  0EAE  1283               	bcf	3,5	;RP0=0, select bank0
  5307  0EAF  1303               	bcf	3,6	;RP1=0, select bank0
  5308  0EB0  1086               	bcf	6,1	;volatile
  5309  0EB1                     i1l133:
  5310  0EB1  0008               	return
  5311  0EB2                     __end_of_Lcd_Write_Char:
  5312                           
  5313                           	psect	text24
  5314  0FAE                     __ptext24:	
  5315 ;; *************** function _Lcd_Set_Cursor *****************
  5316 ;; Defined at:
  5317 ;;		line 41 in file "./lcd.h"
  5318 ;; Parameters:    Size  Location     Type
  5319 ;;  a               1    wreg     unsigned char 
  5320 ;;  b               1    4[COMMON] unsigned char 
  5321 ;; Auto vars:     Size  Location     Type
  5322 ;;  a               1    7[COMMON] unsigned char 
  5323 ;;  temp            1   10[COMMON] unsigned char 
  5324 ;;  y               1    9[COMMON] unsigned char 
  5325 ;;  z               1    8[COMMON] unsigned char 
  5326 ;; Return value:  Size  Location     Type
  5327 ;;                  1    wreg      void 
  5328 ;; Registers used:
  5329 ;;		wreg, status,2, status,0, pclath, cstack
  5330 ;; Tracked objects:
  5331 ;;		On entry : 0/0
  5332 ;;		On exit  : 0/0
  5333 ;;		Unchanged: 0/0
  5334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5335 ;;      Params:         1       0       0       0       0
  5336 ;;      Locals:         4       0       0       0       0
  5337 ;;      Temps:          2       0       0       0       0
  5338 ;;      Totals:         7       0       0       0       0
  5339 ;;Total ram usage:        7 bytes
  5340 ;; Hardware stack levels used: 1
  5341 ;; Hardware stack levels required when called: 2
  5342 ;; This function calls:
  5343 ;;		i1_Lcd_Cmd
  5344 ;; This function is called by:
  5345 ;;		_atualizaLCD
  5346 ;; This function uses a non-reentrant model
  5347 ;;
  5348                           
  5349                           
  5350                           ;psect for function _Lcd_Set_Cursor
  5351  0FAE                     _Lcd_Set_Cursor:
  5352                           
  5353                           ;incstack = 0
  5354                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  5355                           ;Lcd_Set_Cursor@a stored from wreg
  5356  0FAE  00F7               	movwf	Lcd_Set_Cursor@a
  5357  0FAF                     i1l1641:
  5358                           
  5359                           ;./lcd.h: 41: void Lcd_Set_Cursor(char a, char b);./lcd.h: 42: {;./lcd.h: 43:  char temp
      +                          ,z,y;;./lcd.h: 44:  if(a == 1)
  5360  0FAF  0377               	decf	Lcd_Set_Cursor@a,w
  5361  0FB0  1D03               	btfss	3,2
  5362  0FB1  2FB3               	goto	u100_21
  5363  0FB2  2FB4               	goto	u100_20
  5364  0FB3                     u100_21:
  5365  0FB3  2FD7               	goto	i1l1651
  5366  0FB4                     u100_20:
  5367  0FB4                     i1l1643:
  5368                           
  5369                           ;./lcd.h: 45:  {;./lcd.h: 46:    temp = 0x80 + b - 1;
  5370  0FB4  0874               	movf	Lcd_Set_Cursor@b,w
  5371  0FB5  3E7F               	addlw	127
  5372  0FB6  00F5               	movwf	??_Lcd_Set_Cursor
  5373  0FB7  0875               	movf	??_Lcd_Set_Cursor,w
  5374  0FB8  00FA               	movwf	Lcd_Set_Cursor@temp
  5375                           
  5376                           ;./lcd.h: 47:   z = temp>>4;
  5377  0FB9  087A               	movf	Lcd_Set_Cursor@temp,w
  5378  0FBA  00F5               	movwf	??_Lcd_Set_Cursor
  5379  0FBB  3004               	movlw	4
  5380  0FBC                     u101_25:
  5381  0FBC  1003               	clrc
  5382  0FBD  0CF5               	rrf	??_Lcd_Set_Cursor,f
  5383  0FBE  3EFF               	addlw	-1
  5384  0FBF  1D03               	skipz
  5385  0FC0  2FBC               	goto	u101_25
  5386  0FC1  0875               	movf	??_Lcd_Set_Cursor,w
  5387  0FC2  00F6               	movwf	??_Lcd_Set_Cursor+1
  5388  0FC3  0876               	movf	??_Lcd_Set_Cursor+1,w
  5389  0FC4  00F8               	movwf	Lcd_Set_Cursor@z
  5390  0FC5                     i1l1645:
  5391                           
  5392                           ;./lcd.h: 48:   y = temp & 0x0F;
  5393  0FC5  087A               	movf	Lcd_Set_Cursor@temp,w
  5394  0FC6  390F               	andlw	15
  5395  0FC7  00F5               	movwf	??_Lcd_Set_Cursor
  5396  0FC8  0875               	movf	??_Lcd_Set_Cursor,w
  5397  0FC9  00F9               	movwf	Lcd_Set_Cursor@y
  5398  0FCA                     i1l1647:
  5399                           
  5400                           ;./lcd.h: 49:   Lcd_Cmd(z);
  5401  0FCA  0878               	movf	Lcd_Set_Cursor@z,w
  5402  0FCB  120A  158A  252E  120A  158A  	fcall	i1_Lcd_Cmd
  5403  0FD0                     i1l1649:
  5404                           
  5405                           ;./lcd.h: 50:   Lcd_Cmd(y);
  5406  0FD0  0879               	movf	Lcd_Set_Cursor@y,w
  5407  0FD1  120A  158A  252E  120A  158A  	fcall	i1_Lcd_Cmd
  5408                           
  5409                           ;./lcd.h: 51:  }
  5410  0FD6  2FFF               	goto	i1l127
  5411  0FD7                     i1l1651:
  5412  0FD7  3002               	movlw	2
  5413  0FD8  0677               	xorwf	Lcd_Set_Cursor@a,w
  5414  0FD9  1D03               	btfss	3,2
  5415  0FDA  2FDC               	goto	u102_21
  5416  0FDB  2FDD               	goto	u102_20
  5417  0FDC                     u102_21:
  5418  0FDC  2FFF               	goto	i1l127
  5419  0FDD                     u102_20:
  5420  0FDD                     i1l1653:
  5421                           
  5422                           ;./lcd.h: 53:  {;./lcd.h: 54:   temp = 0xC0 + b - 1;
  5423  0FDD  0874               	movf	Lcd_Set_Cursor@b,w
  5424  0FDE  3EBF               	addlw	191
  5425  0FDF  00F5               	movwf	??_Lcd_Set_Cursor
  5426  0FE0  0875               	movf	??_Lcd_Set_Cursor,w
  5427  0FE1  00FA               	movwf	Lcd_Set_Cursor@temp
  5428                           
  5429                           ;./lcd.h: 55:   z = temp>>4;
  5430  0FE2  087A               	movf	Lcd_Set_Cursor@temp,w
  5431  0FE3  00F5               	movwf	??_Lcd_Set_Cursor
  5432  0FE4  3004               	movlw	4
  5433  0FE5                     u103_25:
  5434  0FE5  1003               	clrc
  5435  0FE6  0CF5               	rrf	??_Lcd_Set_Cursor,f
  5436  0FE7  3EFF               	addlw	-1
  5437  0FE8  1D03               	skipz
  5438  0FE9  2FE5               	goto	u103_25
  5439  0FEA  0875               	movf	??_Lcd_Set_Cursor,w
  5440  0FEB  00F6               	movwf	??_Lcd_Set_Cursor+1
  5441  0FEC  0876               	movf	??_Lcd_Set_Cursor+1,w
  5442  0FED  00F8               	movwf	Lcd_Set_Cursor@z
  5443  0FEE                     i1l1655:
  5444                           
  5445                           ;./lcd.h: 56:   y = temp & 0x0F;
  5446  0FEE  087A               	movf	Lcd_Set_Cursor@temp,w
  5447  0FEF  390F               	andlw	15
  5448  0FF0  00F5               	movwf	??_Lcd_Set_Cursor
  5449  0FF1  0875               	movf	??_Lcd_Set_Cursor,w
  5450  0FF2  00F9               	movwf	Lcd_Set_Cursor@y
  5451  0FF3                     i1l1657:
  5452                           
  5453                           ;./lcd.h: 57:   Lcd_Cmd(z);
  5454  0FF3  0878               	movf	Lcd_Set_Cursor@z,w
  5455  0FF4  120A  158A  252E  120A  158A  	fcall	i1_Lcd_Cmd
  5456  0FF9                     i1l1659:
  5457                           
  5458                           ;./lcd.h: 58:   Lcd_Cmd(y);
  5459  0FF9  0879               	movf	Lcd_Set_Cursor@y,w
  5460  0FFA  120A  158A  252E  120A  158A  	fcall	i1_Lcd_Cmd
  5461  0FFF                     i1l127:
  5462  0FFF  0008               	return
  5463  1000                     __end_of_Lcd_Set_Cursor:
  5464                           
  5465                           	psect	text25
  5466  0CBA                     __ptext25:	
  5467 ;; *************** function _Lcd_Clear *****************
  5468 ;; Defined at:
  5469 ;;		line 35 in file "./lcd.h"
  5470 ;; Parameters:    Size  Location     Type
  5471 ;;		None
  5472 ;; Auto vars:     Size  Location     Type
  5473 ;;		None
  5474 ;; Return value:  Size  Location     Type
  5475 ;;                  1    wreg      void 
  5476 ;; Registers used:
  5477 ;;		wreg, status,2, status,0, pclath, cstack
  5478 ;; Tracked objects:
  5479 ;;		On entry : 0/0
  5480 ;;		On exit  : 0/0
  5481 ;;		Unchanged: 0/0
  5482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5483 ;;      Params:         0       0       0       0       0
  5484 ;;      Locals:         0       0       0       0       0
  5485 ;;      Temps:          0       0       0       0       0
  5486 ;;      Totals:         0       0       0       0       0
  5487 ;;Total ram usage:        0 bytes
  5488 ;; Hardware stack levels used: 1
  5489 ;; Hardware stack levels required when called: 2
  5490 ;; This function calls:
  5491 ;;		i1_Lcd_Cmd
  5492 ;; This function is called by:
  5493 ;;		_atualizaLCD
  5494 ;; This function uses a non-reentrant model
  5495 ;;
  5496                           
  5497                           
  5498                           ;psect for function _Lcd_Clear
  5499  0CBA                     _Lcd_Clear:
  5500  0CBA                     i1l1639:	
  5501                           ;incstack = 0
  5502                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  5503                           
  5504                           
  5505                           ;./lcd.h: 37:  Lcd_Cmd(0);
  5506  0CBA  3000               	movlw	0
  5507  0CBB  120A  158A  252E  120A  158A  	fcall	i1_Lcd_Cmd
  5508                           
  5509                           ;./lcd.h: 38:  Lcd_Cmd(1);
  5510  0CC0  3001               	movlw	1
  5511  0CC1  120A  158A  252E  120A  158A  	fcall	i1_Lcd_Cmd
  5512  0CC6                     i1l121:
  5513  0CC6  0008               	return
  5514  0CC7                     __end_of_Lcd_Clear:
  5515                           
  5516                           	psect	text26
  5517  0D2E                     __ptext26:	
  5518 ;; *************** function i1_Lcd_Cmd *****************
  5519 ;; Defined at:
  5520 ;;		line 26 in file "./lcd.h"
  5521 ;; Parameters:    Size  Location     Type
  5522 ;;  a               1    wreg     unsigned char 
  5523 ;; Auto vars:     Size  Location     Type
  5524 ;;  a               1    3[COMMON] unsigned char 
  5525 ;; Return value:  Size  Location     Type
  5526 ;;                  1    wreg      void 
  5527 ;; Registers used:
  5528 ;;		wreg, status,2, status,0, pclath, cstack
  5529 ;; Tracked objects:
  5530 ;;		On entry : 0/0
  5531 ;;		On exit  : 0/0
  5532 ;;		Unchanged: 0/0
  5533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5534 ;;      Params:         0       0       0       0       0
  5535 ;;      Locals:         1       0       0       0       0
  5536 ;;      Temps:          2       0       0       0       0
  5537 ;;      Totals:         3       0       0       0       0
  5538 ;;Total ram usage:        3 bytes
  5539 ;; Hardware stack levels used: 1
  5540 ;; Hardware stack levels required when called: 1
  5541 ;; This function calls:
  5542 ;;		i1_Lcd_Port
  5543 ;; This function is called by:
  5544 ;;		_Lcd_Clear
  5545 ;;		_Lcd_Set_Cursor
  5546 ;; This function uses a non-reentrant model
  5547 ;;
  5548                           
  5549                           
  5550                           ;psect for function i1_Lcd_Cmd
  5551  0D2E                     i1_Lcd_Cmd:
  5552                           
  5553                           ;incstack = 0
  5554                           ; Regs used in i1_Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  5555                           ;i1Lcd_Cmd@a stored from wreg
  5556  0D2E  00F3               	movwf	i1Lcd_Cmd@a
  5557  0D2F                     i1l1619:
  5558                           
  5559                           ;./lcd.h: 26: void Lcd_Cmd(char a);./lcd.h: 27: {;./lcd.h: 28:  RB2 = 0;
  5560  0D2F  1283               	bcf	3,5	;RP0=0, select bank0
  5561  0D30  1303               	bcf	3,6	;RP1=0, select bank0
  5562  0D31  1106               	bcf	6,2	;volatile
  5563  0D32                     i1l1621:
  5564                           
  5565                           ;./lcd.h: 29:  Lcd_Port(a);
  5566  0D32  0873               	movf	i1Lcd_Cmd@a,w
  5567  0D33  120A  158A  2589  120A  158A  	fcall	i1_Lcd_Port
  5568  0D38                     i1l1623:
  5569                           
  5570                           ;./lcd.h: 30:  RB1 = 1;
  5571  0D38  1283               	bcf	3,5	;RP0=0, select bank0
  5572  0D39  1303               	bcf	3,6	;RP1=0, select bank0
  5573  0D3A  1486               	bsf	6,1	;volatile
  5574  0D3B                     i1l1625:
  5575                           
  5576                           ;./lcd.h: 31:         _delay((unsigned long)((4)*(4000000/4000.0)));
  5577  0D3B  3006               	movlw	6
  5578  0D3C  00F2               	movwf	??i1_Lcd_Cmd+1
  5579  0D3D  3030               	movlw	48
  5580  0D3E  00F1               	movwf	??i1_Lcd_Cmd
  5581  0D3F                     u216_27:
  5582  0D3F  0BF1               	decfsz	??i1_Lcd_Cmd,f
  5583  0D40  2D3F               	goto	u216_27
  5584  0D41  0BF2               	decfsz	??i1_Lcd_Cmd+1,f
  5585  0D42  2D3F               	goto	u216_27
  5586  0D43  0000               	nop
  5587  0D44                     i1l1627:
  5588                           
  5589                           ;./lcd.h: 32:         RB1 = 0;
  5590  0D44  1283               	bcf	3,5	;RP0=0, select bank0
  5591  0D45  1303               	bcf	3,6	;RP1=0, select bank0
  5592  0D46  1086               	bcf	6,1	;volatile
  5593  0D47                     i1l118:
  5594  0D47  0008               	return
  5595  0D48                     __end_ofi1_Lcd_Cmd:
  5596                           
  5597                           	psect	text27
  5598  0D89                     __ptext27:	
  5599 ;; *************** function i1_Lcd_Port *****************
  5600 ;; Defined at:
  5601 ;;		line 4 in file "./lcd.h"
  5602 ;; Parameters:    Size  Location     Type
  5603 ;;  a               1    wreg     unsigned char 
  5604 ;; Auto vars:     Size  Location     Type
  5605 ;;  a               1    0[COMMON] unsigned char 
  5606 ;; Return value:  Size  Location     Type
  5607 ;;                  1    wreg      void 
  5608 ;; Registers used:
  5609 ;;		wreg
  5610 ;; Tracked objects:
  5611 ;;		On entry : 0/0
  5612 ;;		On exit  : 0/0
  5613 ;;		Unchanged: 0/0
  5614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5615 ;;      Params:         0       0       0       0       0
  5616 ;;      Locals:         1       0       0       0       0
  5617 ;;      Temps:          0       0       0       0       0
  5618 ;;      Totals:         1       0       0       0       0
  5619 ;;Total ram usage:        1 bytes
  5620 ;; Hardware stack levels used: 1
  5621 ;; This function calls:
  5622 ;;		Nothing
  5623 ;; This function is called by:
  5624 ;;		_Lcd_Write_Char
  5625 ;;		i1_Lcd_Cmd
  5626 ;; This function uses a non-reentrant model
  5627 ;;
  5628                           
  5629                           
  5630                           ;psect for function i1_Lcd_Port
  5631  0D89                     i1_Lcd_Port:
  5632                           
  5633                           ;incstack = 0
  5634                           ; Regs used in i1_Lcd_Port: [wreg]
  5635                           ;i1Lcd_Port@a stored from wreg
  5636  0D89  00F0               	movwf	i1Lcd_Port@a
  5637  0D8A                     i1l1531:
  5638                           
  5639                           ;./lcd.h: 4: void Lcd_Port(char a);./lcd.h: 5: {;./lcd.h: 6:  if(a & 1)
  5640  0D8A  1C70               	btfss	i1Lcd_Port@a,0
  5641  0D8B  2D8D               	goto	u78_21
  5642  0D8C  2D8E               	goto	u78_20
  5643  0D8D                     u78_21:
  5644  0D8D  2D92               	goto	i1l107
  5645  0D8E                     u78_20:
  5646  0D8E                     i1l1533:
  5647                           
  5648                           ;./lcd.h: 7:   RB4 = 1;
  5649  0D8E  1283               	bcf	3,5	;RP0=0, select bank0
  5650  0D8F  1303               	bcf	3,6	;RP1=0, select bank0
  5651  0D90  1606               	bsf	6,4	;volatile
  5652  0D91  2D95               	goto	i1l108
  5653  0D92                     i1l107:	
  5654                           ;./lcd.h: 8:  else
  5655                           
  5656                           
  5657                           ;./lcd.h: 9:   RB4 = 0;
  5658  0D92  1283               	bcf	3,5	;RP0=0, select bank0
  5659  0D93  1303               	bcf	3,6	;RP1=0, select bank0
  5660  0D94  1206               	bcf	6,4	;volatile
  5661  0D95                     i1l108:
  5662                           
  5663                           ;./lcd.h: 11:  if(a & 2)
  5664  0D95  1CF0               	btfss	i1Lcd_Port@a,1
  5665  0D96  2D98               	goto	u79_21
  5666  0D97  2D99               	goto	u79_20
  5667  0D98                     u79_21:
  5668  0D98  2D9B               	goto	i1l109
  5669  0D99                     u79_20:
  5670  0D99                     i1l1535:
  5671                           
  5672                           ;./lcd.h: 12:   RB5 = 1;
  5673  0D99  1686               	bsf	6,5	;volatile
  5674  0D9A  2D9C               	goto	i1l110
  5675  0D9B                     i1l109:	
  5676                           ;./lcd.h: 13:  else
  5677                           
  5678                           
  5679                           ;./lcd.h: 14:   RB5 = 0;
  5680  0D9B  1286               	bcf	6,5	;volatile
  5681  0D9C                     i1l110:
  5682                           
  5683                           ;./lcd.h: 16:  if(a & 4)
  5684  0D9C  1D70               	btfss	i1Lcd_Port@a,2
  5685  0D9D  2D9F               	goto	u80_21
  5686  0D9E  2DA0               	goto	u80_20
  5687  0D9F                     u80_21:
  5688  0D9F  2DA2               	goto	i1l111
  5689  0DA0                     u80_20:
  5690  0DA0                     i1l1537:
  5691                           
  5692                           ;./lcd.h: 17:   RB6 = 1;
  5693  0DA0  1706               	bsf	6,6	;volatile
  5694  0DA1  2DA3               	goto	i1l112
  5695  0DA2                     i1l111:	
  5696                           ;./lcd.h: 18:  else
  5697                           
  5698                           
  5699                           ;./lcd.h: 19:   RB6 = 0;
  5700  0DA2  1306               	bcf	6,6	;volatile
  5701  0DA3                     i1l112:
  5702                           
  5703                           ;./lcd.h: 21:  if(a & 8)
  5704  0DA3  1DF0               	btfss	i1Lcd_Port@a,3
  5705  0DA4  2DA6               	goto	u81_21
  5706  0DA5  2DA7               	goto	u81_20
  5707  0DA6                     u81_21:
  5708  0DA6  2DA9               	goto	i1l113
  5709  0DA7                     u81_20:
  5710  0DA7                     i1l1539:
  5711                           
  5712                           ;./lcd.h: 22:   RB7 = 1;
  5713  0DA7  1786               	bsf	6,7	;volatile
  5714  0DA8  2DAA               	goto	i1l115
  5715  0DA9                     i1l113:	
  5716                           ;./lcd.h: 23:  else
  5717                           
  5718                           
  5719                           ;./lcd.h: 24:   RB7 = 0;
  5720  0DA9  1386               	bcf	6,7	;volatile
  5721  0DAA                     i1l115:
  5722  0DAA  0008               	return
  5723  0DAB                     __end_ofi1_Lcd_Port:
  5724  007E                     btemp	set	126	;btemp
  5725  007E                     wtemp0	set	126
  5726                           
  5727                           	psect	config
  5728                           
  5729                           ;Config register CONFIG @ 0x2007
  5730                           ;	Oscillator Selection bits
  5731                           ;	FOSC = HS, HS oscillator
  5732                           ;	Watchdog Timer Enable bit
  5733                           ;	WDTE = ON, WDT enabled
  5734                           ;	Power-up Timer Enable bit
  5735                           ;	PWRTE = ON, PWRT enabled
  5736                           ;	Brown-out Reset Enable bit
  5737                           ;	BOREN = ON, BOR enabled
  5738                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  5739                           ;	LVP = 0x1, unprogrammed default
  5740                           ;	Data EEPROM Memory Code Protection bit
  5741                           ;	CPD = 0x1, unprogrammed default
  5742                           ;	Flash Program Memory Write Enable bits
  5743                           ;	WRT = 0x3, unprogrammed default
  5744                           ;	In-Circuit Debugger Mode bit
  5745                           ;	DEBUG = 0x1, unprogrammed default
  5746                           ;	Flash Program Memory Code Protection bit
  5747                           ;	CP = 0x1, unprogrammed default
  5748  2007                     	org	8199
  5749  2007  3FF6               	dw	16374

Data Sizes:
    Strings     40
    Constant    10
    Data        60
    BSS         28
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     28      56
    BANK1            80     18      78
    BANK3            96      3       3
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_2(CODE[19]), STR_1(CODE[21]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 30
		 -> buffer1(BANK1[30]), buffer0(BANK1[30]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 30
		 -> buffer1(BANK1[30]), buffer0(BANK1[30]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _TrataINT in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->i1_Lcd_Port
    _Lcd_Set_Cursor->i1_Lcd_Cmd
    _Lcd_Clear->i1_Lcd_Cmd
    i1_Lcd_Cmd->i1_Lcd_Port

Critical Paths under _main in BANK0

    None.

Critical Paths under _TrataINT in BANK0

    _TrataINT->_atualizaLCD
    _atualizaLCD->_sprintf

Critical Paths under _main in BANK1

    _main->_lerSensores
    _lerSensores->___xxtofl
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _TrataINT in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TrataINT in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TrataINT in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3451
                                              0 BANK3      3     3      0
                           _Lcd_Init
                             ___flge
                         _estufaDois
                       _estufaQuatro
                         _estufaTres
                           _estufaUm
                        _expandeTela
                        _iniciaPinos
                        _lerSensores
                        _recolheTela
 ---------------------------------------------------------------------------------
 (1) _recolheTela                                          3     3      0       0
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (1) _lerSensores                                          4     4      0    1106
                                             14 BANK1      4     4      0
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1106
                                              0 BANK1     14    10      4
 ---------------------------------------------------------------------------------
 (1) _iniciaPinos                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _expandeTela                                          3     3      0       0
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (1) _estufaUm                                             3     3      0       0
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (1) _estufaTres                                           3     3      0       0
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (1) _estufaQuatro                                         3     3      0       0
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (1) _estufaDois                                           3     3      0       0
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (1) ___flge                                              12     4      8    2066
                                              0 BANK1     12     4      8
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     279
                                              4 BANK1      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     155
                                              1 BANK1      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Port                                             1     1      0     124
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _TrataINT                                             7     7      0    3057
                                             21 BANK0      7     7      0
                        _atualizaLCD
                      i1_expandeTela
                      i1_recolheTela
 ---------------------------------------------------------------------------------
 (5) i1_recolheTela                                        3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (5) i1_expandeTela                                        3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (5) _atualizaLCD                                          2     2      0    3057
                                             19 BANK0      2     2      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___fltol
                            _sprintf
 ---------------------------------------------------------------------------------
 (6) _sprintf                                             27    18      9    1320
                                              0 BANK0     19    10      9
                            ___fltol (ARG)
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             11     7      4     761
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (6) _Lcd_Write_String                                     4     4      0     334
                                              5 COMMON     4     4      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (7) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                         i1_Lcd_Port
 ---------------------------------------------------------------------------------
 (6) _Lcd_Set_Cursor                                       7     6      1     532
                                              4 COMMON     7     6      1
                          i1_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (6) _Lcd_Clear                                            0     0      0     110
                          i1_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (7) i1_Lcd_Cmd                                            3     3      0     110
                                              1 COMMON     3     3      0
                         i1_Lcd_Port
 ---------------------------------------------------------------------------------
 (8) i1_Lcd_Port                                           1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   ___flge
   _estufaDois
   _estufaQuatro
   _estufaTres
   _estufaUm
   _expandeTela
   _iniciaPinos
   _lerSensores
     ___xxtofl
   _recolheTela

 _TrataINT (ROOT)
   _atualizaLCD
     _Lcd_Clear
       i1_Lcd_Cmd
         i1_Lcd_Port
     _Lcd_Set_Cursor
       i1_Lcd_Cmd
     _Lcd_Write_String
       _Lcd_Write_Char
         i1_Lcd_Port
     ___fltol
     _sprintf
       ___fltol (ARG)
       ___lwdiv (ARG)
       ___lwmod (ARG)
         ___lwdiv (ARG)
   i1_expandeTela
   i1_recolheTela

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      3       3       9        3.1%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     12      4E       7       97.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1C      38       5       70.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      97      12        0.0%
ABS                  0      0      97       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu May 06 04:10:03 2021

                        pc 0002                         fsr 0004                        l110 0E60  
                      l111 0E6A                        l112 0E6D                        l113 0E77  
                      l130 07AD                        l202 0D03                        l115 0E7A  
                      l107 0E50                        l211 0E1D                        l108 0E53  
                      l109 0E5D                        l205 03A8                        l118 0D67  
                      l208 0E44                        l217 07FF                        l171 00A2  
                      l172 00F9                        l174 0150                        l176 01A7  
                      l168 0039                        l505 064B                        l193 0D2D  
                      l169 006E                        l508 06B7                        l196 0CEE  
                      l509 06D0                        l199 0D18                        l770 05DA  
                      l764 0595                        l766 062C                        l777 05F6  
                      l778 0602                        _RB1 0031                        _RB2 0032  
                      _RC0 0038                        _RC1 0039                        _RB4 0034  
                      _RD0 0040                        _RC2 003A                        _RB5 0035  
                      _RD1 0041                        _RC3 003B                        _RB6 0036  
                      _RC4 003C                        _RD2 0042                        _RB7 0037  
                      _RC5 003D                        _RD3 0043                        _RC6 003E  
                      _RD4 0044                        _RC7 003F                        _RD5 0045  
                      _RD6 0046                        _RD7 0047                        fsr0 0004  
                      indf 0000               ?_atualizaLCD 0070               ___fltol@exp1 007A  
                     l2201 05A6                       l2211 05D1                       l2203 05AB  
                     l2301 07F4                       l2221 0604                       l2213 05E1  
                     l2205 05B8                       l2311 07F9                       l2303 07F5  
                     l2223 061A                       l2215 05EC                       l2207 05BF  
                     l2241 0773                       l2233 074B                       l2401 0E13  
                     l2321 07FE                       l2313 07FA                       l2305 07F6  
                     l2225 061F                       l2217 05F0                       l2209 05C3  
                     l2171 0E4C                       l2235 0751                       l2411 0E1A  
                     l2403 0E16                       l2315 07FB                       l2307 07F7  
                     l2251 07D5                       l2243 07AE                       l2227 0623  
                     l2219 05FA                       l2331 024C                       l2173 0E59  
                     l2181 0D4E                       l2237 075C                       l2413 0E1B  
                     l2405 0E17                       l2317 07FC                       l2309 07F8  
                     l2261 07DA                       l2253 07D6                       l2245 07C7  
                     l2229 0624                       l2341 0286                       l2333 024D  
                     l2325 0210                       l2421 0E2C                       l2501 0097  
                     l2175 0E66                       l2183 0D56                       l2239 076D  
                     l2415 0E1C                       l2407 0E18                       l2319 07FD  
                     l2271 07E3                       l2263 07DB                       l2255 07D7  
                     l2247 07CB                       l2191 0579                       l2351 0291  
                     l2343 0287                       l2335 024E                       l2327 0216  
                     l2431 0E40                       l2423 0E3A                       l2511 014B  
                     l2503 009D                       l2177 0E73                       l2169 0E48  
                     l2185 0D59                       l2441 0D19                       l2409 0E19  
                     l2281 07EA                       l2273 07E6                       l2265 07DE  
                     l2257 07D8                       l2249 07CE                       l2193 057D  
                     l2361 02CB                       l2353 02C0                       l2345 0288  
                     l2337 024F                       l2329 021D                       l2433 0E41  
                     l2425 0E3D                       l2521 01FE                       l2513 0179  
                     l2505 00CB                       l2187 0D64                       l2179 0D4B  
                     l2451 0CDD                       l2443 0D1C                       l2291 07EF  
                     l2283 07EB                       l2275 07E7                       l2267 07DF  
                     l2259 07D9                       l2195 058D                       l2371 02FE  
                     l2363 02FA                       l2355 02C1                       l2347 0289  
                     l2339 0250                       l2435 0E42                       l2427 0E3E  
                     l2419 0E1E                       l2515 01A2                       l2507 00F4  
                     l2453 0CEB                       l2461 0D15                       l2445 0D2A  
                     l2293 07F0                       l2285 07EC                       l2277 07E8  
                     l2269 07E2                       l2197 059D                       l2189 0574  
                     l2381 0338                       l2373 0334                       l2365 02FB  
                     l2357 02C2                       l2349 028A                       l2437 0E43  
                     l2429 0E3F                       l2517 01D0                       l2509 0122  
                     l2295 07F1                       l2287 07ED                       l2279 07E9  
                     l2391 0371                       l2383 033F                       l2375 0335  
                     l2367 02FC                       l2359 02C3                       l2519 01F9  
                     l2481 066B                       l2473 062D                       l2449 0CDA  
                     l2465 0CEF                       l2457 0D04                       l2297 07F2  
                     l2289 07EE                       l2393 0379                       l2385 036E  
                     l2377 0336                       l2369 02FD                       l2483 068F  
                     l2475 0643                       l2467 0CF2                       l2459 0D07  
                     l2299 07F3                       l2387 036F                       l2379 0337  
                     l2485 0693                       l2477 065F                       l2469 0D00  
                     l2397 0DF7                       l2389 0370                       l2487 06CD  
                     l2479 0667                       l2399 0E05                       l2489 06CF  
                     l2497 002F                       l2499 0069                       STR_1 0810  
                     STR_2 0825                       u2007 0D24                       u2017 0D0F  
                     u2027 0CFA                       u2037 0CE5                       u2047 0757  
                     u1600 057D                       u2057 0768                       u1601 057C  
                     u1610 059D                       u2067 0779                       u1611 059C  
                     u1700 060F                       u2077 0D5F                       u1550 0E4C  
                     u1710 061F                       u1630 05BE                       u1551 0E4B  
                     u1711 061E                       u1631 05BD                       u1560 0E59  
                     u1720 0623                       u1800 0069                       u1561 0E58  
                     u1721 0622                       u1705 060A                       u1625 05B0  
                     u1801 0068                       u1570 0E66                       u1730 0643  
                     u1650 05E0                       u1810 0097                       u1571 0E65  
                     u1731 0642                       u1651 05DF                       u1811 0096  
                     u1580 0E73                       u1740 065F                       u1820 00CB  
                     u1581 0E72                       u1741 065E                       u1645 05D2  
                     u1821 00CA                       u1750 066B                       u1670 05F0  
                     u1590 0579                       u1830 00F4                       u1751 066A  
                     u1671 05EF                       u1591 0578                       u1831 00F3  
                     u1680 05F6                       u1840 0122                       u1761 067A  
                     u1681 05F5                       u1665 05E5                       u1841 0121  
                     u1770 0693                       u1762 067B                       u1690 05FA  
                     u1850 014B                       u1771 0692                       u1763 0680  
                     u1691 05F9                       u1907 0206                       u1851 014A  
                     u1764 0681                       u1860 0179                       u1781 06A2  
                     u1765 0686                       u1917 0E34                       u1861 0178  
                     u1790 06CD                       u1782 06A3                       u1766 0687  
                     u1870 01A2                       u1791 06CC                       u1783 06A8  
                     u1927 021A                       u1871 01A1                       u1784 06A9  
                     u1880 01D0                       u1785 06AE                       u1937 0254  
                     u1881 01CF                       u1786 06AF                       u1890 01F9  
                     u1795 06C9                       u1947 028E                       u1891 01F8  
                     u1957 02C8                       _INTF 0059                       u1967 0302  
                     u1977 033C                       u1987 0376                       u1997 0E0D  
             ?_lerSensores 0070          ?_Lcd_Write_String 0070                       _main 002F  
                     btemp 007E               ?_iniciaPinos 0070                       start 0012  
       ??_Lcd_Write_String 0075            __end_of_Lcd_Cmd 0D68              ___fltol@sign1 0079  
                    ?_main 0070            __end_of___fltol 074B            __end_of___lwdiv 0FAE  
                    i1l110 0D9C                      i1l111 0DA2                      i1l112 0DA3  
                    i1l113 0DA9                      i1l121 0CC6                      i1l115 0DAA  
                    i1l107 0D92                      i1l211 0DD0                      i1l108 0D95  
                    i1l109 0D9B                      i1l133 0EB1                      i1l118 0D47  
                    i1l214 0570                      i1l127 0FFF                      i1l208 0DF6  
                    i1l139 0D88                      i1l190 0F5F                      i1l327 0490  
          __end_of___lwmod 0EEC                      i1l603 0FAD                      i1l187 0F4A  
                    i1l524 0735                      i1l517 074A                      i1l613 0EEB  
                    i1l527 074A                      _TMR1H 000F                      _TMR1L 000E  
                    u80_20 0DA0                      u80_21 0D9F                      u81_20 0DA7  
                    u81_21 0DA6    __size_of_Lcd_Set_Cursor 0052                      _TRISA 0085  
                    _TRISC 0087                      _TRISD 0088                      u90_25 0F85  
                    u91_20 0F95                      u91_21 0F94                      u91_25 0F91  
                    u92_25 0F9D                      u93_20 0FA9                      u93_21 0FA8  
                    u78_20 0D8E                      u94_20 0EB8                      u78_21 0D8D  
                    u94_21 0EB7                      u86_25 0E8C                      u79_20 0D99  
                    u87_20 0F72                      u79_21 0D98                      u87_21 0F71  
                    u95_25 0EBC                      u96_20 0ECA                      u96_21 0EC9  
                    u88_25 0F76                      u89_20 0F84                      u97_20 0ED4  
                    u89_21 0F83                      u97_21 0ED3                      u97_25 0ED0  
                    u98_25 0EDB                      u99_20 0EE7                      u99_21 0EE6  
              ?i1_Lcd_Port 0070         __size_ofi1_Lcd_Cmd 001A            __end_of_dpowers 0810  
             ?_expandeTela 0070                      pclath 000A                      status 0003  
                    wtemp0 007E            __end_of_sprintf 0491           __end_of_Lcd_Init 07AE  
         __end_of_Lcd_Port 0E7B            __initialization 0015               __end_of_main 0210  
             ?_recolheTela 0070                     ??_main 0190         __size_of_Lcd_Clear 000D  
         __end_of_TrataINT 0F6A                     _ADRESH 001E                     _ADRESL 009E  
                   u100_20 0FB4                     u100_21 0FB3                     u101_25 0FBC  
                   u102_20 0FDD                     u110_20 047A                     u102_21 0FDC  
                   u110_21 0479                     u111_20 048C                     u111_21 048B  
                   i1l2121 0F2C                     i1l2051 0491                     i1l1411 0DEC  
                   i1l2131 0F46                     i1l2123 0F2D                     u103_25 0FE5  
                   i1l2061 0551                     i1l2053 049E                     i1l1421 0DF3  
                   i1l1413 0DEF                     i1l2141 0F5C                     i1l2133 0F4E  
                   i1l2125 0F32                     i1l2063 0557                     i1l2055 04F6  
                   i1l1431 0DB9                     i1l1423 0DF4                     i1l1415 0DF0  
                   i1l1407 0DD1                     i1l2135 0F4F                     i1l2127 0F40  
                   i1l2119 0F28                     u104_20 0D88                     u120_20 073A  
                   u112_20 06DC                     u104_21 0D87                     u120_21 0739  
                   u112_21 06DB                     i1l1601 0EBB                     i1l2065 0565  
                   i1l2057 0501                     i1l1441 0DCC                     i1l1433 0DC6  
                   i1l1425 0DF5                     i1l1417 0DF1                     i1l1409 0DDF  
                   i1l2137 0F54                     i1l2129 0F45                     i1l1531 0D8A  
                   i1l1611 0EDA                     i1l1603 0EC2                     i1l2059 0546  
                   i1l1443 0DCD                     i1l1435 0DC9                     i1l1419 0DF2  
                   i1l2139 0F57                     i1l1533 0D8E                     i1l1621 0D32  
                   i1l1613 0EE1                     i1l1605 0EC6                     i1l1445 0DCE  
                   i1l1437 0DCA                     i1l1429 0DAB                     i1l1535 0D99  
                   i1l1623 0D38                     i1l1551 0E7C                     i1l1607 0ECA  
                   i1l1615 0EE7                     i1l1711 0433                     i1l1703 0418  
                   i1l1447 0DCF                     i1l1439 0DCB                     u121_20 073F  
                   u113_20 06F3                     u105_20 03B7                     i1l1537 0DA0  
                   i1l1625 0D3B                     i1l1641 0FAF                     i1l1561 0E9E  
                   i1l1553 0E86                     u121_21 073E                     i1l1609 0ED4  
                   i1l1713 0438                     i1l1705 0422                     u105_21 03B6  
                   i1l1721 047A                     i1l1539 0DA7                     i1l1627 0D44  
                   i1l1619 0D2F                     i1l1643 0FB4                     i1l1651 0FD7  
                   i1l1563 0EA1                     i1l1555 0E89                     i1l1731 06D1  
                   i1l1571 0F6A                     i1l1715 0466                     i1l1707 0428  
                   i1l1723 048C                     i1l1653 0FDD                     i1l1645 0FC5  
                   i1l1565 0EA7                     i1l1557 0E97                     i1l1661 0D69  
                   i1l1741 06FB                     u113_25 06EE                     i1l1733 06DC  
                   i1l1581 0F80                     i1l1573 0F6C                     i1l1717 046D  
                   i1l1709 042F                     i1l1639 0CBA                     i1l1655 0FEE  
                   i1l1647 0FCA                     i1l1567 0EAA                     i1l1559 0E9A  
                   i1l1663 0D6C                     i1l1743 0703                     i1l1591 0FA3  
                   i1l1583 0F84                     i1l1575 0F72                     i1l1719 0471  
                   i1l2543 03D6                     i1l1671 03B1                     u114_20 0709  
                   u106_20 03F1                     i1l1657 0FF3                     i1l1649 0FD0  
                   i1l1569 0EAE                     i1l1665 0D77                     i1l1761 072A  
                   i1l1753 0711                     u114_21 0708                     i1l1745 0705  
                   i1l1737 06E5                     i1l1585 0F95                     i1l1577 0F75  
                   i1l1593 0FA9                     u106_21 03F0                     i1l1681 03C4  
                   i1l1673 03B7                     i1l1659 0FF9                     i1l1667 0D7D  
                   i1l1763 073A                     i1l1747 0709                     i1l1755 0723  
                   i1l1739 06FA                     i1l1587 0F9B                     i1l1579 0F7C  
                   i1l1691 03F5                     i1l1683 03E1                     i1l1675 03BE  
                   i1l1765 073F                     i1l1589 0F9C                     i1l1597 0EB2  
                   i1l1693 03FA                     i1l1685 03E9                     i1l1677 03C3  
                   i1l1669 03AC                     i1l1599 0EB8                     i1l1687 03ED  
                   u210_27 0DBF                     u115_20 0710                     u107_20 0417  
                   u115_21 070F                     u107_21 0416                     i1l1689 03F1  
                   i1l1699 03FC                     u107_25 0413                     u211_27 04FC  
                   u108_20 0422                     u108_21 0421                     u116_25 0712  
                   u212_27 054C                     u117_20 0722                     u109_20 0428  
                   u117_21 0721                     u109_21 0427                     u213_27 056B  
                   u118_20 0729                     u118_21 0728                     u214_27 0E9C  
                   u119_25 072C                     u215_27 0EAC                     u216_27 0D3F  
                   u208_27 0F3A                     u153_20 0F2C                     u153_21 0F2B  
                   u209_27 0DE5                     u154_20 0F4E                     u154_21 0F4D  
                ??_Lcd_Cmd 00DD                     _TMR1IF 0060    __size_of_Lcd_Write_Char 0037  
         __end_of___xxtofl 062D        __size_ofi1_Lcd_Port 0022          __end_ofi1_Lcd_Cmd 0D48  
                   ___flge 062D                  ??___fltol 0074                  ??___lwdiv 0074  
                ??___lwmod 007C           __end_of_estufaUm 0D2E              ?_estufaQuatro 0070  
                   saved_w 007E                  ??_sprintf 0045       __size_of_atualizaLCD 00E0  
          Lcd_Set_Cursor@a 0077            Lcd_Set_Cursor@b 0074            Lcd_Set_Cursor@y 0079  
          Lcd_Set_Cursor@z 0078                 ___flge@ff1 00DC                 ___flge@ff2 00E0  
             ___xxtofl@arg 00E6               ___xxtofl@exp 00E5               ___xxtofl@val 00DC  
  __end_of__initialization 002B          __end_of_Lcd_Clear 0CC7       __size_of_lerSensores 0199  
               ___fltol@f1 0070       __size_of_iniciaPinos 0052             __pcstackCOMMON 0070  
             __pidataBANK1 0EEC     __size_ofi1_expandeTela 0026             ??_estufaQuatro 00DC  
           _Lcd_Set_Cursor 0FAE             _OPTION_REGbits 0081                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070                 __pbssBANK0 0020     __size_ofi1_recolheTela 0026  
     __size_of_expandeTela 0027                 __pmaintext 002F                    ?___flge 00DC  
                ?_TrataINT 0070                 __pintentry 0004  __size_of_Lcd_Write_String 0021  
   __end_of_Lcd_Set_Cursor 1000       __size_of_recolheTela 0027                  ?___xxtofl 00DC  
             ??i1_Lcd_Port 0070                 ??_Lcd_Init 00E0                 ??_Lcd_Port 00DC  
               __stringtab 0800              i1_expandeTela 0DAB             _Lcd_Write_Char 0E7B  
                  _Lcd_Cmd 0D48                  ?_estufaUm 0070         __end_ofi1_Lcd_Port 0DAB  
               ??_TrataINT 0051            __size_of___flge 00A4                    ___fltol 06D1  
                  ___lwdiv 0F6A                    ___lwmod 0EB2              i1_recolheTela 0DD1  
          ?_Lcd_Set_Cursor 0074                    __ptext1 0E1E                    __ptext2 0210  
                  __ptext3 0571                    __ptext4 07AE                    __ptext5 0DF7  
                  __ptext6 0D19                    __ptext7 0D04                    __ptext8 0CEF  
                  __ptext9 0CDA                    _buffer0 00BE                    _buffer1 00A0  
               _estufaDois 0CDA                  _T1CONbits 0010                 _estufaTres 0D04  
                  _dpowers 0806                 ??___xxtofl 00E0                    _sprintf 03A9  
                  clrloop0 0CB3             ?i1_expandeTela 0070     __end_of_Lcd_Write_Char 0EB2  
     end_of_initialization 002B                 ??_estufaUm 00DC       __end_of_estufaQuatro 0D04  
                Lcd_Port@a 00DC             ?i1_recolheTela 0070                  i1_Lcd_Cmd 0D2E  
                _PORTBbits 0006                  _PORTCbits 0007                  _PORTDbits 0008  
            ___xxtofl@sign 00E4                  _TRISBbits 0086            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0078          Lcd_Write_String@i 0076                  _Lcd_Clear 0CBA  
           __end_of___flge 06D1                 ?i1_Lcd_Cmd 0070           _Lcd_Write_String 0D68  
              ?_estufaDois 0070                ?_estufaTres 0070              ??_atualizaLCD 004F  
      start_initialization 0015            ??i1_expandeTela 0070          __size_of_Lcd_Init 0063  
            ??_lerSensores 00EA          __size_of_Lcd_Port 0036              ??_iniciaPinos 00DC  
          ??i1_recolheTela 0070                 ?_Lcd_Clear 0070                   ??___flge 00E4  
               init_fetch0 0CC7                __pdataBANK1 00A0            Lcd_Write_Char@a 0074  
          Lcd_Write_Char@y 0073          __size_of_TrataINT 0042                  ___latbits 0002  
            __pcstackBANK0 003C              __pcstackBANK1 00DC              __pcstackBANK3 0190  
        __size_of___xxtofl 00BC              ??_expandeTela 00DC      __size_of_estufaQuatro 0015  
      __end_of_atualizaLCD 0571                   ?_Lcd_Cmd 0070                sprintf@flag 0049  
              sprintf@prec 004A        __size_of_estufaDois 0015        __size_of_estufaTres 0015  
      __end_of_lerSensores 03A9           ___lwdiv@dividend 0072          __size_of_estufaUm 0015  
         ??_Lcd_Set_Cursor 0075              ??_recolheTela 00DC        __end_of_iniciaPinos 0800  
                 ?___fltol 0070                   ?___lwdiv 0070                   ?___lwmod 0078  
              ??i1_Lcd_Cmd 0071                  __pstrings 0800               _estufaQuatro 0CEF  
         ___lwdiv@quotient 0075                   ?_sprintf 003C          interrupt_function 0004  
      __end_of_expandeTela 0E1E                  clear_ram0 0CB2                   _PIE1bits 008C  
                 Lcd_Cmd@a 00DF                ??_Lcd_Clear 0074                 _ADCON0bits 001F  
              __stringbase 0805                 _ADCON1bits 009F        __end_of_recolheTela 0E45  
         ??_Lcd_Write_Char 0071                _atualizaLCD 0491                   _Lcd_Init 074B  
                 _Lcd_Port 0E45                _lerSensores 0210   __end_of_Lcd_Write_String 0D89  
         __size_of_Lcd_Cmd 0020                _iniciaPinos 07AE                   _TrataINT 0F28  
         __size_of___fltol 007A           __size_of___lwdiv 0044           __size_of___lwmod 003A  
       __end_of__stringtab 0806               ??_estufaDois 00DC               ??_estufaTres 00DC  
               sprintf@val 004B                   ___xxtofl 0571            ___lwdiv@divisor 0070  
          ___lwdiv@counter 0077                   __ptext10 062D                   __ptext11 074B  
                 __ptext20 0F6A                   __ptext12 0D48                   __ptext21 06D1  
                 __ptext13 0E45                   __ptext22 0D68                   __ptext14 0F28  
                 __ptext23 0E7B                   __ptext15 0DD1                   __ptext24 0FAE  
                 __ptext16 0DAB                   __ptext25 0CBA                   __ptext17 0491  
                 __ptext26 0D2E                   __ptext18 03A9                   __ptext27 0D89  
                 __ptext19 0EB2                _expandeTela 0DF7           __size_of_sprintf 00E8  
            __size_of_main 01E1                   _estufaUm 0D19                i1Lcd_Port@a 0070  
       __end_of_estufaDois 0CEF         __end_of_estufaTres 0D19                _recolheTela 0E1E  
               _INTCONbits 000B                   init_ram0 0CCB               _valor_entry0 0038  
             _valor_entry1 0034               _valor_entry2 0030               _valor_entry3 002C  
             _valor_entry4 0028               _valor_entry5 0024               _valor_entry6 0020  
    __end_ofi1_expandeTela 0DD1         Lcd_Write_Char@temp 0072                   intlevel1 0000  
                sprintf@ap 0048                  sprintf@sp 004D           ___lwmod@dividend 007A  
               i1Lcd_Cmd@a 0073                  stringcode 0800      __end_ofi1_recolheTela 0DF7  
       Lcd_Set_Cursor@temp 007A                   sprintf@c 004E                   sprintf@f 003C  
          ___lwmod@divisor 0078            ___lwmod@counter 007D                 i1_Lcd_Port 0D89  
                 stringdir 0800                   stringtab 0800  
