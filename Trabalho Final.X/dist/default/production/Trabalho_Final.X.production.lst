

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat May 08 20:45:02 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	intentry,global,class=CODE,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    46                           	dabs	1,0x7E,2
    47  0000                     
    48                           ; Version 2.20
    49                           ; Generated 12/02/2020 GMT
    50                           ; 
    51                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC16F877A Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     	;# 
    83  0001                     	;# 
    84  0002                     	;# 
    85  0003                     	;# 
    86  0004                     	;# 
    87  0005                     	;# 
    88  0006                     	;# 
    89  0007                     	;# 
    90  0008                     	;# 
    91  0009                     	;# 
    92  000A                     	;# 
    93  000B                     	;# 
    94  000C                     	;# 
    95  000D                     	;# 
    96  000E                     	;# 
    97  000E                     	;# 
    98  000F                     	;# 
    99  0010                     	;# 
   100  0011                     	;# 
   101  0012                     	;# 
   102  0013                     	;# 
   103  0014                     	;# 
   104  0015                     	;# 
   105  0015                     	;# 
   106  0016                     	;# 
   107  0017                     	;# 
   108  0018                     	;# 
   109  0019                     	;# 
   110  001A                     	;# 
   111  001B                     	;# 
   112  001B                     	;# 
   113  001C                     	;# 
   114  001D                     	;# 
   115  001E                     	;# 
   116  001F                     	;# 
   117  0081                     	;# 
   118  0085                     	;# 
   119  0086                     	;# 
   120  0087                     	;# 
   121  0088                     	;# 
   122  0089                     	;# 
   123  008C                     	;# 
   124  008D                     	;# 
   125  008E                     	;# 
   126  0091                     	;# 
   127  0092                     	;# 
   128  0093                     	;# 
   129  0094                     	;# 
   130  0098                     	;# 
   131  0099                     	;# 
   132  009C                     	;# 
   133  009D                     	;# 
   134  009E                     	;# 
   135  009F                     	;# 
   136  010C                     	;# 
   137  010D                     	;# 
   138  010E                     	;# 
   139  010F                     	;# 
   140  018C                     	;# 
   141  018D                     	;# 
   142  0000                     	;# 
   143  0001                     	;# 
   144  0002                     	;# 
   145  0003                     	;# 
   146  0004                     	;# 
   147  0005                     	;# 
   148  0006                     	;# 
   149  0007                     	;# 
   150  0008                     	;# 
   151  0009                     	;# 
   152  000A                     	;# 
   153  000B                     	;# 
   154  000C                     	;# 
   155  000D                     	;# 
   156  000E                     	;# 
   157  000E                     	;# 
   158  000F                     	;# 
   159  0010                     	;# 
   160  0011                     	;# 
   161  0012                     	;# 
   162  0013                     	;# 
   163  0014                     	;# 
   164  0015                     	;# 
   165  0015                     	;# 
   166  0016                     	;# 
   167  0017                     	;# 
   168  0018                     	;# 
   169  0019                     	;# 
   170  001A                     	;# 
   171  001B                     	;# 
   172  001B                     	;# 
   173  001C                     	;# 
   174  001D                     	;# 
   175  001E                     	;# 
   176  001F                     	;# 
   177  0081                     	;# 
   178  0085                     	;# 
   179  0086                     	;# 
   180  0087                     	;# 
   181  0088                     	;# 
   182  0089                     	;# 
   183  008C                     	;# 
   184  008D                     	;# 
   185  008E                     	;# 
   186  0091                     	;# 
   187  0092                     	;# 
   188  0093                     	;# 
   189  0094                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  018C                     	;# 
   201  018D                     	;# 
   202                           
   203                           	psect	idataBANK0
   204  0DCE                     __pidataBANK0:
   205                           
   206                           ;initializer for _valor_entry4
   207  0DCE  3400               	retlw	0
   208  0DCF  3480               	retlw	128
   209  0DD0  3480               	retlw	128
   210  0DD1  3443               	retlw	67
   211                           
   212                           ;initializer for _valor_entry3
   213  0DD2  3400               	retlw	0
   214  0DD3  3480               	retlw	128
   215  0DD4  3480               	retlw	128
   216  0DD5  3443               	retlw	67
   217                           
   218                           	psect	idataBANK1
   219  0DC6                     __pidataBANK1:	
   220                           ;initializer for _valor_entry6
   221                           
   222  0DC6  3400               	retlw	0
   223  0DC7  3480               	retlw	128
   224  0DC8  3480               	retlw	128
   225  0DC9  3443               	retlw	67
   226                           
   227                           ;initializer for _valor_entry5
   228  0DCA  3400               	retlw	0
   229  0DCB  3480               	retlw	128
   230  0DCC  3480               	retlw	128
   231  0DCD  3443               	retlw	67
   232                           
   233                           	psect	strings
   234  0800                     __pstrings:
   235  0800                     stringtab:
   236  0800                     __stringtab:
   237  0800                     stringcode:	
   238                           ;	String table - string pointers are 1 byte each
   239                           
   240  0800                     stringdir:
   241  0800  3008               	movlw	high stringdir
   242  0801  008A               	movwf	10
   243  0802  0804               	movf	4,w
   244  0803  0A84               	incf	4,f
   245  0804  0782               	addwf	2,f
   246  0805                     __stringbase:
   247  0805  3400               	retlw	0
   248  0806                     __end_of__stringtab:
   249  0806                     _dpowers:
   250  0806  3401               	retlw	1
   251  0807  3400               	retlw	0
   252  0808  340A               	retlw	10
   253  0809  3400               	retlw	0
   254  080A  3464               	retlw	100
   255  080B  3400               	retlw	0
   256  080C  34E8               	retlw	232
   257  080D  3403               	retlw	3
   258  080E  3410               	retlw	16
   259  080F  3427               	retlw	39
   260  0810                     __end_of_dpowers:
   261  0008                     _PORTDbits	set	8
   262  0007                     _PORTCbits	set	7
   263  0006                     _PORTBbits	set	6
   264  0010                     _T1CONbits	set	16
   265  000B                     _INTCONbits	set	11
   266  001E                     _ADRESH	set	30
   267  001F                     _ADCON0bits	set	31
   268  000F                     _TMR1H	set	15
   269  000E                     _TMR1L	set	14
   270  003F                     _RC7	set	63
   271  003C                     _RC4	set	60
   272  003D                     _RC5	set	61
   273  003E                     _RC6	set	62
   274  0047                     _RD7	set	71
   275  003A                     _RC2	set	58
   276  003B                     _RC3	set	59
   277  0040                     _RD0	set	64
   278  0046                     _RD6	set	70
   279  0042                     _RD2	set	66
   280  0039                     _RC1	set	57
   281  0044                     _RD4	set	68
   282  0060                     _TMR1IF	set	96
   283  0030                     _RB0	set	48
   284  0059                     _INTF	set	89
   285  002C                     _RA4	set	44
   286  0033                     _RB3	set	51
   287  0031                     _RB1	set	49
   288  0032                     _RB2	set	50
   289  0037                     _RB7	set	55
   290  0036                     _RB6	set	54
   291  0035                     _RB5	set	53
   292  0034                     _RB4	set	52
   293  009E                     _ADRESL	set	158
   294  009F                     _ADCON1bits	set	159
   295  0088                     _TRISD	set	136
   296  0087                     _TRISC	set	135
   297  0085                     _TRISA	set	133
   298  008C                     _PIE1bits	set	140
   299  0086                     _TRISBbits	set	134
   300  0081                     _OPTION_REGbits	set	129
   301  0810                     STR_1:
   302  0810  3451               	retlw	81	;'Q'
   303  0811  343A               	retlw	58	;':'
   304  0812  3425               	retlw	37	;'%'
   305  0813  3469               	retlw	105	;'i'
   306  0814  3420               	retlw	32	;' '
   307  0815  3443               	retlw	67	;'C'
   308  0816  343A               	retlw	58	;':'
   309  0817  3425               	retlw	37	;'%'
   310  0818  3469               	retlw	105	;'i'
   311  0819  3420               	retlw	32	;' '
   312  081A  344C               	retlw	76	;'L'
   313  081B  343A               	retlw	58	;':'
   314  081C  3425               	retlw	37	;'%'
   315  081D  3469               	retlw	105	;'i'
   316  081E  3420               	retlw	32	;' '
   317  081F  3453               	retlw	83	;'S'
   318  0820  3431               	retlw	49	;'1'
   319  0821  343A               	retlw	58	;':'
   320  0822  3425               	retlw	37	;'%'
   321  0823  3469               	retlw	105	;'i'
   322  0824  3400               	retlw	0
   323  0825                     STR_2:
   324  0825  3453               	retlw	83	;'S'
   325  0826  3432               	retlw	50	;'2'
   326  0827  343A               	retlw	58	;':'
   327  0828  3425               	retlw	37	;'%'
   328  0829  3469               	retlw	105	;'i'
   329  082A  3420               	retlw	32	;' '
   330  082B  3453               	retlw	83	;'S'
   331  082C  3433               	retlw	51	;'3'
   332  082D  343A               	retlw	58	;':'
   333  082E  3425               	retlw	37	;'%'
   334  082F  3469               	retlw	105	;'i'
   335  0830  3420               	retlw	32	;' '
   336  0831  3453               	retlw	83	;'S'
   337  0832  3434               	retlw	52	;'4'
   338  0833  343A               	retlw	58	;':'
   339  0834  3425               	retlw	37	;'%'
   340  0835  3469               	retlw	105	;'i'
   341  0836  3420               	retlw	32	;' '
   342  0837  3400               	retlw	0
   343                           
   344                           	psect	cinit
   345  000F                     start_initialization:	
   346                           ; #config settings
   347                           
   348  000F                     __initialization:
   349                           
   350                           ; Initialize objects allocated to BANK1
   351  000F  1383               	bcf	3,7	;select IRP bank0
   352  0010  30C8               	movlw	low (__pdataBANK1+8)
   353  0011  00FD               	movwf	btemp+-1
   354  0012  300D               	movlw	high __pidataBANK1
   355  0013  00FE               	movwf	btemp
   356  0014  30C6               	movlw	low __pidataBANK1
   357  0015  00FF               	movwf	btemp+1
   358  0016  30C0               	movlw	low __pdataBANK1
   359  0017  0084               	movwf	4
   360  0018  120A  158A  25F2  120A  118A  	fcall	init_ram0
   361                           
   362                           ; Initialize objects allocated to BANK0
   363  001D  3054               	movlw	low (__pdataBANK0+8)
   364  001E  00FD               	movwf	btemp+-1
   365  001F  300D               	movlw	high __pidataBANK0
   366  0020  00FE               	movwf	btemp
   367  0021  30CE               	movlw	low __pidataBANK0
   368  0022  00FF               	movwf	btemp+1
   369  0023  304C               	movlw	low __pdataBANK0
   370  0024  0084               	movwf	4
   371  0025  120A  158A  25F2  120A  118A  	fcall	init_ram0
   372                           
   373                           ; Clear objects allocated to BANK1
   374  002A  1683               	bsf	3,5	;RP0=1, select bank1
   375  002B  1303               	bcf	3,6	;RP1=0, select bank1
   376  002C  01C8               	clrf	__pbssBANK1& (0+127)
   377  002D  01C9               	clrf	(__pbssBANK1+1)& (0+127)
   378                           
   379                           ; Clear objects allocated to BANK0
   380  002E  1283               	bcf	3,5	;RP0=0, select bank0
   381  002F  1303               	bcf	3,6	;RP1=0, select bank0
   382  0030  01C4               	clrf	__pbssBANK0& (0+127)
   383  0031  01C5               	clrf	(__pbssBANK0+1)& (0+127)
   384  0032  01C6               	clrf	(__pbssBANK0+2)& (0+127)
   385  0033  01C7               	clrf	(__pbssBANK0+3)& (0+127)
   386  0034  01C8               	clrf	(__pbssBANK0+4)& (0+127)
   387  0035  01C9               	clrf	(__pbssBANK0+5)& (0+127)
   388  0036  01CA               	clrf	(__pbssBANK0+6)& (0+127)
   389  0037  01CB               	clrf	(__pbssBANK0+7)& (0+127)
   390                           
   391                           ; Clear objects allocated to COMMON
   392  0038  01F6               	clrf	__pbssCOMMON& (0+127)
   393  0039  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   394  003A  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   395  003B  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   396  003C                     end_of_initialization:	
   397                           ;End of C runtime variable initialization code
   398                           
   399  003C                     __end_of__initialization:
   400  003C  0183               	clrf	3
   401  003D  120A  118A  2DAA   	ljmp	_main	;jump to C main() function
   402                           
   403                           	psect	bssCOMMON
   404  0076                     __pbssCOMMON:
   405  0076                     _valor_entry0:
   406  0076                     	ds	4
   407                           
   408                           	psect	bssBANK0
   409  0044                     __pbssBANK0:
   410  0044                     _valor_entry2:
   411  0044                     	ds	4
   412  0048                     _valor_entry1:
   413  0048                     	ds	4
   414                           
   415                           	psect	dataBANK0
   416  004C                     __pdataBANK0:
   417  004C                     _valor_entry4:
   418  004C                     	ds	4
   419  0050                     _valor_entry3:
   420  0050                     	ds	4
   421                           
   422                           	psect	bssBANK1
   423  00C8                     __pbssBANK1:
   424  00C8                     _sentido:
   425  00C8                     	ds	2
   426                           
   427                           	psect	dataBANK1
   428  00C0                     __pdataBANK1:
   429  00C0                     _valor_entry6:
   430  00C0                     	ds	4
   431  00C4                     _valor_entry5:
   432  00C4                     	ds	4
   433                           
   434                           	psect	inittext
   435  0DEE                     init_fetch0:	
   436                           ;	Called with low address in FSR and high address in W
   437                           
   438  0DEE  087E               	movf	btemp,w
   439  0DEF  008A               	movwf	10
   440  0DF0  087F               	movf	btemp+1,w
   441  0DF1  0082               	movwf	2
   442  0DF2                     init_ram0:	
   443                           ;Called with:
   444                           ;	high address of idata address in btemp 
   445                           ;	low address of idata address in btemp+1 
   446                           ;	low address of data in FSR
   447                           ;	high address + 1 of data in btemp-1
   448                           
   449  0DF2  120A  158A  25EE  120A  158A  	fcall	init_fetch0
   450  0DF7  0080               	movwf	0
   451  0DF8  0A84               	incf	4,f
   452  0DF9  0804               	movf	4,w
   453  0DFA  067D               	xorwf	btemp+-1,w
   454  0DFB  1903               	btfsc	3,2
   455  0DFC  3400               	retlw	0
   456  0DFD  0AFF               	incf	btemp+1,f
   457  0DFE  1903               	btfsc	3,2
   458  0DFF  0AFE               	incf	btemp,f
   459  0E00  2DF2               	goto	init_ram0
   460                           
   461                           	psect	cstackBANK1
   462  00A0                     __pcstackBANK1:
   463  00A0                     atualizaLCD@buffer0:
   464                           
   465                           ; 16 bytes @ 0x0
   466  00A0                     	ds	16
   467  00B0                     atualizaLCD@buffer1:
   468                           
   469                           ; 16 bytes @ 0x10
   470  00B0                     	ds	16
   471                           
   472                           	psect	cstackCOMMON
   473  0070                     __pcstackCOMMON:
   474  0070                     ?_iniciaPinos:
   475  0070                     ?_lerSensores:	
   476                           ; 1 bytes @ 0x0
   477                           
   478  0070                     ?_atualizaLCD:	
   479                           ; 1 bytes @ 0x0
   480                           
   481  0070                     ?_recolheTela:	
   482                           ; 1 bytes @ 0x0
   483                           
   484  0070                     ?_expandeTela:	
   485                           ; 1 bytes @ 0x0
   486                           
   487  0070                     ?_paraTela:	
   488                           ; 1 bytes @ 0x0
   489                           
   490  0070                     ?_controleEstufas:	
   491                           ; 1 bytes @ 0x0
   492                           
   493  0070                     ?_estufaUm:	
   494                           ; 1 bytes @ 0x0
   495                           
   496  0070                     ?_estufaDois:	
   497                           ; 1 bytes @ 0x0
   498                           
   499  0070                     ?_estufaTres:	
   500                           ; 1 bytes @ 0x0
   501                           
   502  0070                     ?_estufaQuatro:	
   503                           ; 1 bytes @ 0x0
   504                           
   505  0070                     ?_Lcd_Port:	
   506                           ; 1 bytes @ 0x0
   507                           
   508  0070                     ?_Lcd_Cmd:	
   509                           ; 1 bytes @ 0x0
   510                           
   511  0070                     ?_Lcd_Clear:	
   512                           ; 1 bytes @ 0x0
   513                           
   514  0070                     ?_Lcd_Init:	
   515                           ; 1 bytes @ 0x0
   516                           
   517  0070                     ?_Lcd_Write_Char:	
   518                           ; 1 bytes @ 0x0
   519                           
   520  0070                     ?_Lcd_Write_String:	
   521                           ; 1 bytes @ 0x0
   522                           
   523  0070                     ?_TrataINT:	
   524                           ; 1 bytes @ 0x0
   525                           
   526  0070                     ?i1_recolheTela:	
   527                           ; 1 bytes @ 0x0
   528                           
   529  0070                     ??i1_recolheTela:	
   530                           ; 1 bytes @ 0x0
   531                           
   532  0070                     ?_main:	
   533                           ; 1 bytes @ 0x0
   534                           
   535                           
   536                           ; 2 bytes @ 0x0
   537  0070                     	ds	2
   538  0072                     ??_TrataINT:
   539                           
   540                           ; 1 bytes @ 0x2
   541  0072                     	ds	2
   542  0074                     ??_iniciaPinos:
   543  0074                     ??_recolheTela:	
   544                           ; 1 bytes @ 0x4
   545                           
   546  0074                     ??_expandeTela:	
   547                           ; 1 bytes @ 0x4
   548                           
   549  0074                     ??_paraTela:	
   550                           ; 1 bytes @ 0x4
   551                           
   552  0074                     ??_Lcd_Port:	
   553                           ; 1 bytes @ 0x4
   554                           
   555  0074                     ??___lwdiv:	
   556                           ; 1 bytes @ 0x4
   557                           
   558  0074                     Lcd_Port@a:	
   559                           ; 1 bytes @ 0x4
   560                           
   561  0074                     ___fltol@sign1:	
   562                           ; 1 bytes @ 0x4
   563                           
   564                           
   565                           ; 1 bytes @ 0x4
   566  0074                     	ds	1
   567  0075                     ??_Lcd_Write_Char:
   568  0075                     ??___lwmod:	
   569                           ; 1 bytes @ 0x5
   570                           
   571  0075                     Lcd_Cmd@a:	
   572                           ; 1 bytes @ 0x5
   573                           
   574  0075                     ___fltol@exp1:	
   575                           ; 1 bytes @ 0x5
   576                           
   577                           
   578                           ; 1 bytes @ 0x5
   579  0075                     	ds	1
   580  0076                     ??_controleEstufas:
   581  0076                     ??_estufaUm:	
   582                           ; 1 bytes @ 0x6
   583                           
   584  0076                     ??_estufaDois:	
   585                           ; 1 bytes @ 0x6
   586                           
   587  0076                     ??_estufaTres:	
   588                           ; 1 bytes @ 0x6
   589                           
   590  0076                     ??_estufaQuatro:	
   591                           ; 1 bytes @ 0x6
   592                           
   593  0076                     ??_Lcd_Clear:	
   594                           ; 1 bytes @ 0x6
   595                           
   596                           
   597                           	psect	cstackBANK0
   598  0020                     __pcstackBANK0:	
   599                           ; 1 bytes @ 0x6
   600                           
   601  0020                     ?___flge:
   602  0020                     ??_Lcd_Cmd:	
   603                           ; 1 bit 
   604                           
   605  0020                     ?___lwdiv:	
   606                           ; 1 bytes @ 0x0
   607                           
   608  0020                     ?___fltol:	
   609                           ; 2 bytes @ 0x0
   610                           
   611  0020                     ?___xxtofl:	
   612                           ; 4 bytes @ 0x0
   613                           
   614  0020                     Lcd_Write_Char@temp:	
   615                           ; 4 bytes @ 0x0
   616                           
   617  0020                     ___lwdiv@divisor:	
   618                           ; 1 bytes @ 0x0
   619                           
   620  0020                     ___flge@ff1:	
   621                           ; 2 bytes @ 0x0
   622                           
   623  0020                     ___fltol@f1:	
   624                           ; 4 bytes @ 0x0
   625                           
   626  0020                     ___xxtofl@val:	
   627                           ; 4 bytes @ 0x0
   628                           
   629                           
   630                           ; 4 bytes @ 0x0
   631  0020                     	ds	1
   632  0021                     Lcd_Write_Char@y:
   633                           
   634                           ; 1 bytes @ 0x1
   635  0021                     	ds	1
   636  0022                     ?_Lcd_Set_Cursor:
   637  0022                     ??_Lcd_Init:	
   638                           ; 1 bytes @ 0x2
   639                           
   640  0022                     Lcd_Set_Cursor@b:	
   641                           ; 1 bytes @ 0x2
   642                           
   643  0022                     Lcd_Write_Char@a:	
   644                           ; 1 bytes @ 0x2
   645                           
   646  0022                     ___lwdiv@dividend:	
   647                           ; 1 bytes @ 0x2
   648                           
   649                           
   650                           ; 2 bytes @ 0x2
   651  0022                     	ds	1
   652  0023                     ??_Lcd_Set_Cursor:
   653  0023                     ??_Lcd_Write_String:	
   654                           ; 1 bytes @ 0x3
   655                           
   656                           
   657                           ; 1 bytes @ 0x3
   658  0023                     	ds	1
   659  0024                     ??___fltol:
   660  0024                     ??___xxtofl:	
   661                           ; 1 bytes @ 0x4
   662                           
   663  0024                     ___lwdiv@counter:	
   664                           ; 1 bytes @ 0x4
   665                           
   666  0024                     Lcd_Write_String@i:	
   667                           ; 1 bytes @ 0x4
   668                           
   669  0024                     ___flge@ff2:	
   670                           ; 2 bytes @ 0x4
   671                           
   672                           
   673                           ; 4 bytes @ 0x4
   674  0024                     	ds	1
   675  0025                     Lcd_Set_Cursor@a:
   676  0025                     ___lwdiv@quotient:	
   677                           ; 1 bytes @ 0x5
   678                           
   679                           
   680                           ; 2 bytes @ 0x5
   681  0025                     	ds	1
   682  0026                     Lcd_Set_Cursor@z:
   683  0026                     Lcd_Write_String@a:	
   684                           ; 1 bytes @ 0x6
   685                           
   686                           
   687                           ; 1 bytes @ 0x6
   688  0026                     	ds	1
   689  0027                     ?___lwmod:
   690  0027                     Lcd_Set_Cursor@y:	
   691                           ; 2 bytes @ 0x7
   692                           
   693  0027                     ___lwmod@divisor:	
   694                           ; 1 bytes @ 0x7
   695                           
   696                           
   697                           ; 2 bytes @ 0x7
   698  0027                     	ds	1
   699  0028                     ??___flge:
   700  0028                     Lcd_Set_Cursor@temp:	
   701                           ; 1 bytes @ 0x8
   702                           
   703  0028                     ___xxtofl@sign:	
   704                           ; 1 bytes @ 0x8
   705                           
   706                           
   707                           ; 1 bytes @ 0x8
   708  0028                     	ds	1
   709  0029                     ___xxtofl@exp:
   710  0029                     ___lwmod@dividend:	
   711                           ; 1 bytes @ 0x9
   712                           
   713                           
   714                           ; 2 bytes @ 0x9
   715  0029                     	ds	1
   716  002A                     ___xxtofl@arg:
   717                           
   718                           ; 4 bytes @ 0xA
   719  002A                     	ds	1
   720  002B                     ___lwmod@counter:
   721                           
   722                           ; 1 bytes @ 0xB
   723  002B                     	ds	1
   724  002C                     ?_sprintf:
   725  002C                     sprintf@f:	
   726                           ; 2 bytes @ 0xC
   727                           
   728                           
   729                           ; 1 bytes @ 0xC
   730  002C                     	ds	2
   731  002E                     ??_lerSensores:
   732                           
   733                           ; 1 bytes @ 0xE
   734  002E                     	ds	7
   735  0035                     ??_sprintf:
   736                           
   737                           ; 1 bytes @ 0x15
   738  0035                     	ds	3
   739  0038                     sprintf@ap:
   740                           
   741                           ; 1 bytes @ 0x18
   742  0038                     	ds	1
   743  0039                     sprintf@flag:
   744                           
   745                           ; 1 bytes @ 0x19
   746  0039                     	ds	1
   747  003A                     sprintf@prec:
   748                           
   749                           ; 1 bytes @ 0x1A
   750  003A                     	ds	1
   751  003B                     sprintf@val:
   752                           
   753                           ; 2 bytes @ 0x1B
   754  003B                     	ds	2
   755  003D                     sprintf@sp:
   756                           
   757                           ; 1 bytes @ 0x1D
   758  003D                     	ds	1
   759  003E                     sprintf@c:
   760                           
   761                           ; 1 bytes @ 0x1E
   762  003E                     	ds	1
   763  003F                     ??_atualizaLCD:
   764                           
   765                           ; 1 bytes @ 0x1F
   766  003F                     	ds	2
   767  0041                     ??_main:
   768                           
   769                           ; 1 bytes @ 0x21
   770  0041                     	ds	3
   771                           
   772                           	psect	maintext
   773  05AA                     __pmaintext:	
   774 ;;
   775 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   776 ;;
   777 ;; *************** function _main *****************
   778 ;; Defined at:
   779 ;;		line 44 in file "main.c"
   780 ;; Parameters:    Size  Location     Type
   781 ;;		None
   782 ;; Auto vars:     Size  Location     Type
   783 ;;		None
   784 ;; Return value:  Size  Location     Type
   785 ;;                  2  167[None  ] int 
   786 ;; Registers used:
   787 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   788 ;; Tracked objects:
   789 ;;		On entry : B00/0
   790 ;;		On exit  : 0/0
   791 ;;		Unchanged: 0/0
   792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   793 ;;      Params:         0       0       0       0       0
   794 ;;      Locals:         0       0       0       0       0
   795 ;;      Temps:          0       3       0       0       0
   796 ;;      Totals:         0       3       0       0       0
   797 ;;Total ram usage:        3 bytes
   798 ;; Hardware stack levels required when called: 6
   799 ;; This function calls:
   800 ;;		_Lcd_Init
   801 ;;		___fltol
   802 ;;		_atualizaLCD
   803 ;;		_controleEstufas
   804 ;;		_expandeTela
   805 ;;		_iniciaPinos
   806 ;;		_lerSensores
   807 ;;		_paraTela
   808 ;;		_recolheTela
   809 ;; This function is called by:
   810 ;;		Startup code after reset
   811 ;; This function uses a non-reentrant model
   812 ;;
   813                           
   814                           
   815                           ;psect for function _main
   816  05AA                     _main:
   817  05AA                     l2488:	
   818                           ;incstack = 0
   819                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   820                           
   821                           
   822                           ;main.c: 46:     iniciaPinos();
   823  05AA  120A  118A  2762  120A  118A  	fcall	_iniciaPinos
   824                           
   825                           ;main.c: 47:     Lcd_Init();
   826  05AF  120A  118A  26A7  120A  118A  	fcall	_Lcd_Init
   827  05B4                     l168:	
   828                           ;main.c: 48:     while(1)
   829                           
   830                           
   831                           ;main.c: 49:     {;main.c: 50:         lerSensores();
   832  05B4  120A  118A  2040  120A  118A  	fcall	_lerSensores
   833  05B9                     l2490:
   834                           
   835                           ;main.c: 51:         atualizaLCD();
   836  05B9  120A  118A  2187  120A  118A  	fcall	_atualizaLCD
   837  05BE                     l2492:
   838                           
   839                           ;main.c: 54:         if((int)valor_entry0 >= 192)
   840  05BE  0879               	movf	_valor_entry0+3,w
   841  05BF  1283               	bcf	3,5	;RP0=0, select bank0
   842  05C0  1303               	bcf	3,6	;RP1=0, select bank0
   843  05C1  00A3               	movwf	___fltol@f1+3
   844  05C2  0878               	movf	_valor_entry0+2,w
   845  05C3  00A2               	movwf	___fltol@f1+2
   846  05C4  0877               	movf	_valor_entry0+1,w
   847  05C5  00A1               	movwf	___fltol@f1+1
   848  05C6  0876               	movf	_valor_entry0,w
   849  05C7  00A0               	movwf	___fltol@f1
   850  05C8  120A  118A  262B  120A  118A  	fcall	___fltol
   851  05CD  1283               	bcf	3,5	;RP0=0, select bank0
   852  05CE  1303               	bcf	3,6	;RP1=0, select bank0
   853  05CF  0821               	movf	?___fltol+1,w
   854  05D0  3A80               	xorlw	128
   855  05D1  00FF               	movwf	btemp+1
   856  05D2  3080               	movlw	128
   857  05D3  027F               	subwf	btemp+1,w
   858  05D4  1D03               	skipz
   859  05D5  2DD8               	goto	u2275
   860  05D6  30C0               	movlw	192
   861  05D7  0220               	subwf	?___fltol,w
   862  05D8                     u2275:
   863  05D8  1C03               	skipc
   864  05D9  2DDB               	goto	u2271
   865  05DA  2DDC               	goto	u2270
   866  05DB                     u2271:
   867  05DB  2DE2               	goto	l2496
   868  05DC                     u2270:
   869  05DC                     l2494:
   870                           
   871                           ;main.c: 55:         {;main.c: 57:             recolheTela();
   872  05DC  120A  158A  267D  120A  118A  	fcall	_recolheTela
   873                           
   874                           ;main.c: 58:         }
   875  05E1  2E05               	goto	l2500
   876  05E2                     l2496:
   877  05E2  1283               	bcf	3,5	;RP0=0, select bank0
   878  05E3  1303               	bcf	3,6	;RP1=0, select bank0
   879  05E4  0847               	movf	_valor_entry2+3,w
   880  05E5  00A3               	movwf	___fltol@f1+3
   881  05E6  0846               	movf	_valor_entry2+2,w
   882  05E7  00A2               	movwf	___fltol@f1+2
   883  05E8  0845               	movf	_valor_entry2+1,w
   884  05E9  00A1               	movwf	___fltol@f1+1
   885  05EA  0844               	movf	_valor_entry2,w
   886  05EB  00A0               	movwf	___fltol@f1
   887  05EC  120A  118A  262B  120A  118A  	fcall	___fltol
   888  05F1  1283               	bcf	3,5	;RP0=0, select bank0
   889  05F2  1303               	bcf	3,6	;RP1=0, select bank0
   890  05F3  0821               	movf	?___fltol+1,w
   891  05F4  3A80               	xorlw	128
   892  05F5  00FF               	movwf	btemp+1
   893  05F6  3080               	movlw	128
   894  05F7  027F               	subwf	btemp+1,w
   895  05F8  1D03               	skipz
   896  05F9  2DFC               	goto	u2285
   897  05FA  30C0               	movlw	192
   898  05FB  0220               	subwf	?___fltol,w
   899  05FC                     u2285:
   900  05FC  1C03               	skipc
   901  05FD  2DFF               	goto	u2281
   902  05FE  2E00               	goto	u2280
   903  05FF                     u2281:
   904  05FF  2E05               	goto	l2500
   905  0600                     u2280:
   906  0600                     l2498:
   907                           
   908                           ;main.c: 60:         {;main.c: 62:             expandeTela();
   909  0600  120A  158A  265C  120A  118A  	fcall	_expandeTela
   910  0605                     l2500:
   911                           
   912                           ;main.c: 65:         if((RB3 == 1)|| (RA4 == 1))
   913  0605  1283               	bcf	3,5	;RP0=0, select bank0
   914  0606  1303               	bcf	3,6	;RP1=0, select bank0
   915  0607  1986               	btfsc	6,3	;volatile
   916  0608  2E0A               	goto	u2291
   917  0609  2E0B               	goto	u2290
   918  060A                     u2291:
   919  060A  2E0F               	goto	l2504
   920  060B                     u2290:
   921  060B                     l2502:
   922  060B  1E05               	btfss	5,4	;volatile
   923  060C  2E0E               	goto	u2301
   924  060D  2E0F               	goto	u2300
   925  060E                     u2301:
   926  060E  2E14               	goto	l2506
   927  060F                     u2300:
   928  060F                     l2504:
   929                           
   930                           ;main.c: 66:         {;main.c: 67:             paraTela();
   931  060F  120A  158A  25D6  120A  118A  	fcall	_paraTela
   932  0614                     l2506:
   933                           
   934                           ;main.c: 72:         controleEstufas();
   935  0614  120A  118A  2368  120A  118A  	fcall	_controleEstufas
   936  0619                     l2508:
   937                           
   938                           ;main.c: 74:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   939  0619  3006               	movlw	6
   940  061A  1283               	bcf	3,5	;RP0=0, select bank0
   941  061B  1303               	bcf	3,6	;RP1=0, select bank0
   942  061C  00C3               	movwf	??_main+2
   943  061D  3013               	movlw	19
   944  061E  00C2               	movwf	??_main+1
   945  061F  30AD               	movlw	173
   946  0620  00C1               	movwf	??_main
   947  0621                     u2317:
   948  0621  0BC1               	decfsz	??_main,f
   949  0622  2E21               	goto	u2317
   950  0623  0BC2               	decfsz	??_main+1,f
   951  0624  2E21               	goto	u2317
   952  0625  0BC3               	decfsz	??_main+2,f
   953  0626  2E21               	goto	u2317
   954  0627  2DB4               	goto	l168
   955  0628  120A  118A  280C   	ljmp	start
   956  062B                     __end_of_main:
   957                           
   958                           	psect	text1
   959  0E7D                     __ptext1:	
   960 ;; *************** function _recolheTela *****************
   961 ;; Defined at:
   962 ;;		line 182 in file "main.c"
   963 ;; Parameters:    Size  Location     Type
   964 ;;		None
   965 ;; Auto vars:     Size  Location     Type
   966 ;;		None
   967 ;; Return value:  Size  Location     Type
   968 ;;                  1    wreg      void 
   969 ;; Registers used:
   970 ;;		wreg
   971 ;; Tracked objects:
   972 ;;		On entry : 0/0
   973 ;;		On exit  : 0/0
   974 ;;		Unchanged: 0/0
   975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   976 ;;      Params:         0       0       0       0       0
   977 ;;      Locals:         0       0       0       0       0
   978 ;;      Temps:          2       0       0       0       0
   979 ;;      Totals:         2       0       0       0       0
   980 ;;Total ram usage:        2 bytes
   981 ;; Hardware stack levels used: 1
   982 ;; Hardware stack levels required when called: 2
   983 ;; This function calls:
   984 ;;		Nothing
   985 ;; This function is called by:
   986 ;;		_main
   987 ;; This function uses a non-reentrant model
   988 ;;
   989                           
   990                           
   991                           ;psect for function _recolheTela
   992  0E7D                     _recolheTela:
   993  0E7D                     l1946:	
   994                           ;incstack = 0
   995                           ; Regs used in _recolheTela: [wreg]
   996                           
   997                           
   998                           ;main.c: 184:     if(RA4 == 0)
   999  0E7D  1283               	bcf	3,5	;RP0=0, select bank0
  1000  0E7E  1303               	bcf	3,6	;RP1=0, select bank0
  1001  0E7F  1A05               	btfsc	5,4	;volatile
  1002  0E80  2E82               	goto	u1451
  1003  0E81  2E83               	goto	u1450
  1004  0E82                     u1451:
  1005  0E82  2E95               	goto	l197
  1006  0E83                     u1450:
  1007  0E83                     l1948:
  1008                           
  1009                           ;main.c: 185:     {;main.c: 187:         RD4 = 0;
  1010  0E83  1208               	bcf	8,4	;volatile
  1011                           
  1012                           ;main.c: 188:         RC1 = 1;
  1013  0E84  1487               	bsf	7,1	;volatile
  1014                           
  1015                           ;main.c: 189:         RD2 = 0;
  1016  0E85  1108               	bcf	8,2	;volatile
  1017                           
  1018                           ;main.c: 190:         RD6 = 1;
  1019  0E86  1708               	bsf	8,6	;volatile
  1020                           
  1021                           ;main.c: 192:         RD0 = 0;
  1022  0E87  1008               	bcf	8,0	;volatile
  1023                           
  1024                           ;main.c: 193:         RC3 = 1;
  1025  0E88  1587               	bsf	7,3	;volatile
  1026                           
  1027                           ;main.c: 194:         RC2 = 0;
  1028  0E89  1107               	bcf	7,2	;volatile
  1029                           
  1030                           ;main.c: 195:         RD7 = 1;
  1031  0E8A  1788               	bsf	8,7	;volatile
  1032  0E8B                     l1950:
  1033                           
  1034                           ;main.c: 197:         _delay((unsigned long)((15)*(4000000/4000.0)));
  1035  0E8B  3014               	movlw	20
  1036  0E8C  00F5               	movwf	??_recolheTela+1
  1037  0E8D  3079               	movlw	121
  1038  0E8E  00F4               	movwf	??_recolheTela
  1039  0E8F                     u2327:
  1040  0E8F  0BF4               	decfsz	??_recolheTela,f
  1041  0E90  2E8F               	goto	u2327
  1042  0E91  0BF5               	decfsz	??_recolheTela+1,f
  1043  0E92  2E8F               	goto	u2327
  1044  0E93  2E94               	nop2
  1045                           
  1046                           ;main.c: 198:     }
  1047  0E94  2E9D               	goto	l199
  1048  0E95                     l197:	
  1049                           ;main.c: 199:     else
  1050                           
  1051                           
  1052                           ;main.c: 200:     {;main.c: 202:         RD4 = 1;
  1053  0E95  1608               	bsf	8,4	;volatile
  1054                           
  1055                           ;main.c: 203:         RC1 = 1;
  1056  0E96  1487               	bsf	7,1	;volatile
  1057                           
  1058                           ;main.c: 204:         RD2 = 1;
  1059  0E97  1508               	bsf	8,2	;volatile
  1060                           
  1061                           ;main.c: 205:         RD6 = 1;
  1062  0E98  1708               	bsf	8,6	;volatile
  1063                           
  1064                           ;main.c: 207:         RD0 = 1;
  1065  0E99  1408               	bsf	8,0	;volatile
  1066                           
  1067                           ;main.c: 208:         RC3 = 1;
  1068  0E9A  1587               	bsf	7,3	;volatile
  1069                           
  1070                           ;main.c: 209:         RC2 = 1;
  1071  0E9B  1507               	bsf	7,2	;volatile
  1072                           
  1073                           ;main.c: 210:         RD7 = 1;
  1074  0E9C  1788               	bsf	8,7	;volatile
  1075  0E9D                     l199:
  1076  0E9D  0008               	return
  1077  0E9E                     __end_of_recolheTela:
  1078                           
  1079                           	psect	text2
  1080  0DD6                     __ptext2:	
  1081 ;; *************** function _paraTela *****************
  1082 ;; Defined at:
  1083 ;;		line 98 in file "main.c"
  1084 ;; Parameters:    Size  Location     Type
  1085 ;;		None
  1086 ;; Auto vars:     Size  Location     Type
  1087 ;;		None
  1088 ;; Return value:  Size  Location     Type
  1089 ;;                  1    wreg      void 
  1090 ;; Registers used:
  1091 ;;		None
  1092 ;; Tracked objects:
  1093 ;;		On entry : 0/0
  1094 ;;		On exit  : 0/0
  1095 ;;		Unchanged: 0/0
  1096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1097 ;;      Params:         0       0       0       0       0
  1098 ;;      Locals:         0       0       0       0       0
  1099 ;;      Temps:          0       0       0       0       0
  1100 ;;      Totals:         0       0       0       0       0
  1101 ;;Total ram usage:        0 bytes
  1102 ;; Hardware stack levels used: 1
  1103 ;; Hardware stack levels required when called: 2
  1104 ;; This function calls:
  1105 ;;		Nothing
  1106 ;; This function is called by:
  1107 ;;		_main
  1108 ;; This function uses a non-reentrant model
  1109 ;;
  1110                           
  1111                           
  1112                           ;psect for function _paraTela
  1113  0DD6                     _paraTela:
  1114  0DD6                     l1958:	
  1115                           ;incstack = 0
  1116                           ; Regs used in _paraTela: []
  1117                           
  1118                           
  1119                           ;main.c: 100:     RD4 = 1;
  1120  0DD6  1283               	bcf	3,5	;RP0=0, select bank0
  1121  0DD7  1303               	bcf	3,6	;RP1=0, select bank0
  1122  0DD8  1608               	bsf	8,4	;volatile
  1123                           
  1124                           ;main.c: 101:     RC1 = 1;
  1125  0DD9  1487               	bsf	7,1	;volatile
  1126                           
  1127                           ;main.c: 102:     RD2 = 1;
  1128  0DDA  1508               	bsf	8,2	;volatile
  1129                           
  1130                           ;main.c: 103:     RD6 = 1;
  1131  0DDB  1708               	bsf	8,6	;volatile
  1132                           
  1133                           ;main.c: 105:     RD0 = 1;
  1134  0DDC  1408               	bsf	8,0	;volatile
  1135                           
  1136                           ;main.c: 106:     RC3 = 1;
  1137  0DDD  1587               	bsf	7,3	;volatile
  1138                           
  1139                           ;main.c: 107:     RC2 = 1;
  1140  0DDE  1507               	bsf	7,2	;volatile
  1141                           
  1142                           ;main.c: 108:     RD7 = 1;
  1143  0DDF  1788               	bsf	8,7	;volatile
  1144  0DE0                     l191:
  1145  0DE0  0008               	return
  1146  0DE1                     __end_of_paraTela:
  1147                           
  1148                           	psect	text3
  1149  0040                     __ptext3:	
  1150 ;; *************** function _lerSensores *****************
  1151 ;; Defined at:
  1152 ;;		line 110 in file "main.c"
  1153 ;; Parameters:    Size  Location     Type
  1154 ;;		None
  1155 ;; Auto vars:     Size  Location     Type
  1156 ;;		None
  1157 ;; Return value:  Size  Location     Type
  1158 ;;                  1    wreg      void 
  1159 ;; Registers used:
  1160 ;;		wreg, status,2, status,0, pclath, cstack
  1161 ;; Tracked objects:
  1162 ;;		On entry : 0/0
  1163 ;;		On exit  : 0/0
  1164 ;;		Unchanged: 0/0
  1165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1166 ;;      Params:         0       0       0       0       0
  1167 ;;      Locals:         0       0       0       0       0
  1168 ;;      Temps:          0       4       0       0       0
  1169 ;;      Totals:         0       4       0       0       0
  1170 ;;Total ram usage:        4 bytes
  1171 ;; Hardware stack levels used: 1
  1172 ;; Hardware stack levels required when called: 3
  1173 ;; This function calls:
  1174 ;;		___xxtofl
  1175 ;; This function is called by:
  1176 ;;		_main
  1177 ;; This function uses a non-reentrant model
  1178 ;;
  1179                           
  1180                           
  1181                           ;psect for function _lerSensores
  1182  0040                     _lerSensores:
  1183  0040                     l2356:	
  1184                           ;incstack = 0
  1185                           ; Regs used in _lerSensores: [wreg+status,2+status,0+pclath+cstack]
  1186                           
  1187                           
  1188                           ;main.c: 114:     ADCON0bits.CHS0 = 0;
  1189  0040  1283               	bcf	3,5	;RP0=0, select bank0
  1190  0041  1303               	bcf	3,6	;RP1=0, select bank0
  1191  0042  119F               	bcf	31,3	;volatile
  1192                           
  1193                           ;main.c: 115:     ADCON0bits.CHS1 = 0;
  1194  0043  121F               	bcf	31,4	;volatile
  1195                           
  1196                           ;main.c: 116:     ADCON0bits.CHS2 = 0;
  1197  0044  129F               	bcf	31,5	;volatile
  1198                           
  1199                           ;main.c: 118:     ADCON0bits.GO = 1;
  1200  0045  151F               	bsf	31,2	;volatile
  1201  0046                     l2358:
  1202                           
  1203                           ;main.c: 119:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  1204  0046  300F               	movlw	15
  1205  0047  1283               	bcf	3,5	;RP0=0, select bank0
  1206  0048  1303               	bcf	3,6	;RP1=0, select bank0
  1207  0049  00AE               	movwf	??_lerSensores
  1208  004A                     u2337:
  1209  004A  0BAE               	decfsz	??_lerSensores,f
  1210  004B  284A               	goto	u2337
  1211  004C  284D               	nop2
  1212  004D                     l2360:
  1213                           
  1214                           ;main.c: 120:     valor_entry0 = ADRESH;
  1215  004D  1283               	bcf	3,5	;RP0=0, select bank0
  1216  004E  1303               	bcf	3,6	;RP1=0, select bank0
  1217  004F  081E               	movf	30,w	;volatile
  1218  0050  00AE               	movwf	??_lerSensores
  1219  0051  01AF               	clrf	??_lerSensores+1
  1220  0052  01B0               	clrf	??_lerSensores+2
  1221  0053  01B1               	clrf	??_lerSensores+3
  1222  0054  0831               	movf	??_lerSensores+3,w
  1223  0055  00A3               	movwf	___xxtofl@val+3
  1224  0056  0830               	movf	??_lerSensores+2,w
  1225  0057  00A2               	movwf	___xxtofl@val+2
  1226  0058  082F               	movf	??_lerSensores+1,w
  1227  0059  00A1               	movwf	___xxtofl@val+1
  1228  005A  082E               	movf	??_lerSensores,w
  1229  005B  00A0               	movwf	___xxtofl@val
  1230  005C  3000               	movlw	0
  1231  005D  120A  118A  244A  120A  118A  	fcall	___xxtofl
  1232  0062  1283               	bcf	3,5	;RP0=0, select bank0
  1233  0063  1303               	bcf	3,6	;RP1=0, select bank0
  1234  0064  0823               	movf	?___xxtofl+3,w
  1235  0065  00F9               	movwf	_valor_entry0+3
  1236  0066  0822               	movf	?___xxtofl+2,w
  1237  0067  00F8               	movwf	_valor_entry0+2
  1238  0068  0821               	movf	?___xxtofl+1,w
  1239  0069  00F7               	movwf	_valor_entry0+1
  1240  006A  0820               	movf	?___xxtofl,w
  1241  006B  00F6               	movwf	_valor_entry0
  1242  006C                     l2362:
  1243                           
  1244                           ;main.c: 124:     ADCON0bits.CHS0 = 1;
  1245  006C  159F               	bsf	31,3	;volatile
  1246  006D                     l2364:
  1247                           
  1248                           ;main.c: 125:     ADCON0bits.CHS1 = 0;
  1249  006D  121F               	bcf	31,4	;volatile
  1250  006E                     l2366:
  1251                           
  1252                           ;main.c: 126:     ADCON0bits.CHS2 = 0;
  1253  006E  129F               	bcf	31,5	;volatile
  1254  006F                     l2368:
  1255                           
  1256                           ;main.c: 128:     ADCON0bits.GO = 1;
  1257  006F  151F               	bsf	31,2	;volatile
  1258  0070                     l2370:
  1259                           
  1260                           ;main.c: 129:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  1261  0070  300F               	movlw	15
  1262  0071  1283               	bcf	3,5	;RP0=0, select bank0
  1263  0072  1303               	bcf	3,6	;RP1=0, select bank0
  1264  0073  00AE               	movwf	??_lerSensores
  1265  0074                     u2347:
  1266  0074  0BAE               	decfsz	??_lerSensores,f
  1267  0075  2874               	goto	u2347
  1268  0076  2877               	nop2
  1269                           
  1270                           ;main.c: 130:     valor_entry1 = ADRESH;
  1271  0077  1283               	bcf	3,5	;RP0=0, select bank0
  1272  0078  1303               	bcf	3,6	;RP1=0, select bank0
  1273  0079  081E               	movf	30,w	;volatile
  1274  007A  00AE               	movwf	??_lerSensores
  1275  007B  01AF               	clrf	??_lerSensores+1
  1276  007C  01B0               	clrf	??_lerSensores+2
  1277  007D  01B1               	clrf	??_lerSensores+3
  1278  007E  0831               	movf	??_lerSensores+3,w
  1279  007F  00A3               	movwf	___xxtofl@val+3
  1280  0080  0830               	movf	??_lerSensores+2,w
  1281  0081  00A2               	movwf	___xxtofl@val+2
  1282  0082  082F               	movf	??_lerSensores+1,w
  1283  0083  00A1               	movwf	___xxtofl@val+1
  1284  0084  082E               	movf	??_lerSensores,w
  1285  0085  00A0               	movwf	___xxtofl@val
  1286  0086  3000               	movlw	0
  1287  0087  120A  118A  244A  120A  118A  	fcall	___xxtofl
  1288  008C  1283               	bcf	3,5	;RP0=0, select bank0
  1289  008D  1303               	bcf	3,6	;RP1=0, select bank0
  1290  008E  0823               	movf	?___xxtofl+3,w
  1291  008F  00CB               	movwf	_valor_entry1+3
  1292  0090  0822               	movf	?___xxtofl+2,w
  1293  0091  00CA               	movwf	_valor_entry1+2
  1294  0092  0821               	movf	?___xxtofl+1,w
  1295  0093  00C9               	movwf	_valor_entry1+1
  1296  0094  0820               	movf	?___xxtofl,w
  1297  0095  00C8               	movwf	_valor_entry1
  1298  0096                     l2372:
  1299                           
  1300                           ;main.c: 134:     ADCON0bits.CHS0 = 0;
  1301  0096  119F               	bcf	31,3	;volatile
  1302  0097                     l2374:
  1303                           
  1304                           ;main.c: 135:     ADCON0bits.CHS1 = 1;
  1305  0097  161F               	bsf	31,4	;volatile
  1306  0098                     l2376:
  1307                           
  1308                           ;main.c: 136:     ADCON0bits.CHS2 = 0;
  1309  0098  129F               	bcf	31,5	;volatile
  1310  0099                     l2378:
  1311                           
  1312                           ;main.c: 138:     ADCON0bits.GO = 1;
  1313  0099  151F               	bsf	31,2	;volatile
  1314  009A                     l2380:
  1315                           
  1316                           ;main.c: 139:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  1317  009A  300F               	movlw	15
  1318  009B  1283               	bcf	3,5	;RP0=0, select bank0
  1319  009C  1303               	bcf	3,6	;RP1=0, select bank0
  1320  009D  00AE               	movwf	??_lerSensores
  1321  009E                     u2357:
  1322  009E  0BAE               	decfsz	??_lerSensores,f
  1323  009F  289E               	goto	u2357
  1324  00A0  28A1               	nop2
  1325  00A1                     l2382:
  1326                           
  1327                           ;main.c: 140:     valor_entry2 = ADRESH;
  1328  00A1  1283               	bcf	3,5	;RP0=0, select bank0
  1329  00A2  1303               	bcf	3,6	;RP1=0, select bank0
  1330  00A3  081E               	movf	30,w	;volatile
  1331  00A4  00AE               	movwf	??_lerSensores
  1332  00A5  01AF               	clrf	??_lerSensores+1
  1333  00A6  01B0               	clrf	??_lerSensores+2
  1334  00A7  01B1               	clrf	??_lerSensores+3
  1335  00A8  0831               	movf	??_lerSensores+3,w
  1336  00A9  00A3               	movwf	___xxtofl@val+3
  1337  00AA  0830               	movf	??_lerSensores+2,w
  1338  00AB  00A2               	movwf	___xxtofl@val+2
  1339  00AC  082F               	movf	??_lerSensores+1,w
  1340  00AD  00A1               	movwf	___xxtofl@val+1
  1341  00AE  082E               	movf	??_lerSensores,w
  1342  00AF  00A0               	movwf	___xxtofl@val
  1343  00B0  3000               	movlw	0
  1344  00B1  120A  118A  244A  120A  118A  	fcall	___xxtofl
  1345  00B6  1283               	bcf	3,5	;RP0=0, select bank0
  1346  00B7  1303               	bcf	3,6	;RP1=0, select bank0
  1347  00B8  0823               	movf	?___xxtofl+3,w
  1348  00B9  00C7               	movwf	_valor_entry2+3
  1349  00BA  0822               	movf	?___xxtofl+2,w
  1350  00BB  00C6               	movwf	_valor_entry2+2
  1351  00BC  0821               	movf	?___xxtofl+1,w
  1352  00BD  00C5               	movwf	_valor_entry2+1
  1353  00BE  0820               	movf	?___xxtofl,w
  1354  00BF  00C4               	movwf	_valor_entry2
  1355  00C0                     l2384:
  1356                           
  1357                           ;main.c: 143:     ADCON0bits.CHS0 = 1;
  1358  00C0  159F               	bsf	31,3	;volatile
  1359  00C1                     l2386:
  1360                           
  1361                           ;main.c: 144:     ADCON0bits.CHS1 = 1;
  1362  00C1  161F               	bsf	31,4	;volatile
  1363  00C2                     l2388:
  1364                           
  1365                           ;main.c: 145:     ADCON0bits.CHS2 = 0;
  1366  00C2  129F               	bcf	31,5	;volatile
  1367  00C3                     l2390:
  1368                           
  1369                           ;main.c: 147:     ADCON0bits.GO = 1;
  1370  00C3  151F               	bsf	31,2	;volatile
  1371                           
  1372                           ;main.c: 148:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  1373  00C4  300F               	movlw	15
  1374  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  1375  00C6  1303               	bcf	3,6	;RP1=0, select bank0
  1376  00C7  00AE               	movwf	??_lerSensores
  1377  00C8                     u2367:
  1378  00C8  0BAE               	decfsz	??_lerSensores,f
  1379  00C9  28C8               	goto	u2367
  1380  00CA  28CB               	nop2
  1381  00CB                     l2392:
  1382                           
  1383                           ;main.c: 149:     valor_entry3 = ADRESH;
  1384  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  1385  00CC  1303               	bcf	3,6	;RP1=0, select bank0
  1386  00CD  081E               	movf	30,w	;volatile
  1387  00CE  00AE               	movwf	??_lerSensores
  1388  00CF  01AF               	clrf	??_lerSensores+1
  1389  00D0  01B0               	clrf	??_lerSensores+2
  1390  00D1  01B1               	clrf	??_lerSensores+3
  1391  00D2  0831               	movf	??_lerSensores+3,w
  1392  00D3  00A3               	movwf	___xxtofl@val+3
  1393  00D4  0830               	movf	??_lerSensores+2,w
  1394  00D5  00A2               	movwf	___xxtofl@val+2
  1395  00D6  082F               	movf	??_lerSensores+1,w
  1396  00D7  00A1               	movwf	___xxtofl@val+1
  1397  00D8  082E               	movf	??_lerSensores,w
  1398  00D9  00A0               	movwf	___xxtofl@val
  1399  00DA  3000               	movlw	0
  1400  00DB  120A  118A  244A  120A  118A  	fcall	___xxtofl
  1401  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  1402  00E1  1303               	bcf	3,6	;RP1=0, select bank0
  1403  00E2  0823               	movf	?___xxtofl+3,w
  1404  00E3  00D3               	movwf	_valor_entry3+3
  1405  00E4  0822               	movf	?___xxtofl+2,w
  1406  00E5  00D2               	movwf	_valor_entry3+2
  1407  00E6  0821               	movf	?___xxtofl+1,w
  1408  00E7  00D1               	movwf	_valor_entry3+1
  1409  00E8  0820               	movf	?___xxtofl,w
  1410  00E9  00D0               	movwf	_valor_entry3
  1411  00EA                     l2394:
  1412                           
  1413                           ;main.c: 152:     ADCON0bits.CHS0 = 0;
  1414  00EA  119F               	bcf	31,3	;volatile
  1415  00EB                     l2396:
  1416                           
  1417                           ;main.c: 153:     ADCON0bits.CHS1 = 0;
  1418  00EB  121F               	bcf	31,4	;volatile
  1419  00EC                     l2398:
  1420                           
  1421                           ;main.c: 154:     ADCON0bits.CHS2 = 1;
  1422  00EC  169F               	bsf	31,5	;volatile
  1423  00ED                     l2400:
  1424                           
  1425                           ;main.c: 156:     ADCON0bits.GO = 1;
  1426  00ED  151F               	bsf	31,2	;volatile
  1427  00EE                     l2402:
  1428                           
  1429                           ;main.c: 157:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  1430  00EE  300F               	movlw	15
  1431  00EF  1283               	bcf	3,5	;RP0=0, select bank0
  1432  00F0  1303               	bcf	3,6	;RP1=0, select bank0
  1433  00F1  00AE               	movwf	??_lerSensores
  1434  00F2                     u2377:
  1435  00F2  0BAE               	decfsz	??_lerSensores,f
  1436  00F3  28F2               	goto	u2377
  1437  00F4  28F5               	nop2
  1438                           
  1439                           ;main.c: 158:     valor_entry4 = ADRESH;
  1440  00F5  1283               	bcf	3,5	;RP0=0, select bank0
  1441  00F6  1303               	bcf	3,6	;RP1=0, select bank0
  1442  00F7  081E               	movf	30,w	;volatile
  1443  00F8  00AE               	movwf	??_lerSensores
  1444  00F9  01AF               	clrf	??_lerSensores+1
  1445  00FA  01B0               	clrf	??_lerSensores+2
  1446  00FB  01B1               	clrf	??_lerSensores+3
  1447  00FC  0831               	movf	??_lerSensores+3,w
  1448  00FD  00A3               	movwf	___xxtofl@val+3
  1449  00FE  0830               	movf	??_lerSensores+2,w
  1450  00FF  00A2               	movwf	___xxtofl@val+2
  1451  0100  082F               	movf	??_lerSensores+1,w
  1452  0101  00A1               	movwf	___xxtofl@val+1
  1453  0102  082E               	movf	??_lerSensores,w
  1454  0103  00A0               	movwf	___xxtofl@val
  1455  0104  3000               	movlw	0
  1456  0105  120A  118A  244A  120A  118A  	fcall	___xxtofl
  1457  010A  1283               	bcf	3,5	;RP0=0, select bank0
  1458  010B  1303               	bcf	3,6	;RP1=0, select bank0
  1459  010C  0823               	movf	?___xxtofl+3,w
  1460  010D  00CF               	movwf	_valor_entry4+3
  1461  010E  0822               	movf	?___xxtofl+2,w
  1462  010F  00CE               	movwf	_valor_entry4+2
  1463  0110  0821               	movf	?___xxtofl+1,w
  1464  0111  00CD               	movwf	_valor_entry4+1
  1465  0112  0820               	movf	?___xxtofl,w
  1466  0113  00CC               	movwf	_valor_entry4
  1467  0114                     l2404:
  1468                           
  1469                           ;main.c: 162:     ADCON0bits.CHS0 = 1;
  1470  0114  159F               	bsf	31,3	;volatile
  1471  0115                     l2406:
  1472                           
  1473                           ;main.c: 163:     ADCON0bits.CHS1 = 0;
  1474  0115  121F               	bcf	31,4	;volatile
  1475  0116                     l2408:
  1476                           
  1477                           ;main.c: 164:     ADCON0bits.CHS2 = 1;
  1478  0116  169F               	bsf	31,5	;volatile
  1479  0117                     l2410:
  1480                           
  1481                           ;main.c: 166:     ADCON0bits.GO = 1;
  1482  0117  151F               	bsf	31,2	;volatile
  1483  0118                     l2412:
  1484                           
  1485                           ;main.c: 167:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  1486  0118  300F               	movlw	15
  1487  0119  1283               	bcf	3,5	;RP0=0, select bank0
  1488  011A  1303               	bcf	3,6	;RP1=0, select bank0
  1489  011B  00AE               	movwf	??_lerSensores
  1490  011C                     u2387:
  1491  011C  0BAE               	decfsz	??_lerSensores,f
  1492  011D  291C               	goto	u2387
  1493  011E  291F               	nop2
  1494  011F                     l2414:
  1495                           
  1496                           ;main.c: 168:     valor_entry5 = ADRESH;
  1497  011F  1283               	bcf	3,5	;RP0=0, select bank0
  1498  0120  1303               	bcf	3,6	;RP1=0, select bank0
  1499  0121  081E               	movf	30,w	;volatile
  1500  0122  00AE               	movwf	??_lerSensores
  1501  0123  01AF               	clrf	??_lerSensores+1
  1502  0124  01B0               	clrf	??_lerSensores+2
  1503  0125  01B1               	clrf	??_lerSensores+3
  1504  0126  0831               	movf	??_lerSensores+3,w
  1505  0127  00A3               	movwf	___xxtofl@val+3
  1506  0128  0830               	movf	??_lerSensores+2,w
  1507  0129  00A2               	movwf	___xxtofl@val+2
  1508  012A  082F               	movf	??_lerSensores+1,w
  1509  012B  00A1               	movwf	___xxtofl@val+1
  1510  012C  082E               	movf	??_lerSensores,w
  1511  012D  00A0               	movwf	___xxtofl@val
  1512  012E  3000               	movlw	0
  1513  012F  120A  118A  244A  120A  118A  	fcall	___xxtofl
  1514  0134  1283               	bcf	3,5	;RP0=0, select bank0
  1515  0135  1303               	bcf	3,6	;RP1=0, select bank0
  1516  0136  0823               	movf	?___xxtofl+3,w
  1517  0137  1683               	bsf	3,5	;RP0=1, select bank1
  1518  0138  1303               	bcf	3,6	;RP1=0, select bank1
  1519  0139  00C7               	movwf	(_valor_entry5+3)^(0+128)
  1520  013A  1283               	bcf	3,5	;RP0=0, select bank0
  1521  013B  1303               	bcf	3,6	;RP1=0, select bank0
  1522  013C  0822               	movf	?___xxtofl+2,w
  1523  013D  1683               	bsf	3,5	;RP0=1, select bank1
  1524  013E  1303               	bcf	3,6	;RP1=0, select bank1
  1525  013F  00C6               	movwf	(_valor_entry5+2)^(0+128)
  1526  0140  1283               	bcf	3,5	;RP0=0, select bank0
  1527  0141  1303               	bcf	3,6	;RP1=0, select bank0
  1528  0142  0821               	movf	?___xxtofl+1,w
  1529  0143  1683               	bsf	3,5	;RP0=1, select bank1
  1530  0144  1303               	bcf	3,6	;RP1=0, select bank1
  1531  0145  00C5               	movwf	(_valor_entry5+1)^(0+128)
  1532  0146  1283               	bcf	3,5	;RP0=0, select bank0
  1533  0147  1303               	bcf	3,6	;RP1=0, select bank0
  1534  0148  0820               	movf	?___xxtofl,w
  1535  0149  1683               	bsf	3,5	;RP0=1, select bank1
  1536  014A  1303               	bcf	3,6	;RP1=0, select bank1
  1537  014B  00C4               	movwf	_valor_entry5^(0+128)
  1538  014C                     l2416:
  1539                           
  1540                           ;main.c: 173:     ADCON0bits.CHS0 = 0;
  1541  014C  1283               	bcf	3,5	;RP0=0, select bank0
  1542  014D  1303               	bcf	3,6	;RP1=0, select bank0
  1543  014E  119F               	bcf	31,3	;volatile
  1544  014F                     l2418:
  1545                           
  1546                           ;main.c: 174:     ADCON0bits.CHS1 = 1;
  1547  014F  161F               	bsf	31,4	;volatile
  1548  0150                     l2420:
  1549                           
  1550                           ;main.c: 175:     ADCON0bits.CHS2 = 1;
  1551  0150  169F               	bsf	31,5	;volatile
  1552  0151                     l2422:
  1553                           
  1554                           ;main.c: 177:     ADCON0bits.GO = 1;
  1555  0151  151F               	bsf	31,2	;volatile
  1556                           
  1557                           ;main.c: 178:     _delay((unsigned long)((10)*(4000000/4000000.0)));
  1558  0152  3002               	movlw	2
  1559  0153  1283               	bcf	3,5	;RP0=0, select bank0
  1560  0154  1303               	bcf	3,6	;RP1=0, select bank0
  1561  0155  00AE               	movwf	??_lerSensores
  1562  0156                     u2397:
  1563  0156  0BAE               	decfsz	??_lerSensores,f
  1564  0157  2956               	goto	u2397
  1565  0158  0000               	nop
  1566  0159                     l2424:
  1567                           
  1568                           ;main.c: 179:     valor_entry6 = ADRESH;
  1569  0159  1283               	bcf	3,5	;RP0=0, select bank0
  1570  015A  1303               	bcf	3,6	;RP1=0, select bank0
  1571  015B  081E               	movf	30,w	;volatile
  1572  015C  00AE               	movwf	??_lerSensores
  1573  015D  01AF               	clrf	??_lerSensores+1
  1574  015E  01B0               	clrf	??_lerSensores+2
  1575  015F  01B1               	clrf	??_lerSensores+3
  1576  0160  0831               	movf	??_lerSensores+3,w
  1577  0161  00A3               	movwf	___xxtofl@val+3
  1578  0162  0830               	movf	??_lerSensores+2,w
  1579  0163  00A2               	movwf	___xxtofl@val+2
  1580  0164  082F               	movf	??_lerSensores+1,w
  1581  0165  00A1               	movwf	___xxtofl@val+1
  1582  0166  082E               	movf	??_lerSensores,w
  1583  0167  00A0               	movwf	___xxtofl@val
  1584  0168  3000               	movlw	0
  1585  0169  120A  118A  244A  120A  118A  	fcall	___xxtofl
  1586  016E  1283               	bcf	3,5	;RP0=0, select bank0
  1587  016F  1303               	bcf	3,6	;RP1=0, select bank0
  1588  0170  0823               	movf	?___xxtofl+3,w
  1589  0171  1683               	bsf	3,5	;RP0=1, select bank1
  1590  0172  1303               	bcf	3,6	;RP1=0, select bank1
  1591  0173  00C3               	movwf	(_valor_entry6+3)^(0+128)
  1592  0174  1283               	bcf	3,5	;RP0=0, select bank0
  1593  0175  1303               	bcf	3,6	;RP1=0, select bank0
  1594  0176  0822               	movf	?___xxtofl+2,w
  1595  0177  1683               	bsf	3,5	;RP0=1, select bank1
  1596  0178  1303               	bcf	3,6	;RP1=0, select bank1
  1597  0179  00C2               	movwf	(_valor_entry6+2)^(0+128)
  1598  017A  1283               	bcf	3,5	;RP0=0, select bank0
  1599  017B  1303               	bcf	3,6	;RP1=0, select bank0
  1600  017C  0821               	movf	?___xxtofl+1,w
  1601  017D  1683               	bsf	3,5	;RP0=1, select bank1
  1602  017E  1303               	bcf	3,6	;RP1=0, select bank1
  1603  017F  00C1               	movwf	(_valor_entry6+1)^(0+128)
  1604  0180  1283               	bcf	3,5	;RP0=0, select bank0
  1605  0181  1303               	bcf	3,6	;RP1=0, select bank0
  1606  0182  0820               	movf	?___xxtofl,w
  1607  0183  1683               	bsf	3,5	;RP0=1, select bank1
  1608  0184  1303               	bcf	3,6	;RP1=0, select bank1
  1609  0185  00C0               	movwf	_valor_entry6^(0+128)
  1610  0186                     l194:
  1611  0186  0008               	return
  1612  0187                     __end_of_lerSensores:
  1613                           
  1614                           	psect	text4
  1615  044A                     __ptext4:	
  1616 ;; *************** function ___xxtofl *****************
  1617 ;; Defined at:
  1618 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\xxtofl.c"
  1619 ;; Parameters:    Size  Location     Type
  1620 ;;  sign            1    wreg     unsigned char 
  1621 ;;  val             4    0[BANK0 ] long 
  1622 ;; Auto vars:     Size  Location     Type
  1623 ;;  sign            1    8[BANK0 ] unsigned char 
  1624 ;;  arg             4   10[BANK0 ] unsigned long 
  1625 ;;  exp             1    9[BANK0 ] unsigned char 
  1626 ;; Return value:  Size  Location     Type
  1627 ;;                  4    0[BANK0 ] unsigned char 
  1628 ;; Registers used:
  1629 ;;		wreg, status,2, status,0
  1630 ;; Tracked objects:
  1631 ;;		On entry : 0/0
  1632 ;;		On exit  : 0/0
  1633 ;;		Unchanged: 0/0
  1634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1635 ;;      Params:         0       4       0       0       0
  1636 ;;      Locals:         0       6       0       0       0
  1637 ;;      Temps:          0       4       0       0       0
  1638 ;;      Totals:         0      14       0       0       0
  1639 ;;Total ram usage:       14 bytes
  1640 ;; Hardware stack levels used: 1
  1641 ;; Hardware stack levels required when called: 2
  1642 ;; This function calls:
  1643 ;;		Nothing
  1644 ;; This function is called by:
  1645 ;;		_lerSensores
  1646 ;; This function uses a non-reentrant model
  1647 ;;
  1648                           
  1649                           
  1650                           ;psect for function ___xxtofl
  1651  044A                     ___xxtofl:
  1652                           
  1653                           ;incstack = 0
  1654                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  1655                           ;___xxtofl@sign stored from wreg
  1656  044A  1283               	bcf	3,5	;RP0=0, select bank0
  1657  044B  1303               	bcf	3,6	;RP1=0, select bank0
  1658  044C  00A8               	movwf	___xxtofl@sign
  1659  044D                     l2302:
  1660  044D  0828               	movf	___xxtofl@sign,w
  1661  044E  1903               	btfsc	3,2
  1662  044F  2C51               	goto	u2071
  1663  0450  2C52               	goto	u2070
  1664  0451                     u2071:
  1665  0451  2C66               	goto	l2308
  1666  0452                     u2070:
  1667  0452                     l2304:
  1668  0452  1FA3               	btfss	___xxtofl@val+3,7
  1669  0453  2C55               	goto	u2081
  1670  0454  2C56               	goto	u2080
  1671  0455                     u2081:
  1672  0455  2C66               	goto	l2308
  1673  0456                     u2080:
  1674  0456                     l2306:
  1675  0456  0920               	comf	___xxtofl@val,w
  1676  0457  00AA               	movwf	___xxtofl@arg
  1677  0458  0921               	comf	___xxtofl@val+1,w
  1678  0459  00AB               	movwf	___xxtofl@arg+1
  1679  045A  0922               	comf	___xxtofl@val+2,w
  1680  045B  00AC               	movwf	___xxtofl@arg+2
  1681  045C  0923               	comf	___xxtofl@val+3,w
  1682  045D  00AD               	movwf	___xxtofl@arg+3
  1683  045E  0AAA               	incf	___xxtofl@arg,f
  1684  045F  1903               	skipnz
  1685  0460  0AAB               	incf	___xxtofl@arg+1,f
  1686  0461  1903               	skipnz
  1687  0462  0AAC               	incf	___xxtofl@arg+2,f
  1688  0463  1903               	skipnz
  1689  0464  0AAD               	incf	___xxtofl@arg+3,f
  1690  0465  2C6E               	goto	l785
  1691  0466                     l2308:
  1692  0466  0823               	movf	___xxtofl@val+3,w
  1693  0467  00AD               	movwf	___xxtofl@arg+3
  1694  0468  0822               	movf	___xxtofl@val+2,w
  1695  0469  00AC               	movwf	___xxtofl@arg+2
  1696  046A  0821               	movf	___xxtofl@val+1,w
  1697  046B  00AB               	movwf	___xxtofl@arg+1
  1698  046C  0820               	movf	___xxtofl@val,w
  1699  046D  00AA               	movwf	___xxtofl@arg
  1700  046E                     l785:
  1701  046E  0823               	movf	___xxtofl@val+3,w
  1702  046F  0422               	iorwf	___xxtofl@val+2,w
  1703  0470  0421               	iorwf	___xxtofl@val+1,w
  1704  0471  0420               	iorwf	___xxtofl@val,w
  1705  0472  1D03               	skipz
  1706  0473  2C75               	goto	u2091
  1707  0474  2C76               	goto	u2090
  1708  0475                     u2091:
  1709  0475  2C7F               	goto	l2314
  1710  0476                     u2090:
  1711  0476                     l2310:
  1712  0476  3000               	movlw	0
  1713  0477  00A3               	movwf	?___xxtofl+3
  1714  0478  3000               	movlw	0
  1715  0479  00A2               	movwf	?___xxtofl+2
  1716  047A  3000               	movlw	0
  1717  047B  00A1               	movwf	?___xxtofl+1
  1718  047C  3000               	movlw	0
  1719  047D  00A0               	movwf	?___xxtofl
  1720  047E  2D05               	goto	l787
  1721  047F                     l2314:
  1722  047F  3096               	movlw	150
  1723  0480  00A4               	movwf	??___xxtofl
  1724  0481  0824               	movf	??___xxtofl,w
  1725  0482  00A9               	movwf	___xxtofl@exp
  1726  0483  2C91               	goto	l2318
  1727  0484                     l2316:
  1728  0484  3001               	movlw	1
  1729  0485  00A4               	movwf	??___xxtofl
  1730  0486  0824               	movf	??___xxtofl,w
  1731  0487  07A9               	addwf	___xxtofl@exp,f
  1732  0488  3001               	movlw	1
  1733  0489                     u2105:
  1734  0489  1003               	clrc
  1735  048A  0CAD               	rrf	___xxtofl@arg+3,f
  1736  048B  0CAC               	rrf	___xxtofl@arg+2,f
  1737  048C  0CAB               	rrf	___xxtofl@arg+1,f
  1738  048D  0CAA               	rrf	___xxtofl@arg,f
  1739  048E  3EFF               	addlw	-1
  1740  048F  1D03               	skipz
  1741  0490  2C89               	goto	u2105
  1742  0491                     l2318:
  1743  0491  30FE               	movlw	254
  1744  0492  052D               	andwf	___xxtofl@arg+3,w
  1745  0493  1D03               	btfss	3,2
  1746  0494  2C96               	goto	u2111
  1747  0495  2C97               	goto	u2110
  1748  0496                     u2111:
  1749  0496  2C84               	goto	l2316
  1750  0497                     u2110:
  1751  0497  2CB3               	goto	l791
  1752  0498                     l2320:
  1753  0498  3001               	movlw	1
  1754  0499  00A4               	movwf	??___xxtofl
  1755  049A  0824               	movf	??___xxtofl,w
  1756  049B  07A9               	addwf	___xxtofl@exp,f
  1757  049C                     l2322:
  1758  049C  3001               	movlw	1
  1759  049D  07AA               	addwf	___xxtofl@arg,f
  1760  049E  3000               	movlw	0
  1761  049F  1803               	skipnc
  1762  04A0  3001               	movlw	1
  1763  04A1  07AB               	addwf	___xxtofl@arg+1,f
  1764  04A2  3000               	movlw	0
  1765  04A3  1803               	skipnc
  1766  04A4  3001               	movlw	1
  1767  04A5  07AC               	addwf	___xxtofl@arg+2,f
  1768  04A6  3000               	movlw	0
  1769  04A7  1803               	skipnc
  1770  04A8  3001               	movlw	1
  1771  04A9  07AD               	addwf	___xxtofl@arg+3,f
  1772  04AA                     l2324:
  1773  04AA  3001               	movlw	1
  1774  04AB                     u2125:
  1775  04AB  1003               	clrc
  1776  04AC  0CAD               	rrf	___xxtofl@arg+3,f
  1777  04AD  0CAC               	rrf	___xxtofl@arg+2,f
  1778  04AE  0CAB               	rrf	___xxtofl@arg+1,f
  1779  04AF  0CAA               	rrf	___xxtofl@arg,f
  1780  04B0  3EFF               	addlw	-1
  1781  04B1  1D03               	skipz
  1782  04B2  2CAB               	goto	u2125
  1783  04B3                     l791:
  1784  04B3  30FF               	movlw	255
  1785  04B4  052D               	andwf	___xxtofl@arg+3,w
  1786  04B5  1D03               	btfss	3,2
  1787  04B6  2CB8               	goto	u2131
  1788  04B7  2CB9               	goto	u2130
  1789  04B8                     u2131:
  1790  04B8  2C98               	goto	l2320
  1791  04B9                     u2130:
  1792  04B9  2CC5               	goto	l2328
  1793  04BA                     l2326:
  1794  04BA  3001               	movlw	1
  1795  04BB  02A9               	subwf	___xxtofl@exp,f
  1796  04BC  3001               	movlw	1
  1797  04BD  00A4               	movwf	??___xxtofl
  1798  04BE                     u2145:
  1799  04BE  1003               	clrc
  1800  04BF  0DAA               	rlf	___xxtofl@arg,f
  1801  04C0  0DAB               	rlf	___xxtofl@arg+1,f
  1802  04C1  0DAC               	rlf	___xxtofl@arg+2,f
  1803  04C2  0DAD               	rlf	___xxtofl@arg+3,f
  1804  04C3  0BA4               	decfsz	??___xxtofl,f
  1805  04C4  2CBE               	goto	u2145
  1806  04C5                     l2328:
  1807  04C5  1BAC               	btfsc	___xxtofl@arg+2,7
  1808  04C6  2CC8               	goto	u2151
  1809  04C7  2CC9               	goto	u2150
  1810  04C8                     u2151:
  1811  04C8  2CCF               	goto	l798
  1812  04C9                     u2150:
  1813  04C9                     l2330:
  1814  04C9  3002               	movlw	2
  1815  04CA  0229               	subwf	___xxtofl@exp,w
  1816  04CB  1803               	skipnc
  1817  04CC  2CCE               	goto	u2161
  1818  04CD  2CCF               	goto	u2160
  1819  04CE                     u2161:
  1820  04CE  2CBA               	goto	l2326
  1821  04CF                     u2160:
  1822  04CF                     l798:
  1823  04CF  1829               	btfsc	___xxtofl@exp,0
  1824  04D0  2CD2               	goto	u2171
  1825  04D1  2CD3               	goto	u2170
  1826  04D2                     u2171:
  1827  04D2  2CDB               	goto	l799
  1828  04D3                     u2170:
  1829  04D3                     l2332:
  1830  04D3  30FF               	movlw	255
  1831  04D4  05AA               	andwf	___xxtofl@arg,f
  1832  04D5  30FF               	movlw	255
  1833  04D6  05AB               	andwf	___xxtofl@arg+1,f
  1834  04D7  307F               	movlw	127
  1835  04D8  05AC               	andwf	___xxtofl@arg+2,f
  1836  04D9  30FF               	movlw	255
  1837  04DA  05AD               	andwf	___xxtofl@arg+3,f
  1838  04DB                     l799:
  1839  04DB  1003               	clrc
  1840  04DC  0CA9               	rrf	___xxtofl@exp,f
  1841  04DD                     l2334:
  1842  04DD  0829               	movf	___xxtofl@exp,w
  1843  04DE  00A4               	movwf	??___xxtofl
  1844  04DF  01A5               	clrf	??___xxtofl+1
  1845  04E0  01A6               	clrf	??___xxtofl+2
  1846  04E1  01A7               	clrf	??___xxtofl+3
  1847  04E2  3018               	movlw	24
  1848  04E3                     u2185:
  1849  04E3  1003               	clrc
  1850  04E4  0DA4               	rlf	??___xxtofl,f
  1851  04E5  0DA5               	rlf	??___xxtofl+1,f
  1852  04E6  0DA6               	rlf	??___xxtofl+2,f
  1853  04E7  0DA7               	rlf	??___xxtofl+3,f
  1854  04E8                     u2180:
  1855  04E8  3EFF               	addlw	-1
  1856  04E9  1D03               	skipz
  1857  04EA  2CE3               	goto	u2185
  1858  04EB  0824               	movf	??___xxtofl,w
  1859  04EC  04AA               	iorwf	___xxtofl@arg,f
  1860  04ED  0825               	movf	??___xxtofl+1,w
  1861  04EE  04AB               	iorwf	___xxtofl@arg+1,f
  1862  04EF  0826               	movf	??___xxtofl+2,w
  1863  04F0  04AC               	iorwf	___xxtofl@arg+2,f
  1864  04F1  0827               	movf	??___xxtofl+3,w
  1865  04F2  04AD               	iorwf	___xxtofl@arg+3,f
  1866  04F3                     l2336:
  1867  04F3  0828               	movf	___xxtofl@sign,w
  1868  04F4  1903               	btfsc	3,2
  1869  04F5  2CF7               	goto	u2191
  1870  04F6  2CF8               	goto	u2190
  1871  04F7                     u2191:
  1872  04F7  2CFD               	goto	l2342
  1873  04F8                     u2190:
  1874  04F8                     l2338:
  1875  04F8  1FA3               	btfss	___xxtofl@val+3,7
  1876  04F9  2CFB               	goto	u2201
  1877  04FA  2CFC               	goto	u2200
  1878  04FB                     u2201:
  1879  04FB  2CFD               	goto	l2342
  1880  04FC                     u2200:
  1881  04FC                     l2340:
  1882  04FC  17AD               	bsf	___xxtofl@arg+3,7
  1883  04FD                     l2342:
  1884  04FD  082D               	movf	___xxtofl@arg+3,w
  1885  04FE  00A3               	movwf	?___xxtofl+3
  1886  04FF  082C               	movf	___xxtofl@arg+2,w
  1887  0500  00A2               	movwf	?___xxtofl+2
  1888  0501  082B               	movf	___xxtofl@arg+1,w
  1889  0502  00A1               	movwf	?___xxtofl+1
  1890  0503  082A               	movf	___xxtofl@arg,w
  1891  0504  00A0               	movwf	?___xxtofl
  1892  0505                     l787:
  1893  0505  0008               	return
  1894  0506                     __end_of___xxtofl:
  1895                           
  1896                           	psect	text5
  1897  0762                     __ptext5:	
  1898 ;; *************** function _iniciaPinos *****************
  1899 ;; Defined at:
  1900 ;;		line 263 in file "main.c"
  1901 ;; Parameters:    Size  Location     Type
  1902 ;;		None
  1903 ;; Auto vars:     Size  Location     Type
  1904 ;;		None
  1905 ;; Return value:  Size  Location     Type
  1906 ;;                  1    wreg      void 
  1907 ;; Registers used:
  1908 ;;		wreg, status,2
  1909 ;; Tracked objects:
  1910 ;;		On entry : 0/0
  1911 ;;		On exit  : 0/0
  1912 ;;		Unchanged: 0/0
  1913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1914 ;;      Params:         0       0       0       0       0
  1915 ;;      Locals:         0       0       0       0       0
  1916 ;;      Temps:          0       0       0       0       0
  1917 ;;      Totals:         0       0       0       0       0
  1918 ;;Total ram usage:        0 bytes
  1919 ;; Hardware stack levels used: 1
  1920 ;; Hardware stack levels required when called: 2
  1921 ;; This function calls:
  1922 ;;		Nothing
  1923 ;; This function is called by:
  1924 ;;		_main
  1925 ;; This function uses a non-reentrant model
  1926 ;;
  1927                           
  1928                           
  1929                           ;psect for function _iniciaPinos
  1930  0762                     _iniciaPinos:
  1931  0762                     l1776:	
  1932                           ;incstack = 0
  1933                           ; Regs used in _iniciaPinos: [wreg+status,2]
  1934                           
  1935                           
  1936                           ;main.c: 265:     OPTION_REGbits.nRBPU = 1;
  1937  0762  1683               	bsf	3,5	;RP0=1, select bank1
  1938  0763  1303               	bcf	3,6	;RP1=0, select bank1
  1939  0764  1781               	bsf	1,7	;volatile
  1940                           
  1941                           ;main.c: 267:     TRISBbits.TRISB0 = 1;
  1942  0765  1406               	bsf	6,0	;volatile
  1943                           
  1944                           ;main.c: 268:     TRISBbits.TRISB1 = 0;
  1945  0766  1086               	bcf	6,1	;volatile
  1946                           
  1947                           ;main.c: 269:     TRISBbits.TRISB2 = 0;
  1948  0767  1106               	bcf	6,2	;volatile
  1949                           
  1950                           ;main.c: 270:     TRISBbits.TRISB3 = 1;
  1951  0768  1586               	bsf	6,3	;volatile
  1952                           
  1953                           ;main.c: 271:     TRISBbits.TRISB4 = 0;
  1954  0769  1206               	bcf	6,4	;volatile
  1955                           
  1956                           ;main.c: 272:     TRISBbits.TRISB5 = 0;
  1957  076A  1286               	bcf	6,5	;volatile
  1958                           
  1959                           ;main.c: 273:     TRISBbits.TRISB6 = 0;
  1960  076B  1306               	bcf	6,6	;volatile
  1961                           
  1962                           ;main.c: 274:     TRISBbits.TRISB7 = 0;
  1963  076C  1386               	bcf	6,7	;volatile
  1964                           
  1965                           ;main.c: 276:     OPTION_REGbits.INTEDG = 1;
  1966  076D  1701               	bsf	1,6	;volatile
  1967                           
  1968                           ;main.c: 277:     INTCONbits.GIE = 1;
  1969  076E  178B               	bsf	11,7	;volatile
  1970                           
  1971                           ;main.c: 278:     INTCONbits.INTE = 1;
  1972  076F  160B               	bsf	11,4	;volatile
  1973                           
  1974                           ;main.c: 279:     INTCONbits.INTF = 0;
  1975  0770  108B               	bcf	11,1	;volatile
  1976                           
  1977                           ;main.c: 280:     INTCONbits.PEIE = 1;
  1978  0771  170B               	bsf	11,6	;volatile
  1979                           
  1980                           ;main.c: 282:     OPTION_REGbits.PS0 = 1;
  1981  0772  1401               	bsf	1,0	;volatile
  1982                           
  1983                           ;main.c: 283:     OPTION_REGbits.PS1 = 1;
  1984  0773  1481               	bsf	1,1	;volatile
  1985                           
  1986                           ;main.c: 284:     OPTION_REGbits.PS2 = 1;
  1987  0774  1501               	bsf	1,2	;volatile
  1988                           
  1989                           ;main.c: 285:     OPTION_REGbits.PSA = 1;
  1990  0775  1581               	bsf	1,3	;volatile
  1991                           
  1992                           ;main.c: 287:     T1CONbits.TMR1CS = 0;
  1993  0776  1283               	bcf	3,5	;RP0=0, select bank0
  1994  0777  1303               	bcf	3,6	;RP1=0, select bank0
  1995  0778  1090               	bcf	16,1	;volatile
  1996                           
  1997                           ;main.c: 288:     T1CONbits.T1CKPS0 = 1;
  1998  0779  1610               	bsf	16,4	;volatile
  1999                           
  2000                           ;main.c: 289:     T1CONbits.T1CKPS1 = 0;
  2001  077A  1290               	bcf	16,5	;volatile
  2002  077B                     l1778:
  2003                           
  2004                           ;main.c: 291:     TMR1L = 0xDC;
  2005  077B  30DC               	movlw	220
  2006  077C  008E               	movwf	14	;volatile
  2007                           
  2008                           ;main.c: 292:     TMR1H = 0x0B;
  2009  077D  300B               	movlw	11
  2010  077E  008F               	movwf	15	;volatile
  2011  077F                     l1780:
  2012                           
  2013                           ;main.c: 294:     PIE1bits.TMR1IE=1;
  2014  077F  1683               	bsf	3,5	;RP0=1, select bank1
  2015  0780  1303               	bcf	3,6	;RP1=0, select bank1
  2016  0781  140C               	bsf	12,0	;volatile
  2017  0782                     l1782:
  2018                           
  2019                           ;main.c: 296:     T1CONbits.TMR1ON = 1;
  2020  0782  1283               	bcf	3,5	;RP0=0, select bank0
  2021  0783  1303               	bcf	3,6	;RP1=0, select bank0
  2022  0784  1410               	bsf	16,0	;volatile
  2023                           
  2024                           ;main.c: 298:     TRISA = 0b11111111;
  2025  0785  30FF               	movlw	255
  2026  0786  1683               	bsf	3,5	;RP0=1, select bank1
  2027  0787  1303               	bcf	3,6	;RP1=0, select bank1
  2028  0788  0085               	movwf	5	;volatile
  2029  0789                     l1784:
  2030                           
  2031                           ;main.c: 299:     TRISC = 0b00000000;
  2032  0789  0187               	clrf	7	;volatile
  2033  078A                     l1786:
  2034                           
  2035                           ;main.c: 300:     TRISD = 0b00000000;
  2036  078A  0188               	clrf	8	;volatile
  2037  078B                     l1788:
  2038                           
  2039                           ;main.c: 303:     ADCON1bits.PCFG0 = 0;
  2040  078B  101F               	bcf	31,0	;volatile
  2041  078C                     l1790:
  2042                           
  2043                           ;main.c: 304:     ADCON1bits.PCFG1 = 0;
  2044  078C  109F               	bcf	31,1	;volatile
  2045  078D                     l1792:
  2046                           
  2047                           ;main.c: 305:     ADCON1bits.PCFG2 = 0;
  2048  078D  111F               	bcf	31,2	;volatile
  2049  078E                     l1794:
  2050                           
  2051                           ;main.c: 306:     ADCON1bits.PCFG3 = 0;
  2052  078E  119F               	bcf	31,3	;volatile
  2053  078F                     l1796:
  2054                           
  2055                           ;main.c: 309:     ADCON0bits.ADCS0 = 0 ;
  2056  078F  1283               	bcf	3,5	;RP0=0, select bank0
  2057  0790  1303               	bcf	3,6	;RP1=0, select bank0
  2058  0791  131F               	bcf	31,6	;volatile
  2059  0792                     l1798:
  2060                           
  2061                           ;main.c: 310:     ADCON0bits.ADCS1 = 0 ;
  2062  0792  139F               	bcf	31,7	;volatile
  2063  0793                     l1800:
  2064                           
  2065                           ;main.c: 312:     ADCON1bits.ADFM = 0 ;
  2066  0793  1683               	bsf	3,5	;RP0=1, select bank1
  2067  0794  1303               	bcf	3,6	;RP1=0, select bank1
  2068  0795  139F               	bcf	31,7	;volatile
  2069  0796                     l1802:
  2070                           
  2071                           ;main.c: 319:     ADRESL = 0x00;
  2072  0796  019E               	clrf	30	;volatile
  2073  0797                     l1804:
  2074                           
  2075                           ;main.c: 320:     ADRESH = 0x00;
  2076  0797  1283               	bcf	3,5	;RP0=0, select bank0
  2077  0798  1303               	bcf	3,6	;RP1=0, select bank0
  2078  0799  019E               	clrf	30	;volatile
  2079  079A                     l1806:
  2080                           
  2081                           ;main.c: 322:     ADCON0bits.ADON = 1;
  2082  079A  141F               	bsf	31,0	;volatile
  2083  079B                     l1808:
  2084                           
  2085                           ;main.c: 324:     PORTBbits.RB0 = 0;
  2086  079B  1006               	bcf	6,0	;volatile
  2087  079C                     l1810:
  2088                           
  2089                           ;main.c: 325:     PORTBbits.RB1 = 0;
  2090  079C  1086               	bcf	6,1	;volatile
  2091  079D                     l1812:
  2092                           
  2093                           ;main.c: 326:     PORTBbits.RB2 = 0;
  2094  079D  1106               	bcf	6,2	;volatile
  2095  079E                     l1814:
  2096                           
  2097                           ;main.c: 327:     PORTBbits.RB3 = 0;
  2098  079E  1186               	bcf	6,3	;volatile
  2099  079F                     l1816:
  2100                           
  2101                           ;main.c: 328:     PORTBbits.RB4 = 0;
  2102  079F  1206               	bcf	6,4	;volatile
  2103  07A0                     l1818:
  2104                           
  2105                           ;main.c: 329:     PORTBbits.RB5 = 0;
  2106  07A0  1286               	bcf	6,5	;volatile
  2107  07A1                     l1820:
  2108                           
  2109                           ;main.c: 330:     PORTBbits.RB6 = 0;
  2110  07A1  1306               	bcf	6,6	;volatile
  2111  07A2                     l1822:
  2112                           
  2113                           ;main.c: 331:     PORTBbits.RB7 = 0;
  2114  07A2  1386               	bcf	6,7	;volatile
  2115  07A3                     l1824:
  2116                           
  2117                           ;main.c: 333:     PORTCbits.RC0 = 1;
  2118  07A3  1407               	bsf	7,0	;volatile
  2119  07A4                     l1826:
  2120                           
  2121                           ;main.c: 334:     PORTCbits.RC1 = 0;
  2122  07A4  1087               	bcf	7,1	;volatile
  2123  07A5                     l1828:
  2124                           
  2125                           ;main.c: 335:     PORTCbits.RC2 = 0;
  2126  07A5  1107               	bcf	7,2	;volatile
  2127  07A6                     l1830:
  2128                           
  2129                           ;main.c: 336:     PORTCbits.RC3 = 0;
  2130  07A6  1187               	bcf	7,3	;volatile
  2131  07A7                     l1832:
  2132                           
  2133                           ;main.c: 337:     PORTCbits.RC4 = 0;
  2134  07A7  1207               	bcf	7,4	;volatile
  2135  07A8                     l1834:
  2136                           
  2137                           ;main.c: 338:     PORTCbits.RC5 = 0;
  2138  07A8  1287               	bcf	7,5	;volatile
  2139  07A9                     l1836:
  2140                           
  2141                           ;main.c: 339:     PORTCbits.RC6 = 0;
  2142  07A9  1307               	bcf	7,6	;volatile
  2143  07AA                     l1838:
  2144                           
  2145                           ;main.c: 340:     PORTCbits.RC7 = 0;
  2146  07AA  1387               	bcf	7,7	;volatile
  2147  07AB                     l1840:
  2148                           
  2149                           ;main.c: 342:     PORTDbits.RD0 = 0;
  2150  07AB  1008               	bcf	8,0	;volatile
  2151  07AC                     l1842:
  2152                           
  2153                           ;main.c: 343:     PORTDbits.RD1 = 1;
  2154  07AC  1488               	bsf	8,1	;volatile
  2155  07AD                     l1844:
  2156                           
  2157                           ;main.c: 344:     PORTDbits.RD2 = 0;
  2158  07AD  1108               	bcf	8,2	;volatile
  2159  07AE                     l1846:
  2160                           
  2161                           ;main.c: 345:     PORTDbits.RD3 = 1;
  2162  07AE  1588               	bsf	8,3	;volatile
  2163  07AF                     l1848:
  2164                           
  2165                           ;main.c: 346:     PORTDbits.RD4 = 0;
  2166  07AF  1208               	bcf	8,4	;volatile
  2167  07B0                     l1850:
  2168                           
  2169                           ;main.c: 347:     PORTDbits.RD5 = 1;
  2170  07B0  1688               	bsf	8,5	;volatile
  2171  07B1                     l1852:
  2172                           
  2173                           ;main.c: 348:     PORTDbits.RD6 = 0;
  2174  07B1  1308               	bcf	8,6	;volatile
  2175  07B2                     l1854:
  2176                           
  2177                           ;main.c: 349:     PORTDbits.RD7 = 0;
  2178  07B2  1388               	bcf	8,7	;volatile
  2179  07B3                     l210:
  2180  07B3  0008               	return
  2181  07B4                     __end_of_iniciaPinos:
  2182                           
  2183                           	psect	text6
  2184  0E5C                     __ptext6:	
  2185 ;; *************** function _expandeTela *****************
  2186 ;; Defined at:
  2187 ;;		line 214 in file "main.c"
  2188 ;; Parameters:    Size  Location     Type
  2189 ;;		None
  2190 ;; Auto vars:     Size  Location     Type
  2191 ;;		None
  2192 ;; Return value:  Size  Location     Type
  2193 ;;                  1    wreg      void 
  2194 ;; Registers used:
  2195 ;;		wreg
  2196 ;; Tracked objects:
  2197 ;;		On entry : 0/0
  2198 ;;		On exit  : 0/0
  2199 ;;		Unchanged: 0/0
  2200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2201 ;;      Params:         0       0       0       0       0
  2202 ;;      Locals:         0       0       0       0       0
  2203 ;;      Temps:          2       0       0       0       0
  2204 ;;      Totals:         2       0       0       0       0
  2205 ;;Total ram usage:        2 bytes
  2206 ;; Hardware stack levels used: 1
  2207 ;; Hardware stack levels required when called: 2
  2208 ;; This function calls:
  2209 ;;		Nothing
  2210 ;; This function is called by:
  2211 ;;		_main
  2212 ;; This function uses a non-reentrant model
  2213 ;;
  2214                           
  2215                           
  2216                           ;psect for function _expandeTela
  2217  0E5C                     _expandeTela:
  2218  0E5C                     l1952:	
  2219                           ;incstack = 0
  2220                           ; Regs used in _expandeTela: [wreg]
  2221                           
  2222                           
  2223                           ;main.c: 216:     if(RB3 == 0)
  2224  0E5C  1283               	bcf	3,5	;RP0=0, select bank0
  2225  0E5D  1303               	bcf	3,6	;RP1=0, select bank0
  2226  0E5E  1986               	btfsc	6,3	;volatile
  2227  0E5F  2E61               	goto	u1461
  2228  0E60  2E62               	goto	u1460
  2229  0E61                     u1461:
  2230  0E61  2E74               	goto	l202
  2231  0E62                     u1460:
  2232  0E62                     l1954:
  2233                           
  2234                           ;main.c: 217:     {;main.c: 219:         RD4 = 1;
  2235  0E62  1608               	bsf	8,4	;volatile
  2236                           
  2237                           ;main.c: 220:         RC1 = 0;
  2238  0E63  1087               	bcf	7,1	;volatile
  2239                           
  2240                           ;main.c: 221:         RD2 = 1;
  2241  0E64  1508               	bsf	8,2	;volatile
  2242                           
  2243                           ;main.c: 222:         RD6 = 0;
  2244  0E65  1308               	bcf	8,6	;volatile
  2245                           
  2246                           ;main.c: 224:         RD0 = 1;
  2247  0E66  1408               	bsf	8,0	;volatile
  2248                           
  2249                           ;main.c: 225:         RC3 = 0;
  2250  0E67  1187               	bcf	7,3	;volatile
  2251                           
  2252                           ;main.c: 226:         RC2 = 1;
  2253  0E68  1507               	bsf	7,2	;volatile
  2254                           
  2255                           ;main.c: 227:         RD7 = 0;
  2256  0E69  1388               	bcf	8,7	;volatile
  2257  0E6A                     l1956:
  2258                           
  2259                           ;main.c: 229:         _delay((unsigned long)((15)*(4000000/4000.0)));
  2260  0E6A  3014               	movlw	20
  2261  0E6B  00F5               	movwf	??_expandeTela+1
  2262  0E6C  3079               	movlw	121
  2263  0E6D  00F4               	movwf	??_expandeTela
  2264  0E6E                     u2407:
  2265  0E6E  0BF4               	decfsz	??_expandeTela,f
  2266  0E6F  2E6E               	goto	u2407
  2267  0E70  0BF5               	decfsz	??_expandeTela+1,f
  2268  0E71  2E6E               	goto	u2407
  2269  0E72  2E73               	nop2
  2270                           
  2271                           ;main.c: 230:     }
  2272  0E73  2E7C               	goto	l204
  2273  0E74                     l202:	
  2274                           ;main.c: 231:     else
  2275                           
  2276                           
  2277                           ;main.c: 232:     {;main.c: 234:         RD4 = 1;
  2278  0E74  1608               	bsf	8,4	;volatile
  2279                           
  2280                           ;main.c: 235:         RC1 = 1;
  2281  0E75  1487               	bsf	7,1	;volatile
  2282                           
  2283                           ;main.c: 236:         RD2 = 1;
  2284  0E76  1508               	bsf	8,2	;volatile
  2285                           
  2286                           ;main.c: 237:         RD6 = 1;
  2287  0E77  1708               	bsf	8,6	;volatile
  2288                           
  2289                           ;main.c: 239:         RD0 = 1;
  2290  0E78  1408               	bsf	8,0	;volatile
  2291                           
  2292                           ;main.c: 240:         RC3 = 1;
  2293  0E79  1587               	bsf	7,3	;volatile
  2294                           
  2295                           ;main.c: 241:         RC2 = 1;
  2296  0E7A  1507               	bsf	7,2	;volatile
  2297                           
  2298                           ;main.c: 242:         RD7 = 1;
  2299  0E7B  1788               	bsf	8,7	;volatile
  2300  0E7C                     l204:
  2301  0E7C  0008               	return
  2302  0E7D                     __end_of_expandeTela:
  2303                           
  2304                           	psect	text7
  2305  0368                     __ptext7:	
  2306 ;; *************** function _controleEstufas *****************
  2307 ;; Defined at:
  2308 ;;		line 353 in file "main.c"
  2309 ;; Parameters:    Size  Location     Type
  2310 ;;		None
  2311 ;; Auto vars:     Size  Location     Type
  2312 ;;		None
  2313 ;; Return value:  Size  Location     Type
  2314 ;;                  1    wreg      void 
  2315 ;; Registers used:
  2316 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2317 ;; Tracked objects:
  2318 ;;		On entry : 0/0
  2319 ;;		On exit  : 0/0
  2320 ;;		Unchanged: 0/0
  2321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2322 ;;      Params:         0       0       0       0       0
  2323 ;;      Locals:         0       0       0       0       0
  2324 ;;      Temps:          0       0       0       0       0
  2325 ;;      Totals:         0       0       0       0       0
  2326 ;;Total ram usage:        0 bytes
  2327 ;; Hardware stack levels used: 1
  2328 ;; Hardware stack levels required when called: 4
  2329 ;; This function calls:
  2330 ;;		___flge
  2331 ;;		_estufaDois
  2332 ;;		_estufaQuatro
  2333 ;;		_estufaTres
  2334 ;;		_estufaUm
  2335 ;; This function is called by:
  2336 ;;		_main
  2337 ;; This function uses a non-reentrant model
  2338 ;;
  2339                           
  2340                           
  2341                           ;psect for function _controleEstufas
  2342  0368                     _controleEstufas:
  2343  0368                     l2444:	
  2344                           ;incstack = 0
  2345                           ; Regs used in _controleEstufas: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2346                           
  2347                           
  2348                           ;main.c: 355:     if(valor_entry1 <= 64)
  2349  0368  3042               	movlw	66
  2350  0369  1283               	bcf	3,5	;RP0=0, select bank0
  2351  036A  1303               	bcf	3,6	;RP1=0, select bank0
  2352  036B  00A3               	movwf	___flge@ff1+3
  2353  036C  3080               	movlw	128
  2354  036D  00A2               	movwf	___flge@ff1+2
  2355  036E  3000               	movlw	0
  2356  036F  00A1               	movwf	___flge@ff1+1
  2357  0370  3000               	movlw	0
  2358  0371  00A0               	movwf	___flge@ff1
  2359  0372  084B               	movf	_valor_entry1+3,w
  2360  0373  00A7               	movwf	___flge@ff2+3
  2361  0374  084A               	movf	_valor_entry1+2,w
  2362  0375  00A6               	movwf	___flge@ff2+2
  2363  0376  0849               	movf	_valor_entry1+1,w
  2364  0377  00A5               	movwf	___flge@ff2+1
  2365  0378  0848               	movf	_valor_entry1,w
  2366  0379  00A4               	movwf	___flge@ff2
  2367  037A  120A  118A  2506  120A  118A  	fcall	___flge
  2368  037F  1C03               	btfss	3,0
  2369  0380  2B82               	goto	u2211
  2370  0381  2B83               	goto	u2210
  2371  0382                     u2211:
  2372  0382  2B92               	goto	l2454
  2373  0383                     u2210:
  2374  0383                     l2446:
  2375                           
  2376                           ;main.c: 356:     {;main.c: 359:         estufaUm();
  2377  0383  120A  158A  270B  120A  118A  	fcall	_estufaUm
  2378  0388                     l2448:
  2379                           
  2380                           ;main.c: 360:         RC6 = 0;
  2381  0388  1283               	bcf	3,5	;RP0=0, select bank0
  2382  0389  1303               	bcf	3,6	;RP1=0, select bank0
  2383  038A  1307               	bcf	7,6	;volatile
  2384  038B                     l2450:
  2385                           
  2386                           ;main.c: 361:         RC5 = 0;
  2387  038B  1283               	bcf	3,5	;RP0=0, select bank0
  2388  038C  1303               	bcf	3,6	;RP1=0, select bank0
  2389  038D  1287               	bcf	7,5	;volatile
  2390  038E                     l2452:
  2391                           
  2392                           ;main.c: 362:         RC4 = 0;
  2393  038E  1283               	bcf	3,5	;RP0=0, select bank0
  2394  038F  1303               	bcf	3,6	;RP1=0, select bank0
  2395  0390  1207               	bcf	7,4	;volatile
  2396                           
  2397                           ;main.c: 363:     }
  2398  0391  2C49               	goto	l220
  2399  0392                     l2454:
  2400  0392  3043               	movlw	67
  2401  0393  1283               	bcf	3,5	;RP0=0, select bank0
  2402  0394  1303               	bcf	3,6	;RP1=0, select bank0
  2403  0395  00A3               	movwf	___flge@ff1+3
  2404  0396  3000               	movlw	0
  2405  0397  00A2               	movwf	___flge@ff1+2
  2406  0398  3000               	movlw	0
  2407  0399  00A1               	movwf	___flge@ff1+1
  2408  039A  3000               	movlw	0
  2409  039B  00A0               	movwf	___flge@ff1
  2410  039C  084B               	movf	_valor_entry1+3,w
  2411  039D  00A7               	movwf	___flge@ff2+3
  2412  039E  084A               	movf	_valor_entry1+2,w
  2413  039F  00A6               	movwf	___flge@ff2+2
  2414  03A0  0849               	movf	_valor_entry1+1,w
  2415  03A1  00A5               	movwf	___flge@ff2+1
  2416  03A2  0848               	movf	_valor_entry1,w
  2417  03A3  00A4               	movwf	___flge@ff2
  2418  03A4  120A  118A  2506  120A  118A  	fcall	___flge
  2419  03A9  1C03               	btfss	3,0
  2420  03AA  2BAC               	goto	u2221
  2421  03AB  2BAD               	goto	u2220
  2422  03AC                     u2221:
  2423  03AC  2BB8               	goto	l2462
  2424  03AD                     u2220:
  2425  03AD                     l2456:
  2426                           
  2427                           ;main.c: 365:     {;main.c: 368:         estufaUm();
  2428  03AD  120A  158A  270B  120A  118A  	fcall	_estufaUm
  2429                           
  2430                           ;main.c: 369:         estufaDois();
  2431  03B2  120A  158A  26E5  120A  118A  	fcall	_estufaDois
  2432  03B7  2B8B               	goto	l2450
  2433  03B8                     l2462:
  2434  03B8  3042               	movlw	66
  2435  03B9  1283               	bcf	3,5	;RP0=0, select bank0
  2436  03BA  1303               	bcf	3,6	;RP1=0, select bank0
  2437  03BB  00A3               	movwf	___flge@ff1+3
  2438  03BC  3080               	movlw	128
  2439  03BD  00A2               	movwf	___flge@ff1+2
  2440  03BE  3000               	movlw	0
  2441  03BF  00A1               	movwf	___flge@ff1+1
  2442  03C0  3000               	movlw	0
  2443  03C1  00A0               	movwf	___flge@ff1
  2444  03C2  084B               	movf	_valor_entry1+3,w
  2445  03C3  00A7               	movwf	___flge@ff2+3
  2446  03C4  084A               	movf	_valor_entry1+2,w
  2447  03C5  00A6               	movwf	___flge@ff2+2
  2448  03C6  0849               	movf	_valor_entry1+1,w
  2449  03C7  00A5               	movwf	___flge@ff2+1
  2450  03C8  0848               	movf	_valor_entry1,w
  2451  03C9  00A4               	movwf	___flge@ff2
  2452  03CA  120A  118A  2506  120A  118A  	fcall	___flge
  2453  03CF  1803               	btfsc	3,0
  2454  03D0  2BD2               	goto	u2231
  2455  03D1  2BD3               	goto	u2230
  2456  03D2                     u2231:
  2457  03D2  2BFE               	goto	l2470
  2458  03D3                     u2230:
  2459  03D3                     l2464:
  2460  03D3  3043               	movlw	67
  2461  03D4  1283               	bcf	3,5	;RP0=0, select bank0
  2462  03D5  1303               	bcf	3,6	;RP1=0, select bank0
  2463  03D6  00A3               	movwf	___flge@ff1+3
  2464  03D7  3040               	movlw	64
  2465  03D8  00A2               	movwf	___flge@ff1+2
  2466  03D9  3000               	movlw	0
  2467  03DA  00A1               	movwf	___flge@ff1+1
  2468  03DB  3000               	movlw	0
  2469  03DC  00A0               	movwf	___flge@ff1
  2470  03DD  084B               	movf	_valor_entry1+3,w
  2471  03DE  00A7               	movwf	___flge@ff2+3
  2472  03DF  084A               	movf	_valor_entry1+2,w
  2473  03E0  00A6               	movwf	___flge@ff2+2
  2474  03E1  0849               	movf	_valor_entry1+1,w
  2475  03E2  00A5               	movwf	___flge@ff2+1
  2476  03E3  0848               	movf	_valor_entry1,w
  2477  03E4  00A4               	movwf	___flge@ff2
  2478  03E5  120A  118A  2506  120A  118A  	fcall	___flge
  2479  03EA  1C03               	btfss	3,0
  2480  03EB  2BED               	goto	u2241
  2481  03EC  2BEE               	goto	u2240
  2482  03ED                     u2241:
  2483  03ED  2BFE               	goto	l2470
  2484  03EE                     u2240:
  2485  03EE                     l2466:
  2486                           
  2487                           ;main.c: 374:     {;main.c: 377:         estufaUm();
  2488  03EE  120A  158A  270B  120A  118A  	fcall	_estufaUm
  2489                           
  2490                           ;main.c: 378:         estufaDois();
  2491  03F3  120A  158A  26E5  120A  118A  	fcall	_estufaDois
  2492                           
  2493                           ;main.c: 379:         estufaTres();
  2494  03F8  120A  158A  2759  120A  118A  	fcall	_estufaTres
  2495  03FD  2B8E               	goto	l2452
  2496  03FE                     l2470:
  2497  03FE  3042               	movlw	66
  2498  03FF  1283               	bcf	3,5	;RP0=0, select bank0
  2499  0400  1303               	bcf	3,6	;RP1=0, select bank0
  2500  0401  00A3               	movwf	___flge@ff1+3
  2501  0402  3080               	movlw	128
  2502  0403  00A2               	movwf	___flge@ff1+2
  2503  0404  3000               	movlw	0
  2504  0405  00A1               	movwf	___flge@ff1+1
  2505  0406  3000               	movlw	0
  2506  0407  00A0               	movwf	___flge@ff1
  2507  0408  084B               	movf	_valor_entry1+3,w
  2508  0409  00A7               	movwf	___flge@ff2+3
  2509  040A  084A               	movf	_valor_entry1+2,w
  2510  040B  00A6               	movwf	___flge@ff2+2
  2511  040C  0849               	movf	_valor_entry1+1,w
  2512  040D  00A5               	movwf	___flge@ff2+1
  2513  040E  0848               	movf	_valor_entry1,w
  2514  040F  00A4               	movwf	___flge@ff2
  2515  0410  120A  118A  2506  120A  118A  	fcall	___flge
  2516  0415  1803               	btfsc	3,0
  2517  0416  2C18               	goto	u2251
  2518  0417  2C19               	goto	u2250
  2519  0418                     u2251:
  2520  0418  2C49               	goto	l214
  2521  0419                     u2250:
  2522  0419                     l2472:
  2523  0419  3043               	movlw	67
  2524  041A  1283               	bcf	3,5	;RP0=0, select bank0
  2525  041B  1303               	bcf	3,6	;RP1=0, select bank0
  2526  041C  00A3               	movwf	___flge@ff1+3
  2527  041D  308C               	movlw	140
  2528  041E  00A2               	movwf	___flge@ff1+2
  2529  041F  3000               	movlw	0
  2530  0420  00A1               	movwf	___flge@ff1+1
  2531  0421  3000               	movlw	0
  2532  0422  00A0               	movwf	___flge@ff1
  2533  0423  084B               	movf	_valor_entry1+3,w
  2534  0424  00A7               	movwf	___flge@ff2+3
  2535  0425  084A               	movf	_valor_entry1+2,w
  2536  0426  00A6               	movwf	___flge@ff2+2
  2537  0427  0849               	movf	_valor_entry1+1,w
  2538  0428  00A5               	movwf	___flge@ff2+1
  2539  0429  0848               	movf	_valor_entry1,w
  2540  042A  00A4               	movwf	___flge@ff2
  2541  042B  120A  118A  2506  120A  118A  	fcall	___flge
  2542  0430  1C03               	btfss	3,0
  2543  0431  2C33               	goto	u2261
  2544  0432  2C34               	goto	u2260
  2545  0433                     u2261:
  2546  0433  2C49               	goto	l214
  2547  0434                     u2260:
  2548  0434                     l2474:
  2549                           
  2550                           ;main.c: 383:     {;main.c: 386:         estufaQuatro();
  2551  0434  120A  158A  261D  120A  118A  	fcall	_estufaQuatro
  2552  0439                     l2476:
  2553                           
  2554                           ;main.c: 387:         estufaUm();
  2555  0439  120A  158A  270B  120A  118A  	fcall	_estufaUm
  2556  043E                     l2478:
  2557                           
  2558                           ;main.c: 388:         estufaDois();
  2559  043E  120A  158A  26E5  120A  118A  	fcall	_estufaDois
  2560  0443                     l2480:
  2561                           
  2562                           ;main.c: 389:         estufaTres();
  2563  0443  120A  158A  2759  120A  118A  	fcall	_estufaTres
  2564  0448  2C49               	goto	l220
  2565  0449                     l214:
  2566  0449                     l220:
  2567  0449  0008               	return
  2568  044A                     __end_of_controleEstufas:
  2569                           
  2570                           	psect	text8
  2571  0F0B                     __ptext8:	
  2572 ;; *************** function _estufaUm *****************
  2573 ;; Defined at:
  2574 ;;		line 395 in file "main.c"
  2575 ;; Parameters:    Size  Location     Type
  2576 ;;		None
  2577 ;; Auto vars:     Size  Location     Type
  2578 ;;		None
  2579 ;; Return value:  Size  Location     Type
  2580 ;;                  1    wreg      void 
  2581 ;; Registers used:
  2582 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2583 ;; Tracked objects:
  2584 ;;		On entry : 0/0
  2585 ;;		On exit  : 0/0
  2586 ;;		Unchanged: 0/0
  2587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2588 ;;      Params:         0       0       0       0       0
  2589 ;;      Locals:         0       0       0       0       0
  2590 ;;      Temps:          0       0       0       0       0
  2591 ;;      Totals:         0       0       0       0       0
  2592 ;;Total ram usage:        0 bytes
  2593 ;; Hardware stack levels used: 1
  2594 ;; Hardware stack levels required when called: 3
  2595 ;; This function calls:
  2596 ;;		___fltol
  2597 ;; This function is called by:
  2598 ;;		_controleEstufas
  2599 ;; This function uses a non-reentrant model
  2600 ;;
  2601                           
  2602                           
  2603                           ;psect for function _estufaUm
  2604  0F0B                     _estufaUm:
  2605  0F0B                     l2266:	
  2606                           ;incstack = 0
  2607                           ; Regs used in _estufaUm: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2608                           
  2609                           
  2610                           ;main.c: 397:     if((int)valor_entry3 <= 128)
  2611  0F0B  1283               	bcf	3,5	;RP0=0, select bank0
  2612  0F0C  1303               	bcf	3,6	;RP1=0, select bank0
  2613  0F0D  0853               	movf	_valor_entry3+3,w
  2614  0F0E  00A3               	movwf	___fltol@f1+3
  2615  0F0F  0852               	movf	_valor_entry3+2,w
  2616  0F10  00A2               	movwf	___fltol@f1+2
  2617  0F11  0851               	movf	_valor_entry3+1,w
  2618  0F12  00A1               	movwf	___fltol@f1+1
  2619  0F13  0850               	movf	_valor_entry3,w
  2620  0F14  00A0               	movwf	___fltol@f1
  2621  0F15  120A  118A  262B  120A  158A  	fcall	___fltol
  2622  0F1A  1283               	bcf	3,5	;RP0=0, select bank0
  2623  0F1B  1303               	bcf	3,6	;RP1=0, select bank0
  2624  0F1C  0821               	movf	?___fltol+1,w
  2625  0F1D  3A80               	xorlw	128
  2626  0F1E  00FF               	movwf	btemp+1
  2627  0F1F  3080               	movlw	128
  2628  0F20  027F               	subwf	btemp+1,w
  2629  0F21  1D03               	skipz
  2630  0F22  2F25               	goto	u1975
  2631  0F23  3081               	movlw	129
  2632  0F24  0220               	subwf	?___fltol,w
  2633  0F25                     u1975:
  2634  0F25  1803               	skipnc
  2635  0F26  2F28               	goto	u1971
  2636  0F27  2F29               	goto	u1970
  2637  0F28                     u1971:
  2638  0F28  2F2D               	goto	l223
  2639  0F29                     u1970:
  2640  0F29                     l2268:
  2641                           
  2642                           ;main.c: 398:     {;main.c: 399:         RC7 = 1;
  2643  0F29  1283               	bcf	3,5	;RP0=0, select bank0
  2644  0F2A  1303               	bcf	3,6	;RP1=0, select bank0
  2645  0F2B  1787               	bsf	7,7	;volatile
  2646                           
  2647                           ;main.c: 400:     }
  2648  0F2C  2F30               	goto	l225
  2649  0F2D                     l223:	
  2650                           ;main.c: 401:     else
  2651                           
  2652                           
  2653                           ;main.c: 402:     {;main.c: 403:         RC7 = 0;
  2654  0F2D  1283               	bcf	3,5	;RP0=0, select bank0
  2655  0F2E  1303               	bcf	3,6	;RP1=0, select bank0
  2656  0F2F  1387               	bcf	7,7	;volatile
  2657  0F30                     l225:
  2658  0F30  0008               	return
  2659  0F31                     __end_of_estufaUm:
  2660                           
  2661                           	psect	text9
  2662  0F59                     __ptext9:	
  2663 ;; *************** function _estufaTres *****************
  2664 ;; Defined at:
  2665 ;;		line 419 in file "main.c"
  2666 ;; Parameters:    Size  Location     Type
  2667 ;;		None
  2668 ;; Auto vars:     Size  Location     Type
  2669 ;;		None
  2670 ;; Return value:  Size  Location     Type
  2671 ;;                  1    wreg      void 
  2672 ;; Registers used:
  2673 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2674 ;; Tracked objects:
  2675 ;;		On entry : 0/0
  2676 ;;		On exit  : 0/0
  2677 ;;		Unchanged: 0/0
  2678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2679 ;;      Params:         0       0       0       0       0
  2680 ;;      Locals:         0       0       0       0       0
  2681 ;;      Temps:          0       0       0       0       0
  2682 ;;      Totals:         0       0       0       0       0
  2683 ;;Total ram usage:        0 bytes
  2684 ;; Hardware stack levels used: 1
  2685 ;; Hardware stack levels required when called: 3
  2686 ;; This function calls:
  2687 ;;		___fltol
  2688 ;; This function is called by:
  2689 ;;		_controleEstufas
  2690 ;; This function uses a non-reentrant model
  2691 ;;
  2692                           
  2693                           
  2694                           ;psect for function _estufaTres
  2695  0F59                     _estufaTres:
  2696  0F59                     l2274:	
  2697                           ;incstack = 0
  2698                           ; Regs used in _estufaTres: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2699                           
  2700                           
  2701                           ;main.c: 421:     if((int)valor_entry5 < 128)
  2702  0F59  1683               	bsf	3,5	;RP0=1, select bank1
  2703  0F5A  1303               	bcf	3,6	;RP1=0, select bank1
  2704  0F5B  0847               	movf	(_valor_entry5+3)^(0+128),w
  2705  0F5C  1283               	bcf	3,5	;RP0=0, select bank0
  2706  0F5D  1303               	bcf	3,6	;RP1=0, select bank0
  2707  0F5E  00A3               	movwf	___fltol@f1+3
  2708  0F5F  1683               	bsf	3,5	;RP0=1, select bank1
  2709  0F60  1303               	bcf	3,6	;RP1=0, select bank1
  2710  0F61  0846               	movf	(_valor_entry5+2)^(0+128),w
  2711  0F62  1283               	bcf	3,5	;RP0=0, select bank0
  2712  0F63  1303               	bcf	3,6	;RP1=0, select bank0
  2713  0F64  00A2               	movwf	___fltol@f1+2
  2714  0F65  1683               	bsf	3,5	;RP0=1, select bank1
  2715  0F66  1303               	bcf	3,6	;RP1=0, select bank1
  2716  0F67  0845               	movf	(_valor_entry5+1)^(0+128),w
  2717  0F68  1283               	bcf	3,5	;RP0=0, select bank0
  2718  0F69  1303               	bcf	3,6	;RP1=0, select bank0
  2719  0F6A  00A1               	movwf	___fltol@f1+1
  2720  0F6B  1683               	bsf	3,5	;RP0=1, select bank1
  2721  0F6C  1303               	bcf	3,6	;RP1=0, select bank1
  2722  0F6D  0844               	movf	_valor_entry5^(0+128),w
  2723  0F6E  1283               	bcf	3,5	;RP0=0, select bank0
  2724  0F6F  1303               	bcf	3,6	;RP1=0, select bank0
  2725  0F70  00A0               	movwf	___fltol@f1
  2726  0F71  120A  118A  262B  120A  158A  	fcall	___fltol
  2727  0F76  1283               	bcf	3,5	;RP0=0, select bank0
  2728  0F77  1303               	bcf	3,6	;RP1=0, select bank0
  2729  0F78  0821               	movf	?___fltol+1,w
  2730  0F79  3A80               	xorlw	128
  2731  0F7A  00FF               	movwf	btemp+1
  2732  0F7B  3080               	movlw	128
  2733  0F7C  027F               	subwf	btemp+1,w
  2734  0F7D  1D03               	skipz
  2735  0F7E  2F81               	goto	u1995
  2736  0F7F  3080               	movlw	128
  2737  0F80  0220               	subwf	?___fltol,w
  2738  0F81                     u1995:
  2739  0F81  1803               	skipnc
  2740  0F82  2F84               	goto	u1991
  2741  0F83  2F85               	goto	u1990
  2742  0F84                     u1991:
  2743  0F84  2F89               	goto	l233
  2744  0F85                     u1990:
  2745  0F85                     l2276:
  2746                           
  2747                           ;main.c: 422:     {;main.c: 423:        RC5 = 1;
  2748  0F85  1283               	bcf	3,5	;RP0=0, select bank0
  2749  0F86  1303               	bcf	3,6	;RP1=0, select bank0
  2750  0F87  1687               	bsf	7,5	;volatile
  2751                           
  2752                           ;main.c: 424:     }
  2753  0F88  2F8C               	goto	l235
  2754  0F89                     l233:	
  2755                           ;main.c: 425:     else
  2756                           
  2757                           
  2758                           ;main.c: 426:     {;main.c: 427:        RC5 = 0;
  2759  0F89  1283               	bcf	3,5	;RP0=0, select bank0
  2760  0F8A  1303               	bcf	3,6	;RP1=0, select bank0
  2761  0F8B  1287               	bcf	7,5	;volatile
  2762  0F8C                     l235:
  2763  0F8C  0008               	return
  2764  0F8D                     __end_of_estufaTres:
  2765                           
  2766                           	psect	text10
  2767  0E1D                     __ptext10:	
  2768 ;; *************** function _estufaQuatro *****************
  2769 ;; Defined at:
  2770 ;;		line 431 in file "main.c"
  2771 ;; Parameters:    Size  Location     Type
  2772 ;;		None
  2773 ;; Auto vars:     Size  Location     Type
  2774 ;;  valorLido       2    0        int 
  2775 ;; Return value:  Size  Location     Type
  2776 ;;                  1    wreg      void 
  2777 ;; Registers used:
  2778 ;;		wreg, status,2, status,0, pclath, cstack
  2779 ;; Tracked objects:
  2780 ;;		On entry : 0/0
  2781 ;;		On exit  : 0/0
  2782 ;;		Unchanged: 0/0
  2783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2784 ;;      Params:         0       0       0       0       0
  2785 ;;      Locals:         0       0       0       0       0
  2786 ;;      Temps:          0       0       0       0       0
  2787 ;;      Totals:         0       0       0       0       0
  2788 ;;Total ram usage:        0 bytes
  2789 ;; Hardware stack levels used: 1
  2790 ;; Hardware stack levels required when called: 3
  2791 ;; This function calls:
  2792 ;;		___fltol
  2793 ;; This function is called by:
  2794 ;;		_controleEstufas
  2795 ;; This function uses a non-reentrant model
  2796 ;;
  2797                           
  2798                           
  2799                           ;psect for function _estufaQuatro
  2800  0E1D                     _estufaQuatro:
  2801  0E1D                     l2278:	
  2802                           ;incstack = 0
  2803                           ; Regs used in _estufaQuatro: [wreg+status,2+status,0+pclath+cstack]
  2804                           
  2805  0E1D  1683               	bsf	3,5	;RP0=1, select bank1
  2806  0E1E  1303               	bcf	3,6	;RP1=0, select bank1
  2807  0E1F  0843               	movf	(_valor_entry6+3)^(0+128),w
  2808  0E20  1283               	bcf	3,5	;RP0=0, select bank0
  2809  0E21  1303               	bcf	3,6	;RP1=0, select bank0
  2810  0E22  00A3               	movwf	___fltol@f1+3
  2811  0E23  1683               	bsf	3,5	;RP0=1, select bank1
  2812  0E24  1303               	bcf	3,6	;RP1=0, select bank1
  2813  0E25  0842               	movf	(_valor_entry6+2)^(0+128),w
  2814  0E26  1283               	bcf	3,5	;RP0=0, select bank0
  2815  0E27  1303               	bcf	3,6	;RP1=0, select bank0
  2816  0E28  00A2               	movwf	___fltol@f1+2
  2817  0E29  1683               	bsf	3,5	;RP0=1, select bank1
  2818  0E2A  1303               	bcf	3,6	;RP1=0, select bank1
  2819  0E2B  0841               	movf	(_valor_entry6+1)^(0+128),w
  2820  0E2C  1283               	bcf	3,5	;RP0=0, select bank0
  2821  0E2D  1303               	bcf	3,6	;RP1=0, select bank0
  2822  0E2E  00A1               	movwf	___fltol@f1+1
  2823  0E2F  1683               	bsf	3,5	;RP0=1, select bank1
  2824  0E30  1303               	bcf	3,6	;RP1=0, select bank1
  2825  0E31  0840               	movf	_valor_entry6^(0+128),w
  2826  0E32  1283               	bcf	3,5	;RP0=0, select bank0
  2827  0E33  1303               	bcf	3,6	;RP1=0, select bank0
  2828  0E34  00A0               	movwf	___fltol@f1
  2829  0E35  120A  118A  262B  120A  158A  	fcall	___fltol
  2830  0E3A                     l238:
  2831  0E3A  0008               	return
  2832  0E3B                     __end_of_estufaQuatro:
  2833                           
  2834                           	psect	text11
  2835  0EE5                     __ptext11:	
  2836 ;; *************** function _estufaDois *****************
  2837 ;; Defined at:
  2838 ;;		line 407 in file "main.c"
  2839 ;; Parameters:    Size  Location     Type
  2840 ;;		None
  2841 ;; Auto vars:     Size  Location     Type
  2842 ;;		None
  2843 ;; Return value:  Size  Location     Type
  2844 ;;                  1    wreg      void 
  2845 ;; Registers used:
  2846 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2847 ;; Tracked objects:
  2848 ;;		On entry : 0/0
  2849 ;;		On exit  : 0/0
  2850 ;;		Unchanged: 0/0
  2851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2852 ;;      Params:         0       0       0       0       0
  2853 ;;      Locals:         0       0       0       0       0
  2854 ;;      Temps:          0       0       0       0       0
  2855 ;;      Totals:         0       0       0       0       0
  2856 ;;Total ram usage:        0 bytes
  2857 ;; Hardware stack levels used: 1
  2858 ;; Hardware stack levels required when called: 3
  2859 ;; This function calls:
  2860 ;;		___fltol
  2861 ;; This function is called by:
  2862 ;;		_controleEstufas
  2863 ;; This function uses a non-reentrant model
  2864 ;;
  2865                           
  2866                           
  2867                           ;psect for function _estufaDois
  2868  0EE5                     _estufaDois:
  2869  0EE5                     l2270:	
  2870                           ;incstack = 0
  2871                           ; Regs used in _estufaDois: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2872                           
  2873                           
  2874                           ;main.c: 409:     if((int)valor_entry4 <= 128)
  2875  0EE5  1283               	bcf	3,5	;RP0=0, select bank0
  2876  0EE6  1303               	bcf	3,6	;RP1=0, select bank0
  2877  0EE7  084F               	movf	_valor_entry4+3,w
  2878  0EE8  00A3               	movwf	___fltol@f1+3
  2879  0EE9  084E               	movf	_valor_entry4+2,w
  2880  0EEA  00A2               	movwf	___fltol@f1+2
  2881  0EEB  084D               	movf	_valor_entry4+1,w
  2882  0EEC  00A1               	movwf	___fltol@f1+1
  2883  0EED  084C               	movf	_valor_entry4,w
  2884  0EEE  00A0               	movwf	___fltol@f1
  2885  0EEF  120A  118A  262B  120A  158A  	fcall	___fltol
  2886  0EF4  1283               	bcf	3,5	;RP0=0, select bank0
  2887  0EF5  1303               	bcf	3,6	;RP1=0, select bank0
  2888  0EF6  0821               	movf	?___fltol+1,w
  2889  0EF7  3A80               	xorlw	128
  2890  0EF8  00FF               	movwf	btemp+1
  2891  0EF9  3080               	movlw	128
  2892  0EFA  027F               	subwf	btemp+1,w
  2893  0EFB  1D03               	skipz
  2894  0EFC  2EFF               	goto	u1985
  2895  0EFD  3081               	movlw	129
  2896  0EFE  0220               	subwf	?___fltol,w
  2897  0EFF                     u1985:
  2898  0EFF  1803               	skipnc
  2899  0F00  2F02               	goto	u1981
  2900  0F01  2F03               	goto	u1980
  2901  0F02                     u1981:
  2902  0F02  2F07               	goto	l228
  2903  0F03                     u1980:
  2904  0F03                     l2272:
  2905                           
  2906                           ;main.c: 410:     {;main.c: 411:         RC6 = 1;
  2907  0F03  1283               	bcf	3,5	;RP0=0, select bank0
  2908  0F04  1303               	bcf	3,6	;RP1=0, select bank0
  2909  0F05  1707               	bsf	7,6	;volatile
  2910                           
  2911                           ;main.c: 412:     }
  2912  0F06  2F0A               	goto	l230
  2913  0F07                     l228:	
  2914                           ;main.c: 413:     else
  2915                           
  2916                           
  2917                           ;main.c: 414:     {;main.c: 415:         RC6 = 0;
  2918  0F07  1283               	bcf	3,5	;RP0=0, select bank0
  2919  0F08  1303               	bcf	3,6	;RP1=0, select bank0
  2920  0F09  1307               	bcf	7,6	;volatile
  2921  0F0A                     l230:
  2922  0F0A  0008               	return
  2923  0F0B                     __end_of_estufaDois:
  2924                           
  2925                           	psect	text12
  2926  0506                     __ptext12:	
  2927 ;; *************** function ___flge *****************
  2928 ;; Defined at:
  2929 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\flge.c"
  2930 ;; Parameters:    Size  Location     Type
  2931 ;;  ff1             4    0[BANK0 ] void 
  2932 ;;  ff2             4    4[BANK0 ] void 
  2933 ;; Auto vars:     Size  Location     Type
  2934 ;;		None
  2935 ;; Return value:  Size  Location     Type
  2936 ;;		None               void
  2937 ;; Registers used:
  2938 ;;		wreg, status,2, status,0
  2939 ;; Tracked objects:
  2940 ;;		On entry : 0/0
  2941 ;;		On exit  : 0/0
  2942 ;;		Unchanged: 0/0
  2943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2944 ;;      Params:         0       8       0       0       0
  2945 ;;      Locals:         0       0       0       0       0
  2946 ;;      Temps:          0       4       0       0       0
  2947 ;;      Totals:         0      12       0       0       0
  2948 ;;Total ram usage:       12 bytes
  2949 ;; Hardware stack levels used: 1
  2950 ;; Hardware stack levels required when called: 2
  2951 ;; This function calls:
  2952 ;;		Nothing
  2953 ;; This function is called by:
  2954 ;;		_controleEstufas
  2955 ;; This function uses a non-reentrant model
  2956 ;;
  2957                           
  2958                           
  2959                           ;psect for function ___flge
  2960  0506                     ___flge:
  2961  0506                     l2282:	
  2962                           ;incstack = 0
  2963                           ; Regs used in ___flge: [wreg+status,2+status,0]
  2964                           
  2965  0506  3000               	movlw	0
  2966  0507  1283               	bcf	3,5	;RP0=0, select bank0
  2967  0508  1303               	bcf	3,6	;RP1=0, select bank0
  2968  0509  0520               	andwf	___flge@ff1,w
  2969  050A  00A8               	movwf	??___flge
  2970  050B  3000               	movlw	0
  2971  050C  0521               	andwf	___flge@ff1+1,w
  2972  050D  00A9               	movwf	??___flge+1
  2973  050E  3080               	movlw	128
  2974  050F  0522               	andwf	___flge@ff1+2,w
  2975  0510  00AA               	movwf	??___flge+2
  2976  0511  307F               	movlw	127
  2977  0512  0523               	andwf	___flge@ff1+3,w
  2978  0513  00AB               	movwf	??___flge+3
  2979  0514  082B               	movf	??___flge+3,w
  2980  0515  042A               	iorwf	??___flge+2,w
  2981  0516  0429               	iorwf	??___flge+1,w
  2982  0517  0428               	iorwf	??___flge,w
  2983  0518  1D03               	skipz
  2984  0519  2D1B               	goto	u2001
  2985  051A  2D1C               	goto	u2000
  2986  051B                     u2001:
  2987  051B  2D24               	goto	l526
  2988  051C                     u2000:
  2989  051C                     l2284:
  2990  051C  3000               	movlw	0
  2991  051D  00A3               	movwf	___flge@ff1+3
  2992  051E  3000               	movlw	0
  2993  051F  00A2               	movwf	___flge@ff1+2
  2994  0520  3000               	movlw	0
  2995  0521  00A1               	movwf	___flge@ff1+1
  2996  0522  3000               	movlw	0
  2997  0523  00A0               	movwf	___flge@ff1
  2998  0524                     l526:
  2999  0524  3000               	movlw	0
  3000  0525  0524               	andwf	___flge@ff2,w
  3001  0526  00A8               	movwf	??___flge
  3002  0527  3000               	movlw	0
  3003  0528  0525               	andwf	___flge@ff2+1,w
  3004  0529  00A9               	movwf	??___flge+1
  3005  052A  3080               	movlw	128
  3006  052B  0526               	andwf	___flge@ff2+2,w
  3007  052C  00AA               	movwf	??___flge+2
  3008  052D  307F               	movlw	127
  3009  052E  0527               	andwf	___flge@ff2+3,w
  3010  052F  00AB               	movwf	??___flge+3
  3011  0530  082B               	movf	??___flge+3,w
  3012  0531  042A               	iorwf	??___flge+2,w
  3013  0532  0429               	iorwf	??___flge+1,w
  3014  0533  0428               	iorwf	??___flge,w
  3015  0534  1D03               	skipz
  3016  0535  2D37               	goto	u2011
  3017  0536  2D38               	goto	u2010
  3018  0537                     u2011:
  3019  0537  2D40               	goto	l2288
  3020  0538                     u2010:
  3021  0538                     l2286:
  3022  0538  3000               	movlw	0
  3023  0539  00A7               	movwf	___flge@ff2+3
  3024  053A  3000               	movlw	0
  3025  053B  00A6               	movwf	___flge@ff2+2
  3026  053C  3000               	movlw	0
  3027  053D  00A5               	movwf	___flge@ff2+1
  3028  053E  3000               	movlw	0
  3029  053F  00A4               	movwf	___flge@ff2
  3030  0540                     l2288:
  3031  0540  1FA3               	btfss	___flge@ff1+3,7
  3032  0541  2D43               	goto	u2021
  3033  0542  2D44               	goto	u2020
  3034  0543                     u2021:
  3035  0543  2D68               	goto	l2292
  3036  0544                     u2020:
  3037  0544                     l2290:
  3038  0544  3000               	movlw	0
  3039  0545  00A8               	movwf	??___flge
  3040  0546  3000               	movlw	0
  3041  0547  00A9               	movwf	??___flge+1
  3042  0548  3000               	movlw	0
  3043  0549  00AA               	movwf	??___flge+2
  3044  054A  3080               	movlw	128
  3045  054B  00AB               	movwf	??___flge+3
  3046  054C  0820               	movf	___flge@ff1,w
  3047  054D  02A8               	subwf	??___flge,f
  3048  054E  0821               	movf	___flge@ff1+1,w
  3049  054F  1C03               	skipc
  3050  0550  0F21               	incfsz	___flge@ff1+1,w
  3051  0551  2D53               	goto	u2031
  3052  0552  2D54               	goto	u2032
  3053  0553                     u2031:
  3054  0553  02A9               	subwf	??___flge+1,f
  3055  0554                     u2032:
  3056  0554  0822               	movf	___flge@ff1+2,w
  3057  0555  1C03               	skipc
  3058  0556  0F22               	incfsz	___flge@ff1+2,w
  3059  0557  2D59               	goto	u2033
  3060  0558  2D5A               	goto	u2034
  3061  0559                     u2033:
  3062  0559  02AA               	subwf	??___flge+2,f
  3063  055A                     u2034:
  3064  055A  0823               	movf	___flge@ff1+3,w
  3065  055B  1C03               	skipc
  3066  055C  0F23               	incfsz	___flge@ff1+3,w
  3067  055D  2D5F               	goto	u2035
  3068  055E  2D60               	goto	u2036
  3069  055F                     u2035:
  3070  055F  02AB               	subwf	??___flge+3,f
  3071  0560                     u2036:
  3072  0560  082B               	movf	??___flge+3,w
  3073  0561  00A3               	movwf	___flge@ff1+3
  3074  0562  082A               	movf	??___flge+2,w
  3075  0563  00A2               	movwf	___flge@ff1+2
  3076  0564  0829               	movf	??___flge+1,w
  3077  0565  00A1               	movwf	___flge@ff1+1
  3078  0566  0828               	movf	??___flge,w
  3079  0567  00A0               	movwf	___flge@ff1
  3080  0568                     l2292:
  3081  0568  1FA7               	btfss	___flge@ff2+3,7
  3082  0569  2D6B               	goto	u2041
  3083  056A  2D6C               	goto	u2040
  3084  056B                     u2041:
  3085  056B  2D90               	goto	l529
  3086  056C                     u2040:
  3087  056C                     l2294:
  3088  056C  3000               	movlw	0
  3089  056D  00A8               	movwf	??___flge
  3090  056E  3000               	movlw	0
  3091  056F  00A9               	movwf	??___flge+1
  3092  0570  3000               	movlw	0
  3093  0571  00AA               	movwf	??___flge+2
  3094  0572  3080               	movlw	128
  3095  0573  00AB               	movwf	??___flge+3
  3096  0574  0824               	movf	___flge@ff2,w
  3097  0575  02A8               	subwf	??___flge,f
  3098  0576  0825               	movf	___flge@ff2+1,w
  3099  0577  1C03               	skipc
  3100  0578  0F25               	incfsz	___flge@ff2+1,w
  3101  0579  2D7B               	goto	u2051
  3102  057A  2D7C               	goto	u2052
  3103  057B                     u2051:
  3104  057B  02A9               	subwf	??___flge+1,f
  3105  057C                     u2052:
  3106  057C  0826               	movf	___flge@ff2+2,w
  3107  057D  1C03               	skipc
  3108  057E  0F26               	incfsz	___flge@ff2+2,w
  3109  057F  2D81               	goto	u2053
  3110  0580  2D82               	goto	u2054
  3111  0581                     u2053:
  3112  0581  02AA               	subwf	??___flge+2,f
  3113  0582                     u2054:
  3114  0582  0827               	movf	___flge@ff2+3,w
  3115  0583  1C03               	skipc
  3116  0584  0F27               	incfsz	___flge@ff2+3,w
  3117  0585  2D87               	goto	u2055
  3118  0586  2D88               	goto	u2056
  3119  0587                     u2055:
  3120  0587  02AB               	subwf	??___flge+3,f
  3121  0588                     u2056:
  3122  0588  082B               	movf	??___flge+3,w
  3123  0589  00A7               	movwf	___flge@ff2+3
  3124  058A  082A               	movf	??___flge+2,w
  3125  058B  00A6               	movwf	___flge@ff2+2
  3126  058C  0829               	movf	??___flge+1,w
  3127  058D  00A5               	movwf	___flge@ff2+1
  3128  058E  0828               	movf	??___flge,w
  3129  058F  00A4               	movwf	___flge@ff2
  3130  0590                     l529:
  3131  0590  3080               	movlw	128
  3132  0591  06A3               	xorwf	___flge@ff1+3,f
  3133  0592  3080               	movlw	128
  3134  0593  06A7               	xorwf	___flge@ff2+3,f
  3135  0594  0827               	movf	___flge@ff2+3,w
  3136  0595  0223               	subwf	___flge@ff1+3,w
  3137  0596  1D03               	skipz
  3138  0597  2DA2               	goto	u2065
  3139  0598  0826               	movf	___flge@ff2+2,w
  3140  0599  0222               	subwf	___flge@ff1+2,w
  3141  059A  1D03               	skipz
  3142  059B  2DA2               	goto	u2065
  3143  059C  0825               	movf	___flge@ff2+1,w
  3144  059D  0221               	subwf	___flge@ff1+1,w
  3145  059E  1D03               	skipz
  3146  059F  2DA2               	goto	u2065
  3147  05A0  0824               	movf	___flge@ff2,w
  3148  05A1  0220               	subwf	___flge@ff1,w
  3149  05A2                     u2065:
  3150  05A2  1803               	skipnc
  3151  05A3  2DA5               	goto	u2061
  3152  05A4  2DA6               	goto	u2060
  3153  05A5                     u2061:
  3154  05A5  2DA8               	goto	l2298
  3155  05A6                     u2060:
  3156  05A6                     l2296:
  3157  05A6  1003               	clrc
  3158  05A7  2DA9               	goto	l530
  3159  05A8                     l2298:
  3160  05A8  1403               	setc
  3161  05A9                     l530:
  3162  05A9  0008               	return
  3163  05AA                     __end_of___flge:
  3164                           
  3165                           	psect	text13
  3166  0187                     __ptext13:	
  3167 ;; *************** function _atualizaLCD *****************
  3168 ;; Defined at:
  3169 ;;		line 247 in file "main.c"
  3170 ;; Parameters:    Size  Location     Type
  3171 ;;		None
  3172 ;; Auto vars:     Size  Location     Type
  3173 ;;  buffer1        16   16[BANK1 ] unsigned char [16]
  3174 ;;  buffer0        16    0[BANK1 ] unsigned char [16]
  3175 ;; Return value:  Size  Location     Type
  3176 ;;                  1    wreg      void 
  3177 ;; Registers used:
  3178 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3179 ;; Tracked objects:
  3180 ;;		On entry : 0/0
  3181 ;;		On exit  : 0/0
  3182 ;;		Unchanged: 0/0
  3183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3184 ;;      Params:         0       0       0       0       0
  3185 ;;      Locals:         0       0      32       0       0
  3186 ;;      Temps:          0       2       0       0       0
  3187 ;;      Totals:         0       2      32       0       0
  3188 ;;Total ram usage:       34 bytes
  3189 ;; Hardware stack levels used: 1
  3190 ;; Hardware stack levels required when called: 5
  3191 ;; This function calls:
  3192 ;;		_Lcd_Clear
  3193 ;;		_Lcd_Set_Cursor
  3194 ;;		_Lcd_Write_String
  3195 ;;		___fltol
  3196 ;;		_sprintf
  3197 ;; This function is called by:
  3198 ;;		_main
  3199 ;; This function uses a non-reentrant model
  3200 ;;
  3201                           
  3202                           
  3203                           ;psect for function _atualizaLCD
  3204  0187                     _atualizaLCD:
  3205  0187                     l2428:	
  3206                           ;incstack = 0
  3207                           ; Regs used in _atualizaLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3208                           
  3209                           
  3210                           ;main.c: 250:     char buffer0[16],buffer1[16];;main.c: 252:     Lcd_Clear();
  3211  0187  120A  158A  25E1  120A  118A  	fcall	_Lcd_Clear
  3212                           
  3213                           ;main.c: 253:     Lcd_Set_Cursor(1,1);
  3214  018C  1283               	bcf	3,5	;RP0=0, select bank0
  3215  018D  1303               	bcf	3,6	;RP1=0, select bank0
  3216  018E  01A2               	clrf	Lcd_Set_Cursor@b
  3217  018F  0AA2               	incf	Lcd_Set_Cursor@b,f
  3218  0190  3001               	movlw	1
  3219  0191  120A  118A  270A  120A  118A  	fcall	_Lcd_Set_Cursor
  3220  0196                     l2430:
  3221                           
  3222                           ;main.c: 254:     sprintf(buffer0, "Q:%i C:%i L:%i S1:%i",(int)valor_entry1, (int)valor_
      +                          entry0, (int)valor_entry2, (int)valor_entry3);
  3223  0196  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  3224  0197  1283               	bcf	3,5	;RP0=0, select bank0
  3225  0198  1303               	bcf	3,6	;RP1=0, select bank0
  3226  0199  00BF               	movwf	??_atualizaLCD
  3227  019A  083F               	movf	??_atualizaLCD,w
  3228  019B  00AC               	movwf	sprintf@f
  3229  019C  084B               	movf	_valor_entry1+3,w
  3230  019D  00A3               	movwf	___fltol@f1+3
  3231  019E  084A               	movf	_valor_entry1+2,w
  3232  019F  00A2               	movwf	___fltol@f1+2
  3233  01A0  0849               	movf	_valor_entry1+1,w
  3234  01A1  00A1               	movwf	___fltol@f1+1
  3235  01A2  0848               	movf	_valor_entry1,w
  3236  01A3  00A0               	movwf	___fltol@f1
  3237  01A4  120A  118A  262B  120A  118A  	fcall	___fltol
  3238  01A9  1283               	bcf	3,5	;RP0=0, select bank0
  3239  01AA  1303               	bcf	3,6	;RP1=0, select bank0
  3240  01AB  0821               	movf	?___fltol+1,w
  3241  01AC  00AE               	movwf	?_sprintf+2
  3242  01AD  0820               	movf	?___fltol,w
  3243  01AE  00AD               	movwf	?_sprintf+1
  3244  01AF  0879               	movf	_valor_entry0+3,w
  3245  01B0  00A3               	movwf	___fltol@f1+3
  3246  01B1  0878               	movf	_valor_entry0+2,w
  3247  01B2  00A2               	movwf	___fltol@f1+2
  3248  01B3  0877               	movf	_valor_entry0+1,w
  3249  01B4  00A1               	movwf	___fltol@f1+1
  3250  01B5  0876               	movf	_valor_entry0,w
  3251  01B6  00A0               	movwf	___fltol@f1
  3252  01B7  120A  118A  262B  120A  118A  	fcall	___fltol
  3253  01BC  1283               	bcf	3,5	;RP0=0, select bank0
  3254  01BD  1303               	bcf	3,6	;RP1=0, select bank0
  3255  01BE  0821               	movf	?___fltol+1,w
  3256  01BF  00B0               	movwf	?_sprintf+4
  3257  01C0  0820               	movf	?___fltol,w
  3258  01C1  00AF               	movwf	?_sprintf+3
  3259  01C2  0847               	movf	_valor_entry2+3,w
  3260  01C3  00A3               	movwf	___fltol@f1+3
  3261  01C4  0846               	movf	_valor_entry2+2,w
  3262  01C5  00A2               	movwf	___fltol@f1+2
  3263  01C6  0845               	movf	_valor_entry2+1,w
  3264  01C7  00A1               	movwf	___fltol@f1+1
  3265  01C8  0844               	movf	_valor_entry2,w
  3266  01C9  00A0               	movwf	___fltol@f1
  3267  01CA  120A  118A  262B  120A  118A  	fcall	___fltol
  3268  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  3269  01D0  1303               	bcf	3,6	;RP1=0, select bank0
  3270  01D1  0821               	movf	?___fltol+1,w
  3271  01D2  00B2               	movwf	?_sprintf+6
  3272  01D3  0820               	movf	?___fltol,w
  3273  01D4  00B1               	movwf	?_sprintf+5
  3274  01D5  0853               	movf	_valor_entry3+3,w
  3275  01D6  00A3               	movwf	___fltol@f1+3
  3276  01D7  0852               	movf	_valor_entry3+2,w
  3277  01D8  00A2               	movwf	___fltol@f1+2
  3278  01D9  0851               	movf	_valor_entry3+1,w
  3279  01DA  00A1               	movwf	___fltol@f1+1
  3280  01DB  0850               	movf	_valor_entry3,w
  3281  01DC  00A0               	movwf	___fltol@f1
  3282  01DD  120A  118A  262B  120A  118A  	fcall	___fltol
  3283  01E2  1283               	bcf	3,5	;RP0=0, select bank0
  3284  01E3  1303               	bcf	3,6	;RP1=0, select bank0
  3285  01E4  0821               	movf	?___fltol+1,w
  3286  01E5  00B4               	movwf	?_sprintf+8
  3287  01E6  0820               	movf	?___fltol,w
  3288  01E7  00B3               	movwf	?_sprintf+7
  3289  01E8  30A0               	movlw	(low (atualizaLCD@buffer0| 0))& (0+255)
  3290  01E9  120A  118A  227E  120A  118A  	fcall	_sprintf
  3291  01EE                     l2432:
  3292                           
  3293                           ;main.c: 255:     Lcd_Write_String(buffer0);
  3294  01EE  30A0               	movlw	(low (atualizaLCD@buffer0| 0))& (0+255)
  3295  01EF  120A  158A  26C0  120A  118A  	fcall	_Lcd_Write_String
  3296  01F4                     l2434:
  3297                           
  3298                           ;main.c: 256:     _delay((unsigned long)((10)*(4000000/4000.0)));
  3299  01F4  300D               	movlw	13
  3300  01F5  1283               	bcf	3,5	;RP0=0, select bank0
  3301  01F6  1303               	bcf	3,6	;RP1=0, select bank0
  3302  01F7  00C0               	movwf	??_atualizaLCD+1
  3303  01F8  30FB               	movlw	251
  3304  01F9  00BF               	movwf	??_atualizaLCD
  3305  01FA                     u2417:
  3306  01FA  0BBF               	decfsz	??_atualizaLCD,f
  3307  01FB  29FA               	goto	u2417
  3308  01FC  0BC0               	decfsz	??_atualizaLCD+1,f
  3309  01FD  29FA               	goto	u2417
  3310  01FE                     l2436:
  3311                           
  3312                           ;main.c: 257:     Lcd_Set_Cursor(2,1);
  3313  01FE  1283               	bcf	3,5	;RP0=0, select bank0
  3314  01FF  1303               	bcf	3,6	;RP1=0, select bank0
  3315  0200  01A2               	clrf	Lcd_Set_Cursor@b
  3316  0201  0AA2               	incf	Lcd_Set_Cursor@b,f
  3317  0202  3002               	movlw	2
  3318  0203  120A  118A  270A  120A  118A  	fcall	_Lcd_Set_Cursor
  3319  0208                     l2438:
  3320                           
  3321                           ;main.c: 258:     sprintf(buffer1, "S2:%i S3:%i S4:%i ", (int)valor_entry4, (int)valor_e
      +                          ntry5, (int)valor_entry6);
  3322  0208  3020               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  3323  0209  1283               	bcf	3,5	;RP0=0, select bank0
  3324  020A  1303               	bcf	3,6	;RP1=0, select bank0
  3325  020B  00BF               	movwf	??_atualizaLCD
  3326  020C  083F               	movf	??_atualizaLCD,w
  3327  020D  00AC               	movwf	sprintf@f
  3328  020E  084F               	movf	_valor_entry4+3,w
  3329  020F  00A3               	movwf	___fltol@f1+3
  3330  0210  084E               	movf	_valor_entry4+2,w
  3331  0211  00A2               	movwf	___fltol@f1+2
  3332  0212  084D               	movf	_valor_entry4+1,w
  3333  0213  00A1               	movwf	___fltol@f1+1
  3334  0214  084C               	movf	_valor_entry4,w
  3335  0215  00A0               	movwf	___fltol@f1
  3336  0216  120A  118A  262B  120A  118A  	fcall	___fltol
  3337  021B  1283               	bcf	3,5	;RP0=0, select bank0
  3338  021C  1303               	bcf	3,6	;RP1=0, select bank0
  3339  021D  0821               	movf	?___fltol+1,w
  3340  021E  00AE               	movwf	?_sprintf+2
  3341  021F  0820               	movf	?___fltol,w
  3342  0220  00AD               	movwf	?_sprintf+1
  3343  0221  1683               	bsf	3,5	;RP0=1, select bank1
  3344  0222  1303               	bcf	3,6	;RP1=0, select bank1
  3345  0223  0847               	movf	(_valor_entry5+3)^(0+128),w
  3346  0224  1283               	bcf	3,5	;RP0=0, select bank0
  3347  0225  1303               	bcf	3,6	;RP1=0, select bank0
  3348  0226  00A3               	movwf	___fltol@f1+3
  3349  0227  1683               	bsf	3,5	;RP0=1, select bank1
  3350  0228  1303               	bcf	3,6	;RP1=0, select bank1
  3351  0229  0846               	movf	(_valor_entry5+2)^(0+128),w
  3352  022A  1283               	bcf	3,5	;RP0=0, select bank0
  3353  022B  1303               	bcf	3,6	;RP1=0, select bank0
  3354  022C  00A2               	movwf	___fltol@f1+2
  3355  022D  1683               	bsf	3,5	;RP0=1, select bank1
  3356  022E  1303               	bcf	3,6	;RP1=0, select bank1
  3357  022F  0845               	movf	(_valor_entry5+1)^(0+128),w
  3358  0230  1283               	bcf	3,5	;RP0=0, select bank0
  3359  0231  1303               	bcf	3,6	;RP1=0, select bank0
  3360  0232  00A1               	movwf	___fltol@f1+1
  3361  0233  1683               	bsf	3,5	;RP0=1, select bank1
  3362  0234  1303               	bcf	3,6	;RP1=0, select bank1
  3363  0235  0844               	movf	_valor_entry5^(0+128),w
  3364  0236  1283               	bcf	3,5	;RP0=0, select bank0
  3365  0237  1303               	bcf	3,6	;RP1=0, select bank0
  3366  0238  00A0               	movwf	___fltol@f1
  3367  0239  120A  118A  262B  120A  118A  	fcall	___fltol
  3368  023E  1283               	bcf	3,5	;RP0=0, select bank0
  3369  023F  1303               	bcf	3,6	;RP1=0, select bank0
  3370  0240  0821               	movf	?___fltol+1,w
  3371  0241  00B0               	movwf	?_sprintf+4
  3372  0242  0820               	movf	?___fltol,w
  3373  0243  00AF               	movwf	?_sprintf+3
  3374  0244  1683               	bsf	3,5	;RP0=1, select bank1
  3375  0245  1303               	bcf	3,6	;RP1=0, select bank1
  3376  0246  0843               	movf	(_valor_entry6+3)^(0+128),w
  3377  0247  1283               	bcf	3,5	;RP0=0, select bank0
  3378  0248  1303               	bcf	3,6	;RP1=0, select bank0
  3379  0249  00A3               	movwf	___fltol@f1+3
  3380  024A  1683               	bsf	3,5	;RP0=1, select bank1
  3381  024B  1303               	bcf	3,6	;RP1=0, select bank1
  3382  024C  0842               	movf	(_valor_entry6+2)^(0+128),w
  3383  024D  1283               	bcf	3,5	;RP0=0, select bank0
  3384  024E  1303               	bcf	3,6	;RP1=0, select bank0
  3385  024F  00A2               	movwf	___fltol@f1+2
  3386  0250  1683               	bsf	3,5	;RP0=1, select bank1
  3387  0251  1303               	bcf	3,6	;RP1=0, select bank1
  3388  0252  0841               	movf	(_valor_entry6+1)^(0+128),w
  3389  0253  1283               	bcf	3,5	;RP0=0, select bank0
  3390  0254  1303               	bcf	3,6	;RP1=0, select bank0
  3391  0255  00A1               	movwf	___fltol@f1+1
  3392  0256  1683               	bsf	3,5	;RP0=1, select bank1
  3393  0257  1303               	bcf	3,6	;RP1=0, select bank1
  3394  0258  0840               	movf	_valor_entry6^(0+128),w
  3395  0259  1283               	bcf	3,5	;RP0=0, select bank0
  3396  025A  1303               	bcf	3,6	;RP1=0, select bank0
  3397  025B  00A0               	movwf	___fltol@f1
  3398  025C  120A  118A  262B  120A  118A  	fcall	___fltol
  3399  0261  1283               	bcf	3,5	;RP0=0, select bank0
  3400  0262  1303               	bcf	3,6	;RP1=0, select bank0
  3401  0263  0821               	movf	?___fltol+1,w
  3402  0264  00B2               	movwf	?_sprintf+6
  3403  0265  0820               	movf	?___fltol,w
  3404  0266  00B1               	movwf	?_sprintf+5
  3405  0267  30B0               	movlw	(low (atualizaLCD@buffer1| 0))& (0+255)
  3406  0268  120A  118A  227E  120A  118A  	fcall	_sprintf
  3407  026D                     l2440:
  3408                           
  3409                           ;main.c: 259:     Lcd_Write_String(buffer1);
  3410  026D  30B0               	movlw	(low (atualizaLCD@buffer1| 0))& (0+255)
  3411  026E  120A  158A  26C0  120A  118A  	fcall	_Lcd_Write_String
  3412                           
  3413                           ;main.c: 260:     _delay((unsigned long)((10)*(4000000/4000.0)));
  3414  0273  300D               	movlw	13
  3415  0274  1283               	bcf	3,5	;RP0=0, select bank0
  3416  0275  1303               	bcf	3,6	;RP1=0, select bank0
  3417  0276  00C0               	movwf	??_atualizaLCD+1
  3418  0277  30FB               	movlw	251
  3419  0278  00BF               	movwf	??_atualizaLCD
  3420  0279                     u2427:
  3421  0279  0BBF               	decfsz	??_atualizaLCD,f
  3422  027A  2A79               	goto	u2427
  3423  027B  0BC0               	decfsz	??_atualizaLCD+1,f
  3424  027C  2A79               	goto	u2427
  3425  027D                     l207:
  3426  027D  0008               	return
  3427  027E                     __end_of_atualizaLCD:
  3428                           
  3429                           	psect	text14
  3430  027E                     __ptext14:	
  3431 ;; *************** function _sprintf *****************
  3432 ;; Defined at:
  3433 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  3434 ;; Parameters:    Size  Location     Type
  3435 ;;  sp              1    wreg     PTR unsigned char 
  3436 ;;		 -> atualizaLCD@buffer1(16), atualizaLCD@buffer0(16), 
  3437 ;;  f               1   12[BANK0 ] PTR const unsigned char 
  3438 ;;		 -> STR_2(19), STR_1(21), 
  3439 ;; Auto vars:     Size  Location     Type
  3440 ;;  sp              1   29[BANK0 ] PTR unsigned char 
  3441 ;;		 -> atualizaLCD@buffer1(16), atualizaLCD@buffer0(16), 
  3442 ;;  tmpval          4    0        struct .
  3443 ;;  val             2   27[BANK0 ] unsigned int 
  3444 ;;  cp              2    0        PTR const unsigned char 
  3445 ;;  len             2    0        unsigned int 
  3446 ;;  c               1   30[BANK0 ] unsigned char 
  3447 ;;  prec            1   26[BANK0 ] char 
  3448 ;;  flag            1   25[BANK0 ] unsigned char 
  3449 ;;  ap              1   24[BANK0 ] PTR void [1]
  3450 ;;		 -> ?_sprintf(2), 
  3451 ;; Return value:  Size  Location     Type
  3452 ;;                  2   12[BANK0 ] int 
  3453 ;; Registers used:
  3454 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3455 ;; Tracked objects:
  3456 ;;		On entry : 0/0
  3457 ;;		On exit  : 0/0
  3458 ;;		Unchanged: 0/0
  3459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3460 ;;      Params:         0       9       0       0       0
  3461 ;;      Locals:         0       7       0       0       0
  3462 ;;      Temps:          0       3       0       0       0
  3463 ;;      Totals:         0      19       0       0       0
  3464 ;;Total ram usage:       19 bytes
  3465 ;; Hardware stack levels used: 1
  3466 ;; Hardware stack levels required when called: 3
  3467 ;; This function calls:
  3468 ;;		___lwdiv
  3469 ;;		___lwmod
  3470 ;; This function is called by:
  3471 ;;		_atualizaLCD
  3472 ;; This function uses a non-reentrant model
  3473 ;;
  3474                           
  3475                           
  3476                           ;psect for function _sprintf
  3477  027E                     _sprintf:
  3478                           
  3479                           ;incstack = 0
  3480                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3481                           ;sprintf@sp stored from wreg
  3482  027E  1283               	bcf	3,5	;RP0=0, select bank0
  3483  027F  1303               	bcf	3,6	;RP1=0, select bank0
  3484  0280  00BD               	movwf	sprintf@sp
  3485  0281                     l2204:
  3486                           
  3487                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  3488  0281  302D               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  3489  0282  00B5               	movwf	??_sprintf
  3490  0283  0835               	movf	??_sprintf,w
  3491  0284  00B8               	movwf	sprintf@ap
  3492                           
  3493                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3494  0285  2B51               	goto	l2256
  3495  0286                     l2206:
  3496                           
  3497                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  3498  0286  3025               	movlw	37
  3499  0287  063E               	xorwf	sprintf@c,w
  3500  0288  1903               	btfsc	3,2
  3501  0289  2A8B               	goto	u1901
  3502  028A  2A8C               	goto	u1900
  3503  028B                     u1901:
  3504  028B  2A98               	goto	l2212
  3505  028C                     u1900:
  3506  028C                     l2208:
  3507                           
  3508                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  3509  028C  083E               	movf	sprintf@c,w
  3510  028D  00B5               	movwf	??_sprintf
  3511  028E  083D               	movf	sprintf@sp,w
  3512  028F  0084               	movwf	4
  3513  0290  0835               	movf	??_sprintf,w
  3514  0291  1383               	bcf	3,7	;select IRP bank0
  3515  0292  0080               	movwf	0
  3516  0293                     l2210:
  3517  0293  3001               	movlw	1
  3518  0294  00B5               	movwf	??_sprintf
  3519  0295  0835               	movf	??_sprintf,w
  3520  0296  07BD               	addwf	sprintf@sp,f
  3521                           
  3522                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 559:    continue;
  3523  0297  2B51               	goto	l2256
  3524  0298                     l2212:
  3525                           
  3526                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  3527  0298  01B9               	clrf	sprintf@flag
  3528  0299                     l2216:	
  3529                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  3530                           
  3531  0299  3001               	movlw	1
  3532  029A  07AC               	addwf	sprintf@f,f
  3533  029B  30FF               	movlw	-1
  3534  029C  072C               	addwf	sprintf@f,w
  3535  029D  0084               	movwf	4
  3536  029E  120A  158A  2000  120A  118A  	fcall	stringdir
  3537  02A3  00BE               	movwf	sprintf@c
  3538  02A4  00B5               	movwf	??_sprintf
  3539  02A5  01B6               	clrf	??_sprintf+1
  3540                           
  3541                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3542                           ; Switch size 1, requested type "simple"
  3543                           ; Number of cases is 1, Range of values is 0 to 0
  3544                           ; switch strategies available:
  3545                           ; Name         Instructions Cycles
  3546                           ; simple_byte            4     3 (average)
  3547                           ; direct_byte           11     8 (fixed)
  3548                           ; jumptable            260     6 (fixed)
  3549                           ;	Chosen strategy is simple_byte
  3550  02A6  0836               	movf	??_sprintf+1,w
  3551  02A7  3A00               	xorlw	0	; case 0
  3552  02A8  1903               	skipnz
  3553  02A9  2AAB               	goto	l2530
  3554  02AA  2B51               	goto	l2256
  3555  02AB                     l2530:
  3556                           
  3557                           ; Switch size 1, requested type "simple"
  3558                           ; Number of cases is 3, Range of values is 0 to 105
  3559                           ; switch strategies available:
  3560                           ; Name         Instructions Cycles
  3561                           ; simple_byte           10     6 (average)
  3562                           ; jumptable            260     6 (fixed)
  3563                           ;	Chosen strategy is simple_byte
  3564  02AB  0835               	movf	??_sprintf,w
  3565  02AC  3A00               	xorlw	0	; case 0
  3566  02AD  1903               	skipnz
  3567  02AE  2B63               	goto	l2258
  3568  02AF  3A64               	xorlw	100	; case 100
  3569  02B0  1903               	skipnz
  3570  02B1  2AB6               	goto	l2218
  3571  02B2  3A0D               	xorlw	13	; case 105
  3572  02B3  1903               	skipnz
  3573  02B4  2AB6               	goto	l2218
  3574  02B5  2B51               	goto	l2256
  3575  02B6                     l2218:
  3576                           
  3577                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3578  02B6  0838               	movf	sprintf@ap,w
  3579  02B7  0084               	movwf	4
  3580  02B8  1383               	bcf	3,7	;select IRP bank0
  3581  02B9  0800               	movf	0,w
  3582  02BA  00BB               	movwf	sprintf@val
  3583  02BB  0A84               	incf	4,f
  3584  02BC  0800               	movf	0,w
  3585  02BD  00BC               	movwf	sprintf@val+1
  3586  02BE                     l2220:
  3587  02BE  3002               	movlw	2
  3588  02BF  00B5               	movwf	??_sprintf
  3589  02C0  0835               	movf	??_sprintf,w
  3590  02C1  07B8               	addwf	sprintf@ap,f
  3591  02C2                     l2222:
  3592                           
  3593                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  3594  02C2  1FBC               	btfss	sprintf@val+1,7
  3595  02C3  2AC5               	goto	u1911
  3596  02C4  2AC6               	goto	u1910
  3597  02C5                     u1911:
  3598  02C5  2ACF               	goto	l2228
  3599  02C6                     u1910:
  3600  02C6                     l2224:
  3601                           
  3602                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  3603  02C6  3003               	movlw	3
  3604  02C7  00B5               	movwf	??_sprintf
  3605  02C8  0835               	movf	??_sprintf,w
  3606  02C9  04B9               	iorwf	sprintf@flag,f
  3607  02CA                     l2226:
  3608                           
  3609                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  3610  02CA  09BB               	comf	sprintf@val,f
  3611  02CB  09BC               	comf	sprintf@val+1,f
  3612  02CC  0ABB               	incf	sprintf@val,f
  3613  02CD  1903               	skipnz
  3614  02CE  0ABC               	incf	sprintf@val+1,f
  3615  02CF                     l2228:
  3616                           
  3617                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  3618  02CF  01BE               	clrf	sprintf@c
  3619  02D0  0ABE               	incf	sprintf@c,f
  3620  02D1                     l2234:
  3621                           
  3622                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  3623  02D1  083E               	movf	sprintf@c,w
  3624  02D2  00B5               	movwf	??_sprintf
  3625  02D3  0735               	addwf	??_sprintf,w
  3626  02D4  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3627  02D5  0084               	movwf	4
  3628  02D6  120A  158A  2000  120A  118A  	fcall	stringdir
  3629  02DB  00B6               	movwf	??_sprintf+1
  3630  02DC  120A  158A  2000  120A  118A  	fcall	stringdir
  3631  02E1  00B7               	movwf	??_sprintf+2
  3632  02E2  0837               	movf	??_sprintf+2,w
  3633  02E3  023C               	subwf	sprintf@val+1,w
  3634  02E4  1D03               	skipz
  3635  02E5  2AE8               	goto	u1925
  3636  02E6  0836               	movf	??_sprintf+1,w
  3637  02E7  023B               	subwf	sprintf@val,w
  3638  02E8                     u1925:
  3639  02E8  1803               	skipnc
  3640  02E9  2AEB               	goto	u1921
  3641  02EA  2AEC               	goto	u1920
  3642  02EB                     u1921:
  3643  02EB  2AED               	goto	l2238
  3644  02EC                     u1920:
  3645  02EC  2AF7               	goto	l2240
  3646  02ED                     l2238:
  3647  02ED  3001               	movlw	1
  3648  02EE  00B5               	movwf	??_sprintf
  3649  02EF  0835               	movf	??_sprintf,w
  3650  02F0  07BE               	addwf	sprintf@c,f
  3651  02F1  3005               	movlw	5
  3652  02F2  063E               	xorwf	sprintf@c,w
  3653  02F3  1D03               	btfss	3,2
  3654  02F4  2AF6               	goto	u1931
  3655  02F5  2AF7               	goto	u1930
  3656  02F6                     u1931:
  3657  02F6  2AD1               	goto	l2234
  3658  02F7                     u1930:
  3659  02F7                     l2240:
  3660                           
  3661                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  3662  02F7  0839               	movf	sprintf@flag,w
  3663  02F8  3903               	andlw	3
  3664  02F9  1903               	btfsc	3,2
  3665  02FA  2AFC               	goto	u1941
  3666  02FB  2AFD               	goto	u1940
  3667  02FC                     u1941:
  3668  02FC  2B08               	goto	l2246
  3669  02FD                     u1940:
  3670  02FD                     l2242:
  3671                           
  3672                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3673  02FD  302D               	movlw	45
  3674  02FE  00B5               	movwf	??_sprintf
  3675  02FF  083D               	movf	sprintf@sp,w
  3676  0300  0084               	movwf	4
  3677  0301  0835               	movf	??_sprintf,w
  3678  0302  1383               	bcf	3,7	;select IRP bank0
  3679  0303  0080               	movwf	0
  3680  0304                     l2244:
  3681  0304  3001               	movlw	1
  3682  0305  00B5               	movwf	??_sprintf
  3683  0306  0835               	movf	??_sprintf,w
  3684  0307  07BD               	addwf	sprintf@sp,f
  3685  0308                     l2246:
  3686                           
  3687                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  3688  0308  083E               	movf	sprintf@c,w
  3689  0309  00B5               	movwf	??_sprintf
  3690  030A  0835               	movf	??_sprintf,w
  3691  030B  00BA               	movwf	sprintf@prec
  3692                           
  3693                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3694  030C  2B48               	goto	l2254
  3695  030D                     l2248:
  3696                           
  3697                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  3698  030D  300A               	movlw	10
  3699  030E  00A7               	movwf	___lwmod@divisor
  3700  030F  3000               	movlw	0
  3701  0310  00A8               	movwf	___lwmod@divisor+1
  3702  0311  083A               	movf	sprintf@prec,w
  3703  0312  00B5               	movwf	??_sprintf
  3704  0313  0735               	addwf	??_sprintf,w
  3705  0314  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3706  0315  0084               	movwf	4
  3707  0316  120A  158A  2000  120A  118A  	fcall	stringdir
  3708  031B  00A0               	movwf	___lwdiv@divisor
  3709  031C  120A  158A  2000  120A  118A  	fcall	stringdir
  3710  0321  00A1               	movwf	___lwdiv@divisor+1
  3711  0322  083C               	movf	sprintf@val+1,w
  3712  0323  00A3               	movwf	___lwdiv@dividend+1
  3713  0324  083B               	movf	sprintf@val,w
  3714  0325  00A2               	movwf	___lwdiv@dividend
  3715  0326  120A  118A  27B4  120A  118A  	fcall	___lwdiv
  3716  032B  1283               	bcf	3,5	;RP0=0, select bank0
  3717  032C  1303               	bcf	3,6	;RP1=0, select bank0
  3718  032D  0821               	movf	?___lwdiv+1,w
  3719  032E  00AA               	movwf	___lwmod@dividend+1
  3720  032F  0820               	movf	?___lwdiv,w
  3721  0330  00A9               	movwf	___lwmod@dividend
  3722  0331  120A  158A  27C4  120A  118A  	fcall	___lwmod
  3723  0336  1283               	bcf	3,5	;RP0=0, select bank0
  3724  0337  1303               	bcf	3,6	;RP1=0, select bank0
  3725  0338  0827               	movf	?___lwmod,w
  3726  0339  3E30               	addlw	48
  3727  033A  00B6               	movwf	??_sprintf+1
  3728  033B  0836               	movf	??_sprintf+1,w
  3729  033C  00BE               	movwf	sprintf@c
  3730  033D                     l2250:
  3731                           
  3732                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  3733  033D  083E               	movf	sprintf@c,w
  3734  033E  00B5               	movwf	??_sprintf
  3735  033F  083D               	movf	sprintf@sp,w
  3736  0340  0084               	movwf	4
  3737  0341  0835               	movf	??_sprintf,w
  3738  0342  1383               	bcf	3,7	;select IRP bank0
  3739  0343  0080               	movwf	0
  3740  0344                     l2252:
  3741  0344  3001               	movlw	1
  3742  0345  00B5               	movwf	??_sprintf
  3743  0346  0835               	movf	??_sprintf,w
  3744  0347  07BD               	addwf	sprintf@sp,f
  3745  0348                     l2254:
  3746                           
  3747                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3748  0348  30FF               	movlw	255
  3749  0349  00B5               	movwf	??_sprintf
  3750  034A  0835               	movf	??_sprintf,w
  3751  034B  07BA               	addwf	sprintf@prec,f
  3752  034C  0A3A               	incf	sprintf@prec,w
  3753  034D  1D03               	btfss	3,2
  3754  034E  2B50               	goto	u1951
  3755  034F  2B51               	goto	u1950
  3756  0350                     u1951:
  3757  0350  2B0D               	goto	l2248
  3758  0351                     u1950:
  3759  0351                     l2256:
  3760                           
  3761                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3762  0351  3001               	movlw	1
  3763  0352  07AC               	addwf	sprintf@f,f
  3764  0353  30FF               	movlw	-1
  3765  0354  072C               	addwf	sprintf@f,w
  3766  0355  0084               	movwf	4
  3767  0356  120A  158A  2000  120A  118A  	fcall	stringdir
  3768  035B  00B5               	movwf	??_sprintf
  3769  035C  0835               	movf	??_sprintf,w
  3770  035D  00BE               	movwf	sprintf@c
  3771  035E  083E               	movf	sprintf@c,w
  3772  035F  1D03               	btfss	3,2
  3773  0360  2B62               	goto	u1961
  3774  0361  2B63               	goto	u1960
  3775  0362                     u1961:
  3776  0362  2A86               	goto	l2206
  3777  0363                     u1960:
  3778  0363                     l2258:
  3779                           
  3780                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3781  0363  083D               	movf	sprintf@sp,w
  3782  0364  0084               	movwf	4
  3783  0365  1383               	bcf	3,7	;select IRP bank0
  3784  0366  0180               	clrf	0
  3785  0367                     l348:
  3786  0367  0008               	return
  3787  0368                     __end_of_sprintf:
  3788                           
  3789                           	psect	text15
  3790  0FC4                     __ptext15:	
  3791 ;; *************** function ___lwmod *****************
  3792 ;; Defined at:
  3793 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  3794 ;; Parameters:    Size  Location     Type
  3795 ;;  divisor         2    7[BANK0 ] unsigned int 
  3796 ;;  dividend        2    9[BANK0 ] unsigned int 
  3797 ;; Auto vars:     Size  Location     Type
  3798 ;;  counter         1   11[BANK0 ] unsigned char 
  3799 ;; Return value:  Size  Location     Type
  3800 ;;                  2    7[BANK0 ] unsigned int 
  3801 ;; Registers used:
  3802 ;;		wreg, status,2, status,0
  3803 ;; Tracked objects:
  3804 ;;		On entry : 0/0
  3805 ;;		On exit  : 0/0
  3806 ;;		Unchanged: 0/0
  3807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3808 ;;      Params:         0       4       0       0       0
  3809 ;;      Locals:         0       1       0       0       0
  3810 ;;      Temps:          1       0       0       0       0
  3811 ;;      Totals:         1       5       0       0       0
  3812 ;;Total ram usage:        6 bytes
  3813 ;; Hardware stack levels used: 1
  3814 ;; Hardware stack levels required when called: 2
  3815 ;; This function calls:
  3816 ;;		Nothing
  3817 ;; This function is called by:
  3818 ;;		_sprintf
  3819 ;; This function uses a non-reentrant model
  3820 ;;
  3821                           
  3822                           
  3823                           ;psect for function ___lwmod
  3824  0FC4                     ___lwmod:
  3825  0FC4                     l2152:	
  3826                           ;incstack = 0
  3827                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3828                           
  3829  0FC4  1283               	bcf	3,5	;RP0=0, select bank0
  3830  0FC5  1303               	bcf	3,6	;RP1=0, select bank0
  3831  0FC6  0827               	movf	___lwmod@divisor,w
  3832  0FC7  0428               	iorwf	___lwmod@divisor+1,w
  3833  0FC8  1903               	btfsc	3,2
  3834  0FC9  2FCB               	goto	u1791
  3835  0FCA  2FCC               	goto	u1790
  3836  0FCB                     u1791:
  3837  0FCB  2FFB               	goto	l2170
  3838  0FCC                     u1790:
  3839  0FCC                     l2154:
  3840  0FCC  01AB               	clrf	___lwmod@counter
  3841  0FCD  0AAB               	incf	___lwmod@counter,f
  3842  0FCE  2FDA               	goto	l2160
  3843  0FCF                     l2156:
  3844  0FCF  3001               	movlw	1
  3845  0FD0                     u1805:
  3846  0FD0  1003               	clrc
  3847  0FD1  0DA7               	rlf	___lwmod@divisor,f
  3848  0FD2  0DA8               	rlf	___lwmod@divisor+1,f
  3849  0FD3  3EFF               	addlw	-1
  3850  0FD4  1D03               	skipz
  3851  0FD5  2FD0               	goto	u1805
  3852  0FD6                     l2158:
  3853  0FD6  3001               	movlw	1
  3854  0FD7  00F5               	movwf	??___lwmod
  3855  0FD8  0875               	movf	??___lwmod,w
  3856  0FD9  07AB               	addwf	___lwmod@counter,f
  3857  0FDA                     l2160:
  3858  0FDA  1FA8               	btfss	___lwmod@divisor+1,7
  3859  0FDB  2FDD               	goto	u1811
  3860  0FDC  2FDE               	goto	u1810
  3861  0FDD                     u1811:
  3862  0FDD  2FCF               	goto	l2156
  3863  0FDE                     u1810:
  3864  0FDE                     l2162:
  3865  0FDE  0828               	movf	___lwmod@divisor+1,w
  3866  0FDF  022A               	subwf	___lwmod@dividend+1,w
  3867  0FE0  1D03               	skipz
  3868  0FE1  2FE4               	goto	u1825
  3869  0FE2  0827               	movf	___lwmod@divisor,w
  3870  0FE3  0229               	subwf	___lwmod@dividend,w
  3871  0FE4                     u1825:
  3872  0FE4  1C03               	skipc
  3873  0FE5  2FE7               	goto	u1821
  3874  0FE6  2FE8               	goto	u1820
  3875  0FE7                     u1821:
  3876  0FE7  2FEE               	goto	l2166
  3877  0FE8                     u1820:
  3878  0FE8                     l2164:
  3879  0FE8  0827               	movf	___lwmod@divisor,w
  3880  0FE9  02A9               	subwf	___lwmod@dividend,f
  3881  0FEA  0828               	movf	___lwmod@divisor+1,w
  3882  0FEB  1C03               	skipc
  3883  0FEC  03AA               	decf	___lwmod@dividend+1,f
  3884  0FED  02AA               	subwf	___lwmod@dividend+1,f
  3885  0FEE                     l2166:
  3886  0FEE  3001               	movlw	1
  3887  0FEF                     u1835:
  3888  0FEF  1003               	clrc
  3889  0FF0  0CA8               	rrf	___lwmod@divisor+1,f
  3890  0FF1  0CA7               	rrf	___lwmod@divisor,f
  3891  0FF2  3EFF               	addlw	-1
  3892  0FF3  1D03               	skipz
  3893  0FF4  2FEF               	goto	u1835
  3894  0FF5                     l2168:
  3895  0FF5  3001               	movlw	1
  3896  0FF6  02AB               	subwf	___lwmod@counter,f
  3897  0FF7  1D03               	btfss	3,2
  3898  0FF8  2FFA               	goto	u1841
  3899  0FF9  2FFB               	goto	u1840
  3900  0FFA                     u1841:
  3901  0FFA  2FDE               	goto	l2162
  3902  0FFB                     u1840:
  3903  0FFB                     l2170:
  3904  0FFB  082A               	movf	___lwmod@dividend+1,w
  3905  0FFC  00A8               	movwf	?___lwmod+1
  3906  0FFD  0829               	movf	___lwmod@dividend,w
  3907  0FFE  00A7               	movwf	?___lwmod
  3908  0FFF                     l634:
  3909  0FFF  0008               	return
  3910  1000                     __end_of___lwmod:
  3911                           
  3912                           	psect	text16
  3913  07B4                     __ptext16:	
  3914 ;; *************** function ___lwdiv *****************
  3915 ;; Defined at:
  3916 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  3917 ;; Parameters:    Size  Location     Type
  3918 ;;  divisor         2    0[BANK0 ] unsigned int 
  3919 ;;  dividend        2    2[BANK0 ] unsigned int 
  3920 ;; Auto vars:     Size  Location     Type
  3921 ;;  quotient        2    5[BANK0 ] unsigned int 
  3922 ;;  counter         1    4[BANK0 ] unsigned char 
  3923 ;; Return value:  Size  Location     Type
  3924 ;;                  2    0[BANK0 ] unsigned int 
  3925 ;; Registers used:
  3926 ;;		wreg, status,2, status,0
  3927 ;; Tracked objects:
  3928 ;;		On entry : 0/0
  3929 ;;		On exit  : 0/0
  3930 ;;		Unchanged: 0/0
  3931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3932 ;;      Params:         0       4       0       0       0
  3933 ;;      Locals:         0       3       0       0       0
  3934 ;;      Temps:          1       0       0       0       0
  3935 ;;      Totals:         1       7       0       0       0
  3936 ;;Total ram usage:        8 bytes
  3937 ;; Hardware stack levels used: 1
  3938 ;; Hardware stack levels required when called: 2
  3939 ;; This function calls:
  3940 ;;		Nothing
  3941 ;; This function is called by:
  3942 ;;		_sprintf
  3943 ;; This function uses a non-reentrant model
  3944 ;;
  3945                           
  3946                           
  3947                           ;psect for function ___lwdiv
  3948  07B4                     ___lwdiv:
  3949  07B4                     l2126:	
  3950                           ;incstack = 0
  3951                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3952                           
  3953  07B4  1283               	bcf	3,5	;RP0=0, select bank0
  3954  07B5  1303               	bcf	3,6	;RP1=0, select bank0
  3955  07B6  01A5               	clrf	___lwdiv@quotient
  3956  07B7  01A6               	clrf	___lwdiv@quotient+1
  3957  07B8                     l2128:
  3958  07B8  0820               	movf	___lwdiv@divisor,w
  3959  07B9  0421               	iorwf	___lwdiv@divisor+1,w
  3960  07BA  1903               	btfsc	3,2
  3961  07BB  2FBD               	goto	u1721
  3962  07BC  2FBE               	goto	u1720
  3963  07BD                     u1721:
  3964  07BD  2FF5               	goto	l2148
  3965  07BE                     u1720:
  3966  07BE                     l2130:
  3967  07BE  01A4               	clrf	___lwdiv@counter
  3968  07BF  0AA4               	incf	___lwdiv@counter,f
  3969  07C0  2FCC               	goto	l2136
  3970  07C1                     l2132:
  3971  07C1  3001               	movlw	1
  3972  07C2                     u1735:
  3973  07C2  1003               	clrc
  3974  07C3  0DA0               	rlf	___lwdiv@divisor,f
  3975  07C4  0DA1               	rlf	___lwdiv@divisor+1,f
  3976  07C5  3EFF               	addlw	-1
  3977  07C6  1D03               	skipz
  3978  07C7  2FC2               	goto	u1735
  3979  07C8                     l2134:
  3980  07C8  3001               	movlw	1
  3981  07C9  00F4               	movwf	??___lwdiv
  3982  07CA  0874               	movf	??___lwdiv,w
  3983  07CB  07A4               	addwf	___lwdiv@counter,f
  3984  07CC                     l2136:
  3985  07CC  1FA1               	btfss	___lwdiv@divisor+1,7
  3986  07CD  2FCF               	goto	u1741
  3987  07CE  2FD0               	goto	u1740
  3988  07CF                     u1741:
  3989  07CF  2FC1               	goto	l2132
  3990  07D0                     u1740:
  3991  07D0                     l2138:
  3992  07D0  3001               	movlw	1
  3993  07D1                     u1755:
  3994  07D1  1003               	clrc
  3995  07D2  0DA5               	rlf	___lwdiv@quotient,f
  3996  07D3  0DA6               	rlf	___lwdiv@quotient+1,f
  3997  07D4  3EFF               	addlw	-1
  3998  07D5  1D03               	skipz
  3999  07D6  2FD1               	goto	u1755
  4000  07D7  0821               	movf	___lwdiv@divisor+1,w
  4001  07D8  0223               	subwf	___lwdiv@dividend+1,w
  4002  07D9  1D03               	skipz
  4003  07DA  2FDD               	goto	u1765
  4004  07DB  0820               	movf	___lwdiv@divisor,w
  4005  07DC  0222               	subwf	___lwdiv@dividend,w
  4006  07DD                     u1765:
  4007  07DD  1C03               	skipc
  4008  07DE  2FE0               	goto	u1761
  4009  07DF  2FE1               	goto	u1760
  4010  07E0                     u1761:
  4011  07E0  2FE8               	goto	l2144
  4012  07E1                     u1760:
  4013  07E1                     l2140:
  4014  07E1  0820               	movf	___lwdiv@divisor,w
  4015  07E2  02A2               	subwf	___lwdiv@dividend,f
  4016  07E3  0821               	movf	___lwdiv@divisor+1,w
  4017  07E4  1C03               	skipc
  4018  07E5  03A3               	decf	___lwdiv@dividend+1,f
  4019  07E6  02A3               	subwf	___lwdiv@dividend+1,f
  4020  07E7                     l2142:
  4021  07E7  1425               	bsf	___lwdiv@quotient,0
  4022  07E8                     l2144:
  4023  07E8  3001               	movlw	1
  4024  07E9                     u1775:
  4025  07E9  1003               	clrc
  4026  07EA  0CA1               	rrf	___lwdiv@divisor+1,f
  4027  07EB  0CA0               	rrf	___lwdiv@divisor,f
  4028  07EC  3EFF               	addlw	-1
  4029  07ED  1D03               	skipz
  4030  07EE  2FE9               	goto	u1775
  4031  07EF                     l2146:
  4032  07EF  3001               	movlw	1
  4033  07F0  02A4               	subwf	___lwdiv@counter,f
  4034  07F1  1D03               	btfss	3,2
  4035  07F2  2FF4               	goto	u1781
  4036  07F3  2FF5               	goto	u1780
  4037  07F4                     u1781:
  4038  07F4  2FD0               	goto	l2138
  4039  07F5                     u1780:
  4040  07F5                     l2148:
  4041  07F5  0826               	movf	___lwdiv@quotient+1,w
  4042  07F6  00A1               	movwf	?___lwdiv+1
  4043  07F7  0825               	movf	___lwdiv@quotient,w
  4044  07F8  00A0               	movwf	?___lwdiv
  4045  07F9                     l624:
  4046  07F9  0008               	return
  4047  07FA                     __end_of___lwdiv:
  4048                           
  4049                           	psect	text17
  4050  062B                     __ptext17:	
  4051 ;; *************** function ___fltol *****************
  4052 ;; Defined at:
  4053 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fltol.c"
  4054 ;; Parameters:    Size  Location     Type
  4055 ;;  f1              4    0[BANK0 ] unsigned int 
  4056 ;; Auto vars:     Size  Location     Type
  4057 ;;  exp1            1    5[COMMON] unsigned char 
  4058 ;;  sign1           1    4[COMMON] unsigned char 
  4059 ;; Return value:  Size  Location     Type
  4060 ;;                  4    0[BANK0 ] long 
  4061 ;; Registers used:
  4062 ;;		wreg, status,2, status,0
  4063 ;; Tracked objects:
  4064 ;;		On entry : 0/0
  4065 ;;		On exit  : 0/0
  4066 ;;		Unchanged: 0/0
  4067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4068 ;;      Params:         0       4       0       0       0
  4069 ;;      Locals:         2       0       0       0       0
  4070 ;;      Temps:          0       5       0       0       0
  4071 ;;      Totals:         2       9       0       0       0
  4072 ;;Total ram usage:       11 bytes
  4073 ;; Hardware stack levels used: 1
  4074 ;; Hardware stack levels required when called: 2
  4075 ;; This function calls:
  4076 ;;		Nothing
  4077 ;; This function is called by:
  4078 ;;		_main
  4079 ;;		_atualizaLCD
  4080 ;;		_estufaUm
  4081 ;;		_estufaDois
  4082 ;;		_estufaTres
  4083 ;;		_estufaQuatro
  4084 ;; This function uses a non-reentrant model
  4085 ;;
  4086                           
  4087                           
  4088                           ;psect for function ___fltol
  4089  062B                     ___fltol:
  4090  062B                     l2090:	
  4091                           ;incstack = 0
  4092                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  4093                           
  4094  062B  1003               	clrc
  4095  062C  1283               	bcf	3,5	;RP0=0, select bank0
  4096  062D  1303               	bcf	3,6	;RP1=0, select bank0
  4097  062E  0D22               	rlf	___fltol@f1+2,w
  4098  062F  0D23               	rlf	___fltol@f1+3,w
  4099  0630  00A4               	movwf	??___fltol
  4100  0631  0824               	movf	??___fltol,w
  4101  0632  00F5               	movwf	___fltol@exp1
  4102  0633  0875               	movf	___fltol@exp1,w
  4103  0634  1D03               	btfss	3,2
  4104  0635  2E37               	goto	u1621
  4105  0636  2E38               	goto	u1620
  4106  0637                     u1621:
  4107  0637  2E41               	goto	l2096
  4108  0638                     u1620:
  4109  0638                     l2092:
  4110  0638  3000               	movlw	0
  4111  0639  00A3               	movwf	?___fltol+3
  4112  063A  3000               	movlw	0
  4113  063B  00A2               	movwf	?___fltol+2
  4114  063C  3000               	movlw	0
  4115  063D  00A1               	movwf	?___fltol+1
  4116  063E  3000               	movlw	0
  4117  063F  00A0               	movwf	?___fltol
  4118  0640  2EA6               	goto	l538
  4119  0641                     l2096:
  4120  0641  0820               	movf	___fltol@f1,w
  4121  0642  00A4               	movwf	??___fltol
  4122  0643  0821               	movf	___fltol@f1+1,w
  4123  0644  00A5               	movwf	??___fltol+1
  4124  0645  0822               	movf	___fltol@f1+2,w
  4125  0646  00A6               	movwf	??___fltol+2
  4126  0647  0823               	movf	___fltol@f1+3,w
  4127  0648  00A7               	movwf	??___fltol+3
  4128  0649  301F               	movlw	31
  4129  064A                     u1635:
  4130  064A  1003               	clrc
  4131  064B  0CA7               	rrf	??___fltol+3,f
  4132  064C  0CA6               	rrf	??___fltol+2,f
  4133  064D  0CA5               	rrf	??___fltol+1,f
  4134  064E  0CA4               	rrf	??___fltol,f
  4135  064F                     u1630:
  4136  064F  3EFF               	addlw	-1
  4137  0650  1D03               	skipz
  4138  0651  2E4A               	goto	u1635
  4139  0652  0824               	movf	??___fltol,w
  4140  0653  00A8               	movwf	??___fltol+4
  4141  0654  0828               	movf	??___fltol+4,w
  4142  0655  00F4               	movwf	___fltol@sign1
  4143  0656                     l2098:
  4144  0656  17A2               	bsf	___fltol@f1+2,7
  4145  0657                     l2100:
  4146  0657  30FF               	movlw	255
  4147  0658  05A0               	andwf	___fltol@f1,f
  4148  0659  30FF               	movlw	255
  4149  065A  05A1               	andwf	___fltol@f1+1,f
  4150  065B  30FF               	movlw	255
  4151  065C  05A2               	andwf	___fltol@f1+2,f
  4152  065D  3000               	movlw	0
  4153  065E  05A3               	andwf	___fltol@f1+3,f
  4154  065F                     l2102:
  4155  065F  3096               	movlw	150
  4156  0660  02F5               	subwf	___fltol@exp1,f
  4157  0661                     l2104:
  4158  0661  1FF5               	btfss	___fltol@exp1,7
  4159  0662  2E64               	goto	u1641
  4160  0663  2E65               	goto	u1640
  4161  0664                     u1641:
  4162  0664  2E7F               	goto	l2114
  4163  0665                     u1640:
  4164  0665                     l2106:
  4165  0665  0875               	movf	___fltol@exp1,w
  4166  0666  3A80               	xorlw	128
  4167  0667  3E97               	addlw	151
  4168  0668  1803               	skipnc
  4169  0669  2E6B               	goto	u1651
  4170  066A  2E6C               	goto	u1650
  4171  066B                     u1651:
  4172  066B  2E6D               	goto	l2112
  4173  066C                     u1650:
  4174  066C  2E38               	goto	l2092
  4175  066D                     l2112:
  4176  066D  3001               	movlw	1
  4177  066E                     u1665:
  4178  066E  1003               	clrc
  4179  066F  0CA3               	rrf	___fltol@f1+3,f
  4180  0670  0CA2               	rrf	___fltol@f1+2,f
  4181  0671  0CA1               	rrf	___fltol@f1+1,f
  4182  0672  0CA0               	rrf	___fltol@f1,f
  4183  0673  3EFF               	addlw	-1
  4184  0674  1D03               	skipz
  4185  0675  2E6E               	goto	u1665
  4186  0676  3001               	movlw	1
  4187  0677  00A4               	movwf	??___fltol
  4188  0678  0824               	movf	??___fltol,w
  4189  0679  07F5               	addwf	___fltol@exp1,f
  4190  067A  1D03               	btfss	3,2
  4191  067B  2E7D               	goto	u1671
  4192  067C  2E7E               	goto	u1670
  4193  067D                     u1671:
  4194  067D  2E6D               	goto	l2112
  4195  067E                     u1670:
  4196  067E  2E96               	goto	l2122
  4197  067F                     l2114:
  4198  067F  3020               	movlw	32
  4199  0680  0275               	subwf	___fltol@exp1,w
  4200  0681  1C03               	skipc
  4201  0682  2E84               	goto	u1681
  4202  0683  2E85               	goto	u1680
  4203  0684                     u1681:
  4204  0684  2E91               	goto	l545
  4205  0685                     u1680:
  4206  0685  2E38               	goto	l2092
  4207  0686                     l2120:
  4208  0686  3001               	movlw	1
  4209  0687  00A4               	movwf	??___fltol
  4210  0688                     u1695:
  4211  0688  1003               	clrc
  4212  0689  0DA0               	rlf	___fltol@f1,f
  4213  068A  0DA1               	rlf	___fltol@f1+1,f
  4214  068B  0DA2               	rlf	___fltol@f1+2,f
  4215  068C  0DA3               	rlf	___fltol@f1+3,f
  4216  068D  0BA4               	decfsz	??___fltol,f
  4217  068E  2E88               	goto	u1695
  4218  068F  3001               	movlw	1
  4219  0690  02F5               	subwf	___fltol@exp1,f
  4220  0691                     l545:
  4221  0691  0875               	movf	___fltol@exp1,w
  4222  0692  1D03               	btfss	3,2
  4223  0693  2E95               	goto	u1701
  4224  0694  2E96               	goto	u1700
  4225  0695                     u1701:
  4226  0695  2E86               	goto	l2120
  4227  0696                     u1700:
  4228  0696                     l2122:
  4229  0696  0874               	movf	___fltol@sign1,w
  4230  0697  1903               	btfsc	3,2
  4231  0698  2E9A               	goto	u1711
  4232  0699  2E9B               	goto	u1710
  4233  069A                     u1711:
  4234  069A  2EA6               	goto	l548
  4235  069B                     u1710:
  4236  069B                     l2124:
  4237  069B  09A0               	comf	___fltol@f1,f
  4238  069C  09A1               	comf	___fltol@f1+1,f
  4239  069D  09A2               	comf	___fltol@f1+2,f
  4240  069E  09A3               	comf	___fltol@f1+3,f
  4241  069F  0AA0               	incf	___fltol@f1,f
  4242  06A0  1903               	skipnz
  4243  06A1  0AA1               	incf	___fltol@f1+1,f
  4244  06A2  1903               	skipnz
  4245  06A3  0AA2               	incf	___fltol@f1+2,f
  4246  06A4  1903               	skipnz
  4247  06A5  0AA3               	incf	___fltol@f1+3,f
  4248  06A6                     l548:
  4249  06A6                     l538:
  4250  06A6  0008               	return
  4251  06A7                     __end_of___fltol:
  4252                           
  4253                           	psect	text18
  4254  0EC0                     __ptext18:	
  4255 ;; *************** function _Lcd_Write_String *****************
  4256 ;; Defined at:
  4257 ;;		line 97 in file "./lcd.h"
  4258 ;; Parameters:    Size  Location     Type
  4259 ;;  a               1    wreg     PTR unsigned char 
  4260 ;;		 -> atualizaLCD@buffer1(16), atualizaLCD@buffer0(16), 
  4261 ;; Auto vars:     Size  Location     Type
  4262 ;;  a               1    6[BANK0 ] PTR unsigned char 
  4263 ;;		 -> atualizaLCD@buffer1(16), atualizaLCD@buffer0(16), 
  4264 ;;  i               2    4[BANK0 ] int 
  4265 ;; Return value:  Size  Location     Type
  4266 ;;                  1    wreg      void 
  4267 ;; Registers used:
  4268 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4269 ;; Tracked objects:
  4270 ;;		On entry : 0/0
  4271 ;;		On exit  : 0/0
  4272 ;;		Unchanged: 0/0
  4273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4274 ;;      Params:         0       0       0       0       0
  4275 ;;      Locals:         0       3       0       0       0
  4276 ;;      Temps:          0       1       0       0       0
  4277 ;;      Totals:         0       4       0       0       0
  4278 ;;Total ram usage:        4 bytes
  4279 ;; Hardware stack levels used: 1
  4280 ;; Hardware stack levels required when called: 4
  4281 ;; This function calls:
  4282 ;;		_Lcd_Write_Char
  4283 ;; This function is called by:
  4284 ;;		_atualizaLCD
  4285 ;; This function uses a non-reentrant model
  4286 ;;
  4287                           
  4288                           
  4289                           ;psect for function _Lcd_Write_String
  4290  0EC0                     _Lcd_Write_String:
  4291                           
  4292                           ;incstack = 0
  4293                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4294                           ;Lcd_Write_String@a stored from wreg
  4295  0EC0  1283               	bcf	3,5	;RP0=0, select bank0
  4296  0EC1  1303               	bcf	3,6	;RP1=0, select bank0
  4297  0EC2  00A6               	movwf	Lcd_Write_String@a
  4298  0EC3                     l2196:
  4299                           
  4300                           ;./lcd.h: 97: void Lcd_Write_String(char *a);./lcd.h: 98: {;./lcd.h: 99:  int i;;./lcd.h
      +                          : 100:  for(i=0;a[i]!='\0';i++)
  4301  0EC3  01A4               	clrf	Lcd_Write_String@i
  4302  0EC4  01A5               	clrf	Lcd_Write_String@i+1
  4303  0EC5  2ED9               	goto	l2202
  4304  0EC6                     l2198:
  4305                           
  4306                           ;./lcd.h: 101:     Lcd_Write_Char(a[i]);
  4307  0EC6  0824               	movf	Lcd_Write_String@i,w
  4308  0EC7  0726               	addwf	Lcd_Write_String@a,w
  4309  0EC8  00A3               	movwf	??_Lcd_Write_String
  4310  0EC9  0823               	movf	??_Lcd_Write_String,w
  4311  0ECA  0084               	movwf	4
  4312  0ECB  0800               	movf	0,w
  4313  0ECC  120A  158A  278D  120A  158A  	fcall	_Lcd_Write_Char
  4314  0ED1                     l2200:
  4315  0ED1  3001               	movlw	1
  4316  0ED2  1283               	bcf	3,5	;RP0=0, select bank0
  4317  0ED3  1303               	bcf	3,6	;RP1=0, select bank0
  4318  0ED4  07A4               	addwf	Lcd_Write_String@i,f
  4319  0ED5  1803               	skipnc
  4320  0ED6  0AA5               	incf	Lcd_Write_String@i+1,f
  4321  0ED7  3000               	movlw	0
  4322  0ED8  07A5               	addwf	Lcd_Write_String@i+1,f
  4323  0ED9                     l2202:
  4324  0ED9  0824               	movf	Lcd_Write_String@i,w
  4325  0EDA  0726               	addwf	Lcd_Write_String@a,w
  4326  0EDB  00A3               	movwf	??_Lcd_Write_String
  4327  0EDC  0823               	movf	??_Lcd_Write_String,w
  4328  0EDD  0084               	movwf	4
  4329  0EDE  1383               	bcf	3,7	;select IRP bank0
  4330  0EDF  0800               	movf	0,w
  4331  0EE0  1D03               	btfss	3,2
  4332  0EE1  2EE3               	goto	u1891
  4333  0EE2  2EE4               	goto	u1890
  4334  0EE3                     u1891:
  4335  0EE3  2EC6               	goto	l2198
  4336  0EE4                     u1890:
  4337  0EE4                     l141:
  4338  0EE4  0008               	return
  4339  0EE5                     __end_of_Lcd_Write_String:
  4340                           
  4341                           	psect	text19
  4342  0F8D                     __ptext19:	
  4343 ;; *************** function _Lcd_Write_Char *****************
  4344 ;; Defined at:
  4345 ;;		line 81 in file "./lcd.h"
  4346 ;; Parameters:    Size  Location     Type
  4347 ;;  a               1    wreg     unsigned char 
  4348 ;; Auto vars:     Size  Location     Type
  4349 ;;  a               1    2[BANK0 ] unsigned char 
  4350 ;;  y               1    1[BANK0 ] unsigned char 
  4351 ;;  temp            1    0[BANK0 ] unsigned char 
  4352 ;; Return value:  Size  Location     Type
  4353 ;;                  1    wreg      void 
  4354 ;; Registers used:
  4355 ;;		wreg, status,2, status,0, pclath, cstack
  4356 ;; Tracked objects:
  4357 ;;		On entry : 0/0
  4358 ;;		On exit  : 0/0
  4359 ;;		Unchanged: 0/0
  4360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4361 ;;      Params:         0       0       0       0       0
  4362 ;;      Locals:         0       3       0       0       0
  4363 ;;      Temps:          1       0       0       0       0
  4364 ;;      Totals:         1       3       0       0       0
  4365 ;;Total ram usage:        4 bytes
  4366 ;; Hardware stack levels used: 1
  4367 ;; Hardware stack levels required when called: 3
  4368 ;; This function calls:
  4369 ;;		_Lcd_Port
  4370 ;; This function is called by:
  4371 ;;		_Lcd_Write_String
  4372 ;; This function uses a non-reentrant model
  4373 ;;
  4374                           
  4375                           
  4376                           ;psect for function _Lcd_Write_Char
  4377  0F8D                     _Lcd_Write_Char:
  4378                           
  4379                           ;incstack = 0
  4380                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  4381                           ;Lcd_Write_Char@a stored from wreg
  4382  0F8D  1283               	bcf	3,5	;RP0=0, select bank0
  4383  0F8E  1303               	bcf	3,6	;RP1=0, select bank0
  4384  0F8F  00A2               	movwf	Lcd_Write_Char@a
  4385  0F90                     l2070:
  4386                           
  4387                           ;./lcd.h: 81: void Lcd_Write_Char(char a);./lcd.h: 82: {;./lcd.h: 83:    char temp,y;;./
      +                          lcd.h: 84:    temp = a&0x0F;
  4388  0F90  0822               	movf	Lcd_Write_Char@a,w
  4389  0F91  390F               	andlw	15
  4390  0F92  00F5               	movwf	??_Lcd_Write_Char
  4391  0F93  0875               	movf	??_Lcd_Write_Char,w
  4392  0F94  00A0               	movwf	Lcd_Write_Char@temp
  4393                           
  4394                           ;./lcd.h: 85:    y = a&0xF0;
  4395  0F95  0822               	movf	Lcd_Write_Char@a,w
  4396  0F96  39F0               	andlw	240
  4397  0F97  00F5               	movwf	??_Lcd_Write_Char
  4398  0F98  0875               	movf	??_Lcd_Write_Char,w
  4399  0F99  00A1               	movwf	Lcd_Write_Char@y
  4400  0F9A                     l2072:
  4401                           
  4402                           ;./lcd.h: 86:    RB2 = 1;
  4403  0F9A  1506               	bsf	6,2	;volatile
  4404  0F9B                     l2074:
  4405                           
  4406                           ;./lcd.h: 87:    Lcd_Port(y>>4);
  4407  0F9B  0821               	movf	Lcd_Write_Char@y,w
  4408  0F9C  00F5               	movwf	??_Lcd_Write_Char
  4409  0F9D  3004               	movlw	4
  4410  0F9E                     u1615:
  4411  0F9E  1003               	clrc
  4412  0F9F  0CF5               	rrf	??_Lcd_Write_Char,f
  4413  0FA0  3EFF               	addlw	-1
  4414  0FA1  1D03               	skipz
  4415  0FA2  2F9E               	goto	u1615
  4416  0FA3  0875               	movf	??_Lcd_Write_Char,w
  4417  0FA4  120A  158A  269E  120A  158A  	fcall	_Lcd_Port
  4418  0FA9                     l2076:
  4419                           
  4420                           ;./lcd.h: 88:    RB1 = 1;
  4421  0FA9  1283               	bcf	3,5	;RP0=0, select bank0
  4422  0FAA  1303               	bcf	3,6	;RP1=0, select bank0
  4423  0FAB  1486               	bsf	6,1	;volatile
  4424  0FAC                     l2078:
  4425                           
  4426                           ;./lcd.h: 89:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  4427  0FAC  300D               	movlw	13
  4428  0FAD  00F5               	movwf	??_Lcd_Write_Char
  4429  0FAE                     u2437:
  4430  0FAE  0BF5               	decfsz	??_Lcd_Write_Char,f
  4431  0FAF  2FAE               	goto	u2437
  4432  0FB0                     l2080:
  4433                           
  4434                           ;./lcd.h: 90:    RB1 = 0;
  4435  0FB0  1283               	bcf	3,5	;RP0=0, select bank0
  4436  0FB1  1303               	bcf	3,6	;RP1=0, select bank0
  4437  0FB2  1086               	bcf	6,1	;volatile
  4438  0FB3                     l2082:
  4439                           
  4440                           ;./lcd.h: 91:    Lcd_Port(temp);
  4441  0FB3  0820               	movf	Lcd_Write_Char@temp,w
  4442  0FB4  120A  158A  269E  120A  158A  	fcall	_Lcd_Port
  4443  0FB9                     l2084:
  4444                           
  4445                           ;./lcd.h: 92:    RB1 = 1;
  4446  0FB9  1283               	bcf	3,5	;RP0=0, select bank0
  4447  0FBA  1303               	bcf	3,6	;RP1=0, select bank0
  4448  0FBB  1486               	bsf	6,1	;volatile
  4449  0FBC                     l2086:
  4450                           
  4451                           ;./lcd.h: 93:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  4452  0FBC  300D               	movlw	13
  4453  0FBD  00F5               	movwf	??_Lcd_Write_Char
  4454  0FBE                     u2447:
  4455  0FBE  0BF5               	decfsz	??_Lcd_Write_Char,f
  4456  0FBF  2FBE               	goto	u2447
  4457  0FC0                     l2088:
  4458                           
  4459                           ;./lcd.h: 94:    RB1 = 0;
  4460  0FC0  1283               	bcf	3,5	;RP0=0, select bank0
  4461  0FC1  1303               	bcf	3,6	;RP1=0, select bank0
  4462  0FC2  1086               	bcf	6,1	;volatile
  4463  0FC3                     l135:
  4464  0FC3  0008               	return
  4465  0FC4                     __end_of_Lcd_Write_Char:
  4466                           
  4467                           	psect	text20
  4468  070A                     __ptext20:	
  4469 ;; *************** function _Lcd_Set_Cursor *****************
  4470 ;; Defined at:
  4471 ;;		line 41 in file "./lcd.h"
  4472 ;; Parameters:    Size  Location     Type
  4473 ;;  a               1    wreg     unsigned char 
  4474 ;;  b               1    2[BANK0 ] unsigned char 
  4475 ;; Auto vars:     Size  Location     Type
  4476 ;;  a               1    5[BANK0 ] unsigned char 
  4477 ;;  temp            1    8[BANK0 ] unsigned char 
  4478 ;;  y               1    7[BANK0 ] unsigned char 
  4479 ;;  z               1    6[BANK0 ] unsigned char 
  4480 ;; Return value:  Size  Location     Type
  4481 ;;                  1    wreg      void 
  4482 ;; Registers used:
  4483 ;;		wreg, status,2, status,0, pclath, cstack
  4484 ;; Tracked objects:
  4485 ;;		On entry : 0/0
  4486 ;;		On exit  : 0/0
  4487 ;;		Unchanged: 0/0
  4488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4489 ;;      Params:         0       1       0       0       0
  4490 ;;      Locals:         0       4       0       0       0
  4491 ;;      Temps:          0       2       0       0       0
  4492 ;;      Totals:         0       7       0       0       0
  4493 ;;Total ram usage:        7 bytes
  4494 ;; Hardware stack levels used: 1
  4495 ;; Hardware stack levels required when called: 4
  4496 ;; This function calls:
  4497 ;;		_Lcd_Cmd
  4498 ;; This function is called by:
  4499 ;;		_atualizaLCD
  4500 ;; This function uses a non-reentrant model
  4501 ;;
  4502                           
  4503                           
  4504                           ;psect for function _Lcd_Set_Cursor
  4505  070A                     _Lcd_Set_Cursor:
  4506                           
  4507                           ;incstack = 0
  4508                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  4509                           ;Lcd_Set_Cursor@a stored from wreg
  4510  070A  1283               	bcf	3,5	;RP0=0, select bank0
  4511  070B  1303               	bcf	3,6	;RP1=0, select bank0
  4512  070C  00A5               	movwf	Lcd_Set_Cursor@a
  4513  070D                     l2176:
  4514                           
  4515                           ;./lcd.h: 41: void Lcd_Set_Cursor(char a, char b);./lcd.h: 42: {;./lcd.h: 43:  char temp
      +                          ,z,y;;./lcd.h: 44:  if(a == 1)
  4516  070D  0325               	decf	Lcd_Set_Cursor@a,w
  4517  070E  1D03               	btfss	3,2
  4518  070F  2F11               	goto	u1851
  4519  0710  2F12               	goto	u1850
  4520  0711                     u1851:
  4521  0711  2F37               	goto	l2186
  4522  0712                     u1850:
  4523  0712                     l2178:
  4524                           
  4525                           ;./lcd.h: 45:  {;./lcd.h: 46:    temp = 0x80 + b - 1;
  4526  0712  0822               	movf	Lcd_Set_Cursor@b,w
  4527  0713  3E7F               	addlw	127
  4528  0714  00A3               	movwf	??_Lcd_Set_Cursor
  4529  0715  0823               	movf	??_Lcd_Set_Cursor,w
  4530  0716  00A8               	movwf	Lcd_Set_Cursor@temp
  4531                           
  4532                           ;./lcd.h: 47:   z = temp>>4;
  4533  0717  0828               	movf	Lcd_Set_Cursor@temp,w
  4534  0718  00A3               	movwf	??_Lcd_Set_Cursor
  4535  0719  3004               	movlw	4
  4536  071A                     u1865:
  4537  071A  1003               	clrc
  4538  071B  0CA3               	rrf	??_Lcd_Set_Cursor,f
  4539  071C  3EFF               	addlw	-1
  4540  071D  1D03               	skipz
  4541  071E  2F1A               	goto	u1865
  4542  071F  0823               	movf	??_Lcd_Set_Cursor,w
  4543  0720  00A4               	movwf	??_Lcd_Set_Cursor+1
  4544  0721  0824               	movf	??_Lcd_Set_Cursor+1,w
  4545  0722  00A6               	movwf	Lcd_Set_Cursor@z
  4546  0723                     l2180:
  4547                           
  4548                           ;./lcd.h: 48:   y = temp & 0x0F;
  4549  0723  0828               	movf	Lcd_Set_Cursor@temp,w
  4550  0724  390F               	andlw	15
  4551  0725  00A3               	movwf	??_Lcd_Set_Cursor
  4552  0726  0823               	movf	??_Lcd_Set_Cursor,w
  4553  0727  00A7               	movwf	Lcd_Set_Cursor@y
  4554  0728                     l2182:
  4555                           
  4556                           ;./lcd.h: 49:   Lcd_Cmd(z);
  4557  0728  0826               	movf	Lcd_Set_Cursor@z,w
  4558  0729  120A  158A  2601  120A  118A  	fcall	_Lcd_Cmd
  4559  072E                     l2184:
  4560                           
  4561                           ;./lcd.h: 50:   Lcd_Cmd(y);
  4562  072E  1283               	bcf	3,5	;RP0=0, select bank0
  4563  072F  1303               	bcf	3,6	;RP1=0, select bank0
  4564  0730  0827               	movf	Lcd_Set_Cursor@y,w
  4565  0731  120A  158A  2601  120A  118A  	fcall	_Lcd_Cmd
  4566                           
  4567                           ;./lcd.h: 51:  }
  4568  0736  2F61               	goto	l129
  4569  0737                     l2186:
  4570  0737  3002               	movlw	2
  4571  0738  0625               	xorwf	Lcd_Set_Cursor@a,w
  4572  0739  1D03               	btfss	3,2
  4573  073A  2F3C               	goto	u1871
  4574  073B  2F3D               	goto	u1870
  4575  073C                     u1871:
  4576  073C  2F61               	goto	l129
  4577  073D                     u1870:
  4578  073D                     l2188:
  4579                           
  4580                           ;./lcd.h: 53:  {;./lcd.h: 54:   temp = 0xC0 + b - 1;
  4581  073D  0822               	movf	Lcd_Set_Cursor@b,w
  4582  073E  3EBF               	addlw	191
  4583  073F  00A3               	movwf	??_Lcd_Set_Cursor
  4584  0740  0823               	movf	??_Lcd_Set_Cursor,w
  4585  0741  00A8               	movwf	Lcd_Set_Cursor@temp
  4586                           
  4587                           ;./lcd.h: 55:   z = temp>>4;
  4588  0742  0828               	movf	Lcd_Set_Cursor@temp,w
  4589  0743  00A3               	movwf	??_Lcd_Set_Cursor
  4590  0744  3004               	movlw	4
  4591  0745                     u1885:
  4592  0745  1003               	clrc
  4593  0746  0CA3               	rrf	??_Lcd_Set_Cursor,f
  4594  0747  3EFF               	addlw	-1
  4595  0748  1D03               	skipz
  4596  0749  2F45               	goto	u1885
  4597  074A  0823               	movf	??_Lcd_Set_Cursor,w
  4598  074B  00A4               	movwf	??_Lcd_Set_Cursor+1
  4599  074C  0824               	movf	??_Lcd_Set_Cursor+1,w
  4600  074D  00A6               	movwf	Lcd_Set_Cursor@z
  4601  074E                     l2190:
  4602                           
  4603                           ;./lcd.h: 56:   y = temp & 0x0F;
  4604  074E  0828               	movf	Lcd_Set_Cursor@temp,w
  4605  074F  390F               	andlw	15
  4606  0750  00A3               	movwf	??_Lcd_Set_Cursor
  4607  0751  0823               	movf	??_Lcd_Set_Cursor,w
  4608  0752  00A7               	movwf	Lcd_Set_Cursor@y
  4609  0753                     l2192:
  4610                           
  4611                           ;./lcd.h: 57:   Lcd_Cmd(z);
  4612  0753  0826               	movf	Lcd_Set_Cursor@z,w
  4613  0754  120A  158A  2601  120A  118A  	fcall	_Lcd_Cmd
  4614  0759                     l2194:
  4615                           
  4616                           ;./lcd.h: 58:   Lcd_Cmd(y);
  4617  0759  1283               	bcf	3,5	;RP0=0, select bank0
  4618  075A  1303               	bcf	3,6	;RP1=0, select bank0
  4619  075B  0827               	movf	Lcd_Set_Cursor@y,w
  4620  075C  120A  158A  2601  120A  118A  	fcall	_Lcd_Cmd
  4621  0761                     l129:
  4622  0761  0008               	return
  4623  0762                     __end_of_Lcd_Set_Cursor:
  4624                           
  4625                           	psect	text21
  4626  0DE1                     __ptext21:	
  4627 ;; *************** function _Lcd_Clear *****************
  4628 ;; Defined at:
  4629 ;;		line 35 in file "./lcd.h"
  4630 ;; Parameters:    Size  Location     Type
  4631 ;;		None
  4632 ;; Auto vars:     Size  Location     Type
  4633 ;;		None
  4634 ;; Return value:  Size  Location     Type
  4635 ;;                  1    wreg      void 
  4636 ;; Registers used:
  4637 ;;		wreg, status,2, status,0, pclath, cstack
  4638 ;; Tracked objects:
  4639 ;;		On entry : 0/0
  4640 ;;		On exit  : 0/0
  4641 ;;		Unchanged: 0/0
  4642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4643 ;;      Params:         0       0       0       0       0
  4644 ;;      Locals:         0       0       0       0       0
  4645 ;;      Temps:          0       0       0       0       0
  4646 ;;      Totals:         0       0       0       0       0
  4647 ;;Total ram usage:        0 bytes
  4648 ;; Hardware stack levels used: 1
  4649 ;; Hardware stack levels required when called: 4
  4650 ;; This function calls:
  4651 ;;		_Lcd_Cmd
  4652 ;; This function is called by:
  4653 ;;		_atualizaLCD
  4654 ;; This function uses a non-reentrant model
  4655 ;;
  4656                           
  4657                           
  4658                           ;psect for function _Lcd_Clear
  4659  0DE1                     _Lcd_Clear:
  4660  0DE1                     l2174:	
  4661                           ;incstack = 0
  4662                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  4663                           
  4664                           
  4665                           ;./lcd.h: 37:  Lcd_Cmd(0);
  4666  0DE1  3000               	movlw	0
  4667  0DE2  120A  158A  2601  120A  158A  	fcall	_Lcd_Cmd
  4668                           
  4669                           ;./lcd.h: 38:  Lcd_Cmd(1);
  4670  0DE7  3001               	movlw	1
  4671  0DE8  120A  158A  2601  120A  158A  	fcall	_Lcd_Cmd
  4672  0DED                     l123:
  4673  0DED  0008               	return
  4674  0DEE                     __end_of_Lcd_Clear:
  4675                           
  4676                           	psect	text22
  4677  06A7                     __ptext22:	
  4678 ;; *************** function _Lcd_Init *****************
  4679 ;; Defined at:
  4680 ;;		line 62 in file "./lcd.h"
  4681 ;; Parameters:    Size  Location     Type
  4682 ;;		None
  4683 ;; Auto vars:     Size  Location     Type
  4684 ;;		None
  4685 ;; Return value:  Size  Location     Type
  4686 ;;                  1    wreg      void 
  4687 ;; Registers used:
  4688 ;;		wreg, status,2, status,0, pclath, cstack
  4689 ;; Tracked objects:
  4690 ;;		On entry : 0/0
  4691 ;;		On exit  : 0/0
  4692 ;;		Unchanged: 0/0
  4693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4694 ;;      Params:         0       0       0       0       0
  4695 ;;      Locals:         0       0       0       0       0
  4696 ;;      Temps:          0       2       0       0       0
  4697 ;;      Totals:         0       2       0       0       0
  4698 ;;Total ram usage:        2 bytes
  4699 ;; Hardware stack levels used: 1
  4700 ;; Hardware stack levels required when called: 4
  4701 ;; This function calls:
  4702 ;;		_Lcd_Cmd
  4703 ;;		_Lcd_Port
  4704 ;; This function is called by:
  4705 ;;		_main
  4706 ;; This function uses a non-reentrant model
  4707 ;;
  4708                           
  4709                           
  4710                           ;psect for function _Lcd_Init
  4711  06A7                     _Lcd_Init:
  4712  06A7                     l2346:	
  4713                           ;incstack = 0
  4714                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  4715                           
  4716                           
  4717                           ;./lcd.h: 64:   Lcd_Port(0x00);
  4718  06A7  3000               	movlw	0
  4719  06A8  120A  158A  269E  120A  118A  	fcall	_Lcd_Port
  4720  06AD                     l2348:
  4721                           
  4722                           ;./lcd.h: 65:    _delay((unsigned long)((20)*(4000000/4000.0)));
  4723  06AD  301A               	movlw	26
  4724  06AE  1283               	bcf	3,5	;RP0=0, select bank0
  4725  06AF  1303               	bcf	3,6	;RP1=0, select bank0
  4726  06B0  00A3               	movwf	??_Lcd_Init+1
  4727  06B1  30F7               	movlw	247
  4728  06B2  00A2               	movwf	??_Lcd_Init
  4729  06B3                     u2457:
  4730  06B3  0BA2               	decfsz	??_Lcd_Init,f
  4731  06B4  2EB3               	goto	u2457
  4732  06B5  0BA3               	decfsz	??_Lcd_Init+1,f
  4733  06B6  2EB3               	goto	u2457
  4734  06B7  2EB8               	nop2
  4735  06B8                     l2350:
  4736                           
  4737                           ;./lcd.h: 66:   Lcd_Cmd(0x03);
  4738  06B8  3003               	movlw	3
  4739  06B9  120A  158A  2601  120A  118A  	fcall	_Lcd_Cmd
  4740                           
  4741                           ;./lcd.h: 67:  _delay((unsigned long)((5)*(4000000/4000.0)));
  4742  06BE  3007               	movlw	7
  4743  06BF  1283               	bcf	3,5	;RP0=0, select bank0
  4744  06C0  1303               	bcf	3,6	;RP1=0, select bank0
  4745  06C1  00A3               	movwf	??_Lcd_Init+1
  4746  06C2  307C               	movlw	124
  4747  06C3  00A2               	movwf	??_Lcd_Init
  4748  06C4                     u2467:
  4749  06C4  0BA2               	decfsz	??_Lcd_Init,f
  4750  06C5  2EC4               	goto	u2467
  4751  06C6  0BA3               	decfsz	??_Lcd_Init+1,f
  4752  06C7  2EC4               	goto	u2467
  4753  06C8  0000               	nop
  4754  06C9                     l2352:
  4755                           
  4756                           ;./lcd.h: 68:   Lcd_Cmd(0x03);
  4757  06C9  3003               	movlw	3
  4758  06CA  120A  158A  2601  120A  118A  	fcall	_Lcd_Cmd
  4759  06CF                     l2354:
  4760                           
  4761                           ;./lcd.h: 69:  _delay((unsigned long)((11)*(4000000/4000.0)));
  4762  06CF  300F               	movlw	15
  4763  06D0  1283               	bcf	3,5	;RP0=0, select bank0
  4764  06D1  1303               	bcf	3,6	;RP1=0, select bank0
  4765  06D2  00A3               	movwf	??_Lcd_Init+1
  4766  06D3  3047               	movlw	71
  4767  06D4  00A2               	movwf	??_Lcd_Init
  4768  06D5                     u2477:
  4769  06D5  0BA2               	decfsz	??_Lcd_Init,f
  4770  06D6  2ED5               	goto	u2477
  4771  06D7  0BA3               	decfsz	??_Lcd_Init+1,f
  4772  06D8  2ED5               	goto	u2477
  4773                           
  4774                           ;./lcd.h: 70:   Lcd_Cmd(0x03);
  4775  06D9  3003               	movlw	3
  4776  06DA  120A  158A  2601  120A  118A  	fcall	_Lcd_Cmd
  4777                           
  4778                           ;./lcd.h: 72:   Lcd_Cmd(0x02);
  4779  06DF  3002               	movlw	2
  4780  06E0  120A  158A  2601  120A  118A  	fcall	_Lcd_Cmd
  4781                           
  4782                           ;./lcd.h: 73:   Lcd_Cmd(0x02);
  4783  06E5  3002               	movlw	2
  4784  06E6  120A  158A  2601  120A  118A  	fcall	_Lcd_Cmd
  4785                           
  4786                           ;./lcd.h: 74:   Lcd_Cmd(0x08);
  4787  06EB  3008               	movlw	8
  4788  06EC  120A  158A  2601  120A  118A  	fcall	_Lcd_Cmd
  4789                           
  4790                           ;./lcd.h: 75:   Lcd_Cmd(0x00);
  4791  06F1  3000               	movlw	0
  4792  06F2  120A  158A  2601  120A  118A  	fcall	_Lcd_Cmd
  4793                           
  4794                           ;./lcd.h: 76:   Lcd_Cmd(0x0C);
  4795  06F7  300C               	movlw	12
  4796  06F8  120A  158A  2601  120A  118A  	fcall	_Lcd_Cmd
  4797                           
  4798                           ;./lcd.h: 77:   Lcd_Cmd(0x00);
  4799  06FD  3000               	movlw	0
  4800  06FE  120A  158A  2601  120A  118A  	fcall	_Lcd_Cmd
  4801                           
  4802                           ;./lcd.h: 78:   Lcd_Cmd(0x06);
  4803  0703  3006               	movlw	6
  4804  0704  120A  158A  2601  120A  118A  	fcall	_Lcd_Cmd
  4805  0709                     l132:
  4806  0709  0008               	return
  4807  070A                     __end_of_Lcd_Init:
  4808                           
  4809                           	psect	text23
  4810  0E01                     __ptext23:	
  4811 ;; *************** function _Lcd_Cmd *****************
  4812 ;; Defined at:
  4813 ;;		line 26 in file "./lcd.h"
  4814 ;; Parameters:    Size  Location     Type
  4815 ;;  a               1    wreg     unsigned char 
  4816 ;; Auto vars:     Size  Location     Type
  4817 ;;  a               1    5[COMMON] unsigned char 
  4818 ;; Return value:  Size  Location     Type
  4819 ;;                  1    wreg      void 
  4820 ;; Registers used:
  4821 ;;		wreg, status,2, status,0, pclath, cstack
  4822 ;; Tracked objects:
  4823 ;;		On entry : 0/0
  4824 ;;		On exit  : 0/0
  4825 ;;		Unchanged: 0/0
  4826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4827 ;;      Params:         0       0       0       0       0
  4828 ;;      Locals:         1       0       0       0       0
  4829 ;;      Temps:          0       2       0       0       0
  4830 ;;      Totals:         1       2       0       0       0
  4831 ;;Total ram usage:        3 bytes
  4832 ;; Hardware stack levels used: 1
  4833 ;; Hardware stack levels required when called: 3
  4834 ;; This function calls:
  4835 ;;		_Lcd_Port
  4836 ;; This function is called by:
  4837 ;;		_Lcd_Clear
  4838 ;;		_Lcd_Set_Cursor
  4839 ;;		_Lcd_Init
  4840 ;;		_Lcd_Shift_Right
  4841 ;;		_Lcd_Shift_Left
  4842 ;; This function uses a non-reentrant model
  4843 ;;
  4844                           
  4845                           
  4846                           ;psect for function _Lcd_Cmd
  4847  0E01                     _Lcd_Cmd:
  4848                           
  4849                           ;incstack = 0
  4850                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  4851                           ;Lcd_Cmd@a stored from wreg
  4852  0E01  00F5               	movwf	Lcd_Cmd@a
  4853  0E02                     l2060:
  4854                           
  4855                           ;./lcd.h: 26: void Lcd_Cmd(char a);./lcd.h: 27: {;./lcd.h: 28:  RB2 = 0;
  4856  0E02  1283               	bcf	3,5	;RP0=0, select bank0
  4857  0E03  1303               	bcf	3,6	;RP1=0, select bank0
  4858  0E04  1106               	bcf	6,2	;volatile
  4859  0E05                     l2062:
  4860                           
  4861                           ;./lcd.h: 29:  Lcd_Port(a);
  4862  0E05  0875               	movf	Lcd_Cmd@a,w
  4863  0E06  120A  158A  269E  120A  158A  	fcall	_Lcd_Port
  4864  0E0B                     l2064:
  4865                           
  4866                           ;./lcd.h: 30:  RB1 = 1;
  4867  0E0B  1283               	bcf	3,5	;RP0=0, select bank0
  4868  0E0C  1303               	bcf	3,6	;RP1=0, select bank0
  4869  0E0D  1486               	bsf	6,1	;volatile
  4870  0E0E                     l2066:
  4871                           
  4872                           ;./lcd.h: 31:         _delay((unsigned long)((4)*(4000000/4000.0)));
  4873  0E0E  3006               	movlw	6
  4874  0E0F  1283               	bcf	3,5	;RP0=0, select bank0
  4875  0E10  1303               	bcf	3,6	;RP1=0, select bank0
  4876  0E11  00A1               	movwf	??_Lcd_Cmd+1
  4877  0E12  302F               	movlw	47
  4878  0E13  00A0               	movwf	??_Lcd_Cmd
  4879  0E14                     u2487:
  4880  0E14  0BA0               	decfsz	??_Lcd_Cmd,f
  4881  0E15  2E14               	goto	u2487
  4882  0E16  0BA1               	decfsz	??_Lcd_Cmd+1,f
  4883  0E17  2E14               	goto	u2487
  4884  0E18  2E19               	nop2
  4885  0E19                     l2068:
  4886                           
  4887                           ;./lcd.h: 32:         RB1 = 0;
  4888  0E19  1283               	bcf	3,5	;RP0=0, select bank0
  4889  0E1A  1303               	bcf	3,6	;RP1=0, select bank0
  4890  0E1B  1086               	bcf	6,1	;volatile
  4891  0E1C                     l120:
  4892  0E1C  0008               	return
  4893  0E1D                     __end_of_Lcd_Cmd:
  4894                           
  4895                           	psect	text24
  4896  0E9E                     __ptext24:	
  4897 ;; *************** function _Lcd_Port *****************
  4898 ;; Defined at:
  4899 ;;		line 4 in file "./lcd.h"
  4900 ;; Parameters:    Size  Location     Type
  4901 ;;  a               1    wreg     unsigned char 
  4902 ;; Auto vars:     Size  Location     Type
  4903 ;;  a               1    4[COMMON] unsigned char 
  4904 ;; Return value:  Size  Location     Type
  4905 ;;                  1    wreg      void 
  4906 ;; Registers used:
  4907 ;;		wreg
  4908 ;; Tracked objects:
  4909 ;;		On entry : 0/0
  4910 ;;		On exit  : 0/0
  4911 ;;		Unchanged: 0/0
  4912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4913 ;;      Params:         0       0       0       0       0
  4914 ;;      Locals:         1       0       0       0       0
  4915 ;;      Temps:          0       0       0       0       0
  4916 ;;      Totals:         1       0       0       0       0
  4917 ;;Total ram usage:        1 bytes
  4918 ;; Hardware stack levels used: 1
  4919 ;; Hardware stack levels required when called: 2
  4920 ;; This function calls:
  4921 ;;		Nothing
  4922 ;; This function is called by:
  4923 ;;		_Lcd_Cmd
  4924 ;;		_Lcd_Init
  4925 ;;		_Lcd_Write_Char
  4926 ;; This function uses a non-reentrant model
  4927 ;;
  4928                           
  4929                           
  4930                           ;psect for function _Lcd_Port
  4931  0E9E                     _Lcd_Port:
  4932                           
  4933                           ;incstack = 0
  4934                           ; Regs used in _Lcd_Port: [wreg]
  4935                           ;Lcd_Port@a stored from wreg
  4936  0E9E  00F4               	movwf	Lcd_Port@a
  4937  0E9F                     l2050:
  4938                           
  4939                           ;./lcd.h: 4: void Lcd_Port(char a);./lcd.h: 5: {;./lcd.h: 6:  if(a & 1)
  4940  0E9F  1C74               	btfss	Lcd_Port@a,0
  4941  0EA0  2EA2               	goto	u1571
  4942  0EA1  2EA3               	goto	u1570
  4943  0EA2                     u1571:
  4944  0EA2  2EA7               	goto	l109
  4945  0EA3                     u1570:
  4946  0EA3                     l2052:
  4947                           
  4948                           ;./lcd.h: 7:   RB4 = 1;
  4949  0EA3  1283               	bcf	3,5	;RP0=0, select bank0
  4950  0EA4  1303               	bcf	3,6	;RP1=0, select bank0
  4951  0EA5  1606               	bsf	6,4	;volatile
  4952  0EA6  2EAA               	goto	l110
  4953  0EA7                     l109:	
  4954                           ;./lcd.h: 8:  else
  4955                           
  4956                           
  4957                           ;./lcd.h: 9:   RB4 = 0;
  4958  0EA7  1283               	bcf	3,5	;RP0=0, select bank0
  4959  0EA8  1303               	bcf	3,6	;RP1=0, select bank0
  4960  0EA9  1206               	bcf	6,4	;volatile
  4961  0EAA                     l110:
  4962                           
  4963                           ;./lcd.h: 11:  if(a & 2)
  4964  0EAA  1CF4               	btfss	Lcd_Port@a,1
  4965  0EAB  2EAD               	goto	u1581
  4966  0EAC  2EAE               	goto	u1580
  4967  0EAD                     u1581:
  4968  0EAD  2EB0               	goto	l111
  4969  0EAE                     u1580:
  4970  0EAE                     l2054:
  4971                           
  4972                           ;./lcd.h: 12:   RB5 = 1;
  4973  0EAE  1686               	bsf	6,5	;volatile
  4974  0EAF  2EB1               	goto	l112
  4975  0EB0                     l111:	
  4976                           ;./lcd.h: 13:  else
  4977                           
  4978                           
  4979                           ;./lcd.h: 14:   RB5 = 0;
  4980  0EB0  1286               	bcf	6,5	;volatile
  4981  0EB1                     l112:
  4982                           
  4983                           ;./lcd.h: 16:  if(a & 4)
  4984  0EB1  1D74               	btfss	Lcd_Port@a,2
  4985  0EB2  2EB4               	goto	u1591
  4986  0EB3  2EB5               	goto	u1590
  4987  0EB4                     u1591:
  4988  0EB4  2EB7               	goto	l113
  4989  0EB5                     u1590:
  4990  0EB5                     l2056:
  4991                           
  4992                           ;./lcd.h: 17:   RB6 = 1;
  4993  0EB5  1706               	bsf	6,6	;volatile
  4994  0EB6  2EB8               	goto	l114
  4995  0EB7                     l113:	
  4996                           ;./lcd.h: 18:  else
  4997                           
  4998                           
  4999                           ;./lcd.h: 19:   RB6 = 0;
  5000  0EB7  1306               	bcf	6,6	;volatile
  5001  0EB8                     l114:
  5002                           
  5003                           ;./lcd.h: 21:  if(a & 8)
  5004  0EB8  1DF4               	btfss	Lcd_Port@a,3
  5005  0EB9  2EBB               	goto	u1601
  5006  0EBA  2EBC               	goto	u1600
  5007  0EBB                     u1601:
  5008  0EBB  2EBE               	goto	l115
  5009  0EBC                     u1600:
  5010  0EBC                     l2058:
  5011                           
  5012                           ;./lcd.h: 22:   RB7 = 1;
  5013  0EBC  1786               	bsf	6,7	;volatile
  5014  0EBD  2EBF               	goto	l117
  5015  0EBE                     l115:	
  5016                           ;./lcd.h: 23:  else
  5017                           
  5018                           
  5019                           ;./lcd.h: 24:   RB7 = 0;
  5020  0EBE  1386               	bcf	6,7	;volatile
  5021  0EBF                     l117:
  5022  0EBF  0008               	return
  5023  0EC0                     __end_of_Lcd_Port:
  5024                           
  5025                           	psect	text25
  5026  0F31                     __ptext25:	
  5027 ;; *************** function _TrataINT *****************
  5028 ;; Defined at:
  5029 ;;		line 78 in file "main.c"
  5030 ;; Parameters:    Size  Location     Type
  5031 ;;		None
  5032 ;; Auto vars:     Size  Location     Type
  5033 ;;		None
  5034 ;; Return value:  Size  Location     Type
  5035 ;;                  1    wreg      void 
  5036 ;; Registers used:
  5037 ;;		wreg, status,2, status,0, pclath, cstack
  5038 ;; Tracked objects:
  5039 ;;		On entry : 0/0
  5040 ;;		On exit  : 0/0
  5041 ;;		Unchanged: 0/0
  5042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5043 ;;      Params:         0       0       0       0       0
  5044 ;;      Locals:         0       0       0       0       0
  5045 ;;      Temps:          2       0       0       0       0
  5046 ;;      Totals:         2       0       0       0       0
  5047 ;;Total ram usage:        2 bytes
  5048 ;; Hardware stack levels used: 1
  5049 ;; Hardware stack levels required when called: 1
  5050 ;; This function calls:
  5051 ;;		i1_recolheTela
  5052 ;; This function is called by:
  5053 ;;		Interrupt level 1
  5054 ;; This function uses a non-reentrant model
  5055 ;;
  5056                           
  5057                           
  5058                           ;psect for function _TrataINT
  5059  0F31                     _TrataINT:
  5060  0F31                     i1l1432:
  5061                           
  5062                           ;main.c: 80:     if(INTF == 1)
  5063  0F31  1C8B               	btfss	11,1	;volatile
  5064  0F32  2F34               	goto	u78_21
  5065  0F33  2F35               	goto	u78_20
  5066  0F34                     u78_21:
  5067  0F34  2F44               	goto	i1l182
  5068  0F35                     u78_20:
  5069  0F35  2F3C               	goto	i1l1438
  5070  0F36                     i1l184:
  5071  0F36  0064               	clrwdt	;# 
  5072  0F37                     i1l1436:
  5073                           
  5074                           ;main.c: 85:             recolheTela();
  5075  0F37  120A  158A  263B  120A  158A  	fcall	i1_recolheTela
  5076  0F3C                     i1l1438:
  5077                           
  5078                           ;main.c: 82:         while(RB0 == 1)
  5079  0F3C  1283               	bcf	3,5	;RP0=0, select bank0
  5080  0F3D  1303               	bcf	3,6	;RP1=0, select bank0
  5081  0F3E  1806               	btfsc	6,0	;volatile
  5082  0F3F  2F41               	goto	u79_21
  5083  0F40  2F42               	goto	u79_20
  5084  0F41                     u79_21:
  5085  0F41  2F36               	goto	i1l184
  5086  0F42                     u79_20:
  5087  0F42                     i1l185:
  5088                           
  5089                           ;main.c: 87:         INTF = 0;
  5090  0F42  108B               	bcf	11,1	;volatile
  5091                           
  5092                           ;main.c: 88:     }
  5093  0F43  2F52               	goto	i1l188
  5094  0F44                     i1l182:	
  5095                           ;main.c: 89:     else if (TMR1IF == 1)
  5096                           
  5097  0F44  1283               	bcf	3,5	;RP0=0, select bank0
  5098  0F45  1303               	bcf	3,6	;RP1=0, select bank0
  5099  0F46  1C0C               	btfss	12,0	;volatile
  5100  0F47  2F49               	goto	u80_21
  5101  0F48  2F4A               	goto	u80_20
  5102  0F49                     u80_21:
  5103  0F49  2F52               	goto	i1l188
  5104  0F4A                     u80_20:
  5105  0F4A                     i1l1440:
  5106  0F4A  0064               	clrwdt	;# 
  5107                           
  5108                           ;main.c: 92:         TMR1IF = 0;
  5109  0F4B  1283               	bcf	3,5	;RP0=0, select bank0
  5110  0F4C  1303               	bcf	3,6	;RP1=0, select bank0
  5111  0F4D  100C               	bcf	12,0	;volatile
  5112  0F4E                     i1l1442:
  5113                           
  5114                           ;main.c: 93:         TMR1L = 0xDC;
  5115  0F4E  30DC               	movlw	220
  5116  0F4F  008E               	movwf	14	;volatile
  5117                           
  5118                           ;main.c: 94:         TMR1H = 0x0B;
  5119  0F50  300B               	movlw	11
  5120  0F51  008F               	movwf	15	;volatile
  5121  0F52                     i1l188:
  5122  0F52  0873               	movf	??_TrataINT+1,w
  5123  0F53  008A               	movwf	10
  5124  0F54  0E72               	swapf	??_TrataINT,w
  5125  0F55  0083               	movwf	3
  5126  0F56  0EFE               	swapf	btemp,f
  5127  0F57  0E7E               	swapf	btemp,w
  5128  0F58  0009               	retfie
  5129  0F59                     __end_of_TrataINT:
  5130                           
  5131                           	psect	intentry
  5132  0004                     __pintentry:	
  5133                           ;incstack = 0
  5134                           ; Regs used in _TrataINT: [wreg+status,2+status,0+pclath+cstack]
  5135                           
  5136  0004                     interrupt_function:
  5137  007E                     saved_w	set	btemp
  5138  0004  00FE               	movwf	btemp
  5139  0005  0E03               	swapf	3,w
  5140  0006  00F2               	movwf	??_TrataINT
  5141  0007  080A               	movf	10,w
  5142  0008  00F3               	movwf	??_TrataINT+1
  5143  0009  120A  158A  2F31   	ljmp	_TrataINT
  5144                           
  5145                           	psect	text26
  5146  0E3B                     __ptext26:	
  5147 ;; *************** function i1_recolheTela *****************
  5148 ;; Defined at:
  5149 ;;		line 182 in file "main.c"
  5150 ;; Parameters:    Size  Location     Type
  5151 ;;		None
  5152 ;; Auto vars:     Size  Location     Type
  5153 ;;		None
  5154 ;; Return value:  Size  Location     Type
  5155 ;;                  1    wreg      void 
  5156 ;; Registers used:
  5157 ;;		wreg
  5158 ;; Tracked objects:
  5159 ;;		On entry : 0/0
  5160 ;;		On exit  : 0/0
  5161 ;;		Unchanged: 0/0
  5162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5163 ;;      Params:         0       0       0       0       0
  5164 ;;      Locals:         0       0       0       0       0
  5165 ;;      Temps:          2       0       0       0       0
  5166 ;;      Totals:         2       0       0       0       0
  5167 ;;Total ram usage:        2 bytes
  5168 ;; Hardware stack levels used: 1
  5169 ;; This function calls:
  5170 ;;		Nothing
  5171 ;; This function is called by:
  5172 ;;		_TrataINT
  5173 ;; This function uses a non-reentrant model
  5174 ;;
  5175                           
  5176                           
  5177                           ;psect for function i1_recolheTela
  5178  0E3B                     i1_recolheTela:
  5179  0E3B                     i1l1400:	
  5180                           ;incstack = 0
  5181                           ; Regs used in i1_recolheTela: [wreg]
  5182                           
  5183                           
  5184                           ;main.c: 184:     if(RA4 == 0)
  5185  0E3B  1283               	bcf	3,5	;RP0=0, select bank0
  5186  0E3C  1303               	bcf	3,6	;RP1=0, select bank0
  5187  0E3D  1A05               	btfsc	5,4	;volatile
  5188  0E3E  2E40               	goto	u73_21
  5189  0E3F  2E41               	goto	u73_20
  5190  0E40                     u73_21:
  5191  0E40  2E53               	goto	i1l197
  5192  0E41                     u73_20:
  5193  0E41                     i1l1402:
  5194                           
  5195                           ;main.c: 185:     {;main.c: 187:         RD4 = 0;
  5196  0E41  1208               	bcf	8,4	;volatile
  5197                           
  5198                           ;main.c: 188:         RC1 = 1;
  5199  0E42  1487               	bsf	7,1	;volatile
  5200                           
  5201                           ;main.c: 189:         RD2 = 0;
  5202  0E43  1108               	bcf	8,2	;volatile
  5203                           
  5204                           ;main.c: 190:         RD6 = 1;
  5205  0E44  1708               	bsf	8,6	;volatile
  5206                           
  5207                           ;main.c: 192:         RD0 = 0;
  5208  0E45  1008               	bcf	8,0	;volatile
  5209                           
  5210                           ;main.c: 193:         RC3 = 1;
  5211  0E46  1587               	bsf	7,3	;volatile
  5212                           
  5213                           ;main.c: 194:         RC2 = 0;
  5214  0E47  1107               	bcf	7,2	;volatile
  5215                           
  5216                           ;main.c: 195:         RD7 = 1;
  5217  0E48  1788               	bsf	8,7	;volatile
  5218  0E49                     i1l1404:
  5219                           
  5220                           ;main.c: 197:         _delay((unsigned long)((15)*(4000000/4000.0)));
  5221  0E49  3014               	movlw	20
  5222  0E4A  00F1               	movwf	??i1_recolheTela+1
  5223  0E4B  3079               	movlw	121
  5224  0E4C  00F0               	movwf	??i1_recolheTela
  5225  0E4D                     u249_27:
  5226  0E4D  0BF0               	decfsz	??i1_recolheTela,f
  5227  0E4E  2E4D               	goto	u249_27
  5228  0E4F  0BF1               	decfsz	??i1_recolheTela+1,f
  5229  0E50  2E4D               	goto	u249_27
  5230  0E51  2E52               	nop2
  5231                           
  5232                           ;main.c: 198:     }
  5233  0E52  2E5B               	goto	i1l199
  5234  0E53                     i1l197:	
  5235                           ;main.c: 199:     else
  5236                           
  5237                           
  5238                           ;main.c: 200:     {;main.c: 202:         RD4 = 1;
  5239  0E53  1608               	bsf	8,4	;volatile
  5240                           
  5241                           ;main.c: 203:         RC1 = 1;
  5242  0E54  1487               	bsf	7,1	;volatile
  5243                           
  5244                           ;main.c: 204:         RD2 = 1;
  5245  0E55  1508               	bsf	8,2	;volatile
  5246                           
  5247                           ;main.c: 205:         RD6 = 1;
  5248  0E56  1708               	bsf	8,6	;volatile
  5249                           
  5250                           ;main.c: 207:         RD0 = 1;
  5251  0E57  1408               	bsf	8,0	;volatile
  5252                           
  5253                           ;main.c: 208:         RC3 = 1;
  5254  0E58  1587               	bsf	7,3	;volatile
  5255                           
  5256                           ;main.c: 209:         RC2 = 1;
  5257  0E59  1507               	bsf	7,2	;volatile
  5258                           
  5259                           ;main.c: 210:         RD7 = 1;
  5260  0E5A  1788               	bsf	8,7	;volatile
  5261  0E5B                     i1l199:
  5262  0E5B  0008               	return
  5263  0E5C                     __end_ofi1_recolheTela:
  5264  007E                     btemp	set	126	;btemp
  5265  007E                     wtemp0	set	126
  5266                           
  5267                           	psect	config
  5268                           
  5269                           ;Config register CONFIG @ 0x2007
  5270                           ;	Oscillator Selection bits
  5271                           ;	FOSC = HS, HS oscillator
  5272                           ;	Watchdog Timer Enable bit
  5273                           ;	WDTE = ON, WDT enabled
  5274                           ;	Power-up Timer Enable bit
  5275                           ;	PWRTE = ON, PWRT enabled
  5276                           ;	Brown-out Reset Enable bit
  5277                           ;	BOREN = ON, BOR enabled
  5278                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  5279                           ;	LVP = 0x1, unprogrammed default
  5280                           ;	Data EEPROM Memory Code Protection bit
  5281                           ;	CPD = 0x1, unprogrammed default
  5282                           ;	Flash Program Memory Write Enable bits
  5283                           ;	WRT = 0x3, unprogrammed default
  5284                           ;	In-Circuit Debugger Mode bit
  5285                           ;	DEBUG = 0x1, unprogrammed default
  5286                           ;	Flash Program Memory Code Protection bit
  5287                           ;	CP = 0x1, unprogrammed default
  5288  2007                     	org	8199
  5289  2007  3FF6               	dw	16374

Data Sizes:
    Strings     40
    Constant    10
    Data        16
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     36      52
    BANK1            80     32      42
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_2(CODE[19]), STR_1(CODE[21]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> atualizaLCD@buffer1(BANK1[16]), atualizaLCD@buffer0(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 16
		 -> atualizaLCD@buffer1(BANK1[16]), atualizaLCD@buffer0(BANK1[16]), 


Critical Paths under _main in COMMON

    _main->___fltol
    _main->_expandeTela
    _main->_recolheTela
    _estufaUm->___fltol
    _estufaTres->___fltol
    _estufaQuatro->___fltol
    _estufaDois->___fltol
    _atualizaLCD->___fltol
    _sprintf->___fltol
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _TrataINT in COMMON

    _TrataINT->i1_recolheTela

Critical Paths under _main in BANK0

    _main->_atualizaLCD
    _lerSensores->___xxtofl
    _controleEstufas->___flge
    _estufaUm->___fltol
    _estufaTres->___fltol
    _estufaQuatro->___fltol
    _estufaDois->___fltol
    _atualizaLCD->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _TrataINT in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_atualizaLCD

Critical Paths under _TrataINT in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TrataINT in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TrataINT in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   15077
                                             33 BANK0      3     3      0
                           _Lcd_Init
                            ___fltol
                        _atualizaLCD
                    _controleEstufas
                        _expandeTela
                        _iniciaPinos
                        _lerSensores
                           _paraTela
                        _recolheTela
 ---------------------------------------------------------------------------------
 (1) _recolheTela                                          2     2      0       0
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _paraTela                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lerSensores                                          4     4      0    1106
                                             14 BANK0      4     4      0
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1106
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) _iniciaPinos                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _expandeTela                                          2     2      0       0
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _controleEstufas                                      0     0      0    7377
                             ___flge
                         _estufaDois
                       _estufaQuatro
                         _estufaTres
                           _estufaUm
 ---------------------------------------------------------------------------------
 (2) _estufaUm                                             0     0      0    1507
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) _estufaTres                                           0     0      0    1507
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) _estufaQuatro                                         2     2      0    1510
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) _estufaDois                                           0     0      0    1507
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1346
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _atualizaLCD                                         34    34      0    4808
                                             31 BANK0      2     2      0
                                              0 BANK1     32    32      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___fltol
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             27    18      9    1781
                                             12 BANK0     19    10      9
                            ___fltol (ARG)
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     412
                                              5 COMMON     1     1      0
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     421
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             11     7      4    1507
                                              4 COMMON     2     2      0
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     4     4      0     456
                                              3 BANK0      4     4      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       4     4      0     254
                                              5 COMMON     1     1      0
                                              0 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       7     6      1     725
                                              2 BANK0      7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     279
                                              2 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     155
                                              5 COMMON     1     1      0
                                              0 BANK0      2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0     124
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _TrataINT                                             2     2      0       0
                                              2 COMMON     2     2      0
                      i1_recolheTela
 ---------------------------------------------------------------------------------
 (6) i1_recolheTela                                        2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   ___fltol
   _atualizaLCD
     _Lcd_Clear
       _Lcd_Cmd
     _Lcd_Set_Cursor
       _Lcd_Cmd
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     ___fltol
     _sprintf
       ___fltol (ARG)
       ___lwdiv (ARG)
       ___lwmod (ARG)
         ___lwdiv (ARG)
   _controleEstufas
     ___flge
     _estufaDois
       ___fltol
     _estufaQuatro
       ___fltol
     _estufaTres
       ___fltol
     _estufaUm
       ___fltol
   _expandeTela
   _iniciaPinos
   _lerSensores
     ___xxtofl
   _paraTela
   _recolheTela

 _TrataINT (ROOT)
   i1_recolheTela

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     20      2A       7       52.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     24      34       5       65.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      68      12        0.0%
ABS                  0      0      68       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat May 08 20:45:02 2021

                        pc 0002                         fsr 0004   __size_of_controleEstufas 00E2  
                      l110 0EAA                        l111 0EB0                        l112 0EB1  
                      l120 0E1C                        l113 0EB7                        l114 0EB8  
                      l202 0E74                        l210 07B3                        l115 0EBE  
                      l123 0DED                        l132 0709                        l220 0449  
                      l204 0E7C                        l117 0EBF                        l109 0EA7  
                      l141 0EE4                        l230 0F0A                        l214 0449  
                      l135 0FC3                        l207 027D                        l223 0F2D  
                      l129 0761                        l233 0F89                        l225 0F30  
                      l235 0F8C                        l228 0F07                        l238 0E3A  
                      l191 0DE0                        l168 05B4                        l530 05A9  
                      l194 0186                        l348 0367                        l197 0E95  
                      l526 0524                        l199 0E9D                        l624 07F9  
                      l545 0691                        l529 0590                        l538 06A6  
                      l634 0FFF                        l548 06A6                        l791 04B3  
                      l785 046E                        l787 0505                        l798 04CF  
                      l799 04DB                        _RB0 0030                        _RB1 0031  
                      _RB2 0032                        _RA4 002C                        _RB3 0033  
                      _RC1 0039                        _RB4 0034                        _RD0 0040  
                      _RC2 003A                        _RB5 0035                        _RC3 003B  
                      _RB6 0036                        _RD2 0042                        _RC4 003C  
                      _RB7 0037                        _RC5 003D                        _RD4 0044  
                      _RC6 003E                        _RC7 003F                        _RD6 0046  
                      _RD7 0047                        fsr0 0004                        indf 0000  
             ?_atualizaLCD 0070               ___fltol@exp1 0075                       l2100 0657  
                     l2102 065F                       l2200 0ED1                       l2120 0686  
                     l2112 066D                       l2104 0661                       l2050 0E9F  
                     l2202 0ED9                       l2122 0696                       l2106 0665  
                     l2114 067F                       l2130 07BE                       l2210 0293  
                     l2052 0EA3                       l2060 0E02                       l2124 069B  
                     l2140 07E1                       l2132 07C1                       l2220 02BE  
                     l2212 0298                       l2204 0281                       l2054 0EAE  
                     l2062 0E05                       l2070 0F90                       l2142 07E7  
                     l2134 07C8                       l2126 07B4                       l2222 02C2  
                     l2206 0286                       l2310 0476                       l2302 044D  
                     l2056 0EB5                       l2064 0E0B                       l2080 0FB0  
                     l2072 0F9A                       l2144 07E8                       l2136 07CC  
                     l2128 07B8                       l2160 0FDA                       l2152 0FC4  
                     l2240 02F7                       l2224 02C6                       l2216 0299  
                     l2208 028C                       l2320 0498                       l2304 0452  
                     l2400 00ED                       l2058 0EBC                       l2066 0E0E  
                     l2082 0FB3                       l2074 0F9B                       l2090 062B  
                     l2146 07EF                       l2138 07D0                       l2162 0FDE  
                     l2154 0FCC                       l2170 0FFB                       l2250 033D  
                     l2242 02FD                       l2234 02D1                       l2226 02CA  
                     l2218 02B6                       l2330 04C9                       l2322 049C  
                     l2314 047F                       l2306 0456                       l2410 0117  
                     l2402 00EE                       l2068 0E19                       l2180 0723  
                     l2084 0FB9                       l2076 0FA9                       l2092 0638  
                     l2148 07F5                       l2164 0FE8                       l2156 0FCF  
                     l2252 0344                       l2244 0304                       l2228 02CF  
                     l2340 04FC                       l2332 04D3                       l2324 04AA  
                     l2316 0484                       l2308 0466                       l2420 0150  
                     l2412 0118                       l2404 0114                       l2500 0605  
                     l2350 06B8                       l2174 0DE1                       l2190 074E  
                     l2182 0728                       l2086 0FBC                       l2078 0FAC  
                     l2166 0FEE                       l2158 0FD6                       l2254 0348  
                     l2246 0308                       l2238 02ED                       l2430 0196  
                     l2270 0EE5                       l2342 04FD                       l2334 04DD  
                     l2326 04BA                       l2318 0491                       l2422 0151  
                     l2414 011F                       l2406 0115                       l2502 060B  
                     l2352 06C9                       l2192 0753                       l2184 072E  
                     l2176 070D                       l2088 0FC0                       l2096 0641  
                     l2168 0FF5                       l2248 030D                       l2256 0351  
                     l2440 026D                       l2432 01EE                       l2272 0F03  
                     l1800 0793                       l2336 04F3                       l2328 04C5  
                     l2424 0159                       l2416 014C                       l2408 0116  
                     l2360 004D                       l2504 060F                       l2354 06CF  
                     l2346 06A7                       l2194 0759                       l2178 0712  
                     l2186 0737                       l2098 0656                       l2258 0363  
                     l2530 02AB                       l2434 01F4                       l2290 0544  
                     l2282 0506                       l2274 0F59                       l2266 0F0B  
                     l2450 038B                       l1810 079C                       l1802 0796  
                     l2338 04F8                       l2418 014F                       l2370 0070  
                     l2362 006C                       l2506 0614                       l2348 06AD  
                     l2188 073D                       l2196 0EC3                       l2436 01FE  
                     l2428 0187                       l2292 0568                       l2284 051C  
                     l2276 0F85                       l2268 0F29                       l2452 038E  
                     l2444 0368                       l1820 07A1                       l1812 079D  
                     l1804 0797                       l2380 009A                       l2372 0096  
                     l2364 006D                       l2356 0040                       l2508 0619  
                     l2198 0EC6                       l2438 0208                       l2294 056C  
                     l2286 0538                       l2278 0E1D                       l2470 03FE  
                     l2462 03B8                       l2446 0383                       l2454 0392  
                     l1830 07A6                       l1822 07A2                       l1814 079E  
                     l1806 079A                       l2390 00C3                       l2382 00A1  
                     l2374 0097                       l2366 006E                       l2358 0046  
                     l2296 05A6                       l2288 0540                       l2480 0443  
                     l2472 0419                       l2464 03D3                       l2456 03AD  
                     l2448 0388                       l1840 07AB                       l1832 07A7  
                     l1824 07A3                       l1816 079F                       l1808 079B  
                     l2392 00CB                       l2384 00C0                       l2376 0098  
                     l2368 006F                       l2298 05A8                       l2474 0434  
                     l2466 03EE                       l1850 07B0                       l1842 07AC  
                     l1834 07A8                       l1826 07A4                       l1818 07A0  
                     l2394 00EA                       l2386 00C1                       l2378 0099  
                     l2490 05B9                       l2476 0439                       l1852 07B1  
                     l1844 07AD                       l1836 07A9                       l1828 07A5  
                     l1780 077F                       l2396 00EB                       l2388 00C2  
                     l2492 05BE                       l2478 043E                       l1854 07B2  
                     l1846 07AE                       l1838 07AA                       l1790 078C  
                     l1782 0782                       l2398 00EC                       l1950 0E8B  
                     l2494 05DC                       l1952 0E5C                       l1848 07AF  
                     l1792 078D                       l1784 0789                       l1776 0762  
                     l2496 05E2                       l2488 05AA                       l1954 0E62  
                     l1794 078E                       l1786 078A                       l1778 077B  
                     l1946 0E7D                       l2498 0600                       l1956 0E6A  
                     l1796 078F                       l1788 078B                       l1948 0E83  
                     l1798 0792                       l1958 0DD6                       STR_1 0810  
                     STR_2 0825                       u2000 051C                       u2001 051B  
                     u2010 0538                       u2011 0537                       u2020 0544  
                     u2021 0543                       u2110 0497                       u2031 0553  
                     u2111 0496                       u2040 056C                       u2032 0554  
                     u2200 04FC                       u2041 056B                       u2033 0559  
                     u2201 04FB                       u2105 0489                       u2034 055A  
                     u2210 0383                       u2130 04B9                       u2051 057B  
                     u2035 055F                       u2211 0382                       u2131 04B8  
                     u2060 05A6                       u2052 057C                       u2036 0560  
                     u2220 03AD                       u2300 060F                       u2061 05A5  
                     u2053 0581                       u2221 03AC                       u2125 04AB  
                     u2301 060E                       u2054 0582                       u2230 03D3  
                     u2150 04C9                       u2070 0452                       u2055 0587  
                     u2231 03D2                       u2151 04C8                       u2071 0451  
                     u1600 0EBC                       u2056 0588                       u2240 03EE  
                     u2160 04CF                       u2080 0456                       u1601 0EBB  
                     u2065 05A2                       u2241 03ED                       u2161 04CE  
                     u2145 04BE                       u2081 0455                       u2250 0419  
                     u2170 04D3                       u2090 0476                       u1450 0E83  
                     u2251 0418                       u2171 04D2                       u2091 0475  
                     u1451 0E82                       u1700 0696                       u1620 0638  
                     u2260 0434                       u1460 0E62                       u2180 04E8  
                     u1701 0695                       u1621 0637                       u2261 0433  
                     u1461 0E61                       u2317 0621                       u1710 069B  
                     u1630 064F                       u2190 04F8                       u2270 05DC  
                     u1615 0F9E                       u1711 069A                       u2407 0E6E  
                     u2191 04F7                       u2327 0E8F                       u2271 05DB  
                     u1640 0665                       u1720 07BE                       u2280 0600  
                     u1641 0664                       u1721 07BD                       u2417 01FA  
                     u2185 04E3                       u2337 004A                       u2281 05FF  
                     u1570 0EA3                       u1650 066C                       u1810 0FDE  
                     u2290 060B                       u1571 0EA2                       u1651 066B  
                     u1635 064A                       u1811 0FDD                       u2427 0279  
                     u2347 0074                       u2291 060A                       u2275 05D8  
                     u1580 0EAE                       u1740 07D0                       u1820 0FE8  
                     u1900 028C                       u1581 0EAD                       u2437 0FAE  
                     u1741 07CF                       u1821 0FE7                       u1805 0FD0  
                     u1901 028B                       u2357 009E                       u2285 05FC  
                     u1590 0EB5                       u1670 067E                       u1910 02C6  
                     u1591 0EB4                       u2447 0FBE                       u1671 067D  
                     u1735 07C2                       u1911 02C5                       u2367 00C8  
                     u1680 0685                       u1760 07E1                       u1840 0FFB  
                     u1920 02EC                       u2457 06B3                       u1681 0684  
                     u1665 066E                       u1761 07E0                       u1841 0FFA  
                     u1825 0FE4                       u1921 02EB                       u2377 00F2  
                     u1850 0712                       u1930 02F7                       u2467 06C4  
                     u1851 0711                       u1755 07D1                       u1835 0FEF  
                     u1931 02F6                       u2387 011C                       u1780 07F5  
                     u1940 02FD                       u2477 06D5                       u1781 07F4  
                     u1765 07DD                       u1941 02FC                       u1925 02E8  
                     u2397 0156                       u1870 073D                       u1790 0FCC  
                     u1950 0351                       u2487 0E14                       u1871 073C  
                     u1695 0688                       u1775 07E9                       u1791 0FCB  
                     u1951 0350                       u1960 0363                       u1865 071A  
                     u1961 0362                       u1890 0EE4                       u1970 0F29  
                     u1891 0EE3                       u1971 0F28                       u1980 0F03  
                     u1885 0745                       u1981 0F02                       u1990 0F85  
                     _INTF 0059                       u1991 0F84                       u1975 0F25  
                     u1985 0EFF                       u1995 0F81               ?_lerSensores 0070  
        ?_Lcd_Write_String 0070                       _main 05AA                       btemp 007E  
             ?_iniciaPinos 0070                       start 000C         ??_Lcd_Write_String 0023  
          __end_of_Lcd_Cmd 0E1D              ___fltol@sign1 0074                      ?_main 0070  
          __end_of___fltol 06A7            __end_of___lwdiv 07FA                      i1l182 0F44  
                    i1l184 0F36                      i1l185 0F42            __end_of___lwmod 1000  
                    i1l188 0F52                      i1l197 0E53                      i1l199 0E5B  
                    _TMR1H 000F                      _TMR1L 000E                      u80_20 0F4A  
                    u80_21 0F49                      u73_20 0E41                      u73_21 0E40  
  __size_of_Lcd_Set_Cursor 0058                      _TRISA 0085                      _TRISC 0087  
                    _TRISD 0088                      u78_20 0F35                      u78_21 0F34  
                    u79_20 0F42                      u79_21 0F41            __end_of_dpowers 0810  
             ?_expandeTela 0070                      pclath 000A                      status 0003  
                    wtemp0 007E            __end_of_sprintf 0368           __end_of_Lcd_Init 070A  
         __end_of_Lcd_Port 0EC0            __initialization 000F               __end_of_main 062B  
             ?_recolheTela 0070                     ??_main 0041         __size_of_Lcd_Clear 000D  
         __end_of_TrataINT 0F59          ??_controleEstufas 0076                     _ADRESH 001E  
                   _ADRESL 009E                     i1l1400 0E3B                     i1l1402 0E41  
                   i1l1404 0E49                     i1l1440 0F4A                     i1l1432 0F31  
                   i1l1442 0F4E                     i1l1436 0F37                     i1l1438 0F3C  
                   u249_27 0E4D                  ??_Lcd_Cmd 0020                     _TMR1IF 0060  
  __size_of_Lcd_Write_Char 0037           __end_of___xxtofl 0506                     ___flge 0506  
                ??___fltol 0024                  ??___lwdiv 0074                  ??___lwmod 0075  
         __end_of_paraTela 0DE1           __end_of_estufaUm 0F31              ?_estufaQuatro 0070  
                   saved_w 007E                  ??_sprintf 0035       __size_of_atualizaLCD 00F7  
          Lcd_Set_Cursor@a 0025            Lcd_Set_Cursor@b 0022            Lcd_Set_Cursor@y 0027  
          Lcd_Set_Cursor@z 0026                 ___flge@ff1 0020                 ___flge@ff2 0024  
             ___xxtofl@arg 002A               ___xxtofl@exp 0029               ___xxtofl@val 0020  
  __end_of__initialization 003C          __end_of_Lcd_Clear 0DEE       __size_of_lerSensores 0147  
               ___fltol@f1 0020       __size_of_iniciaPinos 0052             __pcstackCOMMON 0070  
             __pidataBANK0 0DCE               __pidataBANK1 0DC6             ??_estufaQuatro 0076  
           _Lcd_Set_Cursor 070A             _OPTION_REGbits 0081                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070                 __pbssBANK0 0044                 __pbssBANK1 00C8  
   __size_ofi1_recolheTela 0021       __size_of_expandeTela 0021                 __pmaintext 05AA  
                  ?___flge 0020                  ?_TrataINT 0070                 __pintentry 0004  
__size_of_Lcd_Write_String 0025     __end_of_Lcd_Set_Cursor 0762       __size_of_recolheTela 0021  
                ?___xxtofl 0020                 ??_Lcd_Init 0022                 ??_Lcd_Port 0074  
               __stringtab 0800             _Lcd_Write_Char 0F8D                    _Lcd_Cmd 0E01  
                ?_paraTela 0070                  ?_estufaUm 0070                 ??_TrataINT 0072  
          __size_of___flge 00A4                    ___fltol 062B                    ___lwdiv 07B4  
                  ___lwmod 0FC4              i1_recolheTela 0E3B            _controleEstufas 0368  
          ?_Lcd_Set_Cursor 0022                    __ptext1 0E7D                    __ptext2 0DD6  
                  __ptext3 0040                    __ptext4 044A                    __ptext5 0762  
                  __ptext6 0E5C                    __ptext7 0368                    __ptext8 0F0B  
                  __ptext9 0F59                 _estufaDois 0EE5                  _T1CONbits 0010  
               _estufaTres 0F59                    _dpowers 0806                 ??___xxtofl 0024  
                  _sentido 00C8                    _sprintf 027E     __end_of_Lcd_Write_Char 0FC4  
     end_of_initialization 003C                 ??_paraTela 0074                 ??_estufaUm 0076  
     __end_of_estufaQuatro 0E3B                  Lcd_Port@a 0074             ?i1_recolheTela 0070  
                _PORTBbits 0006                  _PORTCbits 0007                  _PORTDbits 0008  
       atualizaLCD@buffer0 00A0         atualizaLCD@buffer1 00B0              ___xxtofl@sign 0028  
                _TRISBbits 0086            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0026  
        Lcd_Write_String@i 0024    __end_of_controleEstufas 044A                  _Lcd_Clear 0DE1  
           __end_of___flge 05AA           _Lcd_Write_String 0EC0                ?_estufaDois 0070  
              ?_estufaTres 0070              ??_atualizaLCD 003F        start_initialization 000F  
        __size_of_Lcd_Init 0063              ??_lerSensores 002E          __size_of_Lcd_Port 0022  
            ??_iniciaPinos 0074            ??i1_recolheTela 0070                 ?_Lcd_Clear 0070  
                 ??___flge 0028                 init_fetch0 0DEE                __pdataBANK0 004C  
              __pdataBANK1 00C0            Lcd_Write_Char@a 0022            Lcd_Write_Char@y 0021  
        __size_of_TrataINT 0028                __pbssCOMMON 0076                  ___latbits 0002  
            __pcstackBANK0 0020              __pcstackBANK1 00A0          __size_of___xxtofl 00BC  
            ??_expandeTela 0074      __size_of_estufaQuatro 001E        __end_of_atualizaLCD 027E  
                 ?_Lcd_Cmd 0070                sprintf@flag 0039                sprintf@prec 003A  
      __size_of_estufaDois 0026          __size_of_paraTela 000B        __size_of_estufaTres 0034  
      __end_of_lerSensores 0187           ___lwdiv@dividend 0022          __size_of_estufaUm 0026  
         ?_controleEstufas 0070           ??_Lcd_Set_Cursor 0023              ??_recolheTela 0074  
      __end_of_iniciaPinos 07B4                   ?___fltol 0020                   ?___lwdiv 0020  
                 ?___lwmod 0027                  __pstrings 0800               _estufaQuatro 0E1D  
         ___lwdiv@quotient 0025                   ?_sprintf 002C          interrupt_function 0004  
      __end_of_expandeTela 0E7D                   _PIE1bits 008C                   Lcd_Cmd@a 0075  
              ??_Lcd_Clear 0076                 _ADCON0bits 001F                __stringbase 0805  
               _ADCON1bits 009F        __end_of_recolheTela 0E9E           ??_Lcd_Write_Char 0075  
              _atualizaLCD 0187                   _Lcd_Init 06A7                   _Lcd_Port 0E9E  
              _lerSensores 0040   __end_of_Lcd_Write_String 0EE5           __size_of_Lcd_Cmd 001C  
              _iniciaPinos 0762                   _TrataINT 0F31           __size_of___fltol 007C  
         __size_of___lwdiv 0046           __size_of___lwmod 003C         __end_of__stringtab 0806  
             ??_estufaDois 0076               ??_estufaTres 0076                 sprintf@val 003B  
                 ___xxtofl 044A            ___lwdiv@divisor 0020            ___lwdiv@counter 0024  
                 __ptext10 0E1D                   __ptext11 0EE5                   __ptext20 070A  
                 __ptext12 0506                   __ptext21 0DE1                   __ptext13 0187  
                 __ptext22 06A7                   __ptext14 027E                   __ptext23 0E01  
                 __ptext15 0FC4                   __ptext24 0E9E                   __ptext16 07B4  
                 __ptext25 0F31                   __ptext17 062B                   __ptext26 0E3B  
                 __ptext18 0EC0                   __ptext19 0F8D                _expandeTela 0E5C  
         __size_of_sprintf 00EA                   _paraTela 0DD6              __size_of_main 0081  
                 _estufaUm 0F0B         __end_of_estufaDois 0F0B         __end_of_estufaTres 0F8D  
              _recolheTela 0E7D                 _INTCONbits 000B                   init_ram0 0DF2  
             _valor_entry0 0076               _valor_entry1 0048               _valor_entry2 0044  
             _valor_entry3 0050               _valor_entry4 004C               _valor_entry5 00C4  
             _valor_entry6 00C0         Lcd_Write_Char@temp 0020                   intlevel1 0000  
                sprintf@ap 0038                  sprintf@sp 003D           ___lwmod@dividend 0029  
                stringcode 0800      __end_ofi1_recolheTela 0E5C         Lcd_Set_Cursor@temp 0028  
                 sprintf@c 003E                   sprintf@f 002C            ___lwmod@divisor 0027  
          ___lwmod@counter 002B                   stringdir 0800                   stringtab 0800  
