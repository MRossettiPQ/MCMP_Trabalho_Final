

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri May 07 20:33:20 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    45                           	dabs	1,0x7E,2
    46  0000                     
    47                           ; Version 2.20
    48                           ; Generated 12/02/2020 GMT
    49                           ; 
    50                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC16F877A Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     	;# 
    82  0001                     	;# 
    83  0002                     	;# 
    84  0003                     	;# 
    85  0004                     	;# 
    86  0005                     	;# 
    87  0006                     	;# 
    88  0007                     	;# 
    89  0008                     	;# 
    90  0009                     	;# 
    91  000A                     	;# 
    92  000B                     	;# 
    93  000C                     	;# 
    94  000D                     	;# 
    95  000E                     	;# 
    96  000E                     	;# 
    97  000F                     	;# 
    98  0010                     	;# 
    99  0011                     	;# 
   100  0012                     	;# 
   101  0013                     	;# 
   102  0014                     	;# 
   103  0015                     	;# 
   104  0015                     	;# 
   105  0016                     	;# 
   106  0017                     	;# 
   107  0018                     	;# 
   108  0019                     	;# 
   109  001A                     	;# 
   110  001B                     	;# 
   111  001B                     	;# 
   112  001C                     	;# 
   113  001D                     	;# 
   114  001E                     	;# 
   115  001F                     	;# 
   116  0081                     	;# 
   117  0085                     	;# 
   118  0086                     	;# 
   119  0087                     	;# 
   120  0088                     	;# 
   121  0089                     	;# 
   122  008C                     	;# 
   123  008D                     	;# 
   124  008E                     	;# 
   125  0091                     	;# 
   126  0092                     	;# 
   127  0093                     	;# 
   128  0094                     	;# 
   129  0098                     	;# 
   130  0099                     	;# 
   131  009C                     	;# 
   132  009D                     	;# 
   133  009E                     	;# 
   134  009F                     	;# 
   135  010C                     	;# 
   136  010D                     	;# 
   137  010E                     	;# 
   138  010F                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  0000                     	;# 
   142  0001                     	;# 
   143  0002                     	;# 
   144  0003                     	;# 
   145  0004                     	;# 
   146  0005                     	;# 
   147  0006                     	;# 
   148  0007                     	;# 
   149  0008                     	;# 
   150  0009                     	;# 
   151  000A                     	;# 
   152  000B                     	;# 
   153  000C                     	;# 
   154  000D                     	;# 
   155  000E                     	;# 
   156  000E                     	;# 
   157  000F                     	;# 
   158  0010                     	;# 
   159  0011                     	;# 
   160  0012                     	;# 
   161  0013                     	;# 
   162  0014                     	;# 
   163  0015                     	;# 
   164  0015                     	;# 
   165  0016                     	;# 
   166  0017                     	;# 
   167  0018                     	;# 
   168  0019                     	;# 
   169  001A                     	;# 
   170  001B                     	;# 
   171  001B                     	;# 
   172  001C                     	;# 
   173  001D                     	;# 
   174  001E                     	;# 
   175  001F                     	;# 
   176  0081                     	;# 
   177  0085                     	;# 
   178  0086                     	;# 
   179  0087                     	;# 
   180  0088                     	;# 
   181  0089                     	;# 
   182  008C                     	;# 
   183  008D                     	;# 
   184  008E                     	;# 
   185  0091                     	;# 
   186  0092                     	;# 
   187  0093                     	;# 
   188  0094                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  018C                     	;# 
   200  018D                     	;# 
   201                           
   202                           	psect	idataBANK1
   203  0EEC                     __pidataBANK1:
   204                           
   205                           ;initializer for _buffer1
   206  0EEC  3449               	retlw	73
   207  0EED  344E               	retlw	78
   208  0EEE  3449               	retlw	73
   209  0EEF  3443               	retlw	67
   210  0EF0  3449               	retlw	73
   211  0EF1  3441               	retlw	65
   212  0EF2  3400               	retlw	0
   213  0EF3  3400               	retlw	0
   214  0EF4  3400               	retlw	0
   215  0EF5  3400               	retlw	0
   216  0EF6  3400               	retlw	0
   217  0EF7  3400               	retlw	0
   218  0EF8  3400               	retlw	0
   219  0EF9  3400               	retlw	0
   220  0EFA  3400               	retlw	0
   221  0EFB  3400               	retlw	0
   222  0EFC  3400               	retlw	0
   223  0EFD  3400               	retlw	0
   224  0EFE  3400               	retlw	0
   225  0EFF  3400               	retlw	0
   226  0F00  3400               	retlw	0
   227  0F01  3400               	retlw	0
   228  0F02  3400               	retlw	0
   229  0F03  3400               	retlw	0
   230  0F04  3400               	retlw	0
   231  0F05  3400               	retlw	0
   232  0F06  3400               	retlw	0
   233  0F07  3400               	retlw	0
   234  0F08  3400               	retlw	0
   235  0F09  3400               	retlw	0
   236                           
   237                           ;initializer for _buffer0
   238  0F0A  3449               	retlw	73
   239  0F0B  344E               	retlw	78
   240  0F0C  3449               	retlw	73
   241  0F0D  3443               	retlw	67
   242  0F0E  3449               	retlw	73
   243  0F0F  3441               	retlw	65
   244  0F10  3400               	retlw	0
   245  0F11  3400               	retlw	0
   246  0F12  3400               	retlw	0
   247  0F13  3400               	retlw	0
   248  0F14  3400               	retlw	0
   249  0F15  3400               	retlw	0
   250  0F16  3400               	retlw	0
   251  0F17  3400               	retlw	0
   252  0F18  3400               	retlw	0
   253  0F19  3400               	retlw	0
   254  0F1A  3400               	retlw	0
   255  0F1B  3400               	retlw	0
   256  0F1C  3400               	retlw	0
   257  0F1D  3400               	retlw	0
   258  0F1E  3400               	retlw	0
   259  0F1F  3400               	retlw	0
   260  0F20  3400               	retlw	0
   261  0F21  3400               	retlw	0
   262  0F22  3400               	retlw	0
   263  0F23  3400               	retlw	0
   264  0F24  3400               	retlw	0
   265  0F25  3400               	retlw	0
   266  0F26  3400               	retlw	0
   267  0F27  3400               	retlw	0
   268                           
   269                           	psect	strings
   270  0800                     __pstrings:
   271  0800                     stringtab:
   272  0800                     __stringtab:
   273  0800                     stringcode:	
   274                           ;	String table - string pointers are 1 byte each
   275                           
   276  0800                     stringdir:
   277  0800  3008               	movlw	high stringdir
   278  0801  008A               	movwf	10
   279  0802  0804               	movf	4,w
   280  0803  0A84               	incf	4,f
   281  0804  0782               	addwf	2,f
   282  0805                     __stringbase:
   283  0805  3400               	retlw	0
   284  0806                     __end_of__stringtab:
   285  0806                     _dpowers:
   286  0806  3401               	retlw	1
   287  0807  3400               	retlw	0
   288  0808  340A               	retlw	10
   289  0809  3400               	retlw	0
   290  080A  3464               	retlw	100
   291  080B  3400               	retlw	0
   292  080C  34E8               	retlw	232
   293  080D  3403               	retlw	3
   294  080E  3410               	retlw	16
   295  080F  3427               	retlw	39
   296  0810                     __end_of_dpowers:
   297  0008                     _PORTDbits	set	8
   298  0007                     _PORTCbits	set	7
   299  0010                     _T1CONbits	set	16
   300  000B                     _INTCONbits	set	11
   301  001E                     _ADRESH	set	30
   302  001F                     _ADCON0bits	set	31
   303  000F                     _TMR1H	set	15
   304  000E                     _TMR1L	set	14
   305  0006                     _PORTBbits	set	6
   306  0030                     _RB0	set	48
   307  002C                     _RA4	set	44
   308  004A                     _RE2	set	74
   309  0047                     _RD7	set	71
   310  003A                     _RC2	set	58
   311  003B                     _RC3	set	59
   312  0040                     _RD0	set	64
   313  0046                     _RD6	set	70
   314  0042                     _RD2	set	66
   315  0039                     _RC1	set	57
   316  0044                     _RD4	set	68
   317  0038                     _RC0	set	56
   318  0041                     _RD1	set	65
   319  0043                     _RD3	set	67
   320  0045                     _RD5	set	69
   321  003D                     _RC5	set	61
   322  003C                     _RC4	set	60
   323  003F                     _RC7	set	63
   324  003E                     _RC6	set	62
   325  0060                     _TMR1IF	set	96
   326  0059                     _INTF	set	89
   327  0031                     _RB1	set	49
   328  0032                     _RB2	set	50
   329  0037                     _RB7	set	55
   330  0036                     _RB6	set	54
   331  0035                     _RB5	set	53
   332  0034                     _RB4	set	52
   333  009E                     _ADRESL	set	158
   334  009F                     _ADCON1bits	set	159
   335  0088                     _TRISD	set	136
   336  0087                     _TRISC	set	135
   337  0085                     _TRISA	set	133
   338  008C                     _PIE1bits	set	140
   339  0086                     _TRISBbits	set	134
   340  0081                     _OPTION_REGbits	set	129
   341  0810                     STR_1:
   342  0810  3443               	retlw	67	;'C'
   343  0811  343A               	retlw	58	;':'
   344  0812  3425               	retlw	37	;'%'
   345  0813  3469               	retlw	105	;'i'
   346  0814  3420               	retlw	32	;' '
   347  0815  3441               	retlw	65	;'A'
   348  0816  343A               	retlw	58	;':'
   349  0817  3425               	retlw	37	;'%'
   350  0818  3469               	retlw	105	;'i'
   351  0819  3420               	retlw	32	;' '
   352  081A  344C               	retlw	76	;'L'
   353  081B  343A               	retlw	58	;':'
   354  081C  3425               	retlw	37	;'%'
   355  081D  3469               	retlw	105	;'i'
   356  081E  3420               	retlw	32	;' '
   357  081F  3453               	retlw	83	;'S'
   358  0820  3431               	retlw	49	;'1'
   359  0821  343A               	retlw	58	;':'
   360  0822  3425               	retlw	37	;'%'
   361  0823  3469               	retlw	105	;'i'
   362  0824  3400               	retlw	0
   363  0825                     STR_2:
   364  0825  3453               	retlw	83	;'S'
   365  0826  3432               	retlw	50	;'2'
   366  0827  343A               	retlw	58	;':'
   367  0828  3425               	retlw	37	;'%'
   368  0829  3469               	retlw	105	;'i'
   369  082A  3420               	retlw	32	;' '
   370  082B  3453               	retlw	83	;'S'
   371  082C  3433               	retlw	51	;'3'
   372  082D  343A               	retlw	58	;':'
   373  082E  3425               	retlw	37	;'%'
   374  082F  3469               	retlw	105	;'i'
   375  0830  3420               	retlw	32	;' '
   376  0831  3453               	retlw	83	;'S'
   377  0832  3434               	retlw	52	;'4'
   378  0833  343A               	retlw	58	;':'
   379  0834  3425               	retlw	37	;'%'
   380  0835  3469               	retlw	105	;'i'
   381  0836  3420               	retlw	32	;' '
   382  0837  3400               	retlw	0
   383                           
   384                           	psect	cinit
   385  0015                     start_initialization:	
   386                           ; #config settings
   387                           
   388  0015                     __initialization:
   389                           
   390                           ; Initialize objects allocated to BANK1
   391  0015  1383               	bcf	3,7	;select IRP bank0
   392  0016  30DC               	movlw	low (__pdataBANK1+60)
   393  0017  00FD               	movwf	btemp+-1
   394  0018  300E               	movlw	high __pidataBANK1
   395  0019  00FE               	movwf	btemp
   396  001A  30EC               	movlw	low __pidataBANK1
   397  001B  00FF               	movwf	btemp+1
   398  001C  30A0               	movlw	low __pdataBANK1
   399  001D  0084               	movwf	4
   400  001E  120A  158A  24B5  120A  118A  	fcall	init_ram0
   401                           
   402                           ; Clear objects allocated to BANK0
   403  0023  3020               	movlw	low __pbssBANK0
   404  0024  0084               	movwf	4
   405  0025  303C               	movlw	low (__pbssBANK0+28)
   406  0026  120A  158A  249C  120A  118A  	fcall	clear_ram0
   407  002B                     end_of_initialization:	
   408                           ;End of C runtime variable initialization code
   409                           
   410  002B                     __end_of__initialization:
   411  002B  0183               	clrf	3
   412  002C  120A  118A  282F   	ljmp	_main	;jump to C main() function
   413                           
   414                           	psect	bssBANK0
   415  0020                     __pbssBANK0:
   416  0020                     _valor_entry6:
   417  0020                     	ds	4
   418  0024                     _valor_entry5:
   419  0024                     	ds	4
   420  0028                     _valor_entry4:
   421  0028                     	ds	4
   422  002C                     _valor_entry3:
   423  002C                     	ds	4
   424  0030                     _valor_entry2:
   425  0030                     	ds	4
   426  0034                     _valor_entry1:
   427  0034                     	ds	4
   428  0038                     _valor_entry0:
   429  0038                     	ds	4
   430                           
   431                           	psect	dataBANK1
   432  00A0                     __pdataBANK1:
   433  00A0                     _buffer1:
   434  00A0                     	ds	30
   435  00BE                     _buffer0:
   436  00BE                     	ds	30
   437                           
   438                           	psect	inittext
   439  0CB1                     init_fetch0:	
   440                           ;	Called with low address in FSR and high address in W
   441                           
   442  0CB1  087E               	movf	btemp,w
   443  0CB2  008A               	movwf	10
   444  0CB3  087F               	movf	btemp+1,w
   445  0CB4  0082               	movwf	2
   446  0CB5                     init_ram0:	
   447                           ;Called with:
   448                           ;	high address of idata address in btemp 
   449                           ;	low address of idata address in btemp+1 
   450                           ;	low address of data in FSR
   451                           ;	high address + 1 of data in btemp-1
   452                           
   453  0CB5  120A  158A  24B1  120A  158A  	fcall	init_fetch0
   454  0CBA  0080               	movwf	0
   455  0CBB  0A84               	incf	4,f
   456  0CBC  0804               	movf	4,w
   457  0CBD  067D               	xorwf	btemp+-1,w
   458  0CBE  1903               	btfsc	3,2
   459  0CBF  3400               	retlw	0
   460  0CC0  0AFF               	incf	btemp+1,f
   461  0CC1  1903               	btfsc	3,2
   462  0CC2  0AFE               	incf	btemp,f
   463  0CC3  2CB5               	goto	init_ram0
   464                           
   465                           	psect	clrtext
   466  0C9C                     clear_ram0:	
   467                           ;	Called with FSR containing the base address, and
   468                           ;	W with the last address+1
   469                           
   470  0C9C  0064               	clrwdt	;clear the watchdog before getting into this loop
   471  0C9D                     clrloop0:
   472  0C9D  0180               	clrf	0	;clear RAM location pointed to by FSR
   473  0C9E  0A84               	incf	4,f	;increment pointer
   474  0C9F  0604               	xorwf	4,w	;XOR with final address
   475  0CA0  1903               	btfsc	3,2	;have we reached the end yet?
   476  0CA1  3400               	retlw	0	;all done for this memory range, return
   477  0CA2  0604               	xorwf	4,w	;XOR again to restore value
   478  0CA3  2C9D               	goto	clrloop0	;do the next byte
   479                           
   480                           	psect	cstackBANK3
   481  0190                     __pcstackBANK3:
   482  0190                     ??_main:
   483                           
   484                           ; 1 bytes @ 0x0
   485  0190                     	ds	3
   486                           
   487                           	psect	cstackBANK1
   488  00DC                     __pcstackBANK1:
   489  00DC                     ?___flge:
   490  00DC                     ??_iniciaPinos:	
   491                           ; 1 bit 
   492                           
   493  00DC                     ??_expandeTela:	
   494                           ; 1 bytes @ 0x0
   495                           
   496  00DC                     ??_recolheTela:	
   497                           ; 1 bytes @ 0x0
   498                           
   499  00DC                     ??_estufaUm:	
   500                           ; 1 bytes @ 0x0
   501                           
   502  00DC                     ??_estufaDois:	
   503                           ; 1 bytes @ 0x0
   504                           
   505  00DC                     ??_estufaTres:	
   506                           ; 1 bytes @ 0x0
   507                           
   508  00DC                     ??_estufaQuatro:	
   509                           ; 1 bytes @ 0x0
   510                           
   511  00DC                     ??_Lcd_Port:	
   512                           ; 1 bytes @ 0x0
   513                           
   514  00DC                     ?___xxtofl:	
   515                           ; 1 bytes @ 0x0
   516                           
   517  00DC                     Lcd_Port@a:	
   518                           ; 4 bytes @ 0x0
   519                           
   520  00DC                     ___flge@ff1:	
   521                           ; 1 bytes @ 0x0
   522                           
   523  00DC                     ___xxtofl@val:	
   524                           ; 4 bytes @ 0x0
   525                           
   526                           
   527                           ; 4 bytes @ 0x0
   528  00DC                     	ds	1
   529  00DD                     ??_Lcd_Cmd:
   530                           
   531                           ; 1 bytes @ 0x1
   532  00DD                     	ds	2
   533  00DF                     Lcd_Cmd@a:
   534                           
   535                           ; 1 bytes @ 0x3
   536  00DF                     	ds	1
   537  00E0                     ??_Lcd_Init:
   538  00E0                     ??___xxtofl:	
   539                           ; 1 bytes @ 0x4
   540                           
   541  00E0                     ___flge@ff2:	
   542                           ; 1 bytes @ 0x4
   543                           
   544                           
   545                           ; 4 bytes @ 0x4
   546  00E0                     	ds	4
   547  00E4                     ??___flge:
   548  00E4                     ___xxtofl@sign:	
   549                           ; 1 bytes @ 0x8
   550                           
   551                           
   552                           ; 1 bytes @ 0x8
   553  00E4                     	ds	1
   554  00E5                     ___xxtofl@exp:
   555                           
   556                           ; 1 bytes @ 0x9
   557  00E5                     	ds	1
   558  00E6                     ___xxtofl@arg:
   559                           
   560                           ; 4 bytes @ 0xA
   561  00E6                     	ds	4
   562  00EA                     ??_lerSensores:
   563                           
   564                           ; 1 bytes @ 0xE
   565  00EA                     	ds	4
   566                           
   567                           	psect	cstackCOMMON
   568  0070                     __pcstackCOMMON:
   569  0070                     ?_iniciaPinos:
   570  0070                     ?_lerSensores:	
   571                           ; 1 bytes @ 0x0
   572                           
   573  0070                     ?_expandeTela:	
   574                           ; 1 bytes @ 0x0
   575                           
   576  0070                     ?_recolheTela:	
   577                           ; 1 bytes @ 0x0
   578                           
   579  0070                     ?_estufaUm:	
   580                           ; 1 bytes @ 0x0
   581                           
   582  0070                     ?_estufaDois:	
   583                           ; 1 bytes @ 0x0
   584                           
   585  0070                     ?_estufaTres:	
   586                           ; 1 bytes @ 0x0
   587                           
   588  0070                     ?_estufaQuatro:	
   589                           ; 1 bytes @ 0x0
   590                           
   591  0070                     ?_atualizaLCD:	
   592                           ; 1 bytes @ 0x0
   593                           
   594  0070                     ?_Lcd_Port:	
   595                           ; 1 bytes @ 0x0
   596                           
   597  0070                     ?_Lcd_Cmd:	
   598                           ; 1 bytes @ 0x0
   599                           
   600  0070                     ?_Lcd_Clear:	
   601                           ; 1 bytes @ 0x0
   602                           
   603  0070                     ?_Lcd_Init:	
   604                           ; 1 bytes @ 0x0
   605                           
   606  0070                     ?_Lcd_Write_Char:	
   607                           ; 1 bytes @ 0x0
   608                           
   609  0070                     ?_Lcd_Write_String:	
   610                           ; 1 bytes @ 0x0
   611                           
   612  0070                     ?_TrataINT:	
   613                           ; 1 bytes @ 0x0
   614                           
   615  0070                     ?i1_Lcd_Port:	
   616                           ; 1 bytes @ 0x0
   617                           
   618  0070                     ??i1_Lcd_Port:	
   619                           ; 1 bytes @ 0x0
   620                           
   621  0070                     ?i1_Lcd_Cmd:	
   622                           ; 1 bytes @ 0x0
   623                           
   624  0070                     ?i1_recolheTela:	
   625                           ; 1 bytes @ 0x0
   626                           
   627  0070                     ??i1_recolheTela:	
   628                           ; 1 bytes @ 0x0
   629                           
   630  0070                     ?i1_expandeTela:	
   631                           ; 1 bytes @ 0x0
   632                           
   633  0070                     ??i1_expandeTela:	
   634                           ; 1 bytes @ 0x0
   635                           
   636  0070                     ?_main:	
   637                           ; 1 bytes @ 0x0
   638                           
   639  0070                     ?___lwdiv:	
   640                           ; 2 bytes @ 0x0
   641                           
   642  0070                     ?___fltol:	
   643                           ; 2 bytes @ 0x0
   644                           
   645  0070                     i1Lcd_Port@a:	
   646                           ; 4 bytes @ 0x0
   647                           
   648  0070                     ___lwdiv@divisor:	
   649                           ; 1 bytes @ 0x0
   650                           
   651  0070                     ___fltol@f1:	
   652                           ; 2 bytes @ 0x0
   653                           
   654                           
   655                           ; 4 bytes @ 0x0
   656  0070                     	ds	1
   657  0071                     ??_Lcd_Write_Char:
   658  0071                     ??i1_Lcd_Cmd:	
   659                           ; 1 bytes @ 0x1
   660                           
   661                           
   662                           ; 1 bytes @ 0x1
   663  0071                     	ds	1
   664  0072                     Lcd_Write_Char@temp:
   665  0072                     ___lwdiv@dividend:	
   666                           ; 1 bytes @ 0x2
   667                           
   668                           
   669                           ; 2 bytes @ 0x2
   670  0072                     	ds	1
   671  0073                     Lcd_Write_Char@y:
   672  0073                     i1Lcd_Cmd@a:	
   673                           ; 1 bytes @ 0x3
   674                           
   675                           
   676                           ; 1 bytes @ 0x3
   677  0073                     	ds	1
   678  0074                     ??_Lcd_Clear:
   679  0074                     ?_Lcd_Set_Cursor:	
   680                           ; 1 bytes @ 0x4
   681                           
   682  0074                     ??___fltol:	
   683                           ; 1 bytes @ 0x4
   684                           
   685  0074                     ??___lwdiv:	
   686                           ; 1 bytes @ 0x4
   687                           
   688  0074                     Lcd_Set_Cursor@b:	
   689                           ; 1 bytes @ 0x4
   690                           
   691  0074                     Lcd_Write_Char@a:	
   692                           ; 1 bytes @ 0x4
   693                           
   694                           
   695                           ; 1 bytes @ 0x4
   696  0074                     	ds	1
   697  0075                     ??_Lcd_Set_Cursor:
   698  0075                     ??_Lcd_Write_String:	
   699                           ; 1 bytes @ 0x5
   700                           
   701  0075                     ___lwdiv@quotient:	
   702                           ; 1 bytes @ 0x5
   703                           
   704                           
   705                           ; 2 bytes @ 0x5
   706  0075                     	ds	1
   707  0076                     Lcd_Write_String@i:
   708                           
   709                           ; 2 bytes @ 0x6
   710  0076                     	ds	1
   711  0077                     Lcd_Set_Cursor@a:
   712  0077                     ___lwdiv@counter:	
   713                           ; 1 bytes @ 0x7
   714                           
   715                           
   716                           ; 1 bytes @ 0x7
   717  0077                     	ds	1
   718  0078                     ?___lwmod:
   719  0078                     Lcd_Set_Cursor@z:	
   720                           ; 2 bytes @ 0x8
   721                           
   722  0078                     Lcd_Write_String@a:	
   723                           ; 1 bytes @ 0x8
   724                           
   725  0078                     ___lwmod@divisor:	
   726                           ; 1 bytes @ 0x8
   727                           
   728                           
   729                           ; 2 bytes @ 0x8
   730  0078                     	ds	1
   731  0079                     Lcd_Set_Cursor@y:
   732  0079                     ___fltol@sign1:	
   733                           ; 1 bytes @ 0x9
   734                           
   735                           
   736                           ; 1 bytes @ 0x9
   737  0079                     	ds	1
   738  007A                     Lcd_Set_Cursor@temp:
   739  007A                     ___fltol@exp1:	
   740                           ; 1 bytes @ 0xA
   741                           
   742  007A                     ___lwmod@dividend:	
   743                           ; 1 bytes @ 0xA
   744                           
   745                           
   746                           ; 2 bytes @ 0xA
   747  007A                     	ds	2
   748  007C                     ??___lwmod:
   749                           
   750                           ; 1 bytes @ 0xC
   751  007C                     	ds	1
   752  007D                     ___lwmod@counter:
   753                           
   754                           ; 1 bytes @ 0xD
   755  007D                     	ds	1
   756                           
   757                           	psect	cstackBANK0
   758  003C                     __pcstackBANK0:
   759  003C                     ?_sprintf:
   760  003C                     sprintf@f:	
   761                           ; 2 bytes @ 0x0
   762                           
   763                           
   764                           ; 1 bytes @ 0x0
   765  003C                     	ds	9
   766  0045                     ??_sprintf:
   767                           
   768                           ; 1 bytes @ 0x9
   769  0045                     	ds	3
   770  0048                     sprintf@ap:
   771                           
   772                           ; 1 bytes @ 0xC
   773  0048                     	ds	1
   774  0049                     sprintf@flag:
   775                           
   776                           ; 1 bytes @ 0xD
   777  0049                     	ds	1
   778  004A                     sprintf@prec:
   779                           
   780                           ; 1 bytes @ 0xE
   781  004A                     	ds	1
   782  004B                     sprintf@val:
   783                           
   784                           ; 2 bytes @ 0xF
   785  004B                     	ds	2
   786  004D                     sprintf@sp:
   787                           
   788                           ; 1 bytes @ 0x11
   789  004D                     	ds	1
   790  004E                     sprintf@c:
   791                           
   792                           ; 1 bytes @ 0x12
   793  004E                     	ds	1
   794  004F                     ??_atualizaLCD:
   795                           
   796                           ; 1 bytes @ 0x13
   797  004F                     	ds	2
   798  0051                     ??_TrataINT:
   799                           
   800                           ; 1 bytes @ 0x15
   801  0051                     	ds	7
   802                           
   803                           	psect	maintext
   804  002F                     __pmaintext:	
   805 ;;
   806 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   807 ;;
   808 ;; *************** function _main *****************
   809 ;; Defined at:
   810 ;;		line 39 in file "main.c"
   811 ;; Parameters:    Size  Location     Type
   812 ;;		None
   813 ;; Auto vars:     Size  Location     Type
   814 ;;		None
   815 ;; Return value:  Size  Location     Type
   816 ;;                  2  173[None  ] int 
   817 ;; Registers used:
   818 ;;		wreg, status,2, status,0, pclath, cstack
   819 ;; Tracked objects:
   820 ;;		On entry : B00/0
   821 ;;		On exit  : 0/0
   822 ;;		Unchanged: 0/0
   823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   824 ;;      Params:         0       0       0       0       0
   825 ;;      Locals:         0       0       0       0       0
   826 ;;      Temps:          0       0       0       3       0
   827 ;;      Totals:         0       0       0       3       0
   828 ;;Total ram usage:        3 bytes
   829 ;; Hardware stack levels required when called: 8
   830 ;; This function calls:
   831 ;;		_Lcd_Init
   832 ;;		___flge
   833 ;;		_estufaDois
   834 ;;		_estufaQuatro
   835 ;;		_estufaTres
   836 ;;		_estufaUm
   837 ;;		_expandeTela
   838 ;;		_iniciaPinos
   839 ;;		_lerSensores
   840 ;;		_recolheTela
   841 ;; This function is called by:
   842 ;;		Startup code after reset
   843 ;; This function uses a non-reentrant model
   844 ;;
   845                           
   846                           
   847                           ;psect for function _main
   848  002F                     _main:
   849  002F                     l2391:	
   850                           ;incstack = 0
   851                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   852                           
   853                           
   854                           ;main.c: 41:     iniciaPinos();
   855  002F  120A  118A  27AE  120A  118A  	fcall	_iniciaPinos
   856                           
   857                           ;main.c: 42:     Lcd_Init();
   858  0034  120A  118A  274B  120A  118A  	fcall	_Lcd_Init
   859  0039                     l174:	
   860                           ;main.c: 43:     while(1)
   861                           
   862                           
   863                           ;main.c: 44:     {;main.c: 45:         lerSensores();
   864  0039  120A  118A  2210  120A  118A  	fcall	_lerSensores
   865                           
   866                           ;main.c: 48:         if(valor_entry0 > 192 )
   867  003E  3043               	movlw	67
   868  003F  1683               	bsf	3,5	;RP0=1, select bank1
   869  0040  1303               	bcf	3,6	;RP1=0, select bank1
   870  0041  00DF               	movwf	(___flge@ff1+3)^(0+128)
   871  0042  3040               	movlw	64
   872  0043  00DE               	movwf	(___flge@ff1+2)^(0+128)
   873  0044  3000               	movlw	0
   874  0045  00DD               	movwf	(___flge@ff1+1)^(0+128)
   875  0046  3000               	movlw	0
   876  0047  00DC               	movwf	___flge@ff1^(0+128)
   877  0048  1283               	bcf	3,5	;RP0=0, select bank0
   878  0049  1303               	bcf	3,6	;RP1=0, select bank0
   879  004A  083B               	movf	_valor_entry0+3,w
   880  004B  1683               	bsf	3,5	;RP0=1, select bank1
   881  004C  1303               	bcf	3,6	;RP1=0, select bank1
   882  004D  00E3               	movwf	(___flge@ff2+3)^(0+128)
   883  004E  1283               	bcf	3,5	;RP0=0, select bank0
   884  004F  1303               	bcf	3,6	;RP1=0, select bank0
   885  0050  083A               	movf	_valor_entry0+2,w
   886  0051  1683               	bsf	3,5	;RP0=1, select bank1
   887  0052  1303               	bcf	3,6	;RP1=0, select bank1
   888  0053  00E2               	movwf	(___flge@ff2+2)^(0+128)
   889  0054  1283               	bcf	3,5	;RP0=0, select bank0
   890  0055  1303               	bcf	3,6	;RP1=0, select bank0
   891  0056  0839               	movf	_valor_entry0+1,w
   892  0057  1683               	bsf	3,5	;RP0=1, select bank1
   893  0058  1303               	bcf	3,6	;RP1=0, select bank1
   894  0059  00E1               	movwf	(___flge@ff2+1)^(0+128)
   895  005A  1283               	bcf	3,5	;RP0=0, select bank0
   896  005B  1303               	bcf	3,6	;RP1=0, select bank0
   897  005C  0838               	movf	_valor_entry0,w
   898  005D  1683               	bsf	3,5	;RP0=1, select bank1
   899  005E  1303               	bcf	3,6	;RP1=0, select bank1
   900  005F  00E0               	movwf	___flge@ff2^(0+128)
   901  0060  120A  118A  262D  120A  118A  	fcall	___flge
   902  0065  1803               	btfsc	3,0
   903  0066  2868               	goto	u1921
   904  0067  2869               	goto	u1920
   905  0068                     u1921:
   906  0068  286E               	goto	l175
   907  0069                     u1920:
   908  0069                     l2393:
   909                           
   910                           ;main.c: 49:         {;main.c: 50:             expandeTela();
   911  0069  120A  158A  2616  120A  118A  	fcall	_expandeTela
   912  006E                     l175:	
   913                           ;main.c: 51:         }
   914                           
   915                           
   916                           ;main.c: 54:         if(valor_entry2 < 127)
   917  006E  1283               	bcf	3,5	;RP0=0, select bank0
   918  006F  1303               	bcf	3,6	;RP1=0, select bank0
   919  0070  0833               	movf	_valor_entry2+3,w
   920  0071  1683               	bsf	3,5	;RP0=1, select bank1
   921  0072  1303               	bcf	3,6	;RP1=0, select bank1
   922  0073  00DF               	movwf	(___flge@ff1+3)^(0+128)
   923  0074  1283               	bcf	3,5	;RP0=0, select bank0
   924  0075  1303               	bcf	3,6	;RP1=0, select bank0
   925  0076  0832               	movf	_valor_entry2+2,w
   926  0077  1683               	bsf	3,5	;RP0=1, select bank1
   927  0078  1303               	bcf	3,6	;RP1=0, select bank1
   928  0079  00DE               	movwf	(___flge@ff1+2)^(0+128)
   929  007A  1283               	bcf	3,5	;RP0=0, select bank0
   930  007B  1303               	bcf	3,6	;RP1=0, select bank0
   931  007C  0831               	movf	_valor_entry2+1,w
   932  007D  1683               	bsf	3,5	;RP0=1, select bank1
   933  007E  1303               	bcf	3,6	;RP1=0, select bank1
   934  007F  00DD               	movwf	(___flge@ff1+1)^(0+128)
   935  0080  1283               	bcf	3,5	;RP0=0, select bank0
   936  0081  1303               	bcf	3,6	;RP1=0, select bank0
   937  0082  0830               	movf	_valor_entry2,w
   938  0083  1683               	bsf	3,5	;RP0=1, select bank1
   939  0084  1303               	bcf	3,6	;RP1=0, select bank1
   940  0085  00DC               	movwf	___flge@ff1^(0+128)
   941  0086  3042               	movlw	66
   942  0087  00E3               	movwf	(___flge@ff2+3)^(0+128)
   943  0088  30FE               	movlw	254
   944  0089  00E2               	movwf	(___flge@ff2+2)^(0+128)
   945  008A  3000               	movlw	0
   946  008B  00E1               	movwf	(___flge@ff2+1)^(0+128)
   947  008C  3000               	movlw	0
   948  008D  00E0               	movwf	___flge@ff2^(0+128)
   949  008E  120A  118A  262D  120A  118A  	fcall	___flge
   950  0093  1803               	btfsc	3,0
   951  0094  2896               	goto	u1931
   952  0095  2897               	goto	u1930
   953  0096                     u1931:
   954  0096  289D               	goto	l2397
   955  0097                     u1930:
   956  0097                     l2395:
   957                           
   958                           ;main.c: 55:         {;main.c: 56:             recolheTela();
   959  0097  120A  158A  25BE  120A  118A  	fcall	_recolheTela
   960                           
   961                           ;main.c: 57:         }
   962  009C  28A2               	goto	l177
   963  009D                     l2397:
   964                           
   965                           ;main.c: 59:         {;main.c: 60:             expandeTela();
   966  009D  120A  158A  2616  120A  118A  	fcall	_expandeTela
   967  00A2                     l177:	
   968                           ;main.c: 61:         }
   969                           
   970                           
   971                           ;main.c: 64:         if(valor_entry1 < 64)
   972  00A2  1283               	bcf	3,5	;RP0=0, select bank0
   973  00A3  1303               	bcf	3,6	;RP1=0, select bank0
   974  00A4  0837               	movf	_valor_entry1+3,w
   975  00A5  1683               	bsf	3,5	;RP0=1, select bank1
   976  00A6  1303               	bcf	3,6	;RP1=0, select bank1
   977  00A7  00DF               	movwf	(___flge@ff1+3)^(0+128)
   978  00A8  1283               	bcf	3,5	;RP0=0, select bank0
   979  00A9  1303               	bcf	3,6	;RP1=0, select bank0
   980  00AA  0836               	movf	_valor_entry1+2,w
   981  00AB  1683               	bsf	3,5	;RP0=1, select bank1
   982  00AC  1303               	bcf	3,6	;RP1=0, select bank1
   983  00AD  00DE               	movwf	(___flge@ff1+2)^(0+128)
   984  00AE  1283               	bcf	3,5	;RP0=0, select bank0
   985  00AF  1303               	bcf	3,6	;RP1=0, select bank0
   986  00B0  0835               	movf	_valor_entry1+1,w
   987  00B1  1683               	bsf	3,5	;RP0=1, select bank1
   988  00B2  1303               	bcf	3,6	;RP1=0, select bank1
   989  00B3  00DD               	movwf	(___flge@ff1+1)^(0+128)
   990  00B4  1283               	bcf	3,5	;RP0=0, select bank0
   991  00B5  1303               	bcf	3,6	;RP1=0, select bank0
   992  00B6  0834               	movf	_valor_entry1,w
   993  00B7  1683               	bsf	3,5	;RP0=1, select bank1
   994  00B8  1303               	bcf	3,6	;RP1=0, select bank1
   995  00B9  00DC               	movwf	___flge@ff1^(0+128)
   996  00BA  3042               	movlw	66
   997  00BB  00E3               	movwf	(___flge@ff2+3)^(0+128)
   998  00BC  3080               	movlw	128
   999  00BD  00E2               	movwf	(___flge@ff2+2)^(0+128)
  1000  00BE  3000               	movlw	0
  1001  00BF  00E1               	movwf	(___flge@ff2+1)^(0+128)
  1002  00C0  3000               	movlw	0
  1003  00C1  00E0               	movwf	___flge@ff2^(0+128)
  1004  00C2  120A  118A  262D  120A  118A  	fcall	___flge
  1005  00C7  1803               	btfsc	3,0
  1006  00C8  28CA               	goto	u1941
  1007  00C9  28CB               	goto	u1940
  1008  00CA                     u1941:
  1009  00CA  28F9               	goto	l178
  1010  00CB                     u1940:
  1011  00CB                     l2399:
  1012                           
  1013                           ;main.c: 65:         {;main.c: 68:             if(valor_entry3 < 128)
  1014  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  1015  00CC  1303               	bcf	3,6	;RP1=0, select bank0
  1016  00CD  082F               	movf	_valor_entry3+3,w
  1017  00CE  1683               	bsf	3,5	;RP0=1, select bank1
  1018  00CF  1303               	bcf	3,6	;RP1=0, select bank1
  1019  00D0  00DF               	movwf	(___flge@ff1+3)^(0+128)
  1020  00D1  1283               	bcf	3,5	;RP0=0, select bank0
  1021  00D2  1303               	bcf	3,6	;RP1=0, select bank0
  1022  00D3  082E               	movf	_valor_entry3+2,w
  1023  00D4  1683               	bsf	3,5	;RP0=1, select bank1
  1024  00D5  1303               	bcf	3,6	;RP1=0, select bank1
  1025  00D6  00DE               	movwf	(___flge@ff1+2)^(0+128)
  1026  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  1027  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  1028  00D9  082D               	movf	_valor_entry3+1,w
  1029  00DA  1683               	bsf	3,5	;RP0=1, select bank1
  1030  00DB  1303               	bcf	3,6	;RP1=0, select bank1
  1031  00DC  00DD               	movwf	(___flge@ff1+1)^(0+128)
  1032  00DD  1283               	bcf	3,5	;RP0=0, select bank0
  1033  00DE  1303               	bcf	3,6	;RP1=0, select bank0
  1034  00DF  082C               	movf	_valor_entry3,w
  1035  00E0  1683               	bsf	3,5	;RP0=1, select bank1
  1036  00E1  1303               	bcf	3,6	;RP1=0, select bank1
  1037  00E2  00DC               	movwf	___flge@ff1^(0+128)
  1038  00E3  3043               	movlw	67
  1039  00E4  00E3               	movwf	(___flge@ff2+3)^(0+128)
  1040  00E5  3000               	movlw	0
  1041  00E6  00E2               	movwf	(___flge@ff2+2)^(0+128)
  1042  00E7  3000               	movlw	0
  1043  00E8  00E1               	movwf	(___flge@ff2+1)^(0+128)
  1044  00E9  3000               	movlw	0
  1045  00EA  00E0               	movwf	___flge@ff2^(0+128)
  1046  00EB  120A  118A  262D  120A  118A  	fcall	___flge
  1047  00F0  1803               	btfsc	3,0
  1048  00F1  28F3               	goto	u1951
  1049  00F2  28F4               	goto	u1950
  1050  00F3                     u1951:
  1051  00F3  28F9               	goto	l178
  1052  00F4                     u1950:
  1053  00F4                     l2401:
  1054                           
  1055                           ;main.c: 69:             {;main.c: 70:                 estufaUm();
  1056  00F4  120A  158A  2503  120A  118A  	fcall	_estufaUm
  1057  00F9                     l178:	
  1058                           ;main.c: 72:         }
  1059                           
  1060                           
  1061                           ;main.c: 73:         if (valor_entry1 < 128)
  1062  00F9  1283               	bcf	3,5	;RP0=0, select bank0
  1063  00FA  1303               	bcf	3,6	;RP1=0, select bank0
  1064  00FB  0837               	movf	_valor_entry1+3,w
  1065  00FC  1683               	bsf	3,5	;RP0=1, select bank1
  1066  00FD  1303               	bcf	3,6	;RP1=0, select bank1
  1067  00FE  00DF               	movwf	(___flge@ff1+3)^(0+128)
  1068  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  1069  0100  1303               	bcf	3,6	;RP1=0, select bank0
  1070  0101  0836               	movf	_valor_entry1+2,w
  1071  0102  1683               	bsf	3,5	;RP0=1, select bank1
  1072  0103  1303               	bcf	3,6	;RP1=0, select bank1
  1073  0104  00DE               	movwf	(___flge@ff1+2)^(0+128)
  1074  0105  1283               	bcf	3,5	;RP0=0, select bank0
  1075  0106  1303               	bcf	3,6	;RP1=0, select bank0
  1076  0107  0835               	movf	_valor_entry1+1,w
  1077  0108  1683               	bsf	3,5	;RP0=1, select bank1
  1078  0109  1303               	bcf	3,6	;RP1=0, select bank1
  1079  010A  00DD               	movwf	(___flge@ff1+1)^(0+128)
  1080  010B  1283               	bcf	3,5	;RP0=0, select bank0
  1081  010C  1303               	bcf	3,6	;RP1=0, select bank0
  1082  010D  0834               	movf	_valor_entry1,w
  1083  010E  1683               	bsf	3,5	;RP0=1, select bank1
  1084  010F  1303               	bcf	3,6	;RP1=0, select bank1
  1085  0110  00DC               	movwf	___flge@ff1^(0+128)
  1086  0111  3043               	movlw	67
  1087  0112  00E3               	movwf	(___flge@ff2+3)^(0+128)
  1088  0113  3000               	movlw	0
  1089  0114  00E2               	movwf	(___flge@ff2+2)^(0+128)
  1090  0115  3000               	movlw	0
  1091  0116  00E1               	movwf	(___flge@ff2+1)^(0+128)
  1092  0117  3000               	movlw	0
  1093  0118  00E0               	movwf	___flge@ff2^(0+128)
  1094  0119  120A  118A  262D  120A  118A  	fcall	___flge
  1095  011E  1803               	btfsc	3,0
  1096  011F  2921               	goto	u1961
  1097  0120  2922               	goto	u1960
  1098  0121                     u1961:
  1099  0121  2950               	goto	l180
  1100  0122                     u1960:
  1101  0122                     l2403:
  1102                           
  1103                           ;main.c: 74:         {;main.c: 77:             if(valor_entry4 < 128)
  1104  0122  1283               	bcf	3,5	;RP0=0, select bank0
  1105  0123  1303               	bcf	3,6	;RP1=0, select bank0
  1106  0124  082B               	movf	_valor_entry4+3,w
  1107  0125  1683               	bsf	3,5	;RP0=1, select bank1
  1108  0126  1303               	bcf	3,6	;RP1=0, select bank1
  1109  0127  00DF               	movwf	(___flge@ff1+3)^(0+128)
  1110  0128  1283               	bcf	3,5	;RP0=0, select bank0
  1111  0129  1303               	bcf	3,6	;RP1=0, select bank0
  1112  012A  082A               	movf	_valor_entry4+2,w
  1113  012B  1683               	bsf	3,5	;RP0=1, select bank1
  1114  012C  1303               	bcf	3,6	;RP1=0, select bank1
  1115  012D  00DE               	movwf	(___flge@ff1+2)^(0+128)
  1116  012E  1283               	bcf	3,5	;RP0=0, select bank0
  1117  012F  1303               	bcf	3,6	;RP1=0, select bank0
  1118  0130  0829               	movf	_valor_entry4+1,w
  1119  0131  1683               	bsf	3,5	;RP0=1, select bank1
  1120  0132  1303               	bcf	3,6	;RP1=0, select bank1
  1121  0133  00DD               	movwf	(___flge@ff1+1)^(0+128)
  1122  0134  1283               	bcf	3,5	;RP0=0, select bank0
  1123  0135  1303               	bcf	3,6	;RP1=0, select bank0
  1124  0136  0828               	movf	_valor_entry4,w
  1125  0137  1683               	bsf	3,5	;RP0=1, select bank1
  1126  0138  1303               	bcf	3,6	;RP1=0, select bank1
  1127  0139  00DC               	movwf	___flge@ff1^(0+128)
  1128  013A  3043               	movlw	67
  1129  013B  00E3               	movwf	(___flge@ff2+3)^(0+128)
  1130  013C  3000               	movlw	0
  1131  013D  00E2               	movwf	(___flge@ff2+2)^(0+128)
  1132  013E  3000               	movlw	0
  1133  013F  00E1               	movwf	(___flge@ff2+1)^(0+128)
  1134  0140  3000               	movlw	0
  1135  0141  00E0               	movwf	___flge@ff2^(0+128)
  1136  0142  120A  118A  262D  120A  118A  	fcall	___flge
  1137  0147  1803               	btfsc	3,0
  1138  0148  294A               	goto	u1971
  1139  0149  294B               	goto	u1970
  1140  014A                     u1971:
  1141  014A  2950               	goto	l180
  1142  014B                     u1970:
  1143  014B                     l2405:
  1144                           
  1145                           ;main.c: 78:             {;main.c: 79:                 estufaDois();
  1146  014B  120A  158A  24C4  120A  118A  	fcall	_estufaDois
  1147  0150                     l180:	
  1148                           ;main.c: 81:         }
  1149                           
  1150                           
  1151                           ;main.c: 82:         if (valor_entry1 < 192)
  1152  0150  1283               	bcf	3,5	;RP0=0, select bank0
  1153  0151  1303               	bcf	3,6	;RP1=0, select bank0
  1154  0152  0837               	movf	_valor_entry1+3,w
  1155  0153  1683               	bsf	3,5	;RP0=1, select bank1
  1156  0154  1303               	bcf	3,6	;RP1=0, select bank1
  1157  0155  00DF               	movwf	(___flge@ff1+3)^(0+128)
  1158  0156  1283               	bcf	3,5	;RP0=0, select bank0
  1159  0157  1303               	bcf	3,6	;RP1=0, select bank0
  1160  0158  0836               	movf	_valor_entry1+2,w
  1161  0159  1683               	bsf	3,5	;RP0=1, select bank1
  1162  015A  1303               	bcf	3,6	;RP1=0, select bank1
  1163  015B  00DE               	movwf	(___flge@ff1+2)^(0+128)
  1164  015C  1283               	bcf	3,5	;RP0=0, select bank0
  1165  015D  1303               	bcf	3,6	;RP1=0, select bank0
  1166  015E  0835               	movf	_valor_entry1+1,w
  1167  015F  1683               	bsf	3,5	;RP0=1, select bank1
  1168  0160  1303               	bcf	3,6	;RP1=0, select bank1
  1169  0161  00DD               	movwf	(___flge@ff1+1)^(0+128)
  1170  0162  1283               	bcf	3,5	;RP0=0, select bank0
  1171  0163  1303               	bcf	3,6	;RP1=0, select bank0
  1172  0164  0834               	movf	_valor_entry1,w
  1173  0165  1683               	bsf	3,5	;RP0=1, select bank1
  1174  0166  1303               	bcf	3,6	;RP1=0, select bank1
  1175  0167  00DC               	movwf	___flge@ff1^(0+128)
  1176  0168  3043               	movlw	67
  1177  0169  00E3               	movwf	(___flge@ff2+3)^(0+128)
  1178  016A  3040               	movlw	64
  1179  016B  00E2               	movwf	(___flge@ff2+2)^(0+128)
  1180  016C  3000               	movlw	0
  1181  016D  00E1               	movwf	(___flge@ff2+1)^(0+128)
  1182  016E  3000               	movlw	0
  1183  016F  00E0               	movwf	___flge@ff2^(0+128)
  1184  0170  120A  118A  262D  120A  118A  	fcall	___flge
  1185  0175  1803               	btfsc	3,0
  1186  0176  2978               	goto	u1981
  1187  0177  2979               	goto	u1980
  1188  0178                     u1981:
  1189  0178  29A7               	goto	l182
  1190  0179                     u1980:
  1191  0179                     l2407:
  1192                           
  1193                           ;main.c: 83:         {;main.c: 86:            if(valor_entry5 < 128)
  1194  0179  1283               	bcf	3,5	;RP0=0, select bank0
  1195  017A  1303               	bcf	3,6	;RP1=0, select bank0
  1196  017B  0827               	movf	_valor_entry5+3,w
  1197  017C  1683               	bsf	3,5	;RP0=1, select bank1
  1198  017D  1303               	bcf	3,6	;RP1=0, select bank1
  1199  017E  00DF               	movwf	(___flge@ff1+3)^(0+128)
  1200  017F  1283               	bcf	3,5	;RP0=0, select bank0
  1201  0180  1303               	bcf	3,6	;RP1=0, select bank0
  1202  0181  0826               	movf	_valor_entry5+2,w
  1203  0182  1683               	bsf	3,5	;RP0=1, select bank1
  1204  0183  1303               	bcf	3,6	;RP1=0, select bank1
  1205  0184  00DE               	movwf	(___flge@ff1+2)^(0+128)
  1206  0185  1283               	bcf	3,5	;RP0=0, select bank0
  1207  0186  1303               	bcf	3,6	;RP1=0, select bank0
  1208  0187  0825               	movf	_valor_entry5+1,w
  1209  0188  1683               	bsf	3,5	;RP0=1, select bank1
  1210  0189  1303               	bcf	3,6	;RP1=0, select bank1
  1211  018A  00DD               	movwf	(___flge@ff1+1)^(0+128)
  1212  018B  1283               	bcf	3,5	;RP0=0, select bank0
  1213  018C  1303               	bcf	3,6	;RP1=0, select bank0
  1214  018D  0824               	movf	_valor_entry5,w
  1215  018E  1683               	bsf	3,5	;RP0=1, select bank1
  1216  018F  1303               	bcf	3,6	;RP1=0, select bank1
  1217  0190  00DC               	movwf	___flge@ff1^(0+128)
  1218  0191  3043               	movlw	67
  1219  0192  00E3               	movwf	(___flge@ff2+3)^(0+128)
  1220  0193  3000               	movlw	0
  1221  0194  00E2               	movwf	(___flge@ff2+2)^(0+128)
  1222  0195  3000               	movlw	0
  1223  0196  00E1               	movwf	(___flge@ff2+1)^(0+128)
  1224  0197  3000               	movlw	0
  1225  0198  00E0               	movwf	___flge@ff2^(0+128)
  1226  0199  120A  118A  262D  120A  118A  	fcall	___flge
  1227  019E  1803               	btfsc	3,0
  1228  019F  29A1               	goto	u1991
  1229  01A0  29A2               	goto	u1990
  1230  01A1                     u1991:
  1231  01A1  29A7               	goto	l182
  1232  01A2                     u1990:
  1233  01A2                     l2409:
  1234                           
  1235                           ;main.c: 87:            {;main.c: 88:                estufaTres();
  1236  01A2  120A  158A  24EE  120A  118A  	fcall	_estufaTres
  1237  01A7                     l182:	
  1238                           ;main.c: 90:         }
  1239                           
  1240                           
  1241                           ;main.c: 91:         if (valor_entry1 < 256)
  1242  01A7  1283               	bcf	3,5	;RP0=0, select bank0
  1243  01A8  1303               	bcf	3,6	;RP1=0, select bank0
  1244  01A9  0837               	movf	_valor_entry1+3,w
  1245  01AA  1683               	bsf	3,5	;RP0=1, select bank1
  1246  01AB  1303               	bcf	3,6	;RP1=0, select bank1
  1247  01AC  00DF               	movwf	(___flge@ff1+3)^(0+128)
  1248  01AD  1283               	bcf	3,5	;RP0=0, select bank0
  1249  01AE  1303               	bcf	3,6	;RP1=0, select bank0
  1250  01AF  0836               	movf	_valor_entry1+2,w
  1251  01B0  1683               	bsf	3,5	;RP0=1, select bank1
  1252  01B1  1303               	bcf	3,6	;RP1=0, select bank1
  1253  01B2  00DE               	movwf	(___flge@ff1+2)^(0+128)
  1254  01B3  1283               	bcf	3,5	;RP0=0, select bank0
  1255  01B4  1303               	bcf	3,6	;RP1=0, select bank0
  1256  01B5  0835               	movf	_valor_entry1+1,w
  1257  01B6  1683               	bsf	3,5	;RP0=1, select bank1
  1258  01B7  1303               	bcf	3,6	;RP1=0, select bank1
  1259  01B8  00DD               	movwf	(___flge@ff1+1)^(0+128)
  1260  01B9  1283               	bcf	3,5	;RP0=0, select bank0
  1261  01BA  1303               	bcf	3,6	;RP1=0, select bank0
  1262  01BB  0834               	movf	_valor_entry1,w
  1263  01BC  1683               	bsf	3,5	;RP0=1, select bank1
  1264  01BD  1303               	bcf	3,6	;RP1=0, select bank1
  1265  01BE  00DC               	movwf	___flge@ff1^(0+128)
  1266  01BF  3043               	movlw	67
  1267  01C0  00E3               	movwf	(___flge@ff2+3)^(0+128)
  1268  01C1  3080               	movlw	128
  1269  01C2  00E2               	movwf	(___flge@ff2+2)^(0+128)
  1270  01C3  3000               	movlw	0
  1271  01C4  00E1               	movwf	(___flge@ff2+1)^(0+128)
  1272  01C5  3000               	movlw	0
  1273  01C6  00E0               	movwf	___flge@ff2^(0+128)
  1274  01C7  120A  118A  262D  120A  118A  	fcall	___flge
  1275  01CC  1803               	btfsc	3,0
  1276  01CD  29CF               	goto	u2001
  1277  01CE  29D0               	goto	u2000
  1278  01CF                     u2001:
  1279  01CF  29FE               	goto	l2415
  1280  01D0                     u2000:
  1281  01D0                     l2411:
  1282                           
  1283                           ;main.c: 92:         {;main.c: 95:             if(valor_entry6 < 128)
  1284  01D0  1283               	bcf	3,5	;RP0=0, select bank0
  1285  01D1  1303               	bcf	3,6	;RP1=0, select bank0
  1286  01D2  0823               	movf	_valor_entry6+3,w
  1287  01D3  1683               	bsf	3,5	;RP0=1, select bank1
  1288  01D4  1303               	bcf	3,6	;RP1=0, select bank1
  1289  01D5  00DF               	movwf	(___flge@ff1+3)^(0+128)
  1290  01D6  1283               	bcf	3,5	;RP0=0, select bank0
  1291  01D7  1303               	bcf	3,6	;RP1=0, select bank0
  1292  01D8  0822               	movf	_valor_entry6+2,w
  1293  01D9  1683               	bsf	3,5	;RP0=1, select bank1
  1294  01DA  1303               	bcf	3,6	;RP1=0, select bank1
  1295  01DB  00DE               	movwf	(___flge@ff1+2)^(0+128)
  1296  01DC  1283               	bcf	3,5	;RP0=0, select bank0
  1297  01DD  1303               	bcf	3,6	;RP1=0, select bank0
  1298  01DE  0821               	movf	_valor_entry6+1,w
  1299  01DF  1683               	bsf	3,5	;RP0=1, select bank1
  1300  01E0  1303               	bcf	3,6	;RP1=0, select bank1
  1301  01E1  00DD               	movwf	(___flge@ff1+1)^(0+128)
  1302  01E2  1283               	bcf	3,5	;RP0=0, select bank0
  1303  01E3  1303               	bcf	3,6	;RP1=0, select bank0
  1304  01E4  0820               	movf	_valor_entry6,w
  1305  01E5  1683               	bsf	3,5	;RP0=1, select bank1
  1306  01E6  1303               	bcf	3,6	;RP1=0, select bank1
  1307  01E7  00DC               	movwf	___flge@ff1^(0+128)
  1308  01E8  3043               	movlw	67
  1309  01E9  00E3               	movwf	(___flge@ff2+3)^(0+128)
  1310  01EA  3000               	movlw	0
  1311  01EB  00E2               	movwf	(___flge@ff2+2)^(0+128)
  1312  01EC  3000               	movlw	0
  1313  01ED  00E1               	movwf	(___flge@ff2+1)^(0+128)
  1314  01EE  3000               	movlw	0
  1315  01EF  00E0               	movwf	___flge@ff2^(0+128)
  1316  01F0  120A  118A  262D  120A  118A  	fcall	___flge
  1317  01F5  1803               	btfsc	3,0
  1318  01F6  29F8               	goto	u2011
  1319  01F7  29F9               	goto	u2010
  1320  01F8                     u2011:
  1321  01F8  29FE               	goto	l2415
  1322  01F9                     u2010:
  1323  01F9                     l2413:
  1324                           
  1325                           ;main.c: 96:             {;main.c: 97:                 estufaQuatro();
  1326  01F9  120A  158A  24D9  120A  118A  	fcall	_estufaQuatro
  1327  01FE                     l2415:
  1328                           
  1329                           ;main.c: 102:         _delay((unsigned long)((250)*(4000000/4000.0)));
  1330  01FE  3002               	movlw	2
  1331  01FF  1683               	bsf	3,5	;RP0=1, select bank3
  1332  0200  1703               	bsf	3,6	;RP1=1, select bank3
  1333  0201  0092               	movwf	(??_main^(0+384)+2)
  1334  0202  3045               	movlw	69
  1335  0203  0091               	movwf	(??_main^(0+384)+1)
  1336  0204  30A9               	movlw	169
  1337  0205  0090               	movwf	??_main^(0+384)
  1338  0206                     u2027:
  1339  0206  0B90               	decfsz	??_main^(0+384),f
  1340  0207  2A06               	goto	u2027
  1341  0208  0B91               	decfsz	(??_main^(0+384)+1),f
  1342  0209  2A06               	goto	u2027
  1343  020A  0B92               	decfsz	(??_main^(0+384)+2),f
  1344  020B  2A06               	goto	u2027
  1345  020C  2839               	goto	l174
  1346  020D  120A  118A  2812   	ljmp	start
  1347  0210                     __end_of_main:
  1348                           
  1349                           	psect	text1
  1350  0DBE                     __ptext1:	
  1351 ;; *************** function _recolheTela *****************
  1352 ;; Defined at:
  1353 ;;		line 233 in file "main.c"
  1354 ;; Parameters:    Size  Location     Type
  1355 ;;		None
  1356 ;; Auto vars:     Size  Location     Type
  1357 ;;		None
  1358 ;; Return value:  Size  Location     Type
  1359 ;;                  1    wreg      void 
  1360 ;; Registers used:
  1361 ;;		wreg
  1362 ;; Tracked objects:
  1363 ;;		On entry : 0/0
  1364 ;;		On exit  : 0/0
  1365 ;;		Unchanged: 0/0
  1366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1367 ;;      Params:         0       0       0       0       0
  1368 ;;      Locals:         0       0       0       0       0
  1369 ;;      Temps:          0       0       2       0       0
  1370 ;;      Totals:         0       0       2       0       0
  1371 ;;Total ram usage:        2 bytes
  1372 ;; Hardware stack levels used: 1
  1373 ;; Hardware stack levels required when called: 5
  1374 ;; This function calls:
  1375 ;;		Nothing
  1376 ;; This function is called by:
  1377 ;;		_main
  1378 ;; This function uses a non-reentrant model
  1379 ;;
  1380                           
  1381                           
  1382                           ;psect for function _recolheTela
  1383  0DBE                     _recolheTela:
  1384  0DBE                     l2329:	
  1385                           ;incstack = 0
  1386                           ; Regs used in _recolheTela: [wreg]
  1387                           
  1388                           
  1389                           ;main.c: 235:     while(RE2 == 0)
  1390  0DBE  2DD6               	goto	l2333
  1391  0DBF                     l215:
  1392                           
  1393                           ;main.c: 236:     {;main.c: 238:         RD5 = 1;
  1394  0DBF  1688               	bsf	8,5	;volatile
  1395                           
  1396                           ;main.c: 239:         RD3 = 1;
  1397  0DC0  1588               	bsf	8,3	;volatile
  1398                           
  1399                           ;main.c: 240:         RD1 = 1;
  1400  0DC1  1488               	bsf	8,1	;volatile
  1401                           
  1402                           ;main.c: 241:         RC0 = 1;
  1403  0DC2  1407               	bsf	7,0	;volatile
  1404                           
  1405                           ;main.c: 244:         RD4 = 0;
  1406  0DC3  1208               	bcf	8,4	;volatile
  1407                           
  1408                           ;main.c: 245:         RC1 = 1;
  1409  0DC4  1487               	bsf	7,1	;volatile
  1410                           
  1411                           ;main.c: 246:         RD2 = 0;
  1412  0DC5  1108               	bcf	8,2	;volatile
  1413                           
  1414                           ;main.c: 247:         RD6 = 1;
  1415  0DC6  1708               	bsf	8,6	;volatile
  1416                           
  1417                           ;main.c: 249:         RD0 = 0;
  1418  0DC7  1008               	bcf	8,0	;volatile
  1419                           
  1420                           ;main.c: 250:         RC3 = 1;
  1421  0DC8  1587               	bsf	7,3	;volatile
  1422                           
  1423                           ;main.c: 251:         RC2 = 0;
  1424  0DC9  1107               	bcf	7,2	;volatile
  1425                           
  1426                           ;main.c: 252:         RD7 = 1;
  1427  0DCA  1788               	bsf	8,7	;volatile
  1428  0DCB                     l2331:
  1429                           
  1430                           ;main.c: 254:         _delay((unsigned long)((20)*(4000000/4000.0)));
  1431  0DCB  301A               	movlw	26
  1432  0DCC  1683               	bsf	3,5	;RP0=1, select bank1
  1433  0DCD  1303               	bcf	3,6	;RP1=0, select bank1
  1434  0DCE  00DD               	movwf	(??_recolheTela^(0+128)+1)
  1435  0DCF  30F7               	movlw	247
  1436  0DD0  00DC               	movwf	??_recolheTela^(0+128)
  1437  0DD1                     u2037:
  1438  0DD1  0BDC               	decfsz	??_recolheTela^(0+128),f
  1439  0DD2  2DD1               	goto	u2037
  1440  0DD3  0BDD               	decfsz	(??_recolheTela^(0+128)+1),f
  1441  0DD4  2DD1               	goto	u2037
  1442  0DD5  2DD6               	nop2
  1443  0DD6                     l2333:
  1444                           
  1445                           ;main.c: 235:     while(RE2 == 0)
  1446  0DD6  1283               	bcf	3,5	;RP0=0, select bank0
  1447  0DD7  1303               	bcf	3,6	;RP1=0, select bank0
  1448  0DD8  1D09               	btfss	9,2	;volatile
  1449  0DD9  2DDB               	goto	u1841
  1450  0DDA  2DDC               	goto	u1840
  1451  0DDB                     u1841:
  1452  0DDB  2DBF               	goto	l215
  1453  0DDC                     u1840:
  1454  0DDC                     l216:
  1455                           
  1456                           ;main.c: 258:     RD4 = 1;
  1457  0DDC  1608               	bsf	8,4	;volatile
  1458                           
  1459                           ;main.c: 259:     RC1 = 1;
  1460  0DDD  1487               	bsf	7,1	;volatile
  1461                           
  1462                           ;main.c: 260:     RD2 = 1;
  1463  0DDE  1508               	bsf	8,2	;volatile
  1464                           
  1465                           ;main.c: 261:     RD6 = 1;
  1466  0DDF  1708               	bsf	8,6	;volatile
  1467                           
  1468                           ;main.c: 263:     RD0 = 1;
  1469  0DE0  1408               	bsf	8,0	;volatile
  1470                           
  1471                           ;main.c: 264:     RC3 = 1;
  1472  0DE1  1587               	bsf	7,3	;volatile
  1473                           
  1474                           ;main.c: 265:     RC2 = 1;
  1475  0DE2  1507               	bsf	7,2	;volatile
  1476                           
  1477                           ;main.c: 266:     RD7 = 1;
  1478  0DE3  1788               	bsf	8,7	;volatile
  1479                           
  1480                           ;main.c: 269:     RD5 = 0;
  1481  0DE4  1288               	bcf	8,5	;volatile
  1482                           
  1483                           ;main.c: 270:     RD3 = 0;
  1484  0DE5  1188               	bcf	8,3	;volatile
  1485                           
  1486                           ;main.c: 271:     RD1 = 0;
  1487  0DE6  1088               	bcf	8,1	;volatile
  1488                           
  1489                           ;main.c: 272:     RC0 = 0;
  1490  0DE7  1007               	bcf	7,0	;volatile
  1491  0DE8                     l217:	
  1492                           ;main.c: 274:     return;
  1493                           
  1494  0DE8  0008               	return
  1495  0DE9                     __end_of_recolheTela:
  1496                           
  1497                           	psect	text2
  1498  0210                     __ptext2:	
  1499 ;; *************** function _lerSensores *****************
  1500 ;; Defined at:
  1501 ;;		line 159 in file "main.c"
  1502 ;; Parameters:    Size  Location     Type
  1503 ;;		None
  1504 ;; Auto vars:     Size  Location     Type
  1505 ;;		None
  1506 ;; Return value:  Size  Location     Type
  1507 ;;                  1    wreg      void 
  1508 ;; Registers used:
  1509 ;;		wreg, status,2, status,0, pclath, cstack
  1510 ;; Tracked objects:
  1511 ;;		On entry : 0/0
  1512 ;;		On exit  : 0/0
  1513 ;;		Unchanged: 0/0
  1514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1515 ;;      Params:         0       0       0       0       0
  1516 ;;      Locals:         0       0       0       0       0
  1517 ;;      Temps:          0       0       4       0       0
  1518 ;;      Totals:         0       0       4       0       0
  1519 ;;Total ram usage:        4 bytes
  1520 ;; Hardware stack levels used: 1
  1521 ;; Hardware stack levels required when called: 6
  1522 ;; This function calls:
  1523 ;;		___xxtofl
  1524 ;; This function is called by:
  1525 ;;		_main
  1526 ;; This function uses a non-reentrant model
  1527 ;;
  1528                           
  1529                           
  1530                           ;psect for function _lerSensores
  1531  0210                     _lerSensores:
  1532  0210                     l2249:	
  1533                           ;incstack = 0
  1534                           ; Regs used in _lerSensores: [wreg+status,2+status,0+pclath+cstack]
  1535                           
  1536                           
  1537                           ;main.c: 163:     ADCON0bits.CHS0 = 0;
  1538  0210  1283               	bcf	3,5	;RP0=0, select bank0
  1539  0211  1303               	bcf	3,6	;RP1=0, select bank0
  1540  0212  119F               	bcf	31,3	;volatile
  1541                           
  1542                           ;main.c: 164:     ADCON0bits.CHS1 = 0;
  1543  0213  121F               	bcf	31,4	;volatile
  1544                           
  1545                           ;main.c: 165:     ADCON0bits.CHS2 = 0;
  1546  0214  129F               	bcf	31,5	;volatile
  1547                           
  1548                           ;main.c: 167:     ADCON0bits.GO = 1;
  1549  0215  151F               	bsf	31,2	;volatile
  1550  0216                     l2251:
  1551                           
  1552                           ;main.c: 168:     _delay((unsigned long)((20)*(4000000/4000000.0)));
  1553  0216  3005               	movlw	5
  1554  0217  1683               	bsf	3,5	;RP0=1, select bank1
  1555  0218  1303               	bcf	3,6	;RP1=0, select bank1
  1556  0219  00EA               	movwf	??_lerSensores^(0+128)
  1557  021A                     u2047:
  1558  021A  0BEA               	decfsz	??_lerSensores^(0+128),f
  1559  021B  2A1A               	goto	u2047
  1560  021C  2A1D               	nop2
  1561  021D                     l2253:
  1562                           
  1563                           ;main.c: 169:     valor_entry0 = ADRESH;
  1564  021D  1283               	bcf	3,5	;RP0=0, select bank0
  1565  021E  1303               	bcf	3,6	;RP1=0, select bank0
  1566  021F  081E               	movf	30,w	;volatile
  1567  0220  1683               	bsf	3,5	;RP0=1, select bank1
  1568  0221  1303               	bcf	3,6	;RP1=0, select bank1
  1569  0222  00EA               	movwf	??_lerSensores^(0+128)
  1570  0223  01EB               	clrf	(??_lerSensores^(0+128)+1)
  1571  0224  01EC               	clrf	(??_lerSensores^(0+128)+2)
  1572  0225  01ED               	clrf	(??_lerSensores^(0+128)+3)
  1573  0226  086D               	movf	(??_lerSensores+3)^(0+128),w
  1574  0227  00DF               	movwf	(___xxtofl@val+3)^(0+128)
  1575  0228  086C               	movf	(??_lerSensores+2)^(0+128),w
  1576  0229  00DE               	movwf	(___xxtofl@val+2)^(0+128)
  1577  022A  086B               	movf	(??_lerSensores+1)^(0+128),w
  1578  022B  00DD               	movwf	(___xxtofl@val+1)^(0+128)
  1579  022C  086A               	movf	??_lerSensores^(0+128),w
  1580  022D  00DC               	movwf	___xxtofl@val^(0+128)
  1581  022E  3000               	movlw	0
  1582  022F  120A  118A  2571  120A  118A  	fcall	___xxtofl
  1583  0234  1683               	bsf	3,5	;RP0=1, select bank1
  1584  0235  1303               	bcf	3,6	;RP1=0, select bank1
  1585  0236  085F               	movf	(?___xxtofl+3)^(0+128),w
  1586  0237  1283               	bcf	3,5	;RP0=0, select bank0
  1587  0238  1303               	bcf	3,6	;RP1=0, select bank0
  1588  0239  00BB               	movwf	_valor_entry0+3
  1589  023A  1683               	bsf	3,5	;RP0=1, select bank1
  1590  023B  1303               	bcf	3,6	;RP1=0, select bank1
  1591  023C  085E               	movf	(?___xxtofl+2)^(0+128),w
  1592  023D  1283               	bcf	3,5	;RP0=0, select bank0
  1593  023E  1303               	bcf	3,6	;RP1=0, select bank0
  1594  023F  00BA               	movwf	_valor_entry0+2
  1595  0240  1683               	bsf	3,5	;RP0=1, select bank1
  1596  0241  1303               	bcf	3,6	;RP1=0, select bank1
  1597  0242  085D               	movf	(?___xxtofl+1)^(0+128),w
  1598  0243  1283               	bcf	3,5	;RP0=0, select bank0
  1599  0244  1303               	bcf	3,6	;RP1=0, select bank0
  1600  0245  00B9               	movwf	_valor_entry0+1
  1601  0246  1683               	bsf	3,5	;RP0=1, select bank1
  1602  0247  1303               	bcf	3,6	;RP1=0, select bank1
  1603  0248  085C               	movf	?___xxtofl^(0+128),w
  1604  0249  1283               	bcf	3,5	;RP0=0, select bank0
  1605  024A  1303               	bcf	3,6	;RP1=0, select bank0
  1606  024B  00B8               	movwf	_valor_entry0
  1607  024C                     l2255:
  1608                           
  1609                           ;main.c: 173:     ADCON0bits.CHS0 = 1;
  1610  024C  159F               	bsf	31,3	;volatile
  1611  024D                     l2257:
  1612                           
  1613                           ;main.c: 174:     ADCON0bits.CHS1 = 0;
  1614  024D  121F               	bcf	31,4	;volatile
  1615  024E                     l2259:
  1616                           
  1617                           ;main.c: 175:     ADCON0bits.CHS2 = 0;
  1618  024E  129F               	bcf	31,5	;volatile
  1619  024F                     l2261:
  1620                           
  1621                           ;main.c: 177:     ADCON0bits.GO = 1;
  1622  024F  151F               	bsf	31,2	;volatile
  1623  0250                     l2263:
  1624                           
  1625                           ;main.c: 178:     _delay((unsigned long)((20)*(4000000/4000000.0)));
  1626  0250  3005               	movlw	5
  1627  0251  1683               	bsf	3,5	;RP0=1, select bank1
  1628  0252  1303               	bcf	3,6	;RP1=0, select bank1
  1629  0253  00EA               	movwf	??_lerSensores^(0+128)
  1630  0254                     u2057:
  1631  0254  0BEA               	decfsz	??_lerSensores^(0+128),f
  1632  0255  2A54               	goto	u2057
  1633  0256  2A57               	nop2
  1634                           
  1635                           ;main.c: 179:     valor_entry1 = ADRESH;
  1636  0257  1283               	bcf	3,5	;RP0=0, select bank0
  1637  0258  1303               	bcf	3,6	;RP1=0, select bank0
  1638  0259  081E               	movf	30,w	;volatile
  1639  025A  1683               	bsf	3,5	;RP0=1, select bank1
  1640  025B  1303               	bcf	3,6	;RP1=0, select bank1
  1641  025C  00EA               	movwf	??_lerSensores^(0+128)
  1642  025D  01EB               	clrf	(??_lerSensores^(0+128)+1)
  1643  025E  01EC               	clrf	(??_lerSensores^(0+128)+2)
  1644  025F  01ED               	clrf	(??_lerSensores^(0+128)+3)
  1645  0260  086D               	movf	(??_lerSensores+3)^(0+128),w
  1646  0261  00DF               	movwf	(___xxtofl@val+3)^(0+128)
  1647  0262  086C               	movf	(??_lerSensores+2)^(0+128),w
  1648  0263  00DE               	movwf	(___xxtofl@val+2)^(0+128)
  1649  0264  086B               	movf	(??_lerSensores+1)^(0+128),w
  1650  0265  00DD               	movwf	(___xxtofl@val+1)^(0+128)
  1651  0266  086A               	movf	??_lerSensores^(0+128),w
  1652  0267  00DC               	movwf	___xxtofl@val^(0+128)
  1653  0268  3000               	movlw	0
  1654  0269  120A  118A  2571  120A  118A  	fcall	___xxtofl
  1655  026E  1683               	bsf	3,5	;RP0=1, select bank1
  1656  026F  1303               	bcf	3,6	;RP1=0, select bank1
  1657  0270  085F               	movf	(?___xxtofl+3)^(0+128),w
  1658  0271  1283               	bcf	3,5	;RP0=0, select bank0
  1659  0272  1303               	bcf	3,6	;RP1=0, select bank0
  1660  0273  00B7               	movwf	_valor_entry1+3
  1661  0274  1683               	bsf	3,5	;RP0=1, select bank1
  1662  0275  1303               	bcf	3,6	;RP1=0, select bank1
  1663  0276  085E               	movf	(?___xxtofl+2)^(0+128),w
  1664  0277  1283               	bcf	3,5	;RP0=0, select bank0
  1665  0278  1303               	bcf	3,6	;RP1=0, select bank0
  1666  0279  00B6               	movwf	_valor_entry1+2
  1667  027A  1683               	bsf	3,5	;RP0=1, select bank1
  1668  027B  1303               	bcf	3,6	;RP1=0, select bank1
  1669  027C  085D               	movf	(?___xxtofl+1)^(0+128),w
  1670  027D  1283               	bcf	3,5	;RP0=0, select bank0
  1671  027E  1303               	bcf	3,6	;RP1=0, select bank0
  1672  027F  00B5               	movwf	_valor_entry1+1
  1673  0280  1683               	bsf	3,5	;RP0=1, select bank1
  1674  0281  1303               	bcf	3,6	;RP1=0, select bank1
  1675  0282  085C               	movf	?___xxtofl^(0+128),w
  1676  0283  1283               	bcf	3,5	;RP0=0, select bank0
  1677  0284  1303               	bcf	3,6	;RP1=0, select bank0
  1678  0285  00B4               	movwf	_valor_entry1
  1679  0286                     l2265:
  1680                           
  1681                           ;main.c: 183:     ADCON0bits.CHS0 = 0;
  1682  0286  119F               	bcf	31,3	;volatile
  1683  0287                     l2267:
  1684                           
  1685                           ;main.c: 184:     ADCON0bits.CHS1 = 1;
  1686  0287  161F               	bsf	31,4	;volatile
  1687  0288                     l2269:
  1688                           
  1689                           ;main.c: 185:     ADCON0bits.CHS2 = 0;
  1690  0288  129F               	bcf	31,5	;volatile
  1691  0289                     l2271:
  1692                           
  1693                           ;main.c: 187:     ADCON0bits.GO = 1;
  1694  0289  151F               	bsf	31,2	;volatile
  1695  028A                     l2273:
  1696                           
  1697                           ;main.c: 188:     _delay((unsigned long)((20)*(4000000/4000000.0)));
  1698  028A  3005               	movlw	5
  1699  028B  1683               	bsf	3,5	;RP0=1, select bank1
  1700  028C  1303               	bcf	3,6	;RP1=0, select bank1
  1701  028D  00EA               	movwf	??_lerSensores^(0+128)
  1702  028E                     u2067:
  1703  028E  0BEA               	decfsz	??_lerSensores^(0+128),f
  1704  028F  2A8E               	goto	u2067
  1705  0290  2A91               	nop2
  1706  0291                     l2275:
  1707                           
  1708                           ;main.c: 189:     valor_entry2 = ADRESH;
  1709  0291  1283               	bcf	3,5	;RP0=0, select bank0
  1710  0292  1303               	bcf	3,6	;RP1=0, select bank0
  1711  0293  081E               	movf	30,w	;volatile
  1712  0294  1683               	bsf	3,5	;RP0=1, select bank1
  1713  0295  1303               	bcf	3,6	;RP1=0, select bank1
  1714  0296  00EA               	movwf	??_lerSensores^(0+128)
  1715  0297  01EB               	clrf	(??_lerSensores^(0+128)+1)
  1716  0298  01EC               	clrf	(??_lerSensores^(0+128)+2)
  1717  0299  01ED               	clrf	(??_lerSensores^(0+128)+3)
  1718  029A  086D               	movf	(??_lerSensores+3)^(0+128),w
  1719  029B  00DF               	movwf	(___xxtofl@val+3)^(0+128)
  1720  029C  086C               	movf	(??_lerSensores+2)^(0+128),w
  1721  029D  00DE               	movwf	(___xxtofl@val+2)^(0+128)
  1722  029E  086B               	movf	(??_lerSensores+1)^(0+128),w
  1723  029F  00DD               	movwf	(___xxtofl@val+1)^(0+128)
  1724  02A0  086A               	movf	??_lerSensores^(0+128),w
  1725  02A1  00DC               	movwf	___xxtofl@val^(0+128)
  1726  02A2  3000               	movlw	0
  1727  02A3  120A  118A  2571  120A  118A  	fcall	___xxtofl
  1728  02A8  1683               	bsf	3,5	;RP0=1, select bank1
  1729  02A9  1303               	bcf	3,6	;RP1=0, select bank1
  1730  02AA  085F               	movf	(?___xxtofl+3)^(0+128),w
  1731  02AB  1283               	bcf	3,5	;RP0=0, select bank0
  1732  02AC  1303               	bcf	3,6	;RP1=0, select bank0
  1733  02AD  00B3               	movwf	_valor_entry2+3
  1734  02AE  1683               	bsf	3,5	;RP0=1, select bank1
  1735  02AF  1303               	bcf	3,6	;RP1=0, select bank1
  1736  02B0  085E               	movf	(?___xxtofl+2)^(0+128),w
  1737  02B1  1283               	bcf	3,5	;RP0=0, select bank0
  1738  02B2  1303               	bcf	3,6	;RP1=0, select bank0
  1739  02B3  00B2               	movwf	_valor_entry2+2
  1740  02B4  1683               	bsf	3,5	;RP0=1, select bank1
  1741  02B5  1303               	bcf	3,6	;RP1=0, select bank1
  1742  02B6  085D               	movf	(?___xxtofl+1)^(0+128),w
  1743  02B7  1283               	bcf	3,5	;RP0=0, select bank0
  1744  02B8  1303               	bcf	3,6	;RP1=0, select bank0
  1745  02B9  00B1               	movwf	_valor_entry2+1
  1746  02BA  1683               	bsf	3,5	;RP0=1, select bank1
  1747  02BB  1303               	bcf	3,6	;RP1=0, select bank1
  1748  02BC  085C               	movf	?___xxtofl^(0+128),w
  1749  02BD  1283               	bcf	3,5	;RP0=0, select bank0
  1750  02BE  1303               	bcf	3,6	;RP1=0, select bank0
  1751  02BF  00B0               	movwf	_valor_entry2
  1752  02C0                     l2277:
  1753                           
  1754                           ;main.c: 193:     ADCON0bits.CHS0 = 1;
  1755  02C0  159F               	bsf	31,3	;volatile
  1756  02C1                     l2279:
  1757                           
  1758                           ;main.c: 194:     ADCON0bits.CHS1 = 1;
  1759  02C1  161F               	bsf	31,4	;volatile
  1760  02C2                     l2281:
  1761                           
  1762                           ;main.c: 195:     ADCON0bits.CHS2 = 0;
  1763  02C2  129F               	bcf	31,5	;volatile
  1764  02C3                     l2283:
  1765                           
  1766                           ;main.c: 197:     ADCON0bits.GO = 1;
  1767  02C3  151F               	bsf	31,2	;volatile
  1768                           
  1769                           ;main.c: 198:     _delay((unsigned long)((20)*(4000000/4000000.0)));
  1770  02C4  3005               	movlw	5
  1771  02C5  1683               	bsf	3,5	;RP0=1, select bank1
  1772  02C6  1303               	bcf	3,6	;RP1=0, select bank1
  1773  02C7  00EA               	movwf	??_lerSensores^(0+128)
  1774  02C8                     u2077:
  1775  02C8  0BEA               	decfsz	??_lerSensores^(0+128),f
  1776  02C9  2AC8               	goto	u2077
  1777  02CA  2ACB               	nop2
  1778  02CB                     l2285:
  1779                           
  1780                           ;main.c: 199:     valor_entry3 = ADRESH;
  1781  02CB  1283               	bcf	3,5	;RP0=0, select bank0
  1782  02CC  1303               	bcf	3,6	;RP1=0, select bank0
  1783  02CD  081E               	movf	30,w	;volatile
  1784  02CE  1683               	bsf	3,5	;RP0=1, select bank1
  1785  02CF  1303               	bcf	3,6	;RP1=0, select bank1
  1786  02D0  00EA               	movwf	??_lerSensores^(0+128)
  1787  02D1  01EB               	clrf	(??_lerSensores^(0+128)+1)
  1788  02D2  01EC               	clrf	(??_lerSensores^(0+128)+2)
  1789  02D3  01ED               	clrf	(??_lerSensores^(0+128)+3)
  1790  02D4  086D               	movf	(??_lerSensores+3)^(0+128),w
  1791  02D5  00DF               	movwf	(___xxtofl@val+3)^(0+128)
  1792  02D6  086C               	movf	(??_lerSensores+2)^(0+128),w
  1793  02D7  00DE               	movwf	(___xxtofl@val+2)^(0+128)
  1794  02D8  086B               	movf	(??_lerSensores+1)^(0+128),w
  1795  02D9  00DD               	movwf	(___xxtofl@val+1)^(0+128)
  1796  02DA  086A               	movf	??_lerSensores^(0+128),w
  1797  02DB  00DC               	movwf	___xxtofl@val^(0+128)
  1798  02DC  3000               	movlw	0
  1799  02DD  120A  118A  2571  120A  118A  	fcall	___xxtofl
  1800  02E2  1683               	bsf	3,5	;RP0=1, select bank1
  1801  02E3  1303               	bcf	3,6	;RP1=0, select bank1
  1802  02E4  085F               	movf	(?___xxtofl+3)^(0+128),w
  1803  02E5  1283               	bcf	3,5	;RP0=0, select bank0
  1804  02E6  1303               	bcf	3,6	;RP1=0, select bank0
  1805  02E7  00AF               	movwf	_valor_entry3+3
  1806  02E8  1683               	bsf	3,5	;RP0=1, select bank1
  1807  02E9  1303               	bcf	3,6	;RP1=0, select bank1
  1808  02EA  085E               	movf	(?___xxtofl+2)^(0+128),w
  1809  02EB  1283               	bcf	3,5	;RP0=0, select bank0
  1810  02EC  1303               	bcf	3,6	;RP1=0, select bank0
  1811  02ED  00AE               	movwf	_valor_entry3+2
  1812  02EE  1683               	bsf	3,5	;RP0=1, select bank1
  1813  02EF  1303               	bcf	3,6	;RP1=0, select bank1
  1814  02F0  085D               	movf	(?___xxtofl+1)^(0+128),w
  1815  02F1  1283               	bcf	3,5	;RP0=0, select bank0
  1816  02F2  1303               	bcf	3,6	;RP1=0, select bank0
  1817  02F3  00AD               	movwf	_valor_entry3+1
  1818  02F4  1683               	bsf	3,5	;RP0=1, select bank1
  1819  02F5  1303               	bcf	3,6	;RP1=0, select bank1
  1820  02F6  085C               	movf	?___xxtofl^(0+128),w
  1821  02F7  1283               	bcf	3,5	;RP0=0, select bank0
  1822  02F8  1303               	bcf	3,6	;RP1=0, select bank0
  1823  02F9  00AC               	movwf	_valor_entry3
  1824  02FA                     l2287:
  1825                           
  1826                           ;main.c: 203:     ADCON0bits.CHS0 = 0;
  1827  02FA  119F               	bcf	31,3	;volatile
  1828  02FB                     l2289:
  1829                           
  1830                           ;main.c: 204:     ADCON0bits.CHS1 = 0;
  1831  02FB  121F               	bcf	31,4	;volatile
  1832  02FC                     l2291:
  1833                           
  1834                           ;main.c: 205:     ADCON0bits.CHS2 = 1;
  1835  02FC  169F               	bsf	31,5	;volatile
  1836  02FD                     l2293:
  1837                           
  1838                           ;main.c: 207:     ADCON0bits.GO = 1;
  1839  02FD  151F               	bsf	31,2	;volatile
  1840  02FE                     l2295:
  1841                           
  1842                           ;main.c: 208:     _delay((unsigned long)((20)*(4000000/4000000.0)));
  1843  02FE  3005               	movlw	5
  1844  02FF  1683               	bsf	3,5	;RP0=1, select bank1
  1845  0300  1303               	bcf	3,6	;RP1=0, select bank1
  1846  0301  00EA               	movwf	??_lerSensores^(0+128)
  1847  0302                     u2087:
  1848  0302  0BEA               	decfsz	??_lerSensores^(0+128),f
  1849  0303  2B02               	goto	u2087
  1850  0304  2B05               	nop2
  1851                           
  1852                           ;main.c: 209:     valor_entry4 = ADRESH;
  1853  0305  1283               	bcf	3,5	;RP0=0, select bank0
  1854  0306  1303               	bcf	3,6	;RP1=0, select bank0
  1855  0307  081E               	movf	30,w	;volatile
  1856  0308  1683               	bsf	3,5	;RP0=1, select bank1
  1857  0309  1303               	bcf	3,6	;RP1=0, select bank1
  1858  030A  00EA               	movwf	??_lerSensores^(0+128)
  1859  030B  01EB               	clrf	(??_lerSensores^(0+128)+1)
  1860  030C  01EC               	clrf	(??_lerSensores^(0+128)+2)
  1861  030D  01ED               	clrf	(??_lerSensores^(0+128)+3)
  1862  030E  086D               	movf	(??_lerSensores+3)^(0+128),w
  1863  030F  00DF               	movwf	(___xxtofl@val+3)^(0+128)
  1864  0310  086C               	movf	(??_lerSensores+2)^(0+128),w
  1865  0311  00DE               	movwf	(___xxtofl@val+2)^(0+128)
  1866  0312  086B               	movf	(??_lerSensores+1)^(0+128),w
  1867  0313  00DD               	movwf	(___xxtofl@val+1)^(0+128)
  1868  0314  086A               	movf	??_lerSensores^(0+128),w
  1869  0315  00DC               	movwf	___xxtofl@val^(0+128)
  1870  0316  3000               	movlw	0
  1871  0317  120A  118A  2571  120A  118A  	fcall	___xxtofl
  1872  031C  1683               	bsf	3,5	;RP0=1, select bank1
  1873  031D  1303               	bcf	3,6	;RP1=0, select bank1
  1874  031E  085F               	movf	(?___xxtofl+3)^(0+128),w
  1875  031F  1283               	bcf	3,5	;RP0=0, select bank0
  1876  0320  1303               	bcf	3,6	;RP1=0, select bank0
  1877  0321  00AB               	movwf	_valor_entry4+3
  1878  0322  1683               	bsf	3,5	;RP0=1, select bank1
  1879  0323  1303               	bcf	3,6	;RP1=0, select bank1
  1880  0324  085E               	movf	(?___xxtofl+2)^(0+128),w
  1881  0325  1283               	bcf	3,5	;RP0=0, select bank0
  1882  0326  1303               	bcf	3,6	;RP1=0, select bank0
  1883  0327  00AA               	movwf	_valor_entry4+2
  1884  0328  1683               	bsf	3,5	;RP0=1, select bank1
  1885  0329  1303               	bcf	3,6	;RP1=0, select bank1
  1886  032A  085D               	movf	(?___xxtofl+1)^(0+128),w
  1887  032B  1283               	bcf	3,5	;RP0=0, select bank0
  1888  032C  1303               	bcf	3,6	;RP1=0, select bank0
  1889  032D  00A9               	movwf	_valor_entry4+1
  1890  032E  1683               	bsf	3,5	;RP0=1, select bank1
  1891  032F  1303               	bcf	3,6	;RP1=0, select bank1
  1892  0330  085C               	movf	?___xxtofl^(0+128),w
  1893  0331  1283               	bcf	3,5	;RP0=0, select bank0
  1894  0332  1303               	bcf	3,6	;RP1=0, select bank0
  1895  0333  00A8               	movwf	_valor_entry4
  1896  0334                     l2297:
  1897                           
  1898                           ;main.c: 213:     ADCON0bits.CHS0 = 1;
  1899  0334  159F               	bsf	31,3	;volatile
  1900  0335                     l2299:
  1901                           
  1902                           ;main.c: 214:     ADCON0bits.CHS1 = 0;
  1903  0335  121F               	bcf	31,4	;volatile
  1904  0336                     l2301:
  1905                           
  1906                           ;main.c: 215:     ADCON0bits.CHS2 = 1;
  1907  0336  169F               	bsf	31,5	;volatile
  1908  0337                     l2303:
  1909                           
  1910                           ;main.c: 217:     ADCON0bits.GO = 1;
  1911  0337  151F               	bsf	31,2	;volatile
  1912  0338                     l2305:
  1913                           
  1914                           ;main.c: 218:     _delay((unsigned long)((20)*(4000000/4000000.0)));
  1915  0338  3005               	movlw	5
  1916  0339  1683               	bsf	3,5	;RP0=1, select bank1
  1917  033A  1303               	bcf	3,6	;RP1=0, select bank1
  1918  033B  00EA               	movwf	??_lerSensores^(0+128)
  1919  033C                     u2097:
  1920  033C  0BEA               	decfsz	??_lerSensores^(0+128),f
  1921  033D  2B3C               	goto	u2097
  1922  033E  2B3F               	nop2
  1923  033F                     l2307:
  1924                           
  1925                           ;main.c: 219:     valor_entry5 = ADRESH;
  1926  033F  1283               	bcf	3,5	;RP0=0, select bank0
  1927  0340  1303               	bcf	3,6	;RP1=0, select bank0
  1928  0341  081E               	movf	30,w	;volatile
  1929  0342  1683               	bsf	3,5	;RP0=1, select bank1
  1930  0343  1303               	bcf	3,6	;RP1=0, select bank1
  1931  0344  00EA               	movwf	??_lerSensores^(0+128)
  1932  0345  01EB               	clrf	(??_lerSensores^(0+128)+1)
  1933  0346  01EC               	clrf	(??_lerSensores^(0+128)+2)
  1934  0347  01ED               	clrf	(??_lerSensores^(0+128)+3)
  1935  0348  086D               	movf	(??_lerSensores+3)^(0+128),w
  1936  0349  00DF               	movwf	(___xxtofl@val+3)^(0+128)
  1937  034A  086C               	movf	(??_lerSensores+2)^(0+128),w
  1938  034B  00DE               	movwf	(___xxtofl@val+2)^(0+128)
  1939  034C  086B               	movf	(??_lerSensores+1)^(0+128),w
  1940  034D  00DD               	movwf	(___xxtofl@val+1)^(0+128)
  1941  034E  086A               	movf	??_lerSensores^(0+128),w
  1942  034F  00DC               	movwf	___xxtofl@val^(0+128)
  1943  0350  3000               	movlw	0
  1944  0351  120A  118A  2571  120A  118A  	fcall	___xxtofl
  1945  0356  1683               	bsf	3,5	;RP0=1, select bank1
  1946  0357  1303               	bcf	3,6	;RP1=0, select bank1
  1947  0358  085F               	movf	(?___xxtofl+3)^(0+128),w
  1948  0359  1283               	bcf	3,5	;RP0=0, select bank0
  1949  035A  1303               	bcf	3,6	;RP1=0, select bank0
  1950  035B  00A7               	movwf	_valor_entry5+3
  1951  035C  1683               	bsf	3,5	;RP0=1, select bank1
  1952  035D  1303               	bcf	3,6	;RP1=0, select bank1
  1953  035E  085E               	movf	(?___xxtofl+2)^(0+128),w
  1954  035F  1283               	bcf	3,5	;RP0=0, select bank0
  1955  0360  1303               	bcf	3,6	;RP1=0, select bank0
  1956  0361  00A6               	movwf	_valor_entry5+2
  1957  0362  1683               	bsf	3,5	;RP0=1, select bank1
  1958  0363  1303               	bcf	3,6	;RP1=0, select bank1
  1959  0364  085D               	movf	(?___xxtofl+1)^(0+128),w
  1960  0365  1283               	bcf	3,5	;RP0=0, select bank0
  1961  0366  1303               	bcf	3,6	;RP1=0, select bank0
  1962  0367  00A5               	movwf	_valor_entry5+1
  1963  0368  1683               	bsf	3,5	;RP0=1, select bank1
  1964  0369  1303               	bcf	3,6	;RP1=0, select bank1
  1965  036A  085C               	movf	?___xxtofl^(0+128),w
  1966  036B  1283               	bcf	3,5	;RP0=0, select bank0
  1967  036C  1303               	bcf	3,6	;RP1=0, select bank0
  1968  036D  00A4               	movwf	_valor_entry5
  1969  036E                     l2309:
  1970                           
  1971                           ;main.c: 223:     ADCON0bits.CHS0 = 0;
  1972  036E  119F               	bcf	31,3	;volatile
  1973  036F                     l2311:
  1974                           
  1975                           ;main.c: 224:     ADCON0bits.CHS1 = 1;
  1976  036F  161F               	bsf	31,4	;volatile
  1977  0370                     l2313:
  1978                           
  1979                           ;main.c: 225:     ADCON0bits.CHS2 = 1;
  1980  0370  169F               	bsf	31,5	;volatile
  1981  0371                     l2315:
  1982                           
  1983                           ;main.c: 227:     ADCON0bits.GO = 1;
  1984  0371  151F               	bsf	31,2	;volatile
  1985                           
  1986                           ;main.c: 228:     _delay((unsigned long)((20)*(4000000/4000000.0)));
  1987  0372  3005               	movlw	5
  1988  0373  1683               	bsf	3,5	;RP0=1, select bank1
  1989  0374  1303               	bcf	3,6	;RP1=0, select bank1
  1990  0375  00EA               	movwf	??_lerSensores^(0+128)
  1991  0376                     u2107:
  1992  0376  0BEA               	decfsz	??_lerSensores^(0+128),f
  1993  0377  2B76               	goto	u2107
  1994  0378  2B79               	nop2
  1995  0379                     l2317:
  1996                           
  1997                           ;main.c: 229:     valor_entry6 = ADRESH;
  1998  0379  1283               	bcf	3,5	;RP0=0, select bank0
  1999  037A  1303               	bcf	3,6	;RP1=0, select bank0
  2000  037B  081E               	movf	30,w	;volatile
  2001  037C  1683               	bsf	3,5	;RP0=1, select bank1
  2002  037D  1303               	bcf	3,6	;RP1=0, select bank1
  2003  037E  00EA               	movwf	??_lerSensores^(0+128)
  2004  037F  01EB               	clrf	(??_lerSensores^(0+128)+1)
  2005  0380  01EC               	clrf	(??_lerSensores^(0+128)+2)
  2006  0381  01ED               	clrf	(??_lerSensores^(0+128)+3)
  2007  0382  086D               	movf	(??_lerSensores+3)^(0+128),w
  2008  0383  00DF               	movwf	(___xxtofl@val+3)^(0+128)
  2009  0384  086C               	movf	(??_lerSensores+2)^(0+128),w
  2010  0385  00DE               	movwf	(___xxtofl@val+2)^(0+128)
  2011  0386  086B               	movf	(??_lerSensores+1)^(0+128),w
  2012  0387  00DD               	movwf	(___xxtofl@val+1)^(0+128)
  2013  0388  086A               	movf	??_lerSensores^(0+128),w
  2014  0389  00DC               	movwf	___xxtofl@val^(0+128)
  2015  038A  3000               	movlw	0
  2016  038B  120A  118A  2571  120A  118A  	fcall	___xxtofl
  2017  0390  1683               	bsf	3,5	;RP0=1, select bank1
  2018  0391  1303               	bcf	3,6	;RP1=0, select bank1
  2019  0392  085F               	movf	(?___xxtofl+3)^(0+128),w
  2020  0393  1283               	bcf	3,5	;RP0=0, select bank0
  2021  0394  1303               	bcf	3,6	;RP1=0, select bank0
  2022  0395  00A3               	movwf	_valor_entry6+3
  2023  0396  1683               	bsf	3,5	;RP0=1, select bank1
  2024  0397  1303               	bcf	3,6	;RP1=0, select bank1
  2025  0398  085E               	movf	(?___xxtofl+2)^(0+128),w
  2026  0399  1283               	bcf	3,5	;RP0=0, select bank0
  2027  039A  1303               	bcf	3,6	;RP1=0, select bank0
  2028  039B  00A2               	movwf	_valor_entry6+2
  2029  039C  1683               	bsf	3,5	;RP0=1, select bank1
  2030  039D  1303               	bcf	3,6	;RP1=0, select bank1
  2031  039E  085D               	movf	(?___xxtofl+1)^(0+128),w
  2032  039F  1283               	bcf	3,5	;RP0=0, select bank0
  2033  03A0  1303               	bcf	3,6	;RP1=0, select bank0
  2034  03A1  00A1               	movwf	_valor_entry6+1
  2035  03A2  1683               	bsf	3,5	;RP0=1, select bank1
  2036  03A3  1303               	bcf	3,6	;RP1=0, select bank1
  2037  03A4  085C               	movf	?___xxtofl^(0+128),w
  2038  03A5  1283               	bcf	3,5	;RP0=0, select bank0
  2039  03A6  1303               	bcf	3,6	;RP1=0, select bank0
  2040  03A7  00A0               	movwf	_valor_entry6
  2041  03A8                     l211:
  2042  03A8  0008               	return
  2043  03A9                     __end_of_lerSensores:
  2044                           
  2045                           	psect	text3
  2046  0571                     __ptext3:	
  2047 ;; *************** function ___xxtofl *****************
  2048 ;; Defined at:
  2049 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\xxtofl.c"
  2050 ;; Parameters:    Size  Location     Type
  2051 ;;  sign            1    wreg     unsigned char 
  2052 ;;  val             4    0[BANK1 ] long 
  2053 ;; Auto vars:     Size  Location     Type
  2054 ;;  sign            1    8[BANK1 ] unsigned char 
  2055 ;;  arg             4   10[BANK1 ] unsigned long 
  2056 ;;  exp             1    9[BANK1 ] unsigned char 
  2057 ;; Return value:  Size  Location     Type
  2058 ;;                  4    0[BANK1 ] unsigned char 
  2059 ;; Registers used:
  2060 ;;		wreg, status,2, status,0
  2061 ;; Tracked objects:
  2062 ;;		On entry : 0/0
  2063 ;;		On exit  : 0/0
  2064 ;;		Unchanged: 0/0
  2065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2066 ;;      Params:         0       0       4       0       0
  2067 ;;      Locals:         0       0       6       0       0
  2068 ;;      Temps:          0       0       4       0       0
  2069 ;;      Totals:         0       0      14       0       0
  2070 ;;Total ram usage:       14 bytes
  2071 ;; Hardware stack levels used: 1
  2072 ;; Hardware stack levels required when called: 5
  2073 ;; This function calls:
  2074 ;;		Nothing
  2075 ;; This function is called by:
  2076 ;;		_lerSensores
  2077 ;; This function uses a non-reentrant model
  2078 ;;
  2079                           
  2080                           
  2081                           ;psect for function ___xxtofl
  2082  0571                     ___xxtofl:
  2083                           
  2084                           ;incstack = 0
  2085                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2086                           ;___xxtofl@sign stored from wreg
  2087  0571  1683               	bsf	3,5	;RP0=1, select bank1
  2088  0572  1303               	bcf	3,6	;RP1=0, select bank1
  2089  0573  00E4               	movwf	___xxtofl@sign^(0+128)
  2090  0574                     l2113:
  2091  0574  0864               	movf	___xxtofl@sign^(0+128),w
  2092  0575  1903               	btfsc	3,2
  2093  0576  2D78               	goto	u1681
  2094  0577  2D79               	goto	u1680
  2095  0578                     u1681:
  2096  0578  2D8D               	goto	l2119
  2097  0579                     u1680:
  2098  0579                     l2115:
  2099  0579  1FDF               	btfss	(___xxtofl@val+3)^(0+128),7
  2100  057A  2D7C               	goto	u1691
  2101  057B  2D7D               	goto	u1690
  2102  057C                     u1691:
  2103  057C  2D8D               	goto	l2119
  2104  057D                     u1690:
  2105  057D                     l2117:
  2106  057D  095C               	comf	___xxtofl@val^(0+128),w
  2107  057E  00E6               	movwf	___xxtofl@arg^(0+128)
  2108  057F  095D               	comf	(___xxtofl@val^(0+128)+1),w
  2109  0580  00E7               	movwf	(___xxtofl@arg+1)^(0+128)
  2110  0581  095E               	comf	(___xxtofl@val^(0+128)+2),w
  2111  0582  00E8               	movwf	(___xxtofl@arg+2)^(0+128)
  2112  0583  095F               	comf	(___xxtofl@val^(0+128)+3),w
  2113  0584  00E9               	movwf	(___xxtofl@arg+3)^(0+128)
  2114  0585  0AE6               	incf	___xxtofl@arg^(0+128),f
  2115  0586  1903               	skipnz
  2116  0587  0AE7               	incf	(___xxtofl@arg+1)^(0+128),f
  2117  0588  1903               	skipnz
  2118  0589  0AE8               	incf	(___xxtofl@arg+2)^(0+128),f
  2119  058A  1903               	skipnz
  2120  058B  0AE9               	incf	(___xxtofl@arg+3)^(0+128),f
  2121  058C  2D95               	goto	l778
  2122  058D                     l2119:
  2123  058D  085F               	movf	(___xxtofl@val+3)^(0+128),w
  2124  058E  00E9               	movwf	(___xxtofl@arg+3)^(0+128)
  2125  058F  085E               	movf	(___xxtofl@val+2)^(0+128),w
  2126  0590  00E8               	movwf	(___xxtofl@arg+2)^(0+128)
  2127  0591  085D               	movf	(___xxtofl@val+1)^(0+128),w
  2128  0592  00E7               	movwf	(___xxtofl@arg+1)^(0+128)
  2129  0593  085C               	movf	___xxtofl@val^(0+128),w
  2130  0594  00E6               	movwf	___xxtofl@arg^(0+128)
  2131  0595                     l778:
  2132  0595  085F               	movf	(___xxtofl@val+3)^(0+128),w
  2133  0596  045E               	iorwf	(___xxtofl@val+2)^(0+128),w
  2134  0597  045D               	iorwf	(___xxtofl@val+1)^(0+128),w
  2135  0598  045C               	iorwf	___xxtofl@val^(0+128),w
  2136  0599  1D03               	skipz
  2137  059A  2D9C               	goto	u1701
  2138  059B  2D9D               	goto	u1700
  2139  059C                     u1701:
  2140  059C  2DA6               	goto	l2125
  2141  059D                     u1700:
  2142  059D                     l2121:
  2143  059D  3000               	movlw	0
  2144  059E  00DF               	movwf	(?___xxtofl+3)^(0+128)
  2145  059F  3000               	movlw	0
  2146  05A0  00DE               	movwf	(?___xxtofl+2)^(0+128)
  2147  05A1  3000               	movlw	0
  2148  05A2  00DD               	movwf	(?___xxtofl+1)^(0+128)
  2149  05A3  3000               	movlw	0
  2150  05A4  00DC               	movwf	?___xxtofl^(0+128)
  2151  05A5  2E2C               	goto	l780
  2152  05A6                     l2125:
  2153  05A6  3096               	movlw	150
  2154  05A7  00E0               	movwf	??___xxtofl^(0+128)
  2155  05A8  0860               	movf	??___xxtofl^(0+128),w
  2156  05A9  00E5               	movwf	___xxtofl@exp^(0+128)
  2157  05AA  2DB8               	goto	l2129
  2158  05AB                     l2127:
  2159  05AB  3001               	movlw	1
  2160  05AC  00E0               	movwf	??___xxtofl^(0+128)
  2161  05AD  0860               	movf	??___xxtofl^(0+128),w
  2162  05AE  07E5               	addwf	___xxtofl@exp^(0+128),f
  2163  05AF  3001               	movlw	1
  2164  05B0                     u1715:
  2165  05B0  1003               	clrc
  2166  05B1  0CE9               	rrf	(___xxtofl@arg+3)^(0+128),f
  2167  05B2  0CE8               	rrf	(___xxtofl@arg+2)^(0+128),f
  2168  05B3  0CE7               	rrf	(___xxtofl@arg+1)^(0+128),f
  2169  05B4  0CE6               	rrf	___xxtofl@arg^(0+128),f
  2170  05B5  3EFF               	addlw	-1
  2171  05B6  1D03               	skipz
  2172  05B7  2DB0               	goto	u1715
  2173  05B8                     l2129:
  2174  05B8  30FE               	movlw	254
  2175  05B9  0569               	andwf	(___xxtofl@arg+3)^(0+128),w
  2176  05BA  1D03               	btfss	3,2
  2177  05BB  2DBD               	goto	u1721
  2178  05BC  2DBE               	goto	u1720
  2179  05BD                     u1721:
  2180  05BD  2DAB               	goto	l2127
  2181  05BE                     u1720:
  2182  05BE  2DDA               	goto	l784
  2183  05BF                     l2131:
  2184  05BF  3001               	movlw	1
  2185  05C0  00E0               	movwf	??___xxtofl^(0+128)
  2186  05C1  0860               	movf	??___xxtofl^(0+128),w
  2187  05C2  07E5               	addwf	___xxtofl@exp^(0+128),f
  2188  05C3                     l2133:
  2189  05C3  3001               	movlw	1
  2190  05C4  07E6               	addwf	___xxtofl@arg^(0+128),f
  2191  05C5  3000               	movlw	0
  2192  05C6  1803               	skipnc
  2193  05C7  3001               	movlw	1
  2194  05C8  07E7               	addwf	(___xxtofl@arg+1)^(0+128),f
  2195  05C9  3000               	movlw	0
  2196  05CA  1803               	skipnc
  2197  05CB  3001               	movlw	1
  2198  05CC  07E8               	addwf	(___xxtofl@arg+2)^(0+128),f
  2199  05CD  3000               	movlw	0
  2200  05CE  1803               	skipnc
  2201  05CF  3001               	movlw	1
  2202  05D0  07E9               	addwf	(___xxtofl@arg+3)^(0+128),f
  2203  05D1                     l2135:
  2204  05D1  3001               	movlw	1
  2205  05D2                     u1735:
  2206  05D2  1003               	clrc
  2207  05D3  0CE9               	rrf	(___xxtofl@arg+3)^(0+128),f
  2208  05D4  0CE8               	rrf	(___xxtofl@arg+2)^(0+128),f
  2209  05D5  0CE7               	rrf	(___xxtofl@arg+1)^(0+128),f
  2210  05D6  0CE6               	rrf	___xxtofl@arg^(0+128),f
  2211  05D7  3EFF               	addlw	-1
  2212  05D8  1D03               	skipz
  2213  05D9  2DD2               	goto	u1735
  2214  05DA                     l784:
  2215  05DA  30FF               	movlw	255
  2216  05DB  0569               	andwf	(___xxtofl@arg+3)^(0+128),w
  2217  05DC  1D03               	btfss	3,2
  2218  05DD  2DDF               	goto	u1741
  2219  05DE  2DE0               	goto	u1740
  2220  05DF                     u1741:
  2221  05DF  2DBF               	goto	l2131
  2222  05E0                     u1740:
  2223  05E0  2DEC               	goto	l2139
  2224  05E1                     l2137:
  2225  05E1  3001               	movlw	1
  2226  05E2  02E5               	subwf	___xxtofl@exp^(0+128),f
  2227  05E3  3001               	movlw	1
  2228  05E4  00E0               	movwf	??___xxtofl^(0+128)
  2229  05E5                     u1755:
  2230  05E5  1003               	clrc
  2231  05E6  0DE6               	rlf	___xxtofl@arg^(0+128),f
  2232  05E7  0DE7               	rlf	(___xxtofl@arg+1)^(0+128),f
  2233  05E8  0DE8               	rlf	(___xxtofl@arg+2)^(0+128),f
  2234  05E9  0DE9               	rlf	(___xxtofl@arg+3)^(0+128),f
  2235  05EA  0BE0               	decfsz	??___xxtofl^(0+128),f
  2236  05EB  2DE5               	goto	u1755
  2237  05EC                     l2139:
  2238  05EC  1BE8               	btfsc	(___xxtofl@arg+2)^(0+128),7
  2239  05ED  2DEF               	goto	u1761
  2240  05EE  2DF0               	goto	u1760
  2241  05EF                     u1761:
  2242  05EF  2DF6               	goto	l791
  2243  05F0                     u1760:
  2244  05F0                     l2141:
  2245  05F0  3002               	movlw	2
  2246  05F1  0265               	subwf	___xxtofl@exp^(0+128),w
  2247  05F2  1803               	skipnc
  2248  05F3  2DF5               	goto	u1771
  2249  05F4  2DF6               	goto	u1770
  2250  05F5                     u1771:
  2251  05F5  2DE1               	goto	l2137
  2252  05F6                     u1770:
  2253  05F6                     l791:
  2254  05F6  1865               	btfsc	___xxtofl@exp^(0+128),0
  2255  05F7  2DF9               	goto	u1781
  2256  05F8  2DFA               	goto	u1780
  2257  05F9                     u1781:
  2258  05F9  2E02               	goto	l792
  2259  05FA                     u1780:
  2260  05FA                     l2143:
  2261  05FA  30FF               	movlw	255
  2262  05FB  05E6               	andwf	___xxtofl@arg^(0+128),f
  2263  05FC  30FF               	movlw	255
  2264  05FD  05E7               	andwf	(___xxtofl@arg+1)^(0+128),f
  2265  05FE  307F               	movlw	127
  2266  05FF  05E8               	andwf	(___xxtofl@arg+2)^(0+128),f
  2267  0600  30FF               	movlw	255
  2268  0601  05E9               	andwf	(___xxtofl@arg+3)^(0+128),f
  2269  0602                     l792:
  2270  0602  1003               	clrc
  2271  0603  0CE5               	rrf	___xxtofl@exp^(0+128),f
  2272  0604                     l2145:
  2273  0604  0865               	movf	___xxtofl@exp^(0+128),w
  2274  0605  00E0               	movwf	??___xxtofl^(0+128)
  2275  0606  01E1               	clrf	(??___xxtofl^(0+128)+1)
  2276  0607  01E2               	clrf	(??___xxtofl^(0+128)+2)
  2277  0608  01E3               	clrf	(??___xxtofl^(0+128)+3)
  2278  0609  3018               	movlw	24
  2279  060A                     u1795:
  2280  060A  1003               	clrc
  2281  060B  0DE0               	rlf	??___xxtofl^(0+128),f
  2282  060C  0DE1               	rlf	(??___xxtofl^(0+128)+1),f
  2283  060D  0DE2               	rlf	(??___xxtofl^(0+128)+2),f
  2284  060E  0DE3               	rlf	(??___xxtofl^(0+128)+3),f
  2285  060F                     u1790:
  2286  060F  3EFF               	addlw	-1
  2287  0610  1D03               	skipz
  2288  0611  2E0A               	goto	u1795
  2289  0612  0860               	movf	??___xxtofl^(0+128),w
  2290  0613  04E6               	iorwf	___xxtofl@arg^(0+128),f
  2291  0614  0861               	movf	(??___xxtofl+1)^(0+128),w
  2292  0615  04E7               	iorwf	(___xxtofl@arg+1)^(0+128),f
  2293  0616  0862               	movf	(??___xxtofl+2)^(0+128),w
  2294  0617  04E8               	iorwf	(___xxtofl@arg+2)^(0+128),f
  2295  0618  0863               	movf	(??___xxtofl+3)^(0+128),w
  2296  0619  04E9               	iorwf	(___xxtofl@arg+3)^(0+128),f
  2297  061A                     l2147:
  2298  061A  0864               	movf	___xxtofl@sign^(0+128),w
  2299  061B  1903               	btfsc	3,2
  2300  061C  2E1E               	goto	u1801
  2301  061D  2E1F               	goto	u1800
  2302  061E                     u1801:
  2303  061E  2E24               	goto	l2153
  2304  061F                     u1800:
  2305  061F                     l2149:
  2306  061F  1FDF               	btfss	(___xxtofl@val+3)^(0+128),7
  2307  0620  2E22               	goto	u1811
  2308  0621  2E23               	goto	u1810
  2309  0622                     u1811:
  2310  0622  2E24               	goto	l2153
  2311  0623                     u1810:
  2312  0623                     l2151:
  2313  0623  17E9               	bsf	(___xxtofl@arg^(0+128)+3),7
  2314  0624                     l2153:
  2315  0624  0869               	movf	(___xxtofl@arg+3)^(0+128),w
  2316  0625  00DF               	movwf	(?___xxtofl+3)^(0+128)
  2317  0626  0868               	movf	(___xxtofl@arg+2)^(0+128),w
  2318  0627  00DE               	movwf	(?___xxtofl+2)^(0+128)
  2319  0628  0867               	movf	(___xxtofl@arg+1)^(0+128),w
  2320  0629  00DD               	movwf	(?___xxtofl+1)^(0+128)
  2321  062A  0866               	movf	___xxtofl@arg^(0+128),w
  2322  062B  00DC               	movwf	?___xxtofl^(0+128)
  2323  062C                     l780:
  2324  062C  0008               	return
  2325  062D                     __end_of___xxtofl:
  2326                           
  2327                           	psect	text4
  2328  07AE                     __ptext4:	
  2329 ;; *************** function _iniciaPinos *****************
  2330 ;; Defined at:
  2331 ;;		line 331 in file "main.c"
  2332 ;; Parameters:    Size  Location     Type
  2333 ;;		None
  2334 ;; Auto vars:     Size  Location     Type
  2335 ;;		None
  2336 ;; Return value:  Size  Location     Type
  2337 ;;                  1    wreg      void 
  2338 ;; Registers used:
  2339 ;;		wreg, status,2
  2340 ;; Tracked objects:
  2341 ;;		On entry : 0/0
  2342 ;;		On exit  : 0/0
  2343 ;;		Unchanged: 0/0
  2344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2345 ;;      Params:         0       0       0       0       0
  2346 ;;      Locals:         0       0       0       0       0
  2347 ;;      Temps:          0       0       0       0       0
  2348 ;;      Totals:         0       0       0       0       0
  2349 ;;Total ram usage:        0 bytes
  2350 ;; Hardware stack levels used: 1
  2351 ;; Hardware stack levels required when called: 5
  2352 ;; This function calls:
  2353 ;;		Nothing
  2354 ;; This function is called by:
  2355 ;;		_main
  2356 ;; This function uses a non-reentrant model
  2357 ;;
  2358                           
  2359                           
  2360                           ;psect for function _iniciaPinos
  2361  07AE                     _iniciaPinos:
  2362  07AE                     l2167:	
  2363                           ;incstack = 0
  2364                           ; Regs used in _iniciaPinos: [wreg+status,2]
  2365                           
  2366                           
  2367                           ;main.c: 333:     OPTION_REGbits.nRBPU = 1;
  2368  07AE  1683               	bsf	3,5	;RP0=1, select bank1
  2369  07AF  1303               	bcf	3,6	;RP1=0, select bank1
  2370  07B0  1781               	bsf	1,7	;volatile
  2371                           
  2372                           ;main.c: 335:     TRISBbits.TRISB0 = 1;
  2373  07B1  1406               	bsf	6,0	;volatile
  2374                           
  2375                           ;main.c: 336:     TRISBbits.TRISB1 = 0;
  2376  07B2  1086               	bcf	6,1	;volatile
  2377                           
  2378                           ;main.c: 337:     TRISBbits.TRISB2 = 0;
  2379  07B3  1106               	bcf	6,2	;volatile
  2380                           
  2381                           ;main.c: 338:     TRISBbits.TRISB3 = 0;
  2382  07B4  1186               	bcf	6,3	;volatile
  2383                           
  2384                           ;main.c: 339:     TRISBbits.TRISB4 = 0;
  2385  07B5  1206               	bcf	6,4	;volatile
  2386                           
  2387                           ;main.c: 340:     TRISBbits.TRISB5 = 0;
  2388  07B6  1286               	bcf	6,5	;volatile
  2389                           
  2390                           ;main.c: 341:     TRISBbits.TRISB6 = 0;
  2391  07B7  1306               	bcf	6,6	;volatile
  2392                           
  2393                           ;main.c: 342:     TRISBbits.TRISB7 = 0;
  2394  07B8  1386               	bcf	6,7	;volatile
  2395                           
  2396                           ;main.c: 344:     OPTION_REGbits.INTEDG = 1;
  2397  07B9  1701               	bsf	1,6	;volatile
  2398                           
  2399                           ;main.c: 345:     INTCONbits.GIE = 1;
  2400  07BA  178B               	bsf	11,7	;volatile
  2401                           
  2402                           ;main.c: 346:     INTCONbits.INTE = 1;
  2403  07BB  160B               	bsf	11,4	;volatile
  2404                           
  2405                           ;main.c: 347:     INTCONbits.INTF = 0;
  2406  07BC  108B               	bcf	11,1	;volatile
  2407                           
  2408                           ;main.c: 348:     INTCONbits.PEIE = 1;
  2409  07BD  170B               	bsf	11,6	;volatile
  2410                           
  2411                           ;main.c: 350:     OPTION_REGbits.PS0 = 1;
  2412  07BE  1401               	bsf	1,0	;volatile
  2413                           
  2414                           ;main.c: 351:     OPTION_REGbits.PS1 = 1;
  2415  07BF  1481               	bsf	1,1	;volatile
  2416                           
  2417                           ;main.c: 352:     OPTION_REGbits.PS2 = 1;
  2418  07C0  1501               	bsf	1,2	;volatile
  2419                           
  2420                           ;main.c: 353:     OPTION_REGbits.PSA = 1;
  2421  07C1  1581               	bsf	1,3	;volatile
  2422                           
  2423                           ;main.c: 355:     T1CONbits.TMR1CS = 0;
  2424  07C2  1283               	bcf	3,5	;RP0=0, select bank0
  2425  07C3  1303               	bcf	3,6	;RP1=0, select bank0
  2426  07C4  1090               	bcf	16,1	;volatile
  2427                           
  2428                           ;main.c: 356:     T1CONbits.T1CKPS0 = 1;
  2429  07C5  1610               	bsf	16,4	;volatile
  2430                           
  2431                           ;main.c: 357:     T1CONbits.T1CKPS1 = 1;
  2432  07C6  1690               	bsf	16,5	;volatile
  2433  07C7                     l2169:
  2434                           
  2435                           ;main.c: 359:     TMR1L = 0xDC;
  2436  07C7  30DC               	movlw	220
  2437  07C8  008E               	movwf	14	;volatile
  2438                           
  2439                           ;main.c: 360:     TMR1H = 0x0B;
  2440  07C9  300B               	movlw	11
  2441  07CA  008F               	movwf	15	;volatile
  2442  07CB                     l2171:
  2443                           
  2444                           ;main.c: 362:     PIE1bits.TMR1IE=1;
  2445  07CB  1683               	bsf	3,5	;RP0=1, select bank1
  2446  07CC  1303               	bcf	3,6	;RP1=0, select bank1
  2447  07CD  140C               	bsf	12,0	;volatile
  2448  07CE                     l2173:
  2449                           
  2450                           ;main.c: 364:     T1CONbits.TMR1ON = 1;
  2451  07CE  1283               	bcf	3,5	;RP0=0, select bank0
  2452  07CF  1303               	bcf	3,6	;RP1=0, select bank0
  2453  07D0  1410               	bsf	16,0	;volatile
  2454                           
  2455                           ;main.c: 366:     TRISA = 0b11111111;
  2456  07D1  30FF               	movlw	255
  2457  07D2  1683               	bsf	3,5	;RP0=1, select bank1
  2458  07D3  1303               	bcf	3,6	;RP1=0, select bank1
  2459  07D4  0085               	movwf	5	;volatile
  2460  07D5                     l2175:
  2461                           
  2462                           ;main.c: 367:     TRISC = 0b00000000;
  2463  07D5  0187               	clrf	7	;volatile
  2464  07D6                     l2177:
  2465                           
  2466                           ;main.c: 368:     TRISD = 0b00000000;
  2467  07D6  0188               	clrf	8	;volatile
  2468  07D7                     l2179:
  2469                           
  2470                           ;main.c: 371:     ADCON1bits.PCFG0 = 0;
  2471  07D7  101F               	bcf	31,0	;volatile
  2472  07D8                     l2181:
  2473                           
  2474                           ;main.c: 372:     ADCON1bits.PCFG1 = 0;
  2475  07D8  109F               	bcf	31,1	;volatile
  2476  07D9                     l2183:
  2477                           
  2478                           ;main.c: 373:     ADCON1bits.PCFG2 = 0;
  2479  07D9  111F               	bcf	31,2	;volatile
  2480  07DA                     l2185:
  2481                           
  2482                           ;main.c: 374:     ADCON1bits.PCFG3 = 0;
  2483  07DA  119F               	bcf	31,3	;volatile
  2484  07DB                     l2187:
  2485                           
  2486                           ;main.c: 377:     ADCON0bits.ADCS0 = 0 ;
  2487  07DB  1283               	bcf	3,5	;RP0=0, select bank0
  2488  07DC  1303               	bcf	3,6	;RP1=0, select bank0
  2489  07DD  131F               	bcf	31,6	;volatile
  2490  07DE                     l2189:
  2491                           
  2492                           ;main.c: 378:     ADCON0bits.ADCS1 = 0 ;
  2493  07DE  139F               	bcf	31,7	;volatile
  2494  07DF                     l2191:
  2495                           
  2496                           ;main.c: 380:     ADCON1bits.ADFM = 0 ;
  2497  07DF  1683               	bsf	3,5	;RP0=1, select bank1
  2498  07E0  1303               	bcf	3,6	;RP1=0, select bank1
  2499  07E1  139F               	bcf	31,7	;volatile
  2500  07E2                     l2193:
  2501                           
  2502                           ;main.c: 387:     ADRESL = 0x00;
  2503  07E2  019E               	clrf	30	;volatile
  2504  07E3                     l2195:
  2505                           
  2506                           ;main.c: 388:     ADRESH = 0x00;
  2507  07E3  1283               	bcf	3,5	;RP0=0, select bank0
  2508  07E4  1303               	bcf	3,6	;RP1=0, select bank0
  2509  07E5  019E               	clrf	30	;volatile
  2510  07E6                     l2197:
  2511                           
  2512                           ;main.c: 390:     ADCON0bits.ADON = 1;
  2513  07E6  141F               	bsf	31,0	;volatile
  2514  07E7                     l2199:
  2515                           
  2516                           ;main.c: 392:     PORTBbits.RB0 = 0;
  2517  07E7  1006               	bcf	6,0	;volatile
  2518  07E8                     l2201:
  2519                           
  2520                           ;main.c: 393:     PORTBbits.RB1 = 0;
  2521  07E8  1086               	bcf	6,1	;volatile
  2522  07E9                     l2203:
  2523                           
  2524                           ;main.c: 394:     PORTBbits.RB2 = 0;
  2525  07E9  1106               	bcf	6,2	;volatile
  2526  07EA                     l2205:
  2527                           
  2528                           ;main.c: 395:     PORTBbits.RB3 = 0;
  2529  07EA  1186               	bcf	6,3	;volatile
  2530  07EB                     l2207:
  2531                           
  2532                           ;main.c: 396:     PORTBbits.RB4 = 0;
  2533  07EB  1206               	bcf	6,4	;volatile
  2534  07EC                     l2209:
  2535                           
  2536                           ;main.c: 397:     PORTBbits.RB5 = 0;
  2537  07EC  1286               	bcf	6,5	;volatile
  2538  07ED                     l2211:
  2539                           
  2540                           ;main.c: 398:     PORTBbits.RB6 = 0;
  2541  07ED  1306               	bcf	6,6	;volatile
  2542  07EE                     l2213:
  2543                           
  2544                           ;main.c: 399:     PORTBbits.RB7 = 0;
  2545  07EE  1386               	bcf	6,7	;volatile
  2546  07EF                     l2215:
  2547                           
  2548                           ;main.c: 401:     PORTCbits.RC0 = 0;
  2549  07EF  1007               	bcf	7,0	;volatile
  2550  07F0                     l2217:
  2551                           
  2552                           ;main.c: 402:     PORTCbits.RC1 = 0;
  2553  07F0  1087               	bcf	7,1	;volatile
  2554  07F1                     l2219:
  2555                           
  2556                           ;main.c: 403:     PORTCbits.RC2 = 0;
  2557  07F1  1107               	bcf	7,2	;volatile
  2558  07F2                     l2221:
  2559                           
  2560                           ;main.c: 404:     PORTCbits.RC3 = 0;
  2561  07F2  1187               	bcf	7,3	;volatile
  2562  07F3                     l2223:
  2563                           
  2564                           ;main.c: 405:     PORTCbits.RC4 = 0;
  2565  07F3  1207               	bcf	7,4	;volatile
  2566  07F4                     l2225:
  2567                           
  2568                           ;main.c: 406:     PORTCbits.RC5 = 0;
  2569  07F4  1287               	bcf	7,5	;volatile
  2570  07F5                     l2227:
  2571                           
  2572                           ;main.c: 407:     PORTCbits.RC6 = 0;
  2573  07F5  1307               	bcf	7,6	;volatile
  2574  07F6                     l2229:
  2575                           
  2576                           ;main.c: 408:     PORTCbits.RC7 = 0;
  2577  07F6  1387               	bcf	7,7	;volatile
  2578  07F7                     l2231:
  2579                           
  2580                           ;main.c: 410:     PORTDbits.RD0 = 0;
  2581  07F7  1008               	bcf	8,0	;volatile
  2582  07F8                     l2233:
  2583                           
  2584                           ;main.c: 411:     PORTDbits.RD1 = 0;
  2585  07F8  1088               	bcf	8,1	;volatile
  2586  07F9                     l2235:
  2587                           
  2588                           ;main.c: 412:     PORTDbits.RD2 = 0;
  2589  07F9  1108               	bcf	8,2	;volatile
  2590  07FA                     l2237:
  2591                           
  2592                           ;main.c: 413:     PORTDbits.RD3 = 0;
  2593  07FA  1188               	bcf	8,3	;volatile
  2594  07FB                     l2239:
  2595                           
  2596                           ;main.c: 414:     PORTDbits.RD4 = 0;
  2597  07FB  1208               	bcf	8,4	;volatile
  2598  07FC                     l2241:
  2599                           
  2600                           ;main.c: 415:     PORTDbits.RD5 = 0;
  2601  07FC  1288               	bcf	8,5	;volatile
  2602  07FD                     l2243:
  2603                           
  2604                           ;main.c: 416:     PORTDbits.RD6 = 0;
  2605  07FD  1308               	bcf	8,6	;volatile
  2606  07FE                     l2245:
  2607                           
  2608                           ;main.c: 417:     PORTDbits.RD7 = 0;
  2609  07FE  1388               	bcf	8,7	;volatile
  2610  07FF                     l231:
  2611  07FF  0008               	return
  2612  0800                     __end_of_iniciaPinos:
  2613                           
  2614                           	psect	text5
  2615  0E16                     __ptext5:	
  2616 ;; *************** function _expandeTela *****************
  2617 ;; Defined at:
  2618 ;;		line 276 in file "main.c"
  2619 ;; Parameters:    Size  Location     Type
  2620 ;;		None
  2621 ;; Auto vars:     Size  Location     Type
  2622 ;;		None
  2623 ;; Return value:  Size  Location     Type
  2624 ;;                  1    wreg      void 
  2625 ;; Registers used:
  2626 ;;		wreg
  2627 ;; Tracked objects:
  2628 ;;		On entry : 0/0
  2629 ;;		On exit  : 0/0
  2630 ;;		Unchanged: 0/0
  2631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2632 ;;      Params:         0       0       0       0       0
  2633 ;;      Locals:         0       0       0       0       0
  2634 ;;      Temps:          0       0       2       0       0
  2635 ;;      Totals:         0       0       2       0       0
  2636 ;;Total ram usage:        2 bytes
  2637 ;; Hardware stack levels used: 1
  2638 ;; Hardware stack levels required when called: 5
  2639 ;; This function calls:
  2640 ;;		Nothing
  2641 ;; This function is called by:
  2642 ;;		_main
  2643 ;; This function uses a non-reentrant model
  2644 ;;
  2645                           
  2646                           
  2647                           ;psect for function _expandeTela
  2648  0E16                     _expandeTela:
  2649  0E16                     l2321:	
  2650                           ;incstack = 0
  2651                           ; Regs used in _expandeTela: [wreg]
  2652                           
  2653                           
  2654                           ;main.c: 278:     while(RA4 == 0 && RB0 == 0)
  2655  0E16  2E2E               	goto	l2325
  2656  0E17                     l221:
  2657                           
  2658                           ;main.c: 279:     {;main.c: 281:         RD5 = 1;
  2659  0E17  1688               	bsf	8,5	;volatile
  2660                           
  2661                           ;main.c: 282:         RD3 = 1;
  2662  0E18  1588               	bsf	8,3	;volatile
  2663                           
  2664                           ;main.c: 283:         RD1 = 1;
  2665  0E19  1488               	bsf	8,1	;volatile
  2666                           
  2667                           ;main.c: 284:         RC0 = 1;
  2668  0E1A  1407               	bsf	7,0	;volatile
  2669                           
  2670                           ;main.c: 287:         RD4 = 1;
  2671  0E1B  1608               	bsf	8,4	;volatile
  2672                           
  2673                           ;main.c: 288:         RC1 = 0;
  2674  0E1C  1087               	bcf	7,1	;volatile
  2675                           
  2676                           ;main.c: 289:         RD2 = 1;
  2677  0E1D  1508               	bsf	8,2	;volatile
  2678                           
  2679                           ;main.c: 290:         RD6 = 0;
  2680  0E1E  1308               	bcf	8,6	;volatile
  2681                           
  2682                           ;main.c: 292:         RD0 = 1;
  2683  0E1F  1408               	bsf	8,0	;volatile
  2684                           
  2685                           ;main.c: 293:         RC3 = 0;
  2686  0E20  1187               	bcf	7,3	;volatile
  2687                           
  2688                           ;main.c: 294:         RC2 = 1;
  2689  0E21  1507               	bsf	7,2	;volatile
  2690                           
  2691                           ;main.c: 295:         RD7 = 0;
  2692  0E22  1388               	bcf	8,7	;volatile
  2693  0E23                     l2323:
  2694                           
  2695                           ;main.c: 296:         _delay((unsigned long)((20)*(4000000/4000.0)));
  2696  0E23  301A               	movlw	26
  2697  0E24  1683               	bsf	3,5	;RP0=1, select bank1
  2698  0E25  1303               	bcf	3,6	;RP1=0, select bank1
  2699  0E26  00DD               	movwf	(??_expandeTela^(0+128)+1)
  2700  0E27  30F7               	movlw	247
  2701  0E28  00DC               	movwf	??_expandeTela^(0+128)
  2702  0E29                     u2117:
  2703  0E29  0BDC               	decfsz	??_expandeTela^(0+128),f
  2704  0E2A  2E29               	goto	u2117
  2705  0E2B  0BDD               	decfsz	(??_expandeTela^(0+128)+1),f
  2706  0E2C  2E29               	goto	u2117
  2707  0E2D  2E2E               	nop2
  2708  0E2E                     l2325:
  2709                           
  2710                           ;main.c: 278:     while(RA4 == 0 && RB0 == 0)
  2711  0E2E  1283               	bcf	3,5	;RP0=0, select bank0
  2712  0E2F  1303               	bcf	3,6	;RP1=0, select bank0
  2713  0E30  1A05               	btfsc	5,4	;volatile
  2714  0E31  2E33               	goto	u1821
  2715  0E32  2E34               	goto	u1820
  2716  0E33                     u1821:
  2717  0E33  2E38               	goto	l224
  2718  0E34                     u1820:
  2719  0E34                     l2327:
  2720  0E34  1C06               	btfss	6,0	;volatile
  2721  0E35  2E37               	goto	u1831
  2722  0E36  2E38               	goto	u1830
  2723  0E37                     u1831:
  2724  0E37  2E17               	goto	l221
  2725  0E38                     u1830:
  2726  0E38                     l224:
  2727                           
  2728                           ;main.c: 301:     RD4 = 1;
  2729  0E38  1608               	bsf	8,4	;volatile
  2730                           
  2731                           ;main.c: 302:     RC1 = 1;
  2732  0E39  1487               	bsf	7,1	;volatile
  2733                           
  2734                           ;main.c: 303:     RD2 = 1;
  2735  0E3A  1508               	bsf	8,2	;volatile
  2736                           
  2737                           ;main.c: 304:     RD6 = 1;
  2738  0E3B  1708               	bsf	8,6	;volatile
  2739                           
  2740                           ;main.c: 306:     RD0 = 1;
  2741  0E3C  1408               	bsf	8,0	;volatile
  2742                           
  2743                           ;main.c: 307:     RC3 = 1;
  2744  0E3D  1587               	bsf	7,3	;volatile
  2745                           
  2746                           ;main.c: 308:     RC2 = 1;
  2747  0E3E  1507               	bsf	7,2	;volatile
  2748                           
  2749                           ;main.c: 309:     RD7 = 1;
  2750  0E3F  1788               	bsf	8,7	;volatile
  2751                           
  2752                           ;main.c: 311:     RD5 = 0;
  2753  0E40  1288               	bcf	8,5	;volatile
  2754                           
  2755                           ;main.c: 312:     RD3 = 0;
  2756  0E41  1188               	bcf	8,3	;volatile
  2757                           
  2758                           ;main.c: 313:     RD1 = 0;
  2759  0E42  1088               	bcf	8,1	;volatile
  2760                           
  2761                           ;main.c: 314:     RC0 = 0;
  2762  0E43  1007               	bcf	7,0	;volatile
  2763  0E44                     l225:	
  2764                           ;main.c: 315:     return;
  2765                           
  2766  0E44  0008               	return
  2767  0E45                     __end_of_expandeTela:
  2768                           
  2769                           	psect	text6
  2770  0D03                     __ptext6:	
  2771 ;; *************** function _estufaUm *****************
  2772 ;; Defined at:
  2773 ;;		line 131 in file "main.c"
  2774 ;; Parameters:    Size  Location     Type
  2775 ;;		None
  2776 ;; Auto vars:     Size  Location     Type
  2777 ;;		None
  2778 ;; Return value:  Size  Location     Type
  2779 ;;                  1    wreg      void 
  2780 ;; Registers used:
  2781 ;;		wreg
  2782 ;; Tracked objects:
  2783 ;;		On entry : 0/0
  2784 ;;		On exit  : 0/0
  2785 ;;		Unchanged: 0/0
  2786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2787 ;;      Params:         0       0       0       0       0
  2788 ;;      Locals:         0       0       0       0       0
  2789 ;;      Temps:          0       0       3       0       0
  2790 ;;      Totals:         0       0       3       0       0
  2791 ;;Total ram usage:        3 bytes
  2792 ;; Hardware stack levels used: 1
  2793 ;; Hardware stack levels required when called: 5
  2794 ;; This function calls:
  2795 ;;		Nothing
  2796 ;; This function is called by:
  2797 ;;		_main
  2798 ;; This function uses a non-reentrant model
  2799 ;;
  2800                           
  2801                           
  2802                           ;psect for function _estufaUm
  2803  0D03                     _estufaUm:
  2804  0D03                     l2335:	
  2805                           ;incstack = 0
  2806                           ; Regs used in _estufaUm: [wreg]
  2807                           
  2808                           
  2809                           ;main.c: 133:     RC6 = 1;
  2810  0D03  1283               	bcf	3,5	;RP0=0, select bank0
  2811  0D04  1303               	bcf	3,6	;RP1=0, select bank0
  2812  0D05  1707               	bsf	7,6	;volatile
  2813  0D06                     l2337:
  2814                           
  2815                           ;main.c: 134:     _delay((unsigned long)((500)*(4000000/4000.0)));
  2816  0D06  3003               	movlw	3
  2817  0D07  1683               	bsf	3,5	;RP0=1, select bank1
  2818  0D08  1303               	bcf	3,6	;RP1=0, select bank1
  2819  0D09  00DE               	movwf	(??_estufaUm^(0+128)+2)
  2820  0D0A  308A               	movlw	138
  2821  0D0B  00DD               	movwf	(??_estufaUm^(0+128)+1)
  2822  0D0C  3055               	movlw	85
  2823  0D0D  00DC               	movwf	??_estufaUm^(0+128)
  2824  0D0E                     u2127:
  2825  0D0E  0BDC               	decfsz	??_estufaUm^(0+128),f
  2826  0D0F  2D0E               	goto	u2127
  2827  0D10  0BDD               	decfsz	(??_estufaUm^(0+128)+1),f
  2828  0D11  2D0E               	goto	u2127
  2829  0D12  0BDE               	decfsz	(??_estufaUm^(0+128)+2),f
  2830  0D13  2D0E               	goto	u2127
  2831  0D14                     l2339:
  2832                           
  2833                           ;main.c: 135:     RC6 = 0;
  2834  0D14  1283               	bcf	3,5	;RP0=0, select bank0
  2835  0D15  1303               	bcf	3,6	;RP1=0, select bank0
  2836  0D16  1307               	bcf	7,6	;volatile
  2837  0D17                     l199:
  2838  0D17  0008               	return
  2839  0D18                     __end_of_estufaUm:
  2840                           
  2841                           	psect	text7
  2842  0CEE                     __ptext7:	
  2843 ;; *************** function _estufaTres *****************
  2844 ;; Defined at:
  2845 ;;		line 145 in file "main.c"
  2846 ;; Parameters:    Size  Location     Type
  2847 ;;		None
  2848 ;; Auto vars:     Size  Location     Type
  2849 ;;		None
  2850 ;; Return value:  Size  Location     Type
  2851 ;;                  1    wreg      void 
  2852 ;; Registers used:
  2853 ;;		wreg
  2854 ;; Tracked objects:
  2855 ;;		On entry : 0/0
  2856 ;;		On exit  : 0/0
  2857 ;;		Unchanged: 0/0
  2858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2859 ;;      Params:         0       0       0       0       0
  2860 ;;      Locals:         0       0       0       0       0
  2861 ;;      Temps:          0       0       3       0       0
  2862 ;;      Totals:         0       0       3       0       0
  2863 ;;Total ram usage:        3 bytes
  2864 ;; Hardware stack levels used: 1
  2865 ;; Hardware stack levels required when called: 5
  2866 ;; This function calls:
  2867 ;;		Nothing
  2868 ;; This function is called by:
  2869 ;;		_main
  2870 ;; This function uses a non-reentrant model
  2871 ;;
  2872                           
  2873                           
  2874                           ;psect for function _estufaTres
  2875  0CEE                     _estufaTres:
  2876  0CEE                     l2351:	
  2877                           ;incstack = 0
  2878                           ; Regs used in _estufaTres: [wreg]
  2879                           
  2880                           
  2881                           ;main.c: 147:     RC4 = 1;
  2882  0CEE  1283               	bcf	3,5	;RP0=0, select bank0
  2883  0CEF  1303               	bcf	3,6	;RP1=0, select bank0
  2884  0CF0  1607               	bsf	7,4	;volatile
  2885  0CF1                     l2353:
  2886                           
  2887                           ;main.c: 148:     _delay((unsigned long)((500)*(4000000/4000.0)));
  2888  0CF1  3003               	movlw	3
  2889  0CF2  1683               	bsf	3,5	;RP0=1, select bank1
  2890  0CF3  1303               	bcf	3,6	;RP1=0, select bank1
  2891  0CF4  00DE               	movwf	(??_estufaTres^(0+128)+2)
  2892  0CF5  308A               	movlw	138
  2893  0CF6  00DD               	movwf	(??_estufaTres^(0+128)+1)
  2894  0CF7  3055               	movlw	85
  2895  0CF8  00DC               	movwf	??_estufaTres^(0+128)
  2896  0CF9                     u2137:
  2897  0CF9  0BDC               	decfsz	??_estufaTres^(0+128),f
  2898  0CFA  2CF9               	goto	u2137
  2899  0CFB  0BDD               	decfsz	(??_estufaTres^(0+128)+1),f
  2900  0CFC  2CF9               	goto	u2137
  2901  0CFD  0BDE               	decfsz	(??_estufaTres^(0+128)+2),f
  2902  0CFE  2CF9               	goto	u2137
  2903  0CFF                     l2355:
  2904                           
  2905                           ;main.c: 149:     RC4 = 0;
  2906  0CFF  1283               	bcf	3,5	;RP0=0, select bank0
  2907  0D00  1303               	bcf	3,6	;RP1=0, select bank0
  2908  0D01  1207               	bcf	7,4	;volatile
  2909  0D02                     l205:
  2910  0D02  0008               	return
  2911  0D03                     __end_of_estufaTres:
  2912                           
  2913                           	psect	text8
  2914  0CD9                     __ptext8:	
  2915 ;; *************** function _estufaQuatro *****************
  2916 ;; Defined at:
  2917 ;;		line 152 in file "main.c"
  2918 ;; Parameters:    Size  Location     Type
  2919 ;;		None
  2920 ;; Auto vars:     Size  Location     Type
  2921 ;;		None
  2922 ;; Return value:  Size  Location     Type
  2923 ;;                  1    wreg      void 
  2924 ;; Registers used:
  2925 ;;		wreg
  2926 ;; Tracked objects:
  2927 ;;		On entry : 0/0
  2928 ;;		On exit  : 0/0
  2929 ;;		Unchanged: 0/0
  2930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2931 ;;      Params:         0       0       0       0       0
  2932 ;;      Locals:         0       0       0       0       0
  2933 ;;      Temps:          0       0       3       0       0
  2934 ;;      Totals:         0       0       3       0       0
  2935 ;;Total ram usage:        3 bytes
  2936 ;; Hardware stack levels used: 1
  2937 ;; Hardware stack levels required when called: 5
  2938 ;; This function calls:
  2939 ;;		Nothing
  2940 ;; This function is called by:
  2941 ;;		_main
  2942 ;; This function uses a non-reentrant model
  2943 ;;
  2944                           
  2945                           
  2946                           ;psect for function _estufaQuatro
  2947  0CD9                     _estufaQuatro:
  2948  0CD9                     l2359:	
  2949                           ;incstack = 0
  2950                           ; Regs used in _estufaQuatro: [wreg]
  2951                           
  2952                           
  2953                           ;main.c: 154:     RC5 = 1;
  2954  0CD9  1283               	bcf	3,5	;RP0=0, select bank0
  2955  0CDA  1303               	bcf	3,6	;RP1=0, select bank0
  2956  0CDB  1687               	bsf	7,5	;volatile
  2957  0CDC                     l2361:
  2958                           
  2959                           ;main.c: 155:     _delay((unsigned long)((500)*(4000000/4000.0)));
  2960  0CDC  3003               	movlw	3
  2961  0CDD  1683               	bsf	3,5	;RP0=1, select bank1
  2962  0CDE  1303               	bcf	3,6	;RP1=0, select bank1
  2963  0CDF  00DE               	movwf	(??_estufaQuatro^(0+128)+2)
  2964  0CE0  308A               	movlw	138
  2965  0CE1  00DD               	movwf	(??_estufaQuatro^(0+128)+1)
  2966  0CE2  3055               	movlw	85
  2967  0CE3  00DC               	movwf	??_estufaQuatro^(0+128)
  2968  0CE4                     u2147:
  2969  0CE4  0BDC               	decfsz	??_estufaQuatro^(0+128),f
  2970  0CE5  2CE4               	goto	u2147
  2971  0CE6  0BDD               	decfsz	(??_estufaQuatro^(0+128)+1),f
  2972  0CE7  2CE4               	goto	u2147
  2973  0CE8  0BDE               	decfsz	(??_estufaQuatro^(0+128)+2),f
  2974  0CE9  2CE4               	goto	u2147
  2975  0CEA                     l2363:
  2976                           
  2977                           ;main.c: 156:     RC5 = 0;
  2978  0CEA  1283               	bcf	3,5	;RP0=0, select bank0
  2979  0CEB  1303               	bcf	3,6	;RP1=0, select bank0
  2980  0CEC  1287               	bcf	7,5	;volatile
  2981  0CED                     l208:
  2982  0CED  0008               	return
  2983  0CEE                     __end_of_estufaQuatro:
  2984                           
  2985                           	psect	text9
  2986  0CC4                     __ptext9:	
  2987 ;; *************** function _estufaDois *****************
  2988 ;; Defined at:
  2989 ;;		line 138 in file "main.c"
  2990 ;; Parameters:    Size  Location     Type
  2991 ;;		None
  2992 ;; Auto vars:     Size  Location     Type
  2993 ;;		None
  2994 ;; Return value:  Size  Location     Type
  2995 ;;                  1    wreg      void 
  2996 ;; Registers used:
  2997 ;;		wreg
  2998 ;; Tracked objects:
  2999 ;;		On entry : 0/0
  3000 ;;		On exit  : 0/0
  3001 ;;		Unchanged: 0/0
  3002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3003 ;;      Params:         0       0       0       0       0
  3004 ;;      Locals:         0       0       0       0       0
  3005 ;;      Temps:          0       0       3       0       0
  3006 ;;      Totals:         0       0       3       0       0
  3007 ;;Total ram usage:        3 bytes
  3008 ;; Hardware stack levels used: 1
  3009 ;; Hardware stack levels required when called: 5
  3010 ;; This function calls:
  3011 ;;		Nothing
  3012 ;; This function is called by:
  3013 ;;		_main
  3014 ;; This function uses a non-reentrant model
  3015 ;;
  3016                           
  3017                           
  3018                           ;psect for function _estufaDois
  3019  0CC4                     _estufaDois:
  3020  0CC4                     l2343:	
  3021                           ;incstack = 0
  3022                           ; Regs used in _estufaDois: [wreg]
  3023                           
  3024                           
  3025                           ;main.c: 140:     RC7 = 1;
  3026  0CC4  1283               	bcf	3,5	;RP0=0, select bank0
  3027  0CC5  1303               	bcf	3,6	;RP1=0, select bank0
  3028  0CC6  1787               	bsf	7,7	;volatile
  3029  0CC7                     l2345:
  3030                           
  3031                           ;main.c: 141:     _delay((unsigned long)((500)*(4000000/4000.0)));
  3032  0CC7  3003               	movlw	3
  3033  0CC8  1683               	bsf	3,5	;RP0=1, select bank1
  3034  0CC9  1303               	bcf	3,6	;RP1=0, select bank1
  3035  0CCA  00DE               	movwf	(??_estufaDois^(0+128)+2)
  3036  0CCB  308A               	movlw	138
  3037  0CCC  00DD               	movwf	(??_estufaDois^(0+128)+1)
  3038  0CCD  3055               	movlw	85
  3039  0CCE  00DC               	movwf	??_estufaDois^(0+128)
  3040  0CCF                     u2157:
  3041  0CCF  0BDC               	decfsz	??_estufaDois^(0+128),f
  3042  0CD0  2CCF               	goto	u2157
  3043  0CD1  0BDD               	decfsz	(??_estufaDois^(0+128)+1),f
  3044  0CD2  2CCF               	goto	u2157
  3045  0CD3  0BDE               	decfsz	(??_estufaDois^(0+128)+2),f
  3046  0CD4  2CCF               	goto	u2157
  3047  0CD5                     l2347:
  3048                           
  3049                           ;main.c: 142:     RC7 = 0;
  3050  0CD5  1283               	bcf	3,5	;RP0=0, select bank0
  3051  0CD6  1303               	bcf	3,6	;RP1=0, select bank0
  3052  0CD7  1387               	bcf	7,7	;volatile
  3053  0CD8                     l202:
  3054  0CD8  0008               	return
  3055  0CD9                     __end_of_estufaDois:
  3056                           
  3057                           	psect	text10
  3058  062D                     __ptext10:	
  3059 ;; *************** function ___flge *****************
  3060 ;; Defined at:
  3061 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\flge.c"
  3062 ;; Parameters:    Size  Location     Type
  3063 ;;  ff1             4    0[BANK1 ] void 
  3064 ;;  ff2             4    4[BANK1 ] void 
  3065 ;; Auto vars:     Size  Location     Type
  3066 ;;		None
  3067 ;; Return value:  Size  Location     Type
  3068 ;;		None               void
  3069 ;; Registers used:
  3070 ;;		wreg, status,2, status,0
  3071 ;; Tracked objects:
  3072 ;;		On entry : 0/0
  3073 ;;		On exit  : 0/0
  3074 ;;		Unchanged: 0/0
  3075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3076 ;;      Params:         0       0       8       0       0
  3077 ;;      Locals:         0       0       0       0       0
  3078 ;;      Temps:          0       0       4       0       0
  3079 ;;      Totals:         0       0      12       0       0
  3080 ;;Total ram usage:       12 bytes
  3081 ;; Hardware stack levels used: 1
  3082 ;; Hardware stack levels required when called: 5
  3083 ;; This function calls:
  3084 ;;		Nothing
  3085 ;; This function is called by:
  3086 ;;		_main
  3087 ;; This function uses a non-reentrant model
  3088 ;;
  3089                           
  3090                           
  3091                           ;psect for function ___flge
  3092  062D                     ___flge:
  3093  062D                     l2367:	
  3094                           ;incstack = 0
  3095                           ; Regs used in ___flge: [wreg+status,2+status,0]
  3096                           
  3097  062D  3000               	movlw	0
  3098  062E  1683               	bsf	3,5	;RP0=1, select bank1
  3099  062F  1303               	bcf	3,6	;RP1=0, select bank1
  3100  0630  055C               	andwf	___flge@ff1^(0+128),w
  3101  0631  00E4               	movwf	??___flge^(0+128)
  3102  0632  3000               	movlw	0
  3103  0633  055D               	andwf	(___flge@ff1+1)^(0+128),w
  3104  0634  00E5               	movwf	(??___flge^(0+128)+1)
  3105  0635  3080               	movlw	128
  3106  0636  055E               	andwf	(___flge@ff1+2)^(0+128),w
  3107  0637  00E6               	movwf	(??___flge^(0+128)+2)
  3108  0638  307F               	movlw	127
  3109  0639  055F               	andwf	(___flge@ff1+3)^(0+128),w
  3110  063A  00E7               	movwf	(??___flge^(0+128)+3)
  3111  063B  0867               	movf	(??___flge+3)^(0+128),w
  3112  063C  0466               	iorwf	(??___flge+2)^(0+128),w
  3113  063D  0465               	iorwf	(??___flge+1)^(0+128),w
  3114  063E  0464               	iorwf	??___flge^(0+128),w
  3115  063F  1D03               	skipz
  3116  0640  2E42               	goto	u1851
  3117  0641  2E43               	goto	u1850
  3118  0642                     u1851:
  3119  0642  2E4B               	goto	l519
  3120  0643                     u1850:
  3121  0643                     l2369:
  3122  0643  3000               	movlw	0
  3123  0644  00DF               	movwf	(___flge@ff1+3)^(0+128)
  3124  0645  3000               	movlw	0
  3125  0646  00DE               	movwf	(___flge@ff1+2)^(0+128)
  3126  0647  3000               	movlw	0
  3127  0648  00DD               	movwf	(___flge@ff1+1)^(0+128)
  3128  0649  3000               	movlw	0
  3129  064A  00DC               	movwf	___flge@ff1^(0+128)
  3130  064B                     l519:
  3131  064B  3000               	movlw	0
  3132  064C  0560               	andwf	___flge@ff2^(0+128),w
  3133  064D  00E4               	movwf	??___flge^(0+128)
  3134  064E  3000               	movlw	0
  3135  064F  0561               	andwf	(___flge@ff2+1)^(0+128),w
  3136  0650  00E5               	movwf	(??___flge^(0+128)+1)
  3137  0651  3080               	movlw	128
  3138  0652  0562               	andwf	(___flge@ff2+2)^(0+128),w
  3139  0653  00E6               	movwf	(??___flge^(0+128)+2)
  3140  0654  307F               	movlw	127
  3141  0655  0563               	andwf	(___flge@ff2+3)^(0+128),w
  3142  0656  00E7               	movwf	(??___flge^(0+128)+3)
  3143  0657  0867               	movf	(??___flge+3)^(0+128),w
  3144  0658  0466               	iorwf	(??___flge+2)^(0+128),w
  3145  0659  0465               	iorwf	(??___flge+1)^(0+128),w
  3146  065A  0464               	iorwf	??___flge^(0+128),w
  3147  065B  1D03               	skipz
  3148  065C  2E5E               	goto	u1861
  3149  065D  2E5F               	goto	u1860
  3150  065E                     u1861:
  3151  065E  2E67               	goto	l2373
  3152  065F                     u1860:
  3153  065F                     l2371:
  3154  065F  3000               	movlw	0
  3155  0660  00E3               	movwf	(___flge@ff2+3)^(0+128)
  3156  0661  3000               	movlw	0
  3157  0662  00E2               	movwf	(___flge@ff2+2)^(0+128)
  3158  0663  3000               	movlw	0
  3159  0664  00E1               	movwf	(___flge@ff2+1)^(0+128)
  3160  0665  3000               	movlw	0
  3161  0666  00E0               	movwf	___flge@ff2^(0+128)
  3162  0667                     l2373:
  3163  0667  1FDF               	btfss	(___flge@ff1+3)^(0+128),7
  3164  0668  2E6A               	goto	u1871
  3165  0669  2E6B               	goto	u1870
  3166  066A                     u1871:
  3167  066A  2E8F               	goto	l2377
  3168  066B                     u1870:
  3169  066B                     l2375:
  3170  066B  3000               	movlw	0
  3171  066C  00E4               	movwf	??___flge^(0+128)
  3172  066D  3000               	movlw	0
  3173  066E  00E5               	movwf	(??___flge^(0+128)+1)
  3174  066F  3000               	movlw	0
  3175  0670  00E6               	movwf	(??___flge^(0+128)+2)
  3176  0671  3080               	movlw	128
  3177  0672  00E7               	movwf	(??___flge^(0+128)+3)
  3178  0673  085C               	movf	___flge@ff1^(0+128),w
  3179  0674  02E4               	subwf	??___flge^(0+128),f
  3180  0675  085D               	movf	(___flge@ff1+1)^(0+128),w
  3181  0676  1C03               	skipc
  3182  0677  0F5D               	incfsz	(___flge@ff1+1)^(0+128),w
  3183  0678  2E7A               	goto	u1881
  3184  0679  2E7B               	goto	u1882
  3185  067A                     u1881:
  3186  067A  02E5               	subwf	(??___flge^(0+128)+1),f
  3187  067B                     u1882:
  3188  067B  085E               	movf	(___flge@ff1+2)^(0+128),w
  3189  067C  1C03               	skipc
  3190  067D  0F5E               	incfsz	(___flge@ff1+2)^(0+128),w
  3191  067E  2E80               	goto	u1883
  3192  067F  2E81               	goto	u1884
  3193  0680                     u1883:
  3194  0680  02E6               	subwf	(??___flge^(0+128)+2),f
  3195  0681                     u1884:
  3196  0681  085F               	movf	(___flge@ff1+3)^(0+128),w
  3197  0682  1C03               	skipc
  3198  0683  0F5F               	incfsz	(___flge@ff1+3)^(0+128),w
  3199  0684  2E86               	goto	u1885
  3200  0685  2E87               	goto	u1886
  3201  0686                     u1885:
  3202  0686  02E7               	subwf	(??___flge^(0+128)+3),f
  3203  0687                     u1886:
  3204  0687  0867               	movf	(??___flge+3)^(0+128),w
  3205  0688  00DF               	movwf	(___flge@ff1+3)^(0+128)
  3206  0689  0866               	movf	(??___flge+2)^(0+128),w
  3207  068A  00DE               	movwf	(___flge@ff1+2)^(0+128)
  3208  068B  0865               	movf	(??___flge+1)^(0+128),w
  3209  068C  00DD               	movwf	(___flge@ff1+1)^(0+128)
  3210  068D  0864               	movf	??___flge^(0+128),w
  3211  068E  00DC               	movwf	___flge@ff1^(0+128)
  3212  068F                     l2377:
  3213  068F  1FE3               	btfss	(___flge@ff2+3)^(0+128),7
  3214  0690  2E92               	goto	u1891
  3215  0691  2E93               	goto	u1890
  3216  0692                     u1891:
  3217  0692  2EB7               	goto	l522
  3218  0693                     u1890:
  3219  0693                     l2379:
  3220  0693  3000               	movlw	0
  3221  0694  00E4               	movwf	??___flge^(0+128)
  3222  0695  3000               	movlw	0
  3223  0696  00E5               	movwf	(??___flge^(0+128)+1)
  3224  0697  3000               	movlw	0
  3225  0698  00E6               	movwf	(??___flge^(0+128)+2)
  3226  0699  3080               	movlw	128
  3227  069A  00E7               	movwf	(??___flge^(0+128)+3)
  3228  069B  0860               	movf	___flge@ff2^(0+128),w
  3229  069C  02E4               	subwf	??___flge^(0+128),f
  3230  069D  0861               	movf	(___flge@ff2+1)^(0+128),w
  3231  069E  1C03               	skipc
  3232  069F  0F61               	incfsz	(___flge@ff2+1)^(0+128),w
  3233  06A0  2EA2               	goto	u1901
  3234  06A1  2EA3               	goto	u1902
  3235  06A2                     u1901:
  3236  06A2  02E5               	subwf	(??___flge^(0+128)+1),f
  3237  06A3                     u1902:
  3238  06A3  0862               	movf	(___flge@ff2+2)^(0+128),w
  3239  06A4  1C03               	skipc
  3240  06A5  0F62               	incfsz	(___flge@ff2+2)^(0+128),w
  3241  06A6  2EA8               	goto	u1903
  3242  06A7  2EA9               	goto	u1904
  3243  06A8                     u1903:
  3244  06A8  02E6               	subwf	(??___flge^(0+128)+2),f
  3245  06A9                     u1904:
  3246  06A9  0863               	movf	(___flge@ff2+3)^(0+128),w
  3247  06AA  1C03               	skipc
  3248  06AB  0F63               	incfsz	(___flge@ff2+3)^(0+128),w
  3249  06AC  2EAE               	goto	u1905
  3250  06AD  2EAF               	goto	u1906
  3251  06AE                     u1905:
  3252  06AE  02E7               	subwf	(??___flge^(0+128)+3),f
  3253  06AF                     u1906:
  3254  06AF  0867               	movf	(??___flge+3)^(0+128),w
  3255  06B0  00E3               	movwf	(___flge@ff2+3)^(0+128)
  3256  06B1  0866               	movf	(??___flge+2)^(0+128),w
  3257  06B2  00E2               	movwf	(___flge@ff2+2)^(0+128)
  3258  06B3  0865               	movf	(??___flge+1)^(0+128),w
  3259  06B4  00E1               	movwf	(___flge@ff2+1)^(0+128)
  3260  06B5  0864               	movf	??___flge^(0+128),w
  3261  06B6  00E0               	movwf	___flge@ff2^(0+128)
  3262  06B7                     l522:
  3263  06B7  3080               	movlw	128
  3264  06B8  06DF               	xorwf	(___flge@ff1+3)^(0+128),f
  3265  06B9  3080               	movlw	128
  3266  06BA  06E3               	xorwf	(___flge@ff2+3)^(0+128),f
  3267  06BB  0863               	movf	(___flge@ff2+3)^(0+128),w
  3268  06BC  025F               	subwf	(___flge@ff1+3)^(0+128),w
  3269  06BD  1D03               	skipz
  3270  06BE  2EC9               	goto	u1915
  3271  06BF  0862               	movf	(___flge@ff2+2)^(0+128),w
  3272  06C0  025E               	subwf	(___flge@ff1+2)^(0+128),w
  3273  06C1  1D03               	skipz
  3274  06C2  2EC9               	goto	u1915
  3275  06C3  0861               	movf	(___flge@ff2+1)^(0+128),w
  3276  06C4  025D               	subwf	(___flge@ff1+1)^(0+128),w
  3277  06C5  1D03               	skipz
  3278  06C6  2EC9               	goto	u1915
  3279  06C7  0860               	movf	___flge@ff2^(0+128),w
  3280  06C8  025C               	subwf	___flge@ff1^(0+128),w
  3281  06C9                     u1915:
  3282  06C9  1803               	skipnc
  3283  06CA  2ECC               	goto	u1911
  3284  06CB  2ECD               	goto	u1910
  3285  06CC                     u1911:
  3286  06CC  2ECF               	goto	l2383
  3287  06CD                     u1910:
  3288  06CD                     l2381:
  3289  06CD  1003               	clrc
  3290  06CE  2ED0               	goto	l523
  3291  06CF                     l2383:
  3292  06CF  1403               	setc
  3293  06D0                     l523:
  3294  06D0  0008               	return
  3295  06D1                     __end_of___flge:
  3296                           
  3297                           	psect	text11
  3298  074B                     __ptext11:	
  3299 ;; *************** function _Lcd_Init *****************
  3300 ;; Defined at:
  3301 ;;		line 62 in file "./lcd.h"
  3302 ;; Parameters:    Size  Location     Type
  3303 ;;		None
  3304 ;; Auto vars:     Size  Location     Type
  3305 ;;		None
  3306 ;; Return value:  Size  Location     Type
  3307 ;;                  1    wreg      void 
  3308 ;; Registers used:
  3309 ;;		wreg, status,2, status,0, pclath, cstack
  3310 ;; Tracked objects:
  3311 ;;		On entry : 0/0
  3312 ;;		On exit  : 0/0
  3313 ;;		Unchanged: 0/0
  3314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3315 ;;      Params:         0       0       0       0       0
  3316 ;;      Locals:         0       0       0       0       0
  3317 ;;      Temps:          0       0       2       0       0
  3318 ;;      Totals:         0       0       2       0       0
  3319 ;;Total ram usage:        2 bytes
  3320 ;; Hardware stack levels used: 1
  3321 ;; Hardware stack levels required when called: 7
  3322 ;; This function calls:
  3323 ;;		_Lcd_Cmd
  3324 ;;		_Lcd_Port
  3325 ;; This function is called by:
  3326 ;;		_main
  3327 ;; This function uses a non-reentrant model
  3328 ;;
  3329                           
  3330                           
  3331                           ;psect for function _Lcd_Init
  3332  074B                     _Lcd_Init:
  3333  074B                     l2157:	
  3334                           ;incstack = 0
  3335                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3336                           
  3337                           
  3338                           ;./lcd.h: 64:   Lcd_Port(0x00);
  3339  074B  3000               	movlw	0
  3340  074C  120A  158A  2645  120A  118A  	fcall	_Lcd_Port
  3341  0751                     l2159:
  3342                           
  3343                           ;./lcd.h: 65:    _delay((unsigned long)((20)*(4000000/4000.0)));
  3344  0751  301A               	movlw	26
  3345  0752  1683               	bsf	3,5	;RP0=1, select bank1
  3346  0753  1303               	bcf	3,6	;RP1=0, select bank1
  3347  0754  00E1               	movwf	(??_Lcd_Init^(0+128)+1)
  3348  0755  30F7               	movlw	247
  3349  0756  00E0               	movwf	??_Lcd_Init^(0+128)
  3350  0757                     u2167:
  3351  0757  0BE0               	decfsz	??_Lcd_Init^(0+128),f
  3352  0758  2F57               	goto	u2167
  3353  0759  0BE1               	decfsz	(??_Lcd_Init^(0+128)+1),f
  3354  075A  2F57               	goto	u2167
  3355  075B  2F5C               	nop2
  3356  075C                     l2161:
  3357                           
  3358                           ;./lcd.h: 66:   Lcd_Cmd(0x03);
  3359  075C  3003               	movlw	3
  3360  075D  120A  158A  2532  120A  118A  	fcall	_Lcd_Cmd
  3361                           
  3362                           ;./lcd.h: 67:  _delay((unsigned long)((5)*(4000000/4000.0)));
  3363  0762  3007               	movlw	7
  3364  0763  1683               	bsf	3,5	;RP0=1, select bank1
  3365  0764  1303               	bcf	3,6	;RP1=0, select bank1
  3366  0765  00E1               	movwf	(??_Lcd_Init^(0+128)+1)
  3367  0766  307C               	movlw	124
  3368  0767  00E0               	movwf	??_Lcd_Init^(0+128)
  3369  0768                     u2177:
  3370  0768  0BE0               	decfsz	??_Lcd_Init^(0+128),f
  3371  0769  2F68               	goto	u2177
  3372  076A  0BE1               	decfsz	(??_Lcd_Init^(0+128)+1),f
  3373  076B  2F68               	goto	u2177
  3374  076C  0000               	nop
  3375  076D                     l2163:
  3376                           
  3377                           ;./lcd.h: 68:   Lcd_Cmd(0x03);
  3378  076D  3003               	movlw	3
  3379  076E  120A  158A  2532  120A  118A  	fcall	_Lcd_Cmd
  3380  0773                     l2165:
  3381                           
  3382                           ;./lcd.h: 69:  _delay((unsigned long)((11)*(4000000/4000.0)));
  3383  0773  300F               	movlw	15
  3384  0774  1683               	bsf	3,5	;RP0=1, select bank1
  3385  0775  1303               	bcf	3,6	;RP1=0, select bank1
  3386  0776  00E1               	movwf	(??_Lcd_Init^(0+128)+1)
  3387  0777  3047               	movlw	71
  3388  0778  00E0               	movwf	??_Lcd_Init^(0+128)
  3389  0779                     u2187:
  3390  0779  0BE0               	decfsz	??_Lcd_Init^(0+128),f
  3391  077A  2F79               	goto	u2187
  3392  077B  0BE1               	decfsz	(??_Lcd_Init^(0+128)+1),f
  3393  077C  2F79               	goto	u2187
  3394                           
  3395                           ;./lcd.h: 70:   Lcd_Cmd(0x03);
  3396  077D  3003               	movlw	3
  3397  077E  120A  158A  2532  120A  118A  	fcall	_Lcd_Cmd
  3398                           
  3399                           ;./lcd.h: 72:   Lcd_Cmd(0x02);
  3400  0783  3002               	movlw	2
  3401  0784  120A  158A  2532  120A  118A  	fcall	_Lcd_Cmd
  3402                           
  3403                           ;./lcd.h: 73:   Lcd_Cmd(0x02);
  3404  0789  3002               	movlw	2
  3405  078A  120A  158A  2532  120A  118A  	fcall	_Lcd_Cmd
  3406                           
  3407                           ;./lcd.h: 74:   Lcd_Cmd(0x08);
  3408  078F  3008               	movlw	8
  3409  0790  120A  158A  2532  120A  118A  	fcall	_Lcd_Cmd
  3410                           
  3411                           ;./lcd.h: 75:   Lcd_Cmd(0x00);
  3412  0795  3000               	movlw	0
  3413  0796  120A  158A  2532  120A  118A  	fcall	_Lcd_Cmd
  3414                           
  3415                           ;./lcd.h: 76:   Lcd_Cmd(0x0C);
  3416  079B  300C               	movlw	12
  3417  079C  120A  158A  2532  120A  118A  	fcall	_Lcd_Cmd
  3418                           
  3419                           ;./lcd.h: 77:   Lcd_Cmd(0x00);
  3420  07A1  3000               	movlw	0
  3421  07A2  120A  158A  2532  120A  118A  	fcall	_Lcd_Cmd
  3422                           
  3423                           ;./lcd.h: 78:   Lcd_Cmd(0x06);
  3424  07A7  3006               	movlw	6
  3425  07A8  120A  158A  2532  120A  118A  	fcall	_Lcd_Cmd
  3426  07AD                     l136:
  3427  07AD  0008               	return
  3428  07AE                     __end_of_Lcd_Init:
  3429                           
  3430                           	psect	text12
  3431  0D32                     __ptext12:	
  3432 ;; *************** function _Lcd_Cmd *****************
  3433 ;; Defined at:
  3434 ;;		line 26 in file "./lcd.h"
  3435 ;; Parameters:    Size  Location     Type
  3436 ;;  a               1    wreg     unsigned char 
  3437 ;; Auto vars:     Size  Location     Type
  3438 ;;  a               1    3[BANK1 ] unsigned char 
  3439 ;; Return value:  Size  Location     Type
  3440 ;;                  1    wreg      void 
  3441 ;; Registers used:
  3442 ;;		wreg, status,2, status,0, pclath, cstack
  3443 ;; Tracked objects:
  3444 ;;		On entry : 0/0
  3445 ;;		On exit  : 0/0
  3446 ;;		Unchanged: 0/0
  3447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3448 ;;      Params:         0       0       0       0       0
  3449 ;;      Locals:         0       0       1       0       0
  3450 ;;      Temps:          0       0       2       0       0
  3451 ;;      Totals:         0       0       3       0       0
  3452 ;;Total ram usage:        3 bytes
  3453 ;; Hardware stack levels used: 1
  3454 ;; Hardware stack levels required when called: 6
  3455 ;; This function calls:
  3456 ;;		_Lcd_Port
  3457 ;; This function is called by:
  3458 ;;		_Lcd_Init
  3459 ;;		_Lcd_Shift_Right
  3460 ;;		_Lcd_Shift_Left
  3461 ;; This function uses a non-reentrant model
  3462 ;;
  3463                           
  3464                           
  3465                           ;psect for function _Lcd_Cmd
  3466  0D32                     _Lcd_Cmd:
  3467                           
  3468                           ;incstack = 0
  3469                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3470                           ;Lcd_Cmd@a stored from wreg
  3471  0D32  1683               	bsf	3,5	;RP0=1, select bank1
  3472  0D33  1303               	bcf	3,6	;RP1=0, select bank1
  3473  0D34  00DF               	movwf	Lcd_Cmd@a^(0+128)
  3474  0D35                     l2103:
  3475                           
  3476                           ;./lcd.h: 26: void Lcd_Cmd(char a);./lcd.h: 27: {;./lcd.h: 28:  RB2 = 0;
  3477  0D35  1283               	bcf	3,5	;RP0=0, select bank0
  3478  0D36  1303               	bcf	3,6	;RP1=0, select bank0
  3479  0D37  1106               	bcf	6,2	;volatile
  3480  0D38                     l2105:
  3481                           
  3482                           ;./lcd.h: 29:  Lcd_Port(a);
  3483  0D38  1683               	bsf	3,5	;RP0=1, select bank1
  3484  0D39  1303               	bcf	3,6	;RP1=0, select bank1
  3485  0D3A  085F               	movf	Lcd_Cmd@a^(0+128),w
  3486  0D3B  120A  158A  2645  120A  158A  	fcall	_Lcd_Port
  3487  0D40                     l2107:
  3488                           
  3489                           ;./lcd.h: 30:  RB1 = 1;
  3490  0D40  1283               	bcf	3,5	;RP0=0, select bank0
  3491  0D41  1303               	bcf	3,6	;RP1=0, select bank0
  3492  0D42  1486               	bsf	6,1	;volatile
  3493  0D43                     l2109:
  3494                           
  3495                           ;./lcd.h: 31:         _delay((unsigned long)((4)*(4000000/4000.0)));
  3496  0D43  3006               	movlw	6
  3497  0D44  1683               	bsf	3,5	;RP0=1, select bank1
  3498  0D45  1303               	bcf	3,6	;RP1=0, select bank1
  3499  0D46  00DE               	movwf	(??_Lcd_Cmd^(0+128)+1)
  3500  0D47  302F               	movlw	47
  3501  0D48  00DD               	movwf	??_Lcd_Cmd^(0+128)
  3502  0D49                     u2197:
  3503  0D49  0BDD               	decfsz	??_Lcd_Cmd^(0+128),f
  3504  0D4A  2D49               	goto	u2197
  3505  0D4B  0BDE               	decfsz	(??_Lcd_Cmd^(0+128)+1),f
  3506  0D4C  2D49               	goto	u2197
  3507  0D4D  2D4E               	nop2
  3508  0D4E                     l2111:
  3509                           
  3510                           ;./lcd.h: 32:         RB1 = 0;
  3511  0D4E  1283               	bcf	3,5	;RP0=0, select bank0
  3512  0D4F  1303               	bcf	3,6	;RP1=0, select bank0
  3513  0D50  1086               	bcf	6,1	;volatile
  3514  0D51                     l124:
  3515  0D51  0008               	return
  3516  0D52                     __end_of_Lcd_Cmd:
  3517                           
  3518                           	psect	text13
  3519  0E45                     __ptext13:	
  3520 ;; *************** function _Lcd_Port *****************
  3521 ;; Defined at:
  3522 ;;		line 4 in file "./lcd.h"
  3523 ;; Parameters:    Size  Location     Type
  3524 ;;  a               1    wreg     unsigned char 
  3525 ;; Auto vars:     Size  Location     Type
  3526 ;;  a               1    0[BANK1 ] unsigned char 
  3527 ;; Return value:  Size  Location     Type
  3528 ;;                  1    wreg      void 
  3529 ;; Registers used:
  3530 ;;		wreg
  3531 ;; Tracked objects:
  3532 ;;		On entry : 0/0
  3533 ;;		On exit  : 0/0
  3534 ;;		Unchanged: 0/0
  3535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3536 ;;      Params:         0       0       0       0       0
  3537 ;;      Locals:         0       0       1       0       0
  3538 ;;      Temps:          0       0       0       0       0
  3539 ;;      Totals:         0       0       1       0       0
  3540 ;;Total ram usage:        1 bytes
  3541 ;; Hardware stack levels used: 1
  3542 ;; Hardware stack levels required when called: 5
  3543 ;; This function calls:
  3544 ;;		Nothing
  3545 ;; This function is called by:
  3546 ;;		_Lcd_Cmd
  3547 ;;		_Lcd_Init
  3548 ;; This function uses a non-reentrant model
  3549 ;;
  3550                           
  3551                           
  3552                           ;psect for function _Lcd_Port
  3553  0E45                     _Lcd_Port:
  3554                           
  3555                           ;incstack = 0
  3556                           ; Regs used in _Lcd_Port: [wreg]
  3557                           ;Lcd_Port@a stored from wreg
  3558  0E45  1683               	bsf	3,5	;RP0=1, select bank1
  3559  0E46  1303               	bcf	3,6	;RP1=0, select bank1
  3560  0E47  00DC               	movwf	Lcd_Port@a^(0+128)
  3561  0E48                     l2093:
  3562                           
  3563                           ;./lcd.h: 4: void Lcd_Port(char a);./lcd.h: 5: {;./lcd.h: 6:  if(a & 1)
  3564  0E48  1C5C               	btfss	Lcd_Port@a^(0+128),0
  3565  0E49  2E4B               	goto	u1641
  3566  0E4A  2E4C               	goto	u1640
  3567  0E4B                     u1641:
  3568  0E4B  2E50               	goto	l113
  3569  0E4C                     u1640:
  3570  0E4C                     l2095:
  3571                           
  3572                           ;./lcd.h: 7:   RB4 = 1;
  3573  0E4C  1283               	bcf	3,5	;RP0=0, select bank0
  3574  0E4D  1303               	bcf	3,6	;RP1=0, select bank0
  3575  0E4E  1606               	bsf	6,4	;volatile
  3576  0E4F  2E53               	goto	l114
  3577  0E50                     l113:	
  3578                           ;./lcd.h: 8:  else
  3579                           
  3580                           
  3581                           ;./lcd.h: 9:   RB4 = 0;
  3582  0E50  1283               	bcf	3,5	;RP0=0, select bank0
  3583  0E51  1303               	bcf	3,6	;RP1=0, select bank0
  3584  0E52  1206               	bcf	6,4	;volatile
  3585  0E53                     l114:
  3586                           
  3587                           ;./lcd.h: 11:  if(a & 2)
  3588  0E53  1683               	bsf	3,5	;RP0=1, select bank1
  3589  0E54  1303               	bcf	3,6	;RP1=0, select bank1
  3590  0E55  1CDC               	btfss	Lcd_Port@a^(0+128),1
  3591  0E56  2E58               	goto	u1651
  3592  0E57  2E59               	goto	u1650
  3593  0E58                     u1651:
  3594  0E58  2E5D               	goto	l115
  3595  0E59                     u1650:
  3596  0E59                     l2097:
  3597                           
  3598                           ;./lcd.h: 12:   RB5 = 1;
  3599  0E59  1283               	bcf	3,5	;RP0=0, select bank0
  3600  0E5A  1303               	bcf	3,6	;RP1=0, select bank0
  3601  0E5B  1686               	bsf	6,5	;volatile
  3602  0E5C  2E60               	goto	l116
  3603  0E5D                     l115:	
  3604                           ;./lcd.h: 13:  else
  3605                           
  3606                           
  3607                           ;./lcd.h: 14:   RB5 = 0;
  3608  0E5D  1283               	bcf	3,5	;RP0=0, select bank0
  3609  0E5E  1303               	bcf	3,6	;RP1=0, select bank0
  3610  0E5F  1286               	bcf	6,5	;volatile
  3611  0E60                     l116:
  3612                           
  3613                           ;./lcd.h: 16:  if(a & 4)
  3614  0E60  1683               	bsf	3,5	;RP0=1, select bank1
  3615  0E61  1303               	bcf	3,6	;RP1=0, select bank1
  3616  0E62  1D5C               	btfss	Lcd_Port@a^(0+128),2
  3617  0E63  2E65               	goto	u1661
  3618  0E64  2E66               	goto	u1660
  3619  0E65                     u1661:
  3620  0E65  2E6A               	goto	l117
  3621  0E66                     u1660:
  3622  0E66                     l2099:
  3623                           
  3624                           ;./lcd.h: 17:   RB6 = 1;
  3625  0E66  1283               	bcf	3,5	;RP0=0, select bank0
  3626  0E67  1303               	bcf	3,6	;RP1=0, select bank0
  3627  0E68  1706               	bsf	6,6	;volatile
  3628  0E69  2E6D               	goto	l118
  3629  0E6A                     l117:	
  3630                           ;./lcd.h: 18:  else
  3631                           
  3632                           
  3633                           ;./lcd.h: 19:   RB6 = 0;
  3634  0E6A  1283               	bcf	3,5	;RP0=0, select bank0
  3635  0E6B  1303               	bcf	3,6	;RP1=0, select bank0
  3636  0E6C  1306               	bcf	6,6	;volatile
  3637  0E6D                     l118:
  3638                           
  3639                           ;./lcd.h: 21:  if(a & 8)
  3640  0E6D  1683               	bsf	3,5	;RP0=1, select bank1
  3641  0E6E  1303               	bcf	3,6	;RP1=0, select bank1
  3642  0E6F  1DDC               	btfss	Lcd_Port@a^(0+128),3
  3643  0E70  2E72               	goto	u1671
  3644  0E71  2E73               	goto	u1670
  3645  0E72                     u1671:
  3646  0E72  2E77               	goto	l119
  3647  0E73                     u1670:
  3648  0E73                     l2101:
  3649                           
  3650                           ;./lcd.h: 22:   RB7 = 1;
  3651  0E73  1283               	bcf	3,5	;RP0=0, select bank0
  3652  0E74  1303               	bcf	3,6	;RP1=0, select bank0
  3653  0E75  1786               	bsf	6,7	;volatile
  3654  0E76  2E7A               	goto	l121
  3655  0E77                     l119:	
  3656                           ;./lcd.h: 23:  else
  3657                           
  3658                           
  3659                           ;./lcd.h: 24:   RB7 = 0;
  3660  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  3661  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  3662  0E79  1386               	bcf	6,7	;volatile
  3663  0E7A                     l121:
  3664  0E7A  0008               	return
  3665  0E7B                     __end_of_Lcd_Port:
  3666                           
  3667                           	psect	text14
  3668  0F28                     __ptext14:	
  3669 ;; *************** function _TrataINT *****************
  3670 ;; Defined at:
  3671 ;;		line 106 in file "main.c"
  3672 ;; Parameters:    Size  Location     Type
  3673 ;;		None
  3674 ;; Auto vars:     Size  Location     Type
  3675 ;;		None
  3676 ;; Return value:  Size  Location     Type
  3677 ;;                  1    wreg      void 
  3678 ;; Registers used:
  3679 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3680 ;; Tracked objects:
  3681 ;;		On entry : 0/0
  3682 ;;		On exit  : 0/0
  3683 ;;		Unchanged: 0/0
  3684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3685 ;;      Params:         0       0       0       0       0
  3686 ;;      Locals:         0       0       0       0       0
  3687 ;;      Temps:          0       7       0       0       0
  3688 ;;      Totals:         0       7       0       0       0
  3689 ;;Total ram usage:        7 bytes
  3690 ;; Hardware stack levels used: 1
  3691 ;; Hardware stack levels required when called: 4
  3692 ;; This function calls:
  3693 ;;		_atualizaLCD
  3694 ;;		i1_expandeTela
  3695 ;;		i1_recolheTela
  3696 ;; This function is called by:
  3697 ;;		Interrupt level 1
  3698 ;; This function uses a non-reentrant model
  3699 ;;
  3700                           
  3701                           
  3702                           ;psect for function _TrataINT
  3703  0F28                     _TrataINT:
  3704  0F28                     i1l2043:
  3705                           
  3706                           ;main.c: 108:     if(INTF == 1)
  3707  0F28  1C8B               	btfss	11,1	;volatile
  3708  0F29  2F2B               	goto	u162_21
  3709  0F2A  2F2C               	goto	u162_20
  3710  0F2B                     u162_21:
  3711  0F2B  2F4A               	goto	i1l193
  3712  0F2C                     u162_20:
  3713  0F2C                     i1l2045:
  3714                           
  3715                           ;main.c: 109:     {;main.c: 110:         PORTBbits.RB3 = 1;
  3716  0F2C  1586               	bsf	6,3	;volatile
  3717  0F2D                     i1l2047:
  3718                           
  3719                           ;main.c: 111:         recolheTela();
  3720  0F2D  120A  158A  2595  120A  158A  	fcall	i1_recolheTela
  3721  0F32                     i1l2049:
  3722                           
  3723                           ;main.c: 112:         _delay((unsigned long)((600)*(4000000/4000.0)));
  3724  0F32  3004               	movlw	4
  3725  0F33  1283               	bcf	3,5	;RP0=0, select bank0
  3726  0F34  1303               	bcf	3,6	;RP1=0, select bank0
  3727  0F35  00D3               	movwf	??_TrataINT+2
  3728  0F36  300C               	movlw	12
  3729  0F37  00D2               	movwf	??_TrataINT+1
  3730  0F38  3033               	movlw	51
  3731  0F39  00D1               	movwf	??_TrataINT
  3732  0F3A                     u220_27:
  3733  0F3A  0BD1               	decfsz	??_TrataINT,f
  3734  0F3B  2F3A               	goto	u220_27
  3735  0F3C  0BD2               	decfsz	??_TrataINT+1,f
  3736  0F3D  2F3A               	goto	u220_27
  3737  0F3E  0BD3               	decfsz	??_TrataINT+2,f
  3738  0F3F  2F3A               	goto	u220_27
  3739  0F40                     i1l2051:
  3740                           
  3741                           ;main.c: 113:         expandeTela();
  3742  0F40  120A  158A  25E9  120A  158A  	fcall	i1_expandeTela
  3743  0F45                     i1l2053:
  3744                           
  3745                           ;main.c: 114:         INTF = 0;
  3746  0F45  108B               	bcf	11,1	;volatile
  3747  0F46                     i1l2055:
  3748                           
  3749                           ;main.c: 115:         PORTBbits.RB3 = 0;
  3750  0F46  1283               	bcf	3,5	;RP0=0, select bank0
  3751  0F47  1303               	bcf	3,6	;RP1=0, select bank0
  3752  0F48  1186               	bcf	6,3	;volatile
  3753                           
  3754                           ;main.c: 116:     }
  3755  0F49  2F5F               	goto	i1l196
  3756  0F4A                     i1l193:	
  3757                           ;main.c: 117:     else if (TMR1IF == 1)
  3758                           
  3759  0F4A  1C0C               	btfss	12,0	;volatile
  3760  0F4B  2F4D               	goto	u163_21
  3761  0F4C  2F4E               	goto	u163_20
  3762  0F4D                     u163_21:
  3763  0F4D  2F5F               	goto	i1l196
  3764  0F4E                     u163_20:
  3765  0F4E                     i1l2057:
  3766                           
  3767                           ;main.c: 118:     {;main.c: 119:         TMR1IF = 0;
  3768  0F4E  100C               	bcf	12,0	;volatile
  3769  0F4F                     i1l2059:
  3770                           
  3771                           ;main.c: 120:         TMR1L = 0xDC;
  3772  0F4F  30DC               	movlw	220
  3773  0F50  008E               	movwf	14	;volatile
  3774                           
  3775                           ;main.c: 121:         TMR1H = 0x0B;
  3776  0F51  300B               	movlw	11
  3777  0F52  008F               	movwf	15	;volatile
  3778  0F53  0064               	clrwdt	;# 
  3779  0F54                     i1l2061:
  3780                           
  3781                           ;main.c: 125:         PORTBbits.RB3 = 1;
  3782  0F54  1283               	bcf	3,5	;RP0=0, select bank0
  3783  0F55  1303               	bcf	3,6	;RP1=0, select bank0
  3784  0F56  1586               	bsf	6,3	;volatile
  3785  0F57                     i1l2063:
  3786                           
  3787                           ;main.c: 126:         atualizaLCD();
  3788  0F57  120A  118A  2491  120A  158A  	fcall	_atualizaLCD
  3789  0F5C                     i1l2065:
  3790                           
  3791                           ;main.c: 127:         PORTBbits.RB3 = 0;
  3792  0F5C  1283               	bcf	3,5	;RP0=0, select bank0
  3793  0F5D  1303               	bcf	3,6	;RP1=0, select bank0
  3794  0F5E  1186               	bcf	6,3	;volatile
  3795  0F5F                     i1l196:
  3796  0F5F  0857               	movf	??_TrataINT+6,w
  3797  0F60  00FF               	movwf	btemp+1
  3798  0F61  0856               	movf	??_TrataINT+5,w
  3799  0F62  008A               	movwf	10
  3800  0F63  0855               	movf	??_TrataINT+4,w
  3801  0F64  0084               	movwf	4
  3802  0F65  0E54               	swapf	??_TrataINT+3,w
  3803  0F66  0083               	movwf	3
  3804  0F67  0EFE               	swapf	btemp,f
  3805  0F68  0E7E               	swapf	btemp,w
  3806  0F69  0009               	retfie
  3807  0F6A                     __end_of_TrataINT:
  3808                           
  3809                           	psect	intentry
  3810  0004                     __pintentry:	
  3811                           ;incstack = 0
  3812                           ; Regs used in _TrataINT: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3813                           
  3814  0004                     interrupt_function:
  3815  007E                     saved_w	set	btemp
  3816  0004  00FE               	movwf	btemp
  3817  0005  0E03               	swapf	3,w
  3818  0006  1283               	bcf	3,5	;RP0=0, select bank0
  3819  0007  1303               	bcf	3,6	;RP1=0, select bank0
  3820  0008  00D4               	movwf	??_TrataINT+3
  3821  0009  0804               	movf	4,w
  3822  000A  00D5               	movwf	??_TrataINT+4
  3823  000B  080A               	movf	10,w
  3824  000C  00D6               	movwf	??_TrataINT+5
  3825  000D  087F               	movf	btemp+1,w
  3826  000E  00D7               	movwf	??_TrataINT+6
  3827  000F  120A  158A  2F28   	ljmp	_TrataINT
  3828                           
  3829                           	psect	text15
  3830  0D95                     __ptext15:	
  3831 ;; *************** function i1_recolheTela *****************
  3832 ;; Defined at:
  3833 ;;		line 233 in file "main.c"
  3834 ;; Parameters:    Size  Location     Type
  3835 ;;		None
  3836 ;; Auto vars:     Size  Location     Type
  3837 ;;		None
  3838 ;; Return value:  Size  Location     Type
  3839 ;;                  1    wreg      void 
  3840 ;; Registers used:
  3841 ;;		wreg
  3842 ;; Tracked objects:
  3843 ;;		On entry : 0/0
  3844 ;;		On exit  : 0/0
  3845 ;;		Unchanged: 0/0
  3846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3847 ;;      Params:         0       0       0       0       0
  3848 ;;      Locals:         0       0       0       0       0
  3849 ;;      Temps:          2       0       0       0       0
  3850 ;;      Totals:         2       0       0       0       0
  3851 ;;Total ram usage:        2 bytes
  3852 ;; Hardware stack levels used: 1
  3853 ;; This function calls:
  3854 ;;		Nothing
  3855 ;; This function is called by:
  3856 ;;		_TrataINT
  3857 ;; This function uses a non-reentrant model
  3858 ;;
  3859                           
  3860                           
  3861                           ;psect for function i1_recolheTela
  3862  0D95                     i1_recolheTela:
  3863  0D95                     i1l1391:	
  3864                           ;incstack = 0
  3865                           ; Regs used in i1_recolheTela: [wreg]
  3866                           
  3867                           
  3868                           ;main.c: 235:     while(RE2 == 0)
  3869  0D95  2DAB               	goto	i1l1395
  3870  0D96                     i1l215:
  3871                           
  3872                           ;main.c: 236:     {;main.c: 238:         RD5 = 1;
  3873  0D96  1688               	bsf	8,5	;volatile
  3874                           
  3875                           ;main.c: 239:         RD3 = 1;
  3876  0D97  1588               	bsf	8,3	;volatile
  3877                           
  3878                           ;main.c: 240:         RD1 = 1;
  3879  0D98  1488               	bsf	8,1	;volatile
  3880                           
  3881                           ;main.c: 241:         RC0 = 1;
  3882  0D99  1407               	bsf	7,0	;volatile
  3883                           
  3884                           ;main.c: 244:         RD4 = 0;
  3885  0D9A  1208               	bcf	8,4	;volatile
  3886                           
  3887                           ;main.c: 245:         RC1 = 1;
  3888  0D9B  1487               	bsf	7,1	;volatile
  3889                           
  3890                           ;main.c: 246:         RD2 = 0;
  3891  0D9C  1108               	bcf	8,2	;volatile
  3892                           
  3893                           ;main.c: 247:         RD6 = 1;
  3894  0D9D  1708               	bsf	8,6	;volatile
  3895                           
  3896                           ;main.c: 249:         RD0 = 0;
  3897  0D9E  1008               	bcf	8,0	;volatile
  3898                           
  3899                           ;main.c: 250:         RC3 = 1;
  3900  0D9F  1587               	bsf	7,3	;volatile
  3901                           
  3902                           ;main.c: 251:         RC2 = 0;
  3903  0DA0  1107               	bcf	7,2	;volatile
  3904                           
  3905                           ;main.c: 252:         RD7 = 1;
  3906  0DA1  1788               	bsf	8,7	;volatile
  3907  0DA2                     i1l1393:
  3908                           
  3909                           ;main.c: 254:         _delay((unsigned long)((20)*(4000000/4000.0)));
  3910  0DA2  301A               	movlw	26
  3911  0DA3  00F1               	movwf	??i1_recolheTela+1
  3912  0DA4  30F8               	movlw	248
  3913  0DA5  00F0               	movwf	??i1_recolheTela
  3914  0DA6                     u221_27:
  3915  0DA6  0BF0               	decfsz	??i1_recolheTela,f
  3916  0DA7  2DA6               	goto	u221_27
  3917  0DA8  0BF1               	decfsz	??i1_recolheTela+1,f
  3918  0DA9  2DA6               	goto	u221_27
  3919  0DAA  0000               	nop
  3920  0DAB                     i1l1395:
  3921                           
  3922                           ;main.c: 235:     while(RE2 == 0)
  3923  0DAB  1283               	bcf	3,5	;RP0=0, select bank0
  3924  0DAC  1303               	bcf	3,6	;RP1=0, select bank0
  3925  0DAD  1D09               	btfss	9,2	;volatile
  3926  0DAE  2DB0               	goto	u69_21
  3927  0DAF  2DB1               	goto	u69_20
  3928  0DB0                     u69_21:
  3929  0DB0  2D96               	goto	i1l215
  3930  0DB1                     u69_20:
  3931  0DB1                     i1l216:
  3932                           
  3933                           ;main.c: 258:     RD4 = 1;
  3934  0DB1  1608               	bsf	8,4	;volatile
  3935                           
  3936                           ;main.c: 259:     RC1 = 1;
  3937  0DB2  1487               	bsf	7,1	;volatile
  3938                           
  3939                           ;main.c: 260:     RD2 = 1;
  3940  0DB3  1508               	bsf	8,2	;volatile
  3941                           
  3942                           ;main.c: 261:     RD6 = 1;
  3943  0DB4  1708               	bsf	8,6	;volatile
  3944                           
  3945                           ;main.c: 263:     RD0 = 1;
  3946  0DB5  1408               	bsf	8,0	;volatile
  3947                           
  3948                           ;main.c: 264:     RC3 = 1;
  3949  0DB6  1587               	bsf	7,3	;volatile
  3950                           
  3951                           ;main.c: 265:     RC2 = 1;
  3952  0DB7  1507               	bsf	7,2	;volatile
  3953                           
  3954                           ;main.c: 266:     RD7 = 1;
  3955  0DB8  1788               	bsf	8,7	;volatile
  3956                           
  3957                           ;main.c: 269:     RD5 = 0;
  3958  0DB9  1288               	bcf	8,5	;volatile
  3959                           
  3960                           ;main.c: 270:     RD3 = 0;
  3961  0DBA  1188               	bcf	8,3	;volatile
  3962                           
  3963                           ;main.c: 271:     RD1 = 0;
  3964  0DBB  1088               	bcf	8,1	;volatile
  3965                           
  3966                           ;main.c: 272:     RC0 = 0;
  3967  0DBC  1007               	bcf	7,0	;volatile
  3968  0DBD                     i1l217:	
  3969                           ;main.c: 274:     return;
  3970                           
  3971  0DBD  0008               	return
  3972  0DBE                     __end_ofi1_recolheTela:
  3973                           
  3974                           	psect	text16
  3975  0DE9                     __ptext16:	
  3976 ;; *************** function i1_expandeTela *****************
  3977 ;; Defined at:
  3978 ;;		line 276 in file "main.c"
  3979 ;; Parameters:    Size  Location     Type
  3980 ;;		None
  3981 ;; Auto vars:     Size  Location     Type
  3982 ;;		None
  3983 ;; Return value:  Size  Location     Type
  3984 ;;                  1    wreg      void 
  3985 ;; Registers used:
  3986 ;;		wreg
  3987 ;; Tracked objects:
  3988 ;;		On entry : 0/0
  3989 ;;		On exit  : 0/0
  3990 ;;		Unchanged: 0/0
  3991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3992 ;;      Params:         0       0       0       0       0
  3993 ;;      Locals:         0       0       0       0       0
  3994 ;;      Temps:          2       0       0       0       0
  3995 ;;      Totals:         2       0       0       0       0
  3996 ;;Total ram usage:        2 bytes
  3997 ;; Hardware stack levels used: 1
  3998 ;; This function calls:
  3999 ;;		Nothing
  4000 ;; This function is called by:
  4001 ;;		_TrataINT
  4002 ;; This function uses a non-reentrant model
  4003 ;;
  4004                           
  4005                           
  4006                           ;psect for function i1_expandeTela
  4007  0DE9                     i1_expandeTela:
  4008  0DE9                     i1l1397:	
  4009                           ;incstack = 0
  4010                           ; Regs used in i1_expandeTela: [wreg]
  4011                           
  4012                           
  4013                           ;main.c: 278:     while(RA4 == 0 && RB0 == 0)
  4014  0DE9  2DFF               	goto	i1l1401
  4015  0DEA                     i1l221:
  4016                           
  4017                           ;main.c: 279:     {;main.c: 281:         RD5 = 1;
  4018  0DEA  1688               	bsf	8,5	;volatile
  4019                           
  4020                           ;main.c: 282:         RD3 = 1;
  4021  0DEB  1588               	bsf	8,3	;volatile
  4022                           
  4023                           ;main.c: 283:         RD1 = 1;
  4024  0DEC  1488               	bsf	8,1	;volatile
  4025                           
  4026                           ;main.c: 284:         RC0 = 1;
  4027  0DED  1407               	bsf	7,0	;volatile
  4028                           
  4029                           ;main.c: 287:         RD4 = 1;
  4030  0DEE  1608               	bsf	8,4	;volatile
  4031                           
  4032                           ;main.c: 288:         RC1 = 0;
  4033  0DEF  1087               	bcf	7,1	;volatile
  4034                           
  4035                           ;main.c: 289:         RD2 = 1;
  4036  0DF0  1508               	bsf	8,2	;volatile
  4037                           
  4038                           ;main.c: 290:         RD6 = 0;
  4039  0DF1  1308               	bcf	8,6	;volatile
  4040                           
  4041                           ;main.c: 292:         RD0 = 1;
  4042  0DF2  1408               	bsf	8,0	;volatile
  4043                           
  4044                           ;main.c: 293:         RC3 = 0;
  4045  0DF3  1187               	bcf	7,3	;volatile
  4046                           
  4047                           ;main.c: 294:         RC2 = 1;
  4048  0DF4  1507               	bsf	7,2	;volatile
  4049                           
  4050                           ;main.c: 295:         RD7 = 0;
  4051  0DF5  1388               	bcf	8,7	;volatile
  4052  0DF6                     i1l1399:
  4053                           
  4054                           ;main.c: 296:         _delay((unsigned long)((20)*(4000000/4000.0)));
  4055  0DF6  301A               	movlw	26
  4056  0DF7  00F1               	movwf	??i1_expandeTela+1
  4057  0DF8  30F8               	movlw	248
  4058  0DF9  00F0               	movwf	??i1_expandeTela
  4059  0DFA                     u222_27:
  4060  0DFA  0BF0               	decfsz	??i1_expandeTela,f
  4061  0DFB  2DFA               	goto	u222_27
  4062  0DFC  0BF1               	decfsz	??i1_expandeTela+1,f
  4063  0DFD  2DFA               	goto	u222_27
  4064  0DFE  0000               	nop
  4065  0DFF                     i1l1401:
  4066                           
  4067                           ;main.c: 278:     while(RA4 == 0 && RB0 == 0)
  4068  0DFF  1283               	bcf	3,5	;RP0=0, select bank0
  4069  0E00  1303               	bcf	3,6	;RP1=0, select bank0
  4070  0E01  1A05               	btfsc	5,4	;volatile
  4071  0E02  2E04               	goto	u70_21
  4072  0E03  2E05               	goto	u70_20
  4073  0E04                     u70_21:
  4074  0E04  2E09               	goto	i1l224
  4075  0E05                     u70_20:
  4076  0E05                     i1l1403:
  4077  0E05  1C06               	btfss	6,0	;volatile
  4078  0E06  2E08               	goto	u71_21
  4079  0E07  2E09               	goto	u71_20
  4080  0E08                     u71_21:
  4081  0E08  2DEA               	goto	i1l221
  4082  0E09                     u71_20:
  4083  0E09                     i1l224:
  4084                           
  4085                           ;main.c: 301:     RD4 = 1;
  4086  0E09  1608               	bsf	8,4	;volatile
  4087                           
  4088                           ;main.c: 302:     RC1 = 1;
  4089  0E0A  1487               	bsf	7,1	;volatile
  4090                           
  4091                           ;main.c: 303:     RD2 = 1;
  4092  0E0B  1508               	bsf	8,2	;volatile
  4093                           
  4094                           ;main.c: 304:     RD6 = 1;
  4095  0E0C  1708               	bsf	8,6	;volatile
  4096                           
  4097                           ;main.c: 306:     RD0 = 1;
  4098  0E0D  1408               	bsf	8,0	;volatile
  4099                           
  4100                           ;main.c: 307:     RC3 = 1;
  4101  0E0E  1587               	bsf	7,3	;volatile
  4102                           
  4103                           ;main.c: 308:     RC2 = 1;
  4104  0E0F  1507               	bsf	7,2	;volatile
  4105                           
  4106                           ;main.c: 309:     RD7 = 1;
  4107  0E10  1788               	bsf	8,7	;volatile
  4108                           
  4109                           ;main.c: 311:     RD5 = 0;
  4110  0E11  1288               	bcf	8,5	;volatile
  4111                           
  4112                           ;main.c: 312:     RD3 = 0;
  4113  0E12  1188               	bcf	8,3	;volatile
  4114                           
  4115                           ;main.c: 313:     RD1 = 0;
  4116  0E13  1088               	bcf	8,1	;volatile
  4117                           
  4118                           ;main.c: 314:     RC0 = 0;
  4119  0E14  1007               	bcf	7,0	;volatile
  4120  0E15                     i1l225:	
  4121                           ;main.c: 315:     return;
  4122                           
  4123  0E15  0008               	return
  4124  0E16                     __end_ofi1_expandeTela:
  4125                           
  4126                           	psect	text17
  4127  0491                     __ptext17:	
  4128 ;; *************** function _atualizaLCD *****************
  4129 ;; Defined at:
  4130 ;;		line 317 in file "main.c"
  4131 ;; Parameters:    Size  Location     Type
  4132 ;;		None
  4133 ;; Auto vars:     Size  Location     Type
  4134 ;;		None
  4135 ;; Return value:  Size  Location     Type
  4136 ;;                  1    wreg      void 
  4137 ;; Registers used:
  4138 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4139 ;; Tracked objects:
  4140 ;;		On entry : 0/0
  4141 ;;		On exit  : 0/0
  4142 ;;		Unchanged: 0/0
  4143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4144 ;;      Params:         0       0       0       0       0
  4145 ;;      Locals:         0       0       0       0       0
  4146 ;;      Temps:          0       2       0       0       0
  4147 ;;      Totals:         0       2       0       0       0
  4148 ;;Total ram usage:        2 bytes
  4149 ;; Hardware stack levels used: 1
  4150 ;; Hardware stack levels required when called: 3
  4151 ;; This function calls:
  4152 ;;		_Lcd_Clear
  4153 ;;		_Lcd_Set_Cursor
  4154 ;;		_Lcd_Write_String
  4155 ;;		___fltol
  4156 ;;		_sprintf
  4157 ;; This function is called by:
  4158 ;;		_TrataINT
  4159 ;; This function uses a non-reentrant model
  4160 ;;
  4161                           
  4162                           
  4163                           ;psect for function _atualizaLCD
  4164  0491                     _atualizaLCD:
  4165  0491                     i1l1975:	
  4166                           ;incstack = 0
  4167                           ; Regs used in _atualizaLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4168                           
  4169                           
  4170                           ;main.c: 319:     Lcd_Clear();
  4171  0491  120A  158A  24A4  120A  118A  	fcall	_Lcd_Clear
  4172                           
  4173                           ;main.c: 320:     Lcd_Set_Cursor(1,1);
  4174  0496  01F4               	clrf	Lcd_Set_Cursor@b
  4175  0497  0AF4               	incf	Lcd_Set_Cursor@b,f
  4176  0498  3001               	movlw	1
  4177  0499  120A  158A  27AE  120A  118A  	fcall	_Lcd_Set_Cursor
  4178  049E                     i1l1977:
  4179                           
  4180                           ;main.c: 321:     sprintf(buffer0, "C:%i A:%i L:%i S1:%i", (int)valor_entry0, (int)valor
      +                          _entry1, (int)valor_entry2, (int)valor_entry3);
  4181  049E  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  4182  049F  1283               	bcf	3,5	;RP0=0, select bank0
  4183  04A0  1303               	bcf	3,6	;RP1=0, select bank0
  4184  04A1  00CF               	movwf	??_atualizaLCD
  4185  04A2  084F               	movf	??_atualizaLCD,w
  4186  04A3  00BC               	movwf	sprintf@f
  4187  04A4  083B               	movf	_valor_entry0+3,w
  4188  04A5  00F3               	movwf	___fltol@f1+3
  4189  04A6  083A               	movf	_valor_entry0+2,w
  4190  04A7  00F2               	movwf	___fltol@f1+2
  4191  04A8  0839               	movf	_valor_entry0+1,w
  4192  04A9  00F1               	movwf	___fltol@f1+1
  4193  04AA  0838               	movf	_valor_entry0,w
  4194  04AB  00F0               	movwf	___fltol@f1
  4195  04AC  120A  118A  26D1  120A  118A  	fcall	___fltol
  4196  04B1  0871               	movf	?___fltol+1,w
  4197  04B2  1283               	bcf	3,5	;RP0=0, select bank0
  4198  04B3  1303               	bcf	3,6	;RP1=0, select bank0
  4199  04B4  00BE               	movwf	?_sprintf+2
  4200  04B5  0870               	movf	?___fltol,w
  4201  04B6  00BD               	movwf	?_sprintf+1
  4202  04B7  0837               	movf	_valor_entry1+3,w
  4203  04B8  00F3               	movwf	___fltol@f1+3
  4204  04B9  0836               	movf	_valor_entry1+2,w
  4205  04BA  00F2               	movwf	___fltol@f1+2
  4206  04BB  0835               	movf	_valor_entry1+1,w
  4207  04BC  00F1               	movwf	___fltol@f1+1
  4208  04BD  0834               	movf	_valor_entry1,w
  4209  04BE  00F0               	movwf	___fltol@f1
  4210  04BF  120A  118A  26D1  120A  118A  	fcall	___fltol
  4211  04C4  0871               	movf	?___fltol+1,w
  4212  04C5  1283               	bcf	3,5	;RP0=0, select bank0
  4213  04C6  1303               	bcf	3,6	;RP1=0, select bank0
  4214  04C7  00C0               	movwf	?_sprintf+4
  4215  04C8  0870               	movf	?___fltol,w
  4216  04C9  00BF               	movwf	?_sprintf+3
  4217  04CA  0833               	movf	_valor_entry2+3,w
  4218  04CB  00F3               	movwf	___fltol@f1+3
  4219  04CC  0832               	movf	_valor_entry2+2,w
  4220  04CD  00F2               	movwf	___fltol@f1+2
  4221  04CE  0831               	movf	_valor_entry2+1,w
  4222  04CF  00F1               	movwf	___fltol@f1+1
  4223  04D0  0830               	movf	_valor_entry2,w
  4224  04D1  00F0               	movwf	___fltol@f1
  4225  04D2  120A  118A  26D1  120A  118A  	fcall	___fltol
  4226  04D7  0871               	movf	?___fltol+1,w
  4227  04D8  1283               	bcf	3,5	;RP0=0, select bank0
  4228  04D9  1303               	bcf	3,6	;RP1=0, select bank0
  4229  04DA  00C2               	movwf	?_sprintf+6
  4230  04DB  0870               	movf	?___fltol,w
  4231  04DC  00C1               	movwf	?_sprintf+5
  4232  04DD  082F               	movf	_valor_entry3+3,w
  4233  04DE  00F3               	movwf	___fltol@f1+3
  4234  04DF  082E               	movf	_valor_entry3+2,w
  4235  04E0  00F2               	movwf	___fltol@f1+2
  4236  04E1  082D               	movf	_valor_entry3+1,w
  4237  04E2  00F1               	movwf	___fltol@f1+1
  4238  04E3  082C               	movf	_valor_entry3,w
  4239  04E4  00F0               	movwf	___fltol@f1
  4240  04E5  120A  118A  26D1  120A  118A  	fcall	___fltol
  4241  04EA  0871               	movf	?___fltol+1,w
  4242  04EB  1283               	bcf	3,5	;RP0=0, select bank0
  4243  04EC  1303               	bcf	3,6	;RP1=0, select bank0
  4244  04ED  00C4               	movwf	?_sprintf+8
  4245  04EE  0870               	movf	?___fltol,w
  4246  04EF  00C3               	movwf	?_sprintf+7
  4247  04F0  30BE               	movlw	(low (_buffer0| 0))& (0+255)
  4248  04F1  120A  118A  23A9  120A  118A  	fcall	_sprintf
  4249  04F6                     i1l1979:
  4250                           
  4251                           ;main.c: 322:     _delay((unsigned long)((20)*(4000000/4000.0)));
  4252  04F6  301A               	movlw	26
  4253  04F7  1283               	bcf	3,5	;RP0=0, select bank0
  4254  04F8  1303               	bcf	3,6	;RP1=0, select bank0
  4255  04F9  00D0               	movwf	??_atualizaLCD+1
  4256  04FA  30F7               	movlw	247
  4257  04FB  00CF               	movwf	??_atualizaLCD
  4258  04FC                     u223_27:
  4259  04FC  0BCF               	decfsz	??_atualizaLCD,f
  4260  04FD  2CFC               	goto	u223_27
  4261  04FE  0BD0               	decfsz	??_atualizaLCD+1,f
  4262  04FF  2CFC               	goto	u223_27
  4263  0500  2D01               	nop2
  4264  0501                     i1l1981:
  4265                           
  4266                           ;main.c: 323:     sprintf(buffer1, "S2:%i S3:%i S4:%i ", (int)valor_entry4, (int)valor_e
      +                          ntry5, (int)valor_entry6);
  4267  0501  3020               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  4268  0502  1283               	bcf	3,5	;RP0=0, select bank0
  4269  0503  1303               	bcf	3,6	;RP1=0, select bank0
  4270  0504  00CF               	movwf	??_atualizaLCD
  4271  0505  084F               	movf	??_atualizaLCD,w
  4272  0506  00BC               	movwf	sprintf@f
  4273  0507  082B               	movf	_valor_entry4+3,w
  4274  0508  00F3               	movwf	___fltol@f1+3
  4275  0509  082A               	movf	_valor_entry4+2,w
  4276  050A  00F2               	movwf	___fltol@f1+2
  4277  050B  0829               	movf	_valor_entry4+1,w
  4278  050C  00F1               	movwf	___fltol@f1+1
  4279  050D  0828               	movf	_valor_entry4,w
  4280  050E  00F0               	movwf	___fltol@f1
  4281  050F  120A  118A  26D1  120A  118A  	fcall	___fltol
  4282  0514  0871               	movf	?___fltol+1,w
  4283  0515  1283               	bcf	3,5	;RP0=0, select bank0
  4284  0516  1303               	bcf	3,6	;RP1=0, select bank0
  4285  0517  00BE               	movwf	?_sprintf+2
  4286  0518  0870               	movf	?___fltol,w
  4287  0519  00BD               	movwf	?_sprintf+1
  4288  051A  0827               	movf	_valor_entry5+3,w
  4289  051B  00F3               	movwf	___fltol@f1+3
  4290  051C  0826               	movf	_valor_entry5+2,w
  4291  051D  00F2               	movwf	___fltol@f1+2
  4292  051E  0825               	movf	_valor_entry5+1,w
  4293  051F  00F1               	movwf	___fltol@f1+1
  4294  0520  0824               	movf	_valor_entry5,w
  4295  0521  00F0               	movwf	___fltol@f1
  4296  0522  120A  118A  26D1  120A  118A  	fcall	___fltol
  4297  0527  0871               	movf	?___fltol+1,w
  4298  0528  1283               	bcf	3,5	;RP0=0, select bank0
  4299  0529  1303               	bcf	3,6	;RP1=0, select bank0
  4300  052A  00C0               	movwf	?_sprintf+4
  4301  052B  0870               	movf	?___fltol,w
  4302  052C  00BF               	movwf	?_sprintf+3
  4303  052D  0823               	movf	_valor_entry6+3,w
  4304  052E  00F3               	movwf	___fltol@f1+3
  4305  052F  0822               	movf	_valor_entry6+2,w
  4306  0530  00F2               	movwf	___fltol@f1+2
  4307  0531  0821               	movf	_valor_entry6+1,w
  4308  0532  00F1               	movwf	___fltol@f1+1
  4309  0533  0820               	movf	_valor_entry6,w
  4310  0534  00F0               	movwf	___fltol@f1
  4311  0535  120A  118A  26D1  120A  118A  	fcall	___fltol
  4312  053A  0871               	movf	?___fltol+1,w
  4313  053B  1283               	bcf	3,5	;RP0=0, select bank0
  4314  053C  1303               	bcf	3,6	;RP1=0, select bank0
  4315  053D  00C2               	movwf	?_sprintf+6
  4316  053E  0870               	movf	?___fltol,w
  4317  053F  00C1               	movwf	?_sprintf+5
  4318  0540  30A0               	movlw	(low (_buffer1| 0))& (0+255)
  4319  0541  120A  118A  23A9  120A  118A  	fcall	_sprintf
  4320  0546                     i1l1983:
  4321                           
  4322                           ;main.c: 324:     _delay((unsigned long)((20)*(4000000/4000.0)));
  4323  0546  301A               	movlw	26
  4324  0547  1283               	bcf	3,5	;RP0=0, select bank0
  4325  0548  1303               	bcf	3,6	;RP1=0, select bank0
  4326  0549  00D0               	movwf	??_atualizaLCD+1
  4327  054A  30F7               	movlw	247
  4328  054B  00CF               	movwf	??_atualizaLCD
  4329  054C                     u224_27:
  4330  054C  0BCF               	decfsz	??_atualizaLCD,f
  4331  054D  2D4C               	goto	u224_27
  4332  054E  0BD0               	decfsz	??_atualizaLCD+1,f
  4333  054F  2D4C               	goto	u224_27
  4334  0550  2D51               	nop2
  4335  0551                     i1l1985:
  4336                           
  4337                           ;main.c: 325:     Lcd_Write_String(buffer0);
  4338  0551  30BE               	movlw	(low (_buffer0| 0))& (0+255)
  4339  0552  120A  158A  2552  120A  118A  	fcall	_Lcd_Write_String
  4340  0557                     i1l1987:
  4341                           
  4342                           ;main.c: 326:     Lcd_Set_Cursor(2,1);
  4343  0557  01F4               	clrf	Lcd_Set_Cursor@b
  4344  0558  0AF4               	incf	Lcd_Set_Cursor@b,f
  4345  0559  3002               	movlw	2
  4346  055A  120A  158A  27AE  120A  118A  	fcall	_Lcd_Set_Cursor
  4347                           
  4348                           ;main.c: 327:     Lcd_Write_String(buffer1);
  4349  055F  30A0               	movlw	(low (_buffer1| 0))& (0+255)
  4350  0560  120A  158A  2552  120A  118A  	fcall	_Lcd_Write_String
  4351  0565                     i1l1989:
  4352                           
  4353                           ;main.c: 328:     _delay((unsigned long)((50)*(4000000/4000.0)));
  4354  0565  3041               	movlw	65
  4355  0566  1283               	bcf	3,5	;RP0=0, select bank0
  4356  0567  1303               	bcf	3,6	;RP1=0, select bank0
  4357  0568  00D0               	movwf	??_atualizaLCD+1
  4358  0569  30ED               	movlw	237
  4359  056A  00CF               	movwf	??_atualizaLCD
  4360  056B                     u225_27:
  4361  056B  0BCF               	decfsz	??_atualizaLCD,f
  4362  056C  2D6B               	goto	u225_27
  4363  056D  0BD0               	decfsz	??_atualizaLCD+1,f
  4364  056E  2D6B               	goto	u225_27
  4365  056F  2D70               	nop2
  4366  0570                     i1l228:
  4367  0570  0008               	return
  4368  0571                     __end_of_atualizaLCD:
  4369                           
  4370                           	psect	text18
  4371  03A9                     __ptext18:	
  4372 ;; *************** function _sprintf *****************
  4373 ;; Defined at:
  4374 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  4375 ;; Parameters:    Size  Location     Type
  4376 ;;  sp              1    wreg     PTR unsigned char 
  4377 ;;		 -> buffer1(30), buffer0(30), 
  4378 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  4379 ;;		 -> STR_2(19), STR_1(21), 
  4380 ;; Auto vars:     Size  Location     Type
  4381 ;;  sp              1   17[BANK0 ] PTR unsigned char 
  4382 ;;		 -> buffer1(30), buffer0(30), 
  4383 ;;  tmpval          4    0        struct .
  4384 ;;  val             2   15[BANK0 ] unsigned int 
  4385 ;;  cp              2    0        PTR const unsigned char 
  4386 ;;  len             2    0        unsigned int 
  4387 ;;  c               1   18[BANK0 ] unsigned char 
  4388 ;;  prec            1   14[BANK0 ] char 
  4389 ;;  flag            1   13[BANK0 ] unsigned char 
  4390 ;;  ap              1   12[BANK0 ] PTR void [1]
  4391 ;;		 -> ?_sprintf(2), 
  4392 ;; Return value:  Size  Location     Type
  4393 ;;                  2    0[BANK0 ] int 
  4394 ;; Registers used:
  4395 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4396 ;; Tracked objects:
  4397 ;;		On entry : 0/0
  4398 ;;		On exit  : 0/0
  4399 ;;		Unchanged: 0/0
  4400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4401 ;;      Params:         0       9       0       0       0
  4402 ;;      Locals:         0       7       0       0       0
  4403 ;;      Temps:          0       3       0       0       0
  4404 ;;      Totals:         0      19       0       0       0
  4405 ;;Total ram usage:       19 bytes
  4406 ;; Hardware stack levels used: 1
  4407 ;; Hardware stack levels required when called: 1
  4408 ;; This function calls:
  4409 ;;		___lwdiv
  4410 ;;		___lwmod
  4411 ;; This function is called by:
  4412 ;;		_atualizaLCD
  4413 ;; This function uses a non-reentrant model
  4414 ;;
  4415                           
  4416                           
  4417                           ;psect for function _sprintf
  4418  03A9                     _sprintf:
  4419                           
  4420                           ;incstack = 0
  4421                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4422                           ;sprintf@sp stored from wreg
  4423  03A9  1283               	bcf	3,5	;RP0=0, select bank0
  4424  03AA  1303               	bcf	3,6	;RP1=0, select bank0
  4425  03AB  00CD               	movwf	sprintf@sp
  4426  03AC                     i1l1623:
  4427                           
  4428                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  4429  03AC  303D               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  4430  03AD  00C5               	movwf	??_sprintf
  4431  03AE  0845               	movf	??_sprintf,w
  4432  03AF  00C8               	movwf	sprintf@ap
  4433                           
  4434                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  4435  03B0  2C7A               	goto	i1l1675
  4436  03B1                     i1l1625:
  4437                           
  4438                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  4439  03B1  3025               	movlw	37
  4440  03B2  064E               	xorwf	sprintf@c,w
  4441  03B3  1903               	btfsc	3,2
  4442  03B4  2BB6               	goto	u111_21
  4443  03B5  2BB7               	goto	u111_20
  4444  03B6                     u111_21:
  4445  03B6  2BC3               	goto	i1l1631
  4446  03B7                     u111_20:
  4447  03B7                     i1l1627:
  4448                           
  4449                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  4450  03B7  084E               	movf	sprintf@c,w
  4451  03B8  00C5               	movwf	??_sprintf
  4452  03B9  084D               	movf	sprintf@sp,w
  4453  03BA  0084               	movwf	4
  4454  03BB  0845               	movf	??_sprintf,w
  4455  03BC  1383               	bcf	3,7	;select IRP bank0
  4456  03BD  0080               	movwf	0
  4457  03BE                     i1l1629:
  4458  03BE  3001               	movlw	1
  4459  03BF  00C5               	movwf	??_sprintf
  4460  03C0  0845               	movf	??_sprintf,w
  4461  03C1  07CD               	addwf	sprintf@sp,f
  4462                           
  4463                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 559:    continue;
  4464  03C2  2C7A               	goto	i1l1675
  4465  03C3                     i1l1631:
  4466                           
  4467                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  4468  03C3  01C9               	clrf	sprintf@flag
  4469  03C4                     i1l1635:	
  4470                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  4471                           
  4472  03C4  3001               	movlw	1
  4473  03C5  07BC               	addwf	sprintf@f,f
  4474  03C6  30FF               	movlw	-1
  4475  03C7  073C               	addwf	sprintf@f,w
  4476  03C8  0084               	movwf	4
  4477  03C9  120A  158A  2000  120A  118A  	fcall	stringdir
  4478  03CE  00CE               	movwf	sprintf@c
  4479  03CF  00C5               	movwf	??_sprintf
  4480  03D0  01C6               	clrf	??_sprintf+1
  4481                           
  4482                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4483                           ; Switch size 1, requested type "simple"
  4484                           ; Number of cases is 1, Range of values is 0 to 0
  4485                           ; switch strategies available:
  4486                           ; Name         Instructions Cycles
  4487                           ; simple_byte            4     3 (average)
  4488                           ; direct_byte           11     8 (fixed)
  4489                           ; jumptable            260     6 (fixed)
  4490                           ;	Chosen strategy is simple_byte
  4491  03D1  0846               	movf	??_sprintf+1,w
  4492  03D2  3A00               	xorlw	0	; case 0
  4493  03D3  1903               	skipnz
  4494  03D4  2BD6               	goto	i1l2437
  4495  03D5  2C7A               	goto	i1l1675
  4496  03D6                     i1l2437:
  4497                           
  4498                           ; Switch size 1, requested type "simple"
  4499                           ; Number of cases is 3, Range of values is 0 to 105
  4500                           ; switch strategies available:
  4501                           ; Name         Instructions Cycles
  4502                           ; simple_byte           10     6 (average)
  4503                           ; jumptable            260     6 (fixed)
  4504                           ;	Chosen strategy is simple_byte
  4505  03D6  0845               	movf	??_sprintf,w
  4506  03D7  3A00               	xorlw	0	; case 0
  4507  03D8  1903               	skipnz
  4508  03D9  2C8C               	goto	i1l1677
  4509  03DA  3A64               	xorlw	100	; case 100
  4510  03DB  1903               	skipnz
  4511  03DC  2BE1               	goto	i1l1637
  4512  03DD  3A0D               	xorlw	13	; case 105
  4513  03DE  1903               	skipnz
  4514  03DF  2BE1               	goto	i1l1637
  4515  03E0  2C7A               	goto	i1l1675
  4516  03E1                     i1l1637:
  4517                           
  4518                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4519  03E1  0848               	movf	sprintf@ap,w
  4520  03E2  0084               	movwf	4
  4521  03E3  1383               	bcf	3,7	;select IRP bank0
  4522  03E4  0800               	movf	0,w
  4523  03E5  00CB               	movwf	sprintf@val
  4524  03E6  0A84               	incf	4,f
  4525  03E7  0800               	movf	0,w
  4526  03E8  00CC               	movwf	sprintf@val+1
  4527  03E9                     i1l1639:
  4528  03E9  3002               	movlw	2
  4529  03EA  00C5               	movwf	??_sprintf
  4530  03EB  0845               	movf	??_sprintf,w
  4531  03EC  07C8               	addwf	sprintf@ap,f
  4532  03ED                     i1l1641:
  4533                           
  4534                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  4535  03ED  1FCC               	btfss	sprintf@val+1,7
  4536  03EE  2BF0               	goto	u112_21
  4537  03EF  2BF1               	goto	u112_20
  4538  03F0                     u112_21:
  4539  03F0  2BFA               	goto	i1l1647
  4540  03F1                     u112_20:
  4541  03F1                     i1l1643:
  4542                           
  4543                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  4544  03F1  3003               	movlw	3
  4545  03F2  00C5               	movwf	??_sprintf
  4546  03F3  0845               	movf	??_sprintf,w
  4547  03F4  04C9               	iorwf	sprintf@flag,f
  4548  03F5                     i1l1645:
  4549                           
  4550                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  4551  03F5  09CB               	comf	sprintf@val,f
  4552  03F6  09CC               	comf	sprintf@val+1,f
  4553  03F7  0ACB               	incf	sprintf@val,f
  4554  03F8  1903               	skipnz
  4555  03F9  0ACC               	incf	sprintf@val+1,f
  4556  03FA                     i1l1647:
  4557                           
  4558                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  4559  03FA  01CE               	clrf	sprintf@c
  4560  03FB  0ACE               	incf	sprintf@c,f
  4561  03FC                     i1l1653:
  4562                           
  4563                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  4564  03FC  084E               	movf	sprintf@c,w
  4565  03FD  00C5               	movwf	??_sprintf
  4566  03FE  0745               	addwf	??_sprintf,w
  4567  03FF  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4568  0400  0084               	movwf	4
  4569  0401  120A  158A  2000  120A  118A  	fcall	stringdir
  4570  0406  00C6               	movwf	??_sprintf+1
  4571  0407  120A  158A  2000  120A  118A  	fcall	stringdir
  4572  040C  00C7               	movwf	??_sprintf+2
  4573  040D  0847               	movf	??_sprintf+2,w
  4574  040E  024C               	subwf	sprintf@val+1,w
  4575  040F  1D03               	skipz
  4576  0410  2C13               	goto	u113_25
  4577  0411  0846               	movf	??_sprintf+1,w
  4578  0412  024B               	subwf	sprintf@val,w
  4579  0413                     u113_25:
  4580  0413  1803               	skipnc
  4581  0414  2C16               	goto	u113_21
  4582  0415  2C17               	goto	u113_20
  4583  0416                     u113_21:
  4584  0416  2C18               	goto	i1l1657
  4585  0417                     u113_20:
  4586  0417  2C22               	goto	i1l1659
  4587  0418                     i1l1657:
  4588  0418  3001               	movlw	1
  4589  0419  00C5               	movwf	??_sprintf
  4590  041A  0845               	movf	??_sprintf,w
  4591  041B  07CE               	addwf	sprintf@c,f
  4592  041C  3005               	movlw	5
  4593  041D  064E               	xorwf	sprintf@c,w
  4594  041E  1D03               	btfss	3,2
  4595  041F  2C21               	goto	u114_21
  4596  0420  2C22               	goto	u114_20
  4597  0421                     u114_21:
  4598  0421  2BFC               	goto	i1l1653
  4599  0422                     u114_20:
  4600  0422                     i1l1659:
  4601                           
  4602                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  4603  0422  0849               	movf	sprintf@flag,w
  4604  0423  3903               	andlw	3
  4605  0424  1903               	btfsc	3,2
  4606  0425  2C27               	goto	u115_21
  4607  0426  2C28               	goto	u115_20
  4608  0427                     u115_21:
  4609  0427  2C33               	goto	i1l1665
  4610  0428                     u115_20:
  4611  0428                     i1l1661:
  4612                           
  4613                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  4614  0428  302D               	movlw	45
  4615  0429  00C5               	movwf	??_sprintf
  4616  042A  084D               	movf	sprintf@sp,w
  4617  042B  0084               	movwf	4
  4618  042C  0845               	movf	??_sprintf,w
  4619  042D  1383               	bcf	3,7	;select IRP bank0
  4620  042E  0080               	movwf	0
  4621  042F                     i1l1663:
  4622  042F  3001               	movlw	1
  4623  0430  00C5               	movwf	??_sprintf
  4624  0431  0845               	movf	??_sprintf,w
  4625  0432  07CD               	addwf	sprintf@sp,f
  4626  0433                     i1l1665:
  4627                           
  4628                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  4629  0433  084E               	movf	sprintf@c,w
  4630  0434  00C5               	movwf	??_sprintf
  4631  0435  0845               	movf	??_sprintf,w
  4632  0436  00CA               	movwf	sprintf@prec
  4633                           
  4634                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  4635  0437  2C71               	goto	i1l1673
  4636  0438                     i1l1667:
  4637                           
  4638                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  4639  0438  300A               	movlw	10
  4640  0439  00F8               	movwf	___lwmod@divisor
  4641  043A  3000               	movlw	0
  4642  043B  00F9               	movwf	___lwmod@divisor+1
  4643  043C  084A               	movf	sprintf@prec,w
  4644  043D  00C5               	movwf	??_sprintf
  4645  043E  0745               	addwf	??_sprintf,w
  4646  043F  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4647  0440  0084               	movwf	4
  4648  0441  120A  158A  2000  120A  118A  	fcall	stringdir
  4649  0446  00F0               	movwf	___lwdiv@divisor
  4650  0447  120A  158A  2000  120A  118A  	fcall	stringdir
  4651  044C  00F1               	movwf	___lwdiv@divisor+1
  4652  044D  084C               	movf	sprintf@val+1,w
  4653  044E  00F3               	movwf	___lwdiv@dividend+1
  4654  044F  084B               	movf	sprintf@val,w
  4655  0450  00F2               	movwf	___lwdiv@dividend
  4656  0451  120A  158A  276A  120A  118A  	fcall	___lwdiv
  4657  0456  0871               	movf	?___lwdiv+1,w
  4658  0457  00FB               	movwf	___lwmod@dividend+1
  4659  0458  0870               	movf	?___lwdiv,w
  4660  0459  00FA               	movwf	___lwmod@dividend
  4661  045A  120A  158A  26B2  120A  118A  	fcall	___lwmod
  4662  045F  0878               	movf	?___lwmod,w
  4663  0460  3E30               	addlw	48
  4664  0461  1283               	bcf	3,5	;RP0=0, select bank0
  4665  0462  1303               	bcf	3,6	;RP1=0, select bank0
  4666  0463  00C6               	movwf	??_sprintf+1
  4667  0464  0846               	movf	??_sprintf+1,w
  4668  0465  00CE               	movwf	sprintf@c
  4669  0466                     i1l1669:
  4670                           
  4671                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  4672  0466  084E               	movf	sprintf@c,w
  4673  0467  00C5               	movwf	??_sprintf
  4674  0468  084D               	movf	sprintf@sp,w
  4675  0469  0084               	movwf	4
  4676  046A  0845               	movf	??_sprintf,w
  4677  046B  1383               	bcf	3,7	;select IRP bank0
  4678  046C  0080               	movwf	0
  4679  046D                     i1l1671:
  4680  046D  3001               	movlw	1
  4681  046E  00C5               	movwf	??_sprintf
  4682  046F  0845               	movf	??_sprintf,w
  4683  0470  07CD               	addwf	sprintf@sp,f
  4684  0471                     i1l1673:
  4685                           
  4686                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  4687  0471  30FF               	movlw	255
  4688  0472  00C5               	movwf	??_sprintf
  4689  0473  0845               	movf	??_sprintf,w
  4690  0474  07CA               	addwf	sprintf@prec,f
  4691  0475  0A4A               	incf	sprintf@prec,w
  4692  0476  1D03               	btfss	3,2
  4693  0477  2C79               	goto	u116_21
  4694  0478  2C7A               	goto	u116_20
  4695  0479                     u116_21:
  4696  0479  2C38               	goto	i1l1667
  4697  047A                     u116_20:
  4698  047A                     i1l1675:
  4699                           
  4700                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  4701  047A  3001               	movlw	1
  4702  047B  07BC               	addwf	sprintf@f,f
  4703  047C  30FF               	movlw	-1
  4704  047D  073C               	addwf	sprintf@f,w
  4705  047E  0084               	movwf	4
  4706  047F  120A  158A  2000  120A  118A  	fcall	stringdir
  4707  0484  00C5               	movwf	??_sprintf
  4708  0485  0845               	movf	??_sprintf,w
  4709  0486  00CE               	movwf	sprintf@c
  4710  0487  084E               	movf	sprintf@c,w
  4711  0488  1D03               	btfss	3,2
  4712  0489  2C8B               	goto	u117_21
  4713  048A  2C8C               	goto	u117_20
  4714  048B                     u117_21:
  4715  048B  2BB1               	goto	i1l1625
  4716  048C                     u117_20:
  4717  048C                     i1l1677:
  4718                           
  4719                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  4720  048C  084D               	movf	sprintf@sp,w
  4721  048D  0084               	movwf	4
  4722  048E  1383               	bcf	3,7	;select IRP bank0
  4723  048F  0180               	clrf	0
  4724  0490                     i1l341:
  4725  0490  0008               	return
  4726  0491                     __end_of_sprintf:
  4727                           
  4728                           	psect	text19
  4729  0EB2                     __ptext19:	
  4730 ;; *************** function ___lwmod *****************
  4731 ;; Defined at:
  4732 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  4733 ;; Parameters:    Size  Location     Type
  4734 ;;  divisor         2    8[COMMON] unsigned int 
  4735 ;;  dividend        2   10[COMMON] unsigned int 
  4736 ;; Auto vars:     Size  Location     Type
  4737 ;;  counter         1   13[COMMON] unsigned char 
  4738 ;; Return value:  Size  Location     Type
  4739 ;;                  2    8[COMMON] unsigned int 
  4740 ;; Registers used:
  4741 ;;		wreg, status,2, status,0
  4742 ;; Tracked objects:
  4743 ;;		On entry : 0/0
  4744 ;;		On exit  : 0/0
  4745 ;;		Unchanged: 0/0
  4746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4747 ;;      Params:         4       0       0       0       0
  4748 ;;      Locals:         1       0       0       0       0
  4749 ;;      Temps:          1       0       0       0       0
  4750 ;;      Totals:         6       0       0       0       0
  4751 ;;Total ram usage:        6 bytes
  4752 ;; Hardware stack levels used: 1
  4753 ;; This function calls:
  4754 ;;		Nothing
  4755 ;; This function is called by:
  4756 ;;		_sprintf
  4757 ;; This function uses a non-reentrant model
  4758 ;;
  4759                           
  4760                           
  4761                           ;psect for function ___lwmod
  4762  0EB2                     ___lwmod:
  4763  0EB2                     i1l1551:	
  4764                           ;incstack = 0
  4765                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4766                           
  4767  0EB2  0878               	movf	___lwmod@divisor,w
  4768  0EB3  0479               	iorwf	___lwmod@divisor+1,w
  4769  0EB4  1903               	btfsc	3,2
  4770  0EB5  2EB7               	goto	u100_21
  4771  0EB6  2EB8               	goto	u100_20
  4772  0EB7                     u100_21:
  4773  0EB7  2EE7               	goto	i1l1569
  4774  0EB8                     u100_20:
  4775  0EB8                     i1l1553:
  4776  0EB8  01FD               	clrf	___lwmod@counter
  4777  0EB9  0AFD               	incf	___lwmod@counter,f
  4778  0EBA  2EC6               	goto	i1l1559
  4779  0EBB                     i1l1555:
  4780  0EBB  3001               	movlw	1
  4781  0EBC                     u101_25:
  4782  0EBC  1003               	clrc
  4783  0EBD  0DF8               	rlf	___lwmod@divisor,f
  4784  0EBE  0DF9               	rlf	___lwmod@divisor+1,f
  4785  0EBF  3EFF               	addlw	-1
  4786  0EC0  1D03               	skipz
  4787  0EC1  2EBC               	goto	u101_25
  4788  0EC2                     i1l1557:
  4789  0EC2  3001               	movlw	1
  4790  0EC3  00FC               	movwf	??___lwmod
  4791  0EC4  087C               	movf	??___lwmod,w
  4792  0EC5  07FD               	addwf	___lwmod@counter,f
  4793  0EC6                     i1l1559:
  4794  0EC6  1FF9               	btfss	___lwmod@divisor+1,7
  4795  0EC7  2EC9               	goto	u102_21
  4796  0EC8  2ECA               	goto	u102_20
  4797  0EC9                     u102_21:
  4798  0EC9  2EBB               	goto	i1l1555
  4799  0ECA                     u102_20:
  4800  0ECA                     i1l1561:
  4801  0ECA  0879               	movf	___lwmod@divisor+1,w
  4802  0ECB  027B               	subwf	___lwmod@dividend+1,w
  4803  0ECC  1D03               	skipz
  4804  0ECD  2ED0               	goto	u103_25
  4805  0ECE  0878               	movf	___lwmod@divisor,w
  4806  0ECF  027A               	subwf	___lwmod@dividend,w
  4807  0ED0                     u103_25:
  4808  0ED0  1C03               	skipc
  4809  0ED1  2ED3               	goto	u103_21
  4810  0ED2  2ED4               	goto	u103_20
  4811  0ED3                     u103_21:
  4812  0ED3  2EDA               	goto	i1l1565
  4813  0ED4                     u103_20:
  4814  0ED4                     i1l1563:
  4815  0ED4  0878               	movf	___lwmod@divisor,w
  4816  0ED5  02FA               	subwf	___lwmod@dividend,f
  4817  0ED6  0879               	movf	___lwmod@divisor+1,w
  4818  0ED7  1C03               	skipc
  4819  0ED8  03FB               	decf	___lwmod@dividend+1,f
  4820  0ED9  02FB               	subwf	___lwmod@dividend+1,f
  4821  0EDA                     i1l1565:
  4822  0EDA  3001               	movlw	1
  4823  0EDB                     u104_25:
  4824  0EDB  1003               	clrc
  4825  0EDC  0CF9               	rrf	___lwmod@divisor+1,f
  4826  0EDD  0CF8               	rrf	___lwmod@divisor,f
  4827  0EDE  3EFF               	addlw	-1
  4828  0EDF  1D03               	skipz
  4829  0EE0  2EDB               	goto	u104_25
  4830  0EE1                     i1l1567:
  4831  0EE1  3001               	movlw	1
  4832  0EE2  02FD               	subwf	___lwmod@counter,f
  4833  0EE3  1D03               	btfss	3,2
  4834  0EE4  2EE6               	goto	u105_21
  4835  0EE5  2EE7               	goto	u105_20
  4836  0EE6                     u105_21:
  4837  0EE6  2ECA               	goto	i1l1561
  4838  0EE7                     u105_20:
  4839  0EE7                     i1l1569:
  4840  0EE7  087B               	movf	___lwmod@dividend+1,w
  4841  0EE8  00F9               	movwf	?___lwmod+1
  4842  0EE9  087A               	movf	___lwmod@dividend,w
  4843  0EEA  00F8               	movwf	?___lwmod
  4844  0EEB                     i1l627:
  4845  0EEB  0008               	return
  4846  0EEC                     __end_of___lwmod:
  4847                           
  4848                           	psect	text20
  4849  0F6A                     __ptext20:	
  4850 ;; *************** function ___lwdiv *****************
  4851 ;; Defined at:
  4852 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  4853 ;; Parameters:    Size  Location     Type
  4854 ;;  divisor         2    0[COMMON] unsigned int 
  4855 ;;  dividend        2    2[COMMON] unsigned int 
  4856 ;; Auto vars:     Size  Location     Type
  4857 ;;  quotient        2    5[COMMON] unsigned int 
  4858 ;;  counter         1    7[COMMON] unsigned char 
  4859 ;; Return value:  Size  Location     Type
  4860 ;;                  2    0[COMMON] unsigned int 
  4861 ;; Registers used:
  4862 ;;		wreg, status,2, status,0
  4863 ;; Tracked objects:
  4864 ;;		On entry : 0/0
  4865 ;;		On exit  : 0/0
  4866 ;;		Unchanged: 0/0
  4867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4868 ;;      Params:         4       0       0       0       0
  4869 ;;      Locals:         3       0       0       0       0
  4870 ;;      Temps:          1       0       0       0       0
  4871 ;;      Totals:         8       0       0       0       0
  4872 ;;Total ram usage:        8 bytes
  4873 ;; Hardware stack levels used: 1
  4874 ;; This function calls:
  4875 ;;		Nothing
  4876 ;; This function is called by:
  4877 ;;		_sprintf
  4878 ;; This function uses a non-reentrant model
  4879 ;;
  4880                           
  4881                           
  4882                           ;psect for function ___lwdiv
  4883  0F6A                     ___lwdiv:
  4884  0F6A                     i1l1525:	
  4885                           ;incstack = 0
  4886                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4887                           
  4888  0F6A  01F5               	clrf	___lwdiv@quotient
  4889  0F6B  01F6               	clrf	___lwdiv@quotient+1
  4890  0F6C                     i1l1527:
  4891  0F6C  0870               	movf	___lwdiv@divisor,w
  4892  0F6D  0471               	iorwf	___lwdiv@divisor+1,w
  4893  0F6E  1903               	btfsc	3,2
  4894  0F6F  2F71               	goto	u93_21
  4895  0F70  2F72               	goto	u93_20
  4896  0F71                     u93_21:
  4897  0F71  2FA9               	goto	i1l1547
  4898  0F72                     u93_20:
  4899  0F72                     i1l1529:
  4900  0F72  01F7               	clrf	___lwdiv@counter
  4901  0F73  0AF7               	incf	___lwdiv@counter,f
  4902  0F74  2F80               	goto	i1l1535
  4903  0F75                     i1l1531:
  4904  0F75  3001               	movlw	1
  4905  0F76                     u94_25:
  4906  0F76  1003               	clrc
  4907  0F77  0DF0               	rlf	___lwdiv@divisor,f
  4908  0F78  0DF1               	rlf	___lwdiv@divisor+1,f
  4909  0F79  3EFF               	addlw	-1
  4910  0F7A  1D03               	skipz
  4911  0F7B  2F76               	goto	u94_25
  4912  0F7C                     i1l1533:
  4913  0F7C  3001               	movlw	1
  4914  0F7D  00F4               	movwf	??___lwdiv
  4915  0F7E  0874               	movf	??___lwdiv,w
  4916  0F7F  07F7               	addwf	___lwdiv@counter,f
  4917  0F80                     i1l1535:
  4918  0F80  1FF1               	btfss	___lwdiv@divisor+1,7
  4919  0F81  2F83               	goto	u95_21
  4920  0F82  2F84               	goto	u95_20
  4921  0F83                     u95_21:
  4922  0F83  2F75               	goto	i1l1531
  4923  0F84                     u95_20:
  4924  0F84                     i1l1537:
  4925  0F84  3001               	movlw	1
  4926  0F85                     u96_25:
  4927  0F85  1003               	clrc
  4928  0F86  0DF5               	rlf	___lwdiv@quotient,f
  4929  0F87  0DF6               	rlf	___lwdiv@quotient+1,f
  4930  0F88  3EFF               	addlw	-1
  4931  0F89  1D03               	skipz
  4932  0F8A  2F85               	goto	u96_25
  4933  0F8B  0871               	movf	___lwdiv@divisor+1,w
  4934  0F8C  0273               	subwf	___lwdiv@dividend+1,w
  4935  0F8D  1D03               	skipz
  4936  0F8E  2F91               	goto	u97_25
  4937  0F8F  0870               	movf	___lwdiv@divisor,w
  4938  0F90  0272               	subwf	___lwdiv@dividend,w
  4939  0F91                     u97_25:
  4940  0F91  1C03               	skipc
  4941  0F92  2F94               	goto	u97_21
  4942  0F93  2F95               	goto	u97_20
  4943  0F94                     u97_21:
  4944  0F94  2F9C               	goto	i1l1543
  4945  0F95                     u97_20:
  4946  0F95                     i1l1539:
  4947  0F95  0870               	movf	___lwdiv@divisor,w
  4948  0F96  02F2               	subwf	___lwdiv@dividend,f
  4949  0F97  0871               	movf	___lwdiv@divisor+1,w
  4950  0F98  1C03               	skipc
  4951  0F99  03F3               	decf	___lwdiv@dividend+1,f
  4952  0F9A  02F3               	subwf	___lwdiv@dividend+1,f
  4953  0F9B                     i1l1541:
  4954  0F9B  1475               	bsf	___lwdiv@quotient,0
  4955  0F9C                     i1l1543:
  4956  0F9C  3001               	movlw	1
  4957  0F9D                     u98_25:
  4958  0F9D  1003               	clrc
  4959  0F9E  0CF1               	rrf	___lwdiv@divisor+1,f
  4960  0F9F  0CF0               	rrf	___lwdiv@divisor,f
  4961  0FA0  3EFF               	addlw	-1
  4962  0FA1  1D03               	skipz
  4963  0FA2  2F9D               	goto	u98_25
  4964  0FA3                     i1l1545:
  4965  0FA3  3001               	movlw	1
  4966  0FA4  02F7               	subwf	___lwdiv@counter,f
  4967  0FA5  1D03               	btfss	3,2
  4968  0FA6  2FA8               	goto	u99_21
  4969  0FA7  2FA9               	goto	u99_20
  4970  0FA8                     u99_21:
  4971  0FA8  2F84               	goto	i1l1537
  4972  0FA9                     u99_20:
  4973  0FA9                     i1l1547:
  4974  0FA9  0876               	movf	___lwdiv@quotient+1,w
  4975  0FAA  00F1               	movwf	?___lwdiv+1
  4976  0FAB  0875               	movf	___lwdiv@quotient,w
  4977  0FAC  00F0               	movwf	?___lwdiv
  4978  0FAD                     i1l617:
  4979  0FAD  0008               	return
  4980  0FAE                     __end_of___lwdiv:
  4981                           
  4982                           	psect	text21
  4983  06D1                     __ptext21:	
  4984 ;; *************** function ___fltol *****************
  4985 ;; Defined at:
  4986 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fltol.c"
  4987 ;; Parameters:    Size  Location     Type
  4988 ;;  f1              4    0[COMMON] unsigned int 
  4989 ;; Auto vars:     Size  Location     Type
  4990 ;;  exp1            1   10[COMMON] unsigned char 
  4991 ;;  sign1           1    9[COMMON] unsigned char 
  4992 ;; Return value:  Size  Location     Type
  4993 ;;                  4    0[COMMON] long 
  4994 ;; Registers used:
  4995 ;;		wreg, status,2, status,0
  4996 ;; Tracked objects:
  4997 ;;		On entry : 0/0
  4998 ;;		On exit  : 0/0
  4999 ;;		Unchanged: 0/0
  5000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5001 ;;      Params:         4       0       0       0       0
  5002 ;;      Locals:         2       0       0       0       0
  5003 ;;      Temps:          5       0       0       0       0
  5004 ;;      Totals:        11       0       0       0       0
  5005 ;;Total ram usage:       11 bytes
  5006 ;; Hardware stack levels used: 1
  5007 ;; This function calls:
  5008 ;;		Nothing
  5009 ;; This function is called by:
  5010 ;;		_atualizaLCD
  5011 ;; This function uses a non-reentrant model
  5012 ;;
  5013                           
  5014                           
  5015                           ;psect for function ___fltol
  5016  06D1                     ___fltol:
  5017  06D1                     i1l1685:	
  5018                           ;incstack = 0
  5019                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  5020                           
  5021  06D1  1003               	clrc
  5022  06D2  0D72               	rlf	___fltol@f1+2,w
  5023  06D3  0D73               	rlf	___fltol@f1+3,w
  5024  06D4  00F4               	movwf	??___fltol
  5025  06D5  0874               	movf	??___fltol,w
  5026  06D6  00FA               	movwf	___fltol@exp1
  5027  06D7  087A               	movf	___fltol@exp1,w
  5028  06D8  1D03               	btfss	3,2
  5029  06D9  2EDB               	goto	u118_21
  5030  06DA  2EDC               	goto	u118_20
  5031  06DB                     u118_21:
  5032  06DB  2EE5               	goto	i1l1691
  5033  06DC                     u118_20:
  5034  06DC                     i1l1687:
  5035  06DC  3000               	movlw	0
  5036  06DD  00F3               	movwf	?___fltol+3
  5037  06DE  3000               	movlw	0
  5038  06DF  00F2               	movwf	?___fltol+2
  5039  06E0  3000               	movlw	0
  5040  06E1  00F1               	movwf	?___fltol+1
  5041  06E2  3000               	movlw	0
  5042  06E3  00F0               	movwf	?___fltol
  5043  06E4  2F4A               	goto	i1l531
  5044  06E5                     i1l1691:
  5045  06E5  0870               	movf	___fltol@f1,w
  5046  06E6  00F4               	movwf	??___fltol
  5047  06E7  0871               	movf	___fltol@f1+1,w
  5048  06E8  00F5               	movwf	??___fltol+1
  5049  06E9  0872               	movf	___fltol@f1+2,w
  5050  06EA  00F6               	movwf	??___fltol+2
  5051  06EB  0873               	movf	___fltol@f1+3,w
  5052  06EC  00F7               	movwf	??___fltol+3
  5053  06ED  301F               	movlw	31
  5054  06EE                     u119_25:
  5055  06EE  1003               	clrc
  5056  06EF  0CF7               	rrf	??___fltol+3,f
  5057  06F0  0CF6               	rrf	??___fltol+2,f
  5058  06F1  0CF5               	rrf	??___fltol+1,f
  5059  06F2  0CF4               	rrf	??___fltol,f
  5060  06F3                     u119_20:
  5061  06F3  3EFF               	addlw	-1
  5062  06F4  1D03               	skipz
  5063  06F5  2EEE               	goto	u119_25
  5064  06F6  0874               	movf	??___fltol,w
  5065  06F7  00F8               	movwf	??___fltol+4
  5066  06F8  0878               	movf	??___fltol+4,w
  5067  06F9  00F9               	movwf	___fltol@sign1
  5068  06FA                     i1l1693:
  5069  06FA  17F2               	bsf	___fltol@f1+2,7
  5070  06FB                     i1l1695:
  5071  06FB  30FF               	movlw	255
  5072  06FC  05F0               	andwf	___fltol@f1,f
  5073  06FD  30FF               	movlw	255
  5074  06FE  05F1               	andwf	___fltol@f1+1,f
  5075  06FF  30FF               	movlw	255
  5076  0700  05F2               	andwf	___fltol@f1+2,f
  5077  0701  3000               	movlw	0
  5078  0702  05F3               	andwf	___fltol@f1+3,f
  5079  0703                     i1l1697:
  5080  0703  3096               	movlw	150
  5081  0704  02FA               	subwf	___fltol@exp1,f
  5082  0705                     i1l1699:
  5083  0705  1FFA               	btfss	___fltol@exp1,7
  5084  0706  2F08               	goto	u120_21
  5085  0707  2F09               	goto	u120_20
  5086  0708                     u120_21:
  5087  0708  2F23               	goto	i1l1709
  5088  0709                     u120_20:
  5089  0709                     i1l1701:
  5090  0709  087A               	movf	___fltol@exp1,w
  5091  070A  3A80               	xorlw	128
  5092  070B  3E97               	addlw	151
  5093  070C  1803               	skipnc
  5094  070D  2F0F               	goto	u121_21
  5095  070E  2F10               	goto	u121_20
  5096  070F                     u121_21:
  5097  070F  2F11               	goto	i1l1707
  5098  0710                     u121_20:
  5099  0710  2EDC               	goto	i1l1687
  5100  0711                     i1l1707:
  5101  0711  3001               	movlw	1
  5102  0712                     u122_25:
  5103  0712  1003               	clrc
  5104  0713  0CF3               	rrf	___fltol@f1+3,f
  5105  0714  0CF2               	rrf	___fltol@f1+2,f
  5106  0715  0CF1               	rrf	___fltol@f1+1,f
  5107  0716  0CF0               	rrf	___fltol@f1,f
  5108  0717  3EFF               	addlw	-1
  5109  0718  1D03               	skipz
  5110  0719  2F12               	goto	u122_25
  5111  071A  3001               	movlw	1
  5112  071B  00F4               	movwf	??___fltol
  5113  071C  0874               	movf	??___fltol,w
  5114  071D  07FA               	addwf	___fltol@exp1,f
  5115  071E  1D03               	btfss	3,2
  5116  071F  2F21               	goto	u123_21
  5117  0720  2F22               	goto	u123_20
  5118  0721                     u123_21:
  5119  0721  2F11               	goto	i1l1707
  5120  0722                     u123_20:
  5121  0722  2F3A               	goto	i1l1717
  5122  0723                     i1l1709:
  5123  0723  3020               	movlw	32
  5124  0724  027A               	subwf	___fltol@exp1,w
  5125  0725  1C03               	skipc
  5126  0726  2F28               	goto	u124_21
  5127  0727  2F29               	goto	u124_20
  5128  0728                     u124_21:
  5129  0728  2F35               	goto	i1l538
  5130  0729                     u124_20:
  5131  0729  2EDC               	goto	i1l1687
  5132  072A                     i1l1715:
  5133  072A  3001               	movlw	1
  5134  072B  00F4               	movwf	??___fltol
  5135  072C                     u125_25:
  5136  072C  1003               	clrc
  5137  072D  0DF0               	rlf	___fltol@f1,f
  5138  072E  0DF1               	rlf	___fltol@f1+1,f
  5139  072F  0DF2               	rlf	___fltol@f1+2,f
  5140  0730  0DF3               	rlf	___fltol@f1+3,f
  5141  0731  0BF4               	decfsz	??___fltol,f
  5142  0732  2F2C               	goto	u125_25
  5143  0733  3001               	movlw	1
  5144  0734  02FA               	subwf	___fltol@exp1,f
  5145  0735                     i1l538:
  5146  0735  087A               	movf	___fltol@exp1,w
  5147  0736  1D03               	btfss	3,2
  5148  0737  2F39               	goto	u126_21
  5149  0738  2F3A               	goto	u126_20
  5150  0739                     u126_21:
  5151  0739  2F2A               	goto	i1l1715
  5152  073A                     u126_20:
  5153  073A                     i1l1717:
  5154  073A  0879               	movf	___fltol@sign1,w
  5155  073B  1903               	btfsc	3,2
  5156  073C  2F3E               	goto	u127_21
  5157  073D  2F3F               	goto	u127_20
  5158  073E                     u127_21:
  5159  073E  2F4A               	goto	i1l541
  5160  073F                     u127_20:
  5161  073F                     i1l1719:
  5162  073F  09F0               	comf	___fltol@f1,f
  5163  0740  09F1               	comf	___fltol@f1+1,f
  5164  0741  09F2               	comf	___fltol@f1+2,f
  5165  0742  09F3               	comf	___fltol@f1+3,f
  5166  0743  0AF0               	incf	___fltol@f1,f
  5167  0744  1903               	skipnz
  5168  0745  0AF1               	incf	___fltol@f1+1,f
  5169  0746  1903               	skipnz
  5170  0747  0AF2               	incf	___fltol@f1+2,f
  5171  0748  1903               	skipnz
  5172  0749  0AF3               	incf	___fltol@f1+3,f
  5173  074A                     i1l541:
  5174  074A                     i1l531:
  5175  074A  0008               	return
  5176  074B                     __end_of___fltol:
  5177                           
  5178                           	psect	text22
  5179  0D52                     __ptext22:	
  5180 ;; *************** function _Lcd_Write_String *****************
  5181 ;; Defined at:
  5182 ;;		line 97 in file "./lcd.h"
  5183 ;; Parameters:    Size  Location     Type
  5184 ;;  a               1    wreg     PTR unsigned char 
  5185 ;;		 -> buffer1(30), buffer0(30), 
  5186 ;; Auto vars:     Size  Location     Type
  5187 ;;  a               1    8[COMMON] PTR unsigned char 
  5188 ;;		 -> buffer1(30), buffer0(30), 
  5189 ;;  i               2    6[COMMON] int 
  5190 ;; Return value:  Size  Location     Type
  5191 ;;                  1    wreg      void 
  5192 ;; Registers used:
  5193 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5194 ;; Tracked objects:
  5195 ;;		On entry : 0/0
  5196 ;;		On exit  : 0/0
  5197 ;;		Unchanged: 0/0
  5198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5199 ;;      Params:         0       0       0       0       0
  5200 ;;      Locals:         3       0       0       0       0
  5201 ;;      Temps:          1       0       0       0       0
  5202 ;;      Totals:         4       0       0       0       0
  5203 ;;Total ram usage:        4 bytes
  5204 ;; Hardware stack levels used: 1
  5205 ;; Hardware stack levels required when called: 2
  5206 ;; This function calls:
  5207 ;;		_Lcd_Write_Char
  5208 ;; This function is called by:
  5209 ;;		_atualizaLCD
  5210 ;; This function uses a non-reentrant model
  5211 ;;
  5212                           
  5213                           
  5214                           ;psect for function _Lcd_Write_String
  5215  0D52                     _Lcd_Write_String:
  5216                           
  5217                           ;incstack = 0
  5218                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5219                           ;Lcd_Write_String@a stored from wreg
  5220  0D52  00F8               	movwf	Lcd_Write_String@a
  5221  0D53                     i1l1615:
  5222                           
  5223                           ;./lcd.h: 97: void Lcd_Write_String(char *a);./lcd.h: 98: {;./lcd.h: 99:  int i;;./lcd.h
      +                          : 100:  for(i=0;a[i]!='\0';i++)
  5224  0D53  01F6               	clrf	Lcd_Write_String@i
  5225  0D54  01F7               	clrf	Lcd_Write_String@i+1
  5226  0D55  2D67               	goto	i1l1621
  5227  0D56                     i1l1617:
  5228                           
  5229                           ;./lcd.h: 101:     Lcd_Write_Char(a[i]);
  5230  0D56  0876               	movf	Lcd_Write_String@i,w
  5231  0D57  0778               	addwf	Lcd_Write_String@a,w
  5232  0D58  00F5               	movwf	??_Lcd_Write_String
  5233  0D59  0875               	movf	??_Lcd_Write_String,w
  5234  0D5A  0084               	movwf	4
  5235  0D5B  0800               	movf	0,w
  5236  0D5C  120A  158A  267B  120A  158A  	fcall	_Lcd_Write_Char
  5237  0D61                     i1l1619:
  5238  0D61  3001               	movlw	1
  5239  0D62  07F6               	addwf	Lcd_Write_String@i,f
  5240  0D63  1803               	skipnc
  5241  0D64  0AF7               	incf	Lcd_Write_String@i+1,f
  5242  0D65  3000               	movlw	0
  5243  0D66  07F7               	addwf	Lcd_Write_String@i+1,f
  5244  0D67                     i1l1621:
  5245  0D67  0876               	movf	Lcd_Write_String@i,w
  5246  0D68  0778               	addwf	Lcd_Write_String@a,w
  5247  0D69  00F5               	movwf	??_Lcd_Write_String
  5248  0D6A  0875               	movf	??_Lcd_Write_String,w
  5249  0D6B  0084               	movwf	4
  5250  0D6C  1383               	bcf	3,7	;select IRP bank0
  5251  0D6D  0800               	movf	0,w
  5252  0D6E  1D03               	btfss	3,2
  5253  0D6F  2D71               	goto	u110_21
  5254  0D70  2D72               	goto	u110_20
  5255  0D71                     u110_21:
  5256  0D71  2D56               	goto	i1l1617
  5257  0D72                     u110_20:
  5258  0D72                     i1l145:
  5259  0D72  0008               	return
  5260  0D73                     __end_of_Lcd_Write_String:
  5261                           
  5262                           	psect	text23
  5263  0E7B                     __ptext23:	
  5264 ;; *************** function _Lcd_Write_Char *****************
  5265 ;; Defined at:
  5266 ;;		line 81 in file "./lcd.h"
  5267 ;; Parameters:    Size  Location     Type
  5268 ;;  a               1    wreg     unsigned char 
  5269 ;; Auto vars:     Size  Location     Type
  5270 ;;  a               1    4[COMMON] unsigned char 
  5271 ;;  y               1    3[COMMON] unsigned char 
  5272 ;;  temp            1    2[COMMON] unsigned char 
  5273 ;; Return value:  Size  Location     Type
  5274 ;;                  1    wreg      void 
  5275 ;; Registers used:
  5276 ;;		wreg, status,2, status,0, pclath, cstack
  5277 ;; Tracked objects:
  5278 ;;		On entry : 0/0
  5279 ;;		On exit  : 0/0
  5280 ;;		Unchanged: 0/0
  5281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5282 ;;      Params:         0       0       0       0       0
  5283 ;;      Locals:         3       0       0       0       0
  5284 ;;      Temps:          1       0       0       0       0
  5285 ;;      Totals:         4       0       0       0       0
  5286 ;;Total ram usage:        4 bytes
  5287 ;; Hardware stack levels used: 1
  5288 ;; Hardware stack levels required when called: 1
  5289 ;; This function calls:
  5290 ;;		i1_Lcd_Port
  5291 ;; This function is called by:
  5292 ;;		_Lcd_Write_String
  5293 ;; This function uses a non-reentrant model
  5294 ;;
  5295                           
  5296                           
  5297                           ;psect for function _Lcd_Write_Char
  5298  0E7B                     _Lcd_Write_Char:
  5299                           
  5300                           ;incstack = 0
  5301                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  5302                           ;Lcd_Write_Char@a stored from wreg
  5303  0E7B  00F4               	movwf	Lcd_Write_Char@a
  5304  0E7C                     i1l1505:
  5305                           
  5306                           ;./lcd.h: 81: void Lcd_Write_Char(char a);./lcd.h: 82: {;./lcd.h: 83:    char temp,y;;./
      +                          lcd.h: 84:    temp = a&0x0F;
  5307  0E7C  0874               	movf	Lcd_Write_Char@a,w
  5308  0E7D  390F               	andlw	15
  5309  0E7E  00F1               	movwf	??_Lcd_Write_Char
  5310  0E7F  0871               	movf	??_Lcd_Write_Char,w
  5311  0E80  00F2               	movwf	Lcd_Write_Char@temp
  5312                           
  5313                           ;./lcd.h: 85:    y = a&0xF0;
  5314  0E81  0874               	movf	Lcd_Write_Char@a,w
  5315  0E82  39F0               	andlw	240
  5316  0E83  00F1               	movwf	??_Lcd_Write_Char
  5317  0E84  0871               	movf	??_Lcd_Write_Char,w
  5318  0E85  00F3               	movwf	Lcd_Write_Char@y
  5319  0E86                     i1l1507:
  5320                           
  5321                           ;./lcd.h: 86:    RB2 = 1;
  5322  0E86  1283               	bcf	3,5	;RP0=0, select bank0
  5323  0E87  1303               	bcf	3,6	;RP1=0, select bank0
  5324  0E88  1506               	bsf	6,2	;volatile
  5325  0E89                     i1l1509:
  5326                           
  5327                           ;./lcd.h: 87:    Lcd_Port(y>>4);
  5328  0E89  0873               	movf	Lcd_Write_Char@y,w
  5329  0E8A  00F1               	movwf	??_Lcd_Write_Char
  5330  0E8B  3004               	movlw	4
  5331  0E8C                     u92_25:
  5332  0E8C  1003               	clrc
  5333  0E8D  0CF1               	rrf	??_Lcd_Write_Char,f
  5334  0E8E  3EFF               	addlw	-1
  5335  0E8F  1D03               	skipz
  5336  0E90  2E8C               	goto	u92_25
  5337  0E91  0871               	movf	??_Lcd_Write_Char,w
  5338  0E92  120A  158A  2573  120A  158A  	fcall	i1_Lcd_Port
  5339  0E97                     i1l1511:
  5340                           
  5341                           ;./lcd.h: 88:    RB1 = 1;
  5342  0E97  1283               	bcf	3,5	;RP0=0, select bank0
  5343  0E98  1303               	bcf	3,6	;RP1=0, select bank0
  5344  0E99  1486               	bsf	6,1	;volatile
  5345  0E9A                     i1l1513:
  5346                           
  5347                           ;./lcd.h: 89:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  5348  0E9A  300D               	movlw	13
  5349  0E9B  00F1               	movwf	??_Lcd_Write_Char
  5350  0E9C                     u226_27:
  5351  0E9C  0BF1               	decfsz	??_Lcd_Write_Char,f
  5352  0E9D  2E9C               	goto	u226_27
  5353  0E9E                     i1l1515:
  5354                           
  5355                           ;./lcd.h: 90:    RB1 = 0;
  5356  0E9E  1283               	bcf	3,5	;RP0=0, select bank0
  5357  0E9F  1303               	bcf	3,6	;RP1=0, select bank0
  5358  0EA0  1086               	bcf	6,1	;volatile
  5359  0EA1                     i1l1517:
  5360                           
  5361                           ;./lcd.h: 91:    Lcd_Port(temp);
  5362  0EA1  0872               	movf	Lcd_Write_Char@temp,w
  5363  0EA2  120A  158A  2573  120A  158A  	fcall	i1_Lcd_Port
  5364  0EA7                     i1l1519:
  5365                           
  5366                           ;./lcd.h: 92:    RB1 = 1;
  5367  0EA7  1283               	bcf	3,5	;RP0=0, select bank0
  5368  0EA8  1303               	bcf	3,6	;RP1=0, select bank0
  5369  0EA9  1486               	bsf	6,1	;volatile
  5370  0EAA                     i1l1521:
  5371                           
  5372                           ;./lcd.h: 93:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  5373  0EAA  300D               	movlw	13
  5374  0EAB  00F1               	movwf	??_Lcd_Write_Char
  5375  0EAC                     u227_27:
  5376  0EAC  0BF1               	decfsz	??_Lcd_Write_Char,f
  5377  0EAD  2EAC               	goto	u227_27
  5378  0EAE                     i1l1523:
  5379                           
  5380                           ;./lcd.h: 94:    RB1 = 0;
  5381  0EAE  1283               	bcf	3,5	;RP0=0, select bank0
  5382  0EAF  1303               	bcf	3,6	;RP1=0, select bank0
  5383  0EB0  1086               	bcf	6,1	;volatile
  5384  0EB1                     i1l139:
  5385  0EB1  0008               	return
  5386  0EB2                     __end_of_Lcd_Write_Char:
  5387                           
  5388                           	psect	text24
  5389  0FAE                     __ptext24:	
  5390 ;; *************** function _Lcd_Set_Cursor *****************
  5391 ;; Defined at:
  5392 ;;		line 41 in file "./lcd.h"
  5393 ;; Parameters:    Size  Location     Type
  5394 ;;  a               1    wreg     unsigned char 
  5395 ;;  b               1    4[COMMON] unsigned char 
  5396 ;; Auto vars:     Size  Location     Type
  5397 ;;  a               1    7[COMMON] unsigned char 
  5398 ;;  temp            1   10[COMMON] unsigned char 
  5399 ;;  y               1    9[COMMON] unsigned char 
  5400 ;;  z               1    8[COMMON] unsigned char 
  5401 ;; Return value:  Size  Location     Type
  5402 ;;                  1    wreg      void 
  5403 ;; Registers used:
  5404 ;;		wreg, status,2, status,0, pclath, cstack
  5405 ;; Tracked objects:
  5406 ;;		On entry : 0/0
  5407 ;;		On exit  : 0/0
  5408 ;;		Unchanged: 0/0
  5409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5410 ;;      Params:         1       0       0       0       0
  5411 ;;      Locals:         4       0       0       0       0
  5412 ;;      Temps:          2       0       0       0       0
  5413 ;;      Totals:         7       0       0       0       0
  5414 ;;Total ram usage:        7 bytes
  5415 ;; Hardware stack levels used: 1
  5416 ;; Hardware stack levels required when called: 2
  5417 ;; This function calls:
  5418 ;;		i1_Lcd_Cmd
  5419 ;; This function is called by:
  5420 ;;		_atualizaLCD
  5421 ;; This function uses a non-reentrant model
  5422 ;;
  5423                           
  5424                           
  5425                           ;psect for function _Lcd_Set_Cursor
  5426  0FAE                     _Lcd_Set_Cursor:
  5427                           
  5428                           ;incstack = 0
  5429                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  5430                           ;Lcd_Set_Cursor@a stored from wreg
  5431  0FAE  00F7               	movwf	Lcd_Set_Cursor@a
  5432  0FAF                     i1l1595:
  5433                           
  5434                           ;./lcd.h: 41: void Lcd_Set_Cursor(char a, char b);./lcd.h: 42: {;./lcd.h: 43:  char temp
      +                          ,z,y;;./lcd.h: 44:  if(a == 1)
  5435  0FAF  0377               	decf	Lcd_Set_Cursor@a,w
  5436  0FB0  1D03               	btfss	3,2
  5437  0FB1  2FB3               	goto	u106_21
  5438  0FB2  2FB4               	goto	u106_20
  5439  0FB3                     u106_21:
  5440  0FB3  2FD7               	goto	i1l1605
  5441  0FB4                     u106_20:
  5442  0FB4                     i1l1597:
  5443                           
  5444                           ;./lcd.h: 45:  {;./lcd.h: 46:    temp = 0x80 + b - 1;
  5445  0FB4  0874               	movf	Lcd_Set_Cursor@b,w
  5446  0FB5  3E7F               	addlw	127
  5447  0FB6  00F5               	movwf	??_Lcd_Set_Cursor
  5448  0FB7  0875               	movf	??_Lcd_Set_Cursor,w
  5449  0FB8  00FA               	movwf	Lcd_Set_Cursor@temp
  5450                           
  5451                           ;./lcd.h: 47:   z = temp>>4;
  5452  0FB9  087A               	movf	Lcd_Set_Cursor@temp,w
  5453  0FBA  00F5               	movwf	??_Lcd_Set_Cursor
  5454  0FBB  3004               	movlw	4
  5455  0FBC                     u107_25:
  5456  0FBC  1003               	clrc
  5457  0FBD  0CF5               	rrf	??_Lcd_Set_Cursor,f
  5458  0FBE  3EFF               	addlw	-1
  5459  0FBF  1D03               	skipz
  5460  0FC0  2FBC               	goto	u107_25
  5461  0FC1  0875               	movf	??_Lcd_Set_Cursor,w
  5462  0FC2  00F6               	movwf	??_Lcd_Set_Cursor+1
  5463  0FC3  0876               	movf	??_Lcd_Set_Cursor+1,w
  5464  0FC4  00F8               	movwf	Lcd_Set_Cursor@z
  5465  0FC5                     i1l1599:
  5466                           
  5467                           ;./lcd.h: 48:   y = temp & 0x0F;
  5468  0FC5  087A               	movf	Lcd_Set_Cursor@temp,w
  5469  0FC6  390F               	andlw	15
  5470  0FC7  00F5               	movwf	??_Lcd_Set_Cursor
  5471  0FC8  0875               	movf	??_Lcd_Set_Cursor,w
  5472  0FC9  00F9               	movwf	Lcd_Set_Cursor@y
  5473  0FCA                     i1l1601:
  5474                           
  5475                           ;./lcd.h: 49:   Lcd_Cmd(z);
  5476  0FCA  0878               	movf	Lcd_Set_Cursor@z,w
  5477  0FCB  120A  158A  2518  120A  158A  	fcall	i1_Lcd_Cmd
  5478  0FD0                     i1l1603:
  5479                           
  5480                           ;./lcd.h: 50:   Lcd_Cmd(y);
  5481  0FD0  0879               	movf	Lcd_Set_Cursor@y,w
  5482  0FD1  120A  158A  2518  120A  158A  	fcall	i1_Lcd_Cmd
  5483                           
  5484                           ;./lcd.h: 51:  }
  5485  0FD6  2FFF               	goto	i1l133
  5486  0FD7                     i1l1605:
  5487  0FD7  3002               	movlw	2
  5488  0FD8  0677               	xorwf	Lcd_Set_Cursor@a,w
  5489  0FD9  1D03               	btfss	3,2
  5490  0FDA  2FDC               	goto	u108_21
  5491  0FDB  2FDD               	goto	u108_20
  5492  0FDC                     u108_21:
  5493  0FDC  2FFF               	goto	i1l133
  5494  0FDD                     u108_20:
  5495  0FDD                     i1l1607:
  5496                           
  5497                           ;./lcd.h: 53:  {;./lcd.h: 54:   temp = 0xC0 + b - 1;
  5498  0FDD  0874               	movf	Lcd_Set_Cursor@b,w
  5499  0FDE  3EBF               	addlw	191
  5500  0FDF  00F5               	movwf	??_Lcd_Set_Cursor
  5501  0FE0  0875               	movf	??_Lcd_Set_Cursor,w
  5502  0FE1  00FA               	movwf	Lcd_Set_Cursor@temp
  5503                           
  5504                           ;./lcd.h: 55:   z = temp>>4;
  5505  0FE2  087A               	movf	Lcd_Set_Cursor@temp,w
  5506  0FE3  00F5               	movwf	??_Lcd_Set_Cursor
  5507  0FE4  3004               	movlw	4
  5508  0FE5                     u109_25:
  5509  0FE5  1003               	clrc
  5510  0FE6  0CF5               	rrf	??_Lcd_Set_Cursor,f
  5511  0FE7  3EFF               	addlw	-1
  5512  0FE8  1D03               	skipz
  5513  0FE9  2FE5               	goto	u109_25
  5514  0FEA  0875               	movf	??_Lcd_Set_Cursor,w
  5515  0FEB  00F6               	movwf	??_Lcd_Set_Cursor+1
  5516  0FEC  0876               	movf	??_Lcd_Set_Cursor+1,w
  5517  0FED  00F8               	movwf	Lcd_Set_Cursor@z
  5518  0FEE                     i1l1609:
  5519                           
  5520                           ;./lcd.h: 56:   y = temp & 0x0F;
  5521  0FEE  087A               	movf	Lcd_Set_Cursor@temp,w
  5522  0FEF  390F               	andlw	15
  5523  0FF0  00F5               	movwf	??_Lcd_Set_Cursor
  5524  0FF1  0875               	movf	??_Lcd_Set_Cursor,w
  5525  0FF2  00F9               	movwf	Lcd_Set_Cursor@y
  5526  0FF3                     i1l1611:
  5527                           
  5528                           ;./lcd.h: 57:   Lcd_Cmd(z);
  5529  0FF3  0878               	movf	Lcd_Set_Cursor@z,w
  5530  0FF4  120A  158A  2518  120A  158A  	fcall	i1_Lcd_Cmd
  5531  0FF9                     i1l1613:
  5532                           
  5533                           ;./lcd.h: 58:   Lcd_Cmd(y);
  5534  0FF9  0879               	movf	Lcd_Set_Cursor@y,w
  5535  0FFA  120A  158A  2518  120A  158A  	fcall	i1_Lcd_Cmd
  5536  0FFF                     i1l133:
  5537  0FFF  0008               	return
  5538  1000                     __end_of_Lcd_Set_Cursor:
  5539                           
  5540                           	psect	text25
  5541  0CA4                     __ptext25:	
  5542 ;; *************** function _Lcd_Clear *****************
  5543 ;; Defined at:
  5544 ;;		line 35 in file "./lcd.h"
  5545 ;; Parameters:    Size  Location     Type
  5546 ;;		None
  5547 ;; Auto vars:     Size  Location     Type
  5548 ;;		None
  5549 ;; Return value:  Size  Location     Type
  5550 ;;                  1    wreg      void 
  5551 ;; Registers used:
  5552 ;;		wreg, status,2, status,0, pclath, cstack
  5553 ;; Tracked objects:
  5554 ;;		On entry : 0/0
  5555 ;;		On exit  : 0/0
  5556 ;;		Unchanged: 0/0
  5557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5558 ;;      Params:         0       0       0       0       0
  5559 ;;      Locals:         0       0       0       0       0
  5560 ;;      Temps:          0       0       0       0       0
  5561 ;;      Totals:         0       0       0       0       0
  5562 ;;Total ram usage:        0 bytes
  5563 ;; Hardware stack levels used: 1
  5564 ;; Hardware stack levels required when called: 2
  5565 ;; This function calls:
  5566 ;;		i1_Lcd_Cmd
  5567 ;; This function is called by:
  5568 ;;		_atualizaLCD
  5569 ;; This function uses a non-reentrant model
  5570 ;;
  5571                           
  5572                           
  5573                           ;psect for function _Lcd_Clear
  5574  0CA4                     _Lcd_Clear:
  5575  0CA4                     i1l1593:	
  5576                           ;incstack = 0
  5577                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  5578                           
  5579                           
  5580                           ;./lcd.h: 37:  Lcd_Cmd(0);
  5581  0CA4  3000               	movlw	0
  5582  0CA5  120A  158A  2518  120A  158A  	fcall	i1_Lcd_Cmd
  5583                           
  5584                           ;./lcd.h: 38:  Lcd_Cmd(1);
  5585  0CAA  3001               	movlw	1
  5586  0CAB  120A  158A  2518  120A  158A  	fcall	i1_Lcd_Cmd
  5587  0CB0                     i1l127:
  5588  0CB0  0008               	return
  5589  0CB1                     __end_of_Lcd_Clear:
  5590                           
  5591                           	psect	text26
  5592  0D18                     __ptext26:	
  5593 ;; *************** function i1_Lcd_Cmd *****************
  5594 ;; Defined at:
  5595 ;;		line 26 in file "./lcd.h"
  5596 ;; Parameters:    Size  Location     Type
  5597 ;;  a               1    wreg     unsigned char 
  5598 ;; Auto vars:     Size  Location     Type
  5599 ;;  a               1    3[COMMON] unsigned char 
  5600 ;; Return value:  Size  Location     Type
  5601 ;;                  1    wreg      void 
  5602 ;; Registers used:
  5603 ;;		wreg, status,2, status,0, pclath, cstack
  5604 ;; Tracked objects:
  5605 ;;		On entry : 0/0
  5606 ;;		On exit  : 0/0
  5607 ;;		Unchanged: 0/0
  5608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5609 ;;      Params:         0       0       0       0       0
  5610 ;;      Locals:         1       0       0       0       0
  5611 ;;      Temps:          2       0       0       0       0
  5612 ;;      Totals:         3       0       0       0       0
  5613 ;;Total ram usage:        3 bytes
  5614 ;; Hardware stack levels used: 1
  5615 ;; Hardware stack levels required when called: 1
  5616 ;; This function calls:
  5617 ;;		i1_Lcd_Port
  5618 ;; This function is called by:
  5619 ;;		_Lcd_Clear
  5620 ;;		_Lcd_Set_Cursor
  5621 ;; This function uses a non-reentrant model
  5622 ;;
  5623                           
  5624                           
  5625                           ;psect for function i1_Lcd_Cmd
  5626  0D18                     i1_Lcd_Cmd:
  5627                           
  5628                           ;incstack = 0
  5629                           ; Regs used in i1_Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  5630                           ;i1Lcd_Cmd@a stored from wreg
  5631  0D18  00F3               	movwf	i1Lcd_Cmd@a
  5632  0D19                     i1l1573:
  5633                           
  5634                           ;./lcd.h: 26: void Lcd_Cmd(char a);./lcd.h: 27: {;./lcd.h: 28:  RB2 = 0;
  5635  0D19  1283               	bcf	3,5	;RP0=0, select bank0
  5636  0D1A  1303               	bcf	3,6	;RP1=0, select bank0
  5637  0D1B  1106               	bcf	6,2	;volatile
  5638  0D1C                     i1l1575:
  5639                           
  5640                           ;./lcd.h: 29:  Lcd_Port(a);
  5641  0D1C  0873               	movf	i1Lcd_Cmd@a,w
  5642  0D1D  120A  158A  2573  120A  158A  	fcall	i1_Lcd_Port
  5643  0D22                     i1l1577:
  5644                           
  5645                           ;./lcd.h: 30:  RB1 = 1;
  5646  0D22  1283               	bcf	3,5	;RP0=0, select bank0
  5647  0D23  1303               	bcf	3,6	;RP1=0, select bank0
  5648  0D24  1486               	bsf	6,1	;volatile
  5649  0D25                     i1l1579:
  5650                           
  5651                           ;./lcd.h: 31:         _delay((unsigned long)((4)*(4000000/4000.0)));
  5652  0D25  3006               	movlw	6
  5653  0D26  00F2               	movwf	??i1_Lcd_Cmd+1
  5654  0D27  3030               	movlw	48
  5655  0D28  00F1               	movwf	??i1_Lcd_Cmd
  5656  0D29                     u228_27:
  5657  0D29  0BF1               	decfsz	??i1_Lcd_Cmd,f
  5658  0D2A  2D29               	goto	u228_27
  5659  0D2B  0BF2               	decfsz	??i1_Lcd_Cmd+1,f
  5660  0D2C  2D29               	goto	u228_27
  5661  0D2D  0000               	nop
  5662  0D2E                     i1l1581:
  5663                           
  5664                           ;./lcd.h: 32:         RB1 = 0;
  5665  0D2E  1283               	bcf	3,5	;RP0=0, select bank0
  5666  0D2F  1303               	bcf	3,6	;RP1=0, select bank0
  5667  0D30  1086               	bcf	6,1	;volatile
  5668  0D31                     i1l124:
  5669  0D31  0008               	return
  5670  0D32                     __end_ofi1_Lcd_Cmd:
  5671                           
  5672                           	psect	text27
  5673  0D73                     __ptext27:	
  5674 ;; *************** function i1_Lcd_Port *****************
  5675 ;; Defined at:
  5676 ;;		line 4 in file "./lcd.h"
  5677 ;; Parameters:    Size  Location     Type
  5678 ;;  a               1    wreg     unsigned char 
  5679 ;; Auto vars:     Size  Location     Type
  5680 ;;  a               1    0[COMMON] unsigned char 
  5681 ;; Return value:  Size  Location     Type
  5682 ;;                  1    wreg      void 
  5683 ;; Registers used:
  5684 ;;		wreg
  5685 ;; Tracked objects:
  5686 ;;		On entry : 0/0
  5687 ;;		On exit  : 0/0
  5688 ;;		Unchanged: 0/0
  5689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5690 ;;      Params:         0       0       0       0       0
  5691 ;;      Locals:         1       0       0       0       0
  5692 ;;      Temps:          0       0       0       0       0
  5693 ;;      Totals:         1       0       0       0       0
  5694 ;;Total ram usage:        1 bytes
  5695 ;; Hardware stack levels used: 1
  5696 ;; This function calls:
  5697 ;;		Nothing
  5698 ;; This function is called by:
  5699 ;;		_Lcd_Write_Char
  5700 ;;		i1_Lcd_Cmd
  5701 ;; This function uses a non-reentrant model
  5702 ;;
  5703                           
  5704                           
  5705                           ;psect for function i1_Lcd_Port
  5706  0D73                     i1_Lcd_Port:
  5707                           
  5708                           ;incstack = 0
  5709                           ; Regs used in i1_Lcd_Port: [wreg]
  5710                           ;i1Lcd_Port@a stored from wreg
  5711  0D73  00F0               	movwf	i1Lcd_Port@a
  5712  0D74                     i1l1485:
  5713                           
  5714                           ;./lcd.h: 4: void Lcd_Port(char a);./lcd.h: 5: {;./lcd.h: 6:  if(a & 1)
  5715  0D74  1C70               	btfss	i1Lcd_Port@a,0
  5716  0D75  2D77               	goto	u84_21
  5717  0D76  2D78               	goto	u84_20
  5718  0D77                     u84_21:
  5719  0D77  2D7C               	goto	i1l113
  5720  0D78                     u84_20:
  5721  0D78                     i1l1487:
  5722                           
  5723                           ;./lcd.h: 7:   RB4 = 1;
  5724  0D78  1283               	bcf	3,5	;RP0=0, select bank0
  5725  0D79  1303               	bcf	3,6	;RP1=0, select bank0
  5726  0D7A  1606               	bsf	6,4	;volatile
  5727  0D7B  2D7F               	goto	i1l114
  5728  0D7C                     i1l113:	
  5729                           ;./lcd.h: 8:  else
  5730                           
  5731                           
  5732                           ;./lcd.h: 9:   RB4 = 0;
  5733  0D7C  1283               	bcf	3,5	;RP0=0, select bank0
  5734  0D7D  1303               	bcf	3,6	;RP1=0, select bank0
  5735  0D7E  1206               	bcf	6,4	;volatile
  5736  0D7F                     i1l114:
  5737                           
  5738                           ;./lcd.h: 11:  if(a & 2)
  5739  0D7F  1CF0               	btfss	i1Lcd_Port@a,1
  5740  0D80  2D82               	goto	u85_21
  5741  0D81  2D83               	goto	u85_20
  5742  0D82                     u85_21:
  5743  0D82  2D85               	goto	i1l115
  5744  0D83                     u85_20:
  5745  0D83                     i1l1489:
  5746                           
  5747                           ;./lcd.h: 12:   RB5 = 1;
  5748  0D83  1686               	bsf	6,5	;volatile
  5749  0D84  2D86               	goto	i1l116
  5750  0D85                     i1l115:	
  5751                           ;./lcd.h: 13:  else
  5752                           
  5753                           
  5754                           ;./lcd.h: 14:   RB5 = 0;
  5755  0D85  1286               	bcf	6,5	;volatile
  5756  0D86                     i1l116:
  5757                           
  5758                           ;./lcd.h: 16:  if(a & 4)
  5759  0D86  1D70               	btfss	i1Lcd_Port@a,2
  5760  0D87  2D89               	goto	u86_21
  5761  0D88  2D8A               	goto	u86_20
  5762  0D89                     u86_21:
  5763  0D89  2D8C               	goto	i1l117
  5764  0D8A                     u86_20:
  5765  0D8A                     i1l1491:
  5766                           
  5767                           ;./lcd.h: 17:   RB6 = 1;
  5768  0D8A  1706               	bsf	6,6	;volatile
  5769  0D8B  2D8D               	goto	i1l118
  5770  0D8C                     i1l117:	
  5771                           ;./lcd.h: 18:  else
  5772                           
  5773                           
  5774                           ;./lcd.h: 19:   RB6 = 0;
  5775  0D8C  1306               	bcf	6,6	;volatile
  5776  0D8D                     i1l118:
  5777                           
  5778                           ;./lcd.h: 21:  if(a & 8)
  5779  0D8D  1DF0               	btfss	i1Lcd_Port@a,3
  5780  0D8E  2D90               	goto	u87_21
  5781  0D8F  2D91               	goto	u87_20
  5782  0D90                     u87_21:
  5783  0D90  2D93               	goto	i1l119
  5784  0D91                     u87_20:
  5785  0D91                     i1l1493:
  5786                           
  5787                           ;./lcd.h: 22:   RB7 = 1;
  5788  0D91  1786               	bsf	6,7	;volatile
  5789  0D92  2D94               	goto	i1l121
  5790  0D93                     i1l119:	
  5791                           ;./lcd.h: 23:  else
  5792                           
  5793                           
  5794                           ;./lcd.h: 24:   RB7 = 0;
  5795  0D93  1386               	bcf	6,7	;volatile
  5796  0D94                     i1l121:
  5797  0D94  0008               	return
  5798  0D95                     __end_ofi1_Lcd_Port:
  5799  007E                     btemp	set	126	;btemp
  5800  007E                     wtemp0	set	126
  5801                           
  5802                           	psect	config
  5803                           
  5804                           ;Config register CONFIG @ 0x2007
  5805                           ;	Oscillator Selection bits
  5806                           ;	FOSC = HS, HS oscillator
  5807                           ;	Watchdog Timer Enable bit
  5808                           ;	WDTE = ON, WDT enabled
  5809                           ;	Power-up Timer Enable bit
  5810                           ;	PWRTE = ON, PWRT enabled
  5811                           ;	Brown-out Reset Enable bit
  5812                           ;	BOREN = ON, BOR enabled
  5813                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  5814                           ;	LVP = 0x1, unprogrammed default
  5815                           ;	Data EEPROM Memory Code Protection bit
  5816                           ;	CPD = 0x1, unprogrammed default
  5817                           ;	Flash Program Memory Write Enable bits
  5818                           ;	WRT = 0x3, unprogrammed default
  5819                           ;	In-Circuit Debugger Mode bit
  5820                           ;	DEBUG = 0x1, unprogrammed default
  5821                           ;	Flash Program Memory Code Protection bit
  5822                           ;	CP = 0x1, unprogrammed default
  5823  2007                     	org	8199
  5824  2007  3FF6               	dw	16374

Data Sizes:
    Strings     40
    Constant    10
    Data        60
    BSS         28
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     28      56
    BANK1            80     18      78
    BANK3            96      3       3
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_2(CODE[19]), STR_1(CODE[21]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 30
		 -> buffer1(BANK1[30]), buffer0(BANK1[30]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 30
		 -> buffer1(BANK1[30]), buffer0(BANK1[30]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _TrataINT in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->i1_Lcd_Port
    _Lcd_Set_Cursor->i1_Lcd_Cmd
    _Lcd_Clear->i1_Lcd_Cmd
    i1_Lcd_Cmd->i1_Lcd_Port

Critical Paths under _main in BANK0

    None.

Critical Paths under _TrataINT in BANK0

    _TrataINT->_atualizaLCD
    _atualizaLCD->_sprintf

Critical Paths under _main in BANK1

    _main->_lerSensores
    _lerSensores->___xxtofl
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _TrataINT in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TrataINT in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TrataINT in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3451
                                              0 BANK3      3     3      0
                           _Lcd_Init
                             ___flge
                         _estufaDois
                       _estufaQuatro
                         _estufaTres
                           _estufaUm
                        _expandeTela
                        _iniciaPinos
                        _lerSensores
                        _recolheTela
 ---------------------------------------------------------------------------------
 (1) _recolheTela                                          2     2      0       0
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _lerSensores                                          4     4      0    1106
                                             14 BANK1      4     4      0
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1106
                                              0 BANK1     14    10      4
 ---------------------------------------------------------------------------------
 (1) _iniciaPinos                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _expandeTela                                          2     2      0       0
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _estufaUm                                             3     3      0       0
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (1) _estufaTres                                           3     3      0       0
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (1) _estufaQuatro                                         3     3      0       0
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (1) _estufaDois                                           3     3      0       0
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (1) ___flge                                              12     4      8    2066
                                              0 BANK1     12     4      8
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     279
                                              4 BANK1      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     155
                                              1 BANK1      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Port                                             1     1      0     124
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _TrataINT                                             7     7      0    3057
                                             21 BANK0      7     7      0
                        _atualizaLCD
                      i1_expandeTela
                      i1_recolheTela
 ---------------------------------------------------------------------------------
 (5) i1_recolheTela                                        2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) i1_expandeTela                                        2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _atualizaLCD                                          2     2      0    3057
                                             19 BANK0      2     2      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___fltol
                            _sprintf
 ---------------------------------------------------------------------------------
 (6) _sprintf                                             27    18      9    1320
                                              0 BANK0     19    10      9
                            ___fltol (ARG)
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             11     7      4     761
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (6) _Lcd_Write_String                                     4     4      0     334
                                              5 COMMON     4     4      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (7) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                         i1_Lcd_Port
 ---------------------------------------------------------------------------------
 (6) _Lcd_Set_Cursor                                       7     6      1     532
                                              4 COMMON     7     6      1
                          i1_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (6) _Lcd_Clear                                            0     0      0     110
                          i1_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (7) i1_Lcd_Cmd                                            3     3      0     110
                                              1 COMMON     3     3      0
                         i1_Lcd_Port
 ---------------------------------------------------------------------------------
 (8) i1_Lcd_Port                                           1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   ___flge
   _estufaDois
   _estufaQuatro
   _estufaTres
   _estufaUm
   _expandeTela
   _iniciaPinos
   _lerSensores
     ___xxtofl
   _recolheTela

 _TrataINT (ROOT)
   _atualizaLCD
     _Lcd_Clear
       i1_Lcd_Cmd
         i1_Lcd_Port
     _Lcd_Set_Cursor
       i1_Lcd_Cmd
     _Lcd_Write_String
       _Lcd_Write_Char
         i1_Lcd_Port
     ___fltol
     _sprintf
       ___fltol (ARG)
       ___lwdiv (ARG)
       ___lwmod (ARG)
         ___lwdiv (ARG)
   i1_expandeTela
   i1_recolheTela

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      3       3       9        3.1%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     12      4E       7       97.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1C      38       5       70.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      97      12        0.0%
ABS                  0      0      97       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri May 07 20:33:20 2021

                        pc 0002                         fsr 0004                        l121 0E7A  
                      l113 0E50                        l114 0E53                        l202 0CD8  
                      l115 0E5D                        l211 03A8                        l116 0E60  
                      l124 0D51                        l117 0E6A                        l205 0D02  
                      l221 0E17                        l118 0E6D                        l119 0E77  
                      l231 07FF                        l215 0DBF                        l136 07AD  
                      l208 0CED                        l224 0E38                        l216 0DDC  
                      l225 0E44                        l217 0DE8                        l180 0150  
                      l182 01A7                        l174 0039                        l175 006E  
                      l177 00A2                        l522 06B7                        l178 00F9  
                      l523 06D0                        l519 064B                        l199 0D17  
                      l780 062C                        l791 05F6                        l792 0602  
                      l784 05DA                        l778 0595                        _RB0 0030  
                      _RB1 0031                        _RB2 0032                        _RC0 0038  
                      _RA4 002C                        _RC1 0039                        _RB4 0034  
                      _RD0 0040                        _RC2 003A                        _RB5 0035  
                      _RD1 0041                        _RC3 003B                        _RB6 0036  
                      _RC4 003C                        _RD2 0042                        _RB7 0037  
                      _RC5 003D                        _RD3 0043                        _RC6 003E  
                      _RD4 0044                        _RE2 004A                        _RC7 003F  
                      _RD5 0045                        _RD6 0046                        _RD7 0047  
                      fsr0 0004                        indf 0000               ?_atualizaLCD 0070  
             ___fltol@exp1 007A                       l2101 0E73                       l2111 0D4E  
                     l2103 0D35                       l2105 0D38                       l2201 07E8  
                     l2121 059D                       l2113 0574                       l2107 0D40  
                     l2211 07ED                       l2203 07E9                       l2131 05BF  
                     l2115 0579                       l2109 0D43                       l2221 07F2  
                     l2213 07EE                       l2205 07EA                       l2141 05F0  
                     l2133 05C3                       l2125 05A6                       l2117 057D  
                     l2301 0336                       l2231 07F7                       l2223 07F3  
                     l2215 07EF                       l2207 07EB                       l2151 0623  
                     l2143 05FA                       l2135 05D1                       l2127 05AB  
                     l2119 058D                       l2311 036F                       l2303 0337  
                     l2161 075C                       l2321 0E16                       l2241 07FC  
                     l2233 07F8                       l2225 07F4                       l2217 07F0  
                     l2209 07EC                       l2153 0624                       l2145 0604  
                     l2137 05E1                       l2129 05B8                       l2313 0370  
                     l2305 0338                       l2401 00F4                       l2163 076D  
                     l2323 0E23                       l2243 07FD                       l2235 07F9  
                     l2227 07F5                       l2219 07F1                       l2171 07CB  
                     l2147 061A                       l2139 05EC                       l2315 0371  
                     l2307 033F                       l2251 0216                       l2331 0DCB  
                     l2411 01D0                       l2403 0122                       l2093 0E48  
                     l2165 0773                       l2157 074B                       l2325 0E2E  
                     l2245 07FE                       l2237 07FA                       l2229 07F6  
                     l2181 07D8                       l2173 07CE                       l2149 061F  
                     l2317 0379                       l2309 036E                       l2261 024F  
                     l2253 021D                       l2333 0DD6                       l2413 01F9  
                     l2405 014B                       l2095 0E4C                       l2159 0751  
                     l2343 0CC4                       l2351 0CEE                       l2335 0D03  
                     l2327 0E34                       l2239 07FB                       l2191 07DF  
                     l2183 07D9                       l2175 07D5                       l2167 07AE  
                     l2271 0289                       l2263 0250                       l2255 024C  
                     l2415 01FE                       l2407 0179                       l2097 0E59  
                     l2345 0CC7                       l2361 0CDC                       l2353 0CF1  
                     l2337 0D06                       l2193 07E2                       l2185 07DA  
                     l2177 07D6                       l2169 07C7                       l2281 02C2  
                     l2273 028A                       l2265 0286                       l2257 024D  
                     l2249 0210                       l2329 0DBE                       l2409 01A2  
                     l2099 0E66                       l2371 065F                       l2347 0CD5  
                     l2363 0CEA                       l2355 0CFF                       l2339 0D14  
                     l2195 07E3                       l2187 07DB                       l2179 07D7  
                     l2291 02FC                       l2283 02C3                       l2275 0291  
                     l2267 0287                       l2259 024E                       l2381 06CD  
                     l2373 0667                       l2197 07E6                       l2189 07DE  
                     l2293 02FD                       l2285 02CB                       l2277 02C0  
                     l2269 0288                       l2383 06CF                       l2375 066B  
                     l2367 062D                       l2359 0CD9                       l2199 07E7  
                     l2295 02FE                       l2287 02FA                       l2279 02C1  
                     l2391 002F                       l2377 068F                       l2369 0643  
                     l2297 0334                       l2289 02FB                       l2393 0069  
                     l2379 0693                       l2299 0335                       l2395 0097  
                     l2397 009D                       l2399 00CB                       STR_1 0810  
                     STR_2 0825                       u2000 01D0                       u2001 01CF  
                     u2010 01F9                       u2011 01F8                       u2107 0376  
                     u2027 0206                       u2117 0E29                       u2037 0DD1  
                     u2127 0D0E                       u2047 021A                       u2137 0CF9  
                     u2057 0254                       u2147 0CE4                       u2067 028E  
                     u1700 059D                       u2157 0CCF                       u1701 059C  
                     u2077 02C8                       u2167 0757                       u2087 0302  
                     u1640 0E4C                       u1800 061F                       u1720 05BE  
                     u1641 0E4B                       u2177 0768                       u1801 061E  
                     u1721 05BD                       u2097 033C                       u1650 0E59  
                     u1810 0623                       u1651 0E58                       u2187 0779  
                     u1811 0622                       u1715 05B0                       u1660 0E66  
                     u1820 0E34                       u1740 05E0                       u1661 0E65  
                     u2197 0D49                       u1901 06A2                       u1821 0E33  
                     u1741 05DF                       u1670 0E73                       u1910 06CD  
                     u1902 06A3                       u1830 0E38                       u1671 0E72  
                     u1911 06CC                       u1903 06A8                       u1831 0E37  
                     u1735 05D2                       u1904 06A9                       u1760 05F0  
                     u1680 0579                       u1840 0DDC                       u1920 0069  
                     u1905 06AE                       u1761 05EF                       u1681 0578  
                     u1841 0DDB                       u1921 0068                       u1906 06AF  
                     u1850 0643                       u1770 05F6                       u1690 057D  
                     u1930 0097                       u1915 06C9                       u1851 0642  
                     u1771 05F5                       u1755 05E5                       u1691 057C  
                     u1931 0096                       u1860 065F                       u1780 05FA  
                     u1940 00CB                       u1861 065E                       u1781 05F9  
                     u1941 00CA                       u1870 066B                       u1790 060F  
                     u1950 00F4                       u1871 066A                       u1951 00F3  
                     u1960 0122                       u1881 067A                       u1961 0121  
                     u1890 0693                       u1882 067B                       u1970 014B  
                     u1891 0692                       u1883 0680                       u1795 060A  
                     u1971 014A                       u1884 0681                       u1980 0179  
                     u1885 0686                       u1981 0178                       u1886 0687  
                     u1990 01A2                       _INTF 0059                       u1991 01A1  
             ?_lerSensores 0070          ?_Lcd_Write_String 0070                       _main 002F  
                     btemp 007E               ?_iniciaPinos 0070                       start 0012  
       ??_Lcd_Write_String 0075            __end_of_Lcd_Cmd 0D52              ___fltol@sign1 0079  
                    ?_main 0070            __end_of___fltol 074B            __end_of___lwdiv 0FAE  
                    i1l121 0D94                      i1l113 0D7C                      i1l114 0D7F  
                    i1l115 0D85                      i1l116 0D86                      i1l124 0D31  
                    i1l117 0D8C                      i1l133 0FFF                      i1l221 0DEA  
                    i1l118 0D8D                      i1l119 0D93                      i1l127 0CB0  
                    i1l215 0D96                      i1l224 0E09                      i1l216 0DB1  
                    i1l145 0D72                      i1l225 0E15                      i1l217 0DBD  
                    i1l139 0EB1                      i1l228 0570                      i1l341 0490  
          __end_of___lwmod 0EEC                      i1l193 0F4A                      i1l531 074A  
                    i1l196 0F5F                      i1l541 074A                      i1l617 0FAD  
                    i1l538 0735                      i1l627 0EEB                      _TMR1H 000F  
                    _TMR1L 000E                      u70_20 0E05                      u70_21 0E04  
                    u71_20 0E09                      u71_21 0E08    __size_of_Lcd_Set_Cursor 0052  
                    _TRISA 0085                      _TRISC 0087                      _TRISD 0088  
                    u84_20 0D78                      u84_21 0D77                      u92_25 0E8C  
                    u85_20 0D83                      u93_20 0F72                      u69_20 0DB1  
                    u85_21 0D82                      u93_21 0F71                      u69_21 0DB0  
                    u86_20 0D8A                      u86_21 0D89                      u94_25 0F76  
                    u87_20 0D91                      u95_20 0F84                      u87_21 0D90  
                    u95_21 0F83                      u96_25 0F85                      u97_20 0F95  
                    u97_21 0F94                      u97_25 0F91                      u98_25 0F9D  
                    u99_20 0FA9                      u99_21 0FA8                ?i1_Lcd_Port 0070  
       __size_ofi1_Lcd_Cmd 001A            __end_of_dpowers 0810               ?_expandeTela 0070  
                    pclath 000A                      status 0003                      wtemp0 007E  
          __end_of_sprintf 0491           __end_of_Lcd_Init 07AE           __end_of_Lcd_Port 0E7B  
          __initialization 0015               __end_of_main 0210               ?_recolheTela 0070  
                   ??_main 0190         __size_of_Lcd_Clear 000D           __end_of_TrataINT 0F6A  
                   _ADRESH 001E                     _ADRESL 009E                     u100_20 0EB8  
                   u100_21 0EB7                     u101_25 0EBC                     u110_20 0D72  
                   u102_20 0ECA                     u110_21 0D71                     u102_21 0EC9  
                   u103_20 0ED4                     u111_20 03B7                     u103_21 0ED3  
                   u111_21 03B6                     i1l1401 0DFF                     i1l1403 0E05  
                   i1l2051 0F40                     i1l2043 0F28                     u103_25 0ED0  
                   i1l2061 0F54                     i1l2053 0F45                     i1l2045 0F2C  
                   i1l1511 0E97                     i1l2063 0F57                     i1l2055 0F46  
                   i1l2047 0F2D                     u120_20 0709                     u112_20 03F1  
                   i1l1601 0FCA                     i1l1521 0EAA                     i1l1513 0E9A  
                   i1l1505 0E7C                     u120_21 0708                     u112_21 03F0  
                   i1l2065 0F5C                     i1l2057 0F4E                     i1l2049 0F32  
                   i1l1611 0FF3                     i1l1603 0FD0                     i1l1523 0EAE  
                   i1l1515 0E9E                     i1l1507 0E86                     i1l1531 0F75  
                   i1l2059 0F4F                     i1l1613 0FF9                     i1l1605 0FD7  
                   i1l1517 0EA1                     i1l1509 0E89                     i1l1621 0D67  
                   i1l1701 0709                     i1l1541 0F9B                     i1l1533 0F7C  
                   i1l1525 0F6A                     u104_25 0EDB                     i1l1607 0FDD  
                   i1l1519 0EA7                     i1l1615 0D53                     i1l1543 0F9C  
                   i1l1535 0F80                     i1l1527 0F6C                     i1l1551 0EB2  
                   i1l1631 03C3                     i1l1623 03AC                     i1l1391 0D95  
                   u121_20 0710                     u105_20 0EE7                     u113_20 0417  
                   i1l1609 0FEE                     i1l1617 0D56                     u121_21 070F  
                   i1l1545 0FA3                     i1l1537 0F84                     i1l1529 0F72  
                   u105_21 0EE6                     i1l1561 0ECA                     i1l1553 0EB8  
                   u113_21 0416                     i1l1641 03ED                     i1l1625 03B1  
                   i1l1393 0DA2                     i1l1491 0D8A                     i1l1619 0D61  
                   i1l1715 072A                     i1l1707 0711                     i1l1539 0F95  
                   i1l1547 0FA9                     i1l1563 0ED4                     i1l1555 0EBB  
                   i1l1643 03F1                     i1l1635 03C4                     i1l1627 03B7  
                   i1l1395 0DAB                     i1l1493 0D91                     i1l1485 0D74  
                   i1l1581 0D2E                     i1l1573 0D19                     i1l1717 073A  
                   i1l1709 0723                     i1l1565 0EDA                     i1l1557 0EC2  
                   i1l1661 0428                     u113_25 0413                     i1l1653 03FC  
                   i1l1645 03F5                     i1l1637 03E1                     i1l2437 03D6  
                   i1l1629 03BE                     i1l1397 0DE9                     i1l1487 0D78  
                   i1l1575 0D1C                     i1l1719 073F                     i1l1567 0EE1  
                   i1l1559 0EC6                     i1l1671 046D                     i1l1663 042F  
                   i1l1647 03FA                     i1l1639 03E9                     i1l1399 0DF6  
                   u106_20 0FB4                     u114_20 0422                     i1l1489 0D83  
                   i1l1577 0D22                     i1l1593 0CA4                     u106_21 0FB3  
                   i1l1569 0EE7                     i1l1673 0471                     i1l1665 0433  
                   u114_21 0421                     i1l1657 0418                     i1l1579 0D25  
                   i1l1595 0FAF                     i1l1691 06E5                     i1l1667 0438  
                   i1l1659 0422                     i1l1675 047A                     i1l1597 0FB4  
                   u122_25 0712                     i1l1693 06FA                     i1l1685 06D1  
                   i1l1669 0466                     i1l1677 048C                     i1l1599 0FC5  
                   i1l1695 06FB                     i1l1687 06DC                     u123_20 0722  
                   u115_20 0428                     u123_21 0721                     i1l1697 0703  
                   u115_21 0427                     i1l1699 0705                     u107_25 0FBC  
                   i1l1981 0501                     i1l1983 0546                     i1l1975 0491  
                   u108_20 0FDD                     u124_20 0729                     u116_20 047A  
                   u108_21 0FDC                     u124_21 0728                     u116_21 0479  
                   i1l1985 0551                     i1l1977 049E                     i1l1987 0557  
                   i1l1979 04F6                     i1l1989 0565                     u220_27 0F3A  
                   u117_20 048C                     u117_21 048B                     u109_25 0FE5  
                   u125_25 072C                     u221_27 0DA6                     u126_20 073A  
                   u118_20 06DC                     u126_21 0739                     u118_21 06DB  
                   u222_27 0DFA                     u127_20 073F                     u119_20 06F3  
                   u127_21 073E                     u119_25 06EE                     u223_27 04FC  
                   u224_27 054C                     u225_27 056B                     u162_20 0F2C  
                   u162_21 0F2B                     u226_27 0E9C                     u163_20 0F4E  
                   u163_21 0F4D                     u227_27 0EAC                     u228_27 0D29  
                ??_Lcd_Cmd 00DD                     _TMR1IF 0060    __size_of_Lcd_Write_Char 0037  
         __end_of___xxtofl 062D        __size_ofi1_Lcd_Port 0022          __end_ofi1_Lcd_Cmd 0D32  
                   ___flge 062D                  ??___fltol 0074                  ??___lwdiv 0074  
                ??___lwmod 007C           __end_of_estufaUm 0D18              ?_estufaQuatro 0070  
                   saved_w 007E                  ??_sprintf 0045       __size_of_atualizaLCD 00E0  
          Lcd_Set_Cursor@a 0077            Lcd_Set_Cursor@b 0074            Lcd_Set_Cursor@y 0079  
          Lcd_Set_Cursor@z 0078                 ___flge@ff1 00DC                 ___flge@ff2 00E0  
             ___xxtofl@arg 00E6               ___xxtofl@exp 00E5               ___xxtofl@val 00DC  
  __end_of__initialization 002B          __end_of_Lcd_Clear 0CB1       __size_of_lerSensores 0199  
               ___fltol@f1 0070       __size_of_iniciaPinos 0052             __pcstackCOMMON 0070  
             __pidataBANK1 0EEC     __size_ofi1_expandeTela 002D             ??_estufaQuatro 00DC  
           _Lcd_Set_Cursor 0FAE             _OPTION_REGbits 0081                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070                 __pbssBANK0 0020     __size_ofi1_recolheTela 0029  
     __size_of_expandeTela 002F                 __pmaintext 002F                    ?___flge 00DC  
                ?_TrataINT 0070                 __pintentry 0004  __size_of_Lcd_Write_String 0021  
   __end_of_Lcd_Set_Cursor 1000       __size_of_recolheTela 002B                  ?___xxtofl 00DC  
             ??i1_Lcd_Port 0070                 ??_Lcd_Init 00E0                 ??_Lcd_Port 00DC  
               __stringtab 0800              i1_expandeTela 0DE9             _Lcd_Write_Char 0E7B  
                  _Lcd_Cmd 0D32                  ?_estufaUm 0070         __end_ofi1_Lcd_Port 0D95  
               ??_TrataINT 0051            __size_of___flge 00A4                    ___fltol 06D1  
                  ___lwdiv 0F6A                    ___lwmod 0EB2              i1_recolheTela 0D95  
          ?_Lcd_Set_Cursor 0074                    __ptext1 0DBE                    __ptext2 0210  
                  __ptext3 0571                    __ptext4 07AE                    __ptext5 0E16  
                  __ptext6 0D03                    __ptext7 0CEE                    __ptext8 0CD9  
                  __ptext9 0CC4                    _buffer0 00BE                    _buffer1 00A0  
               _estufaDois 0CC4                  _T1CONbits 0010                 _estufaTres 0CEE  
                  _dpowers 0806                 ??___xxtofl 00E0                    _sprintf 03A9  
                  clrloop0 0C9D             ?i1_expandeTela 0070     __end_of_Lcd_Write_Char 0EB2  
     end_of_initialization 002B                 ??_estufaUm 00DC       __end_of_estufaQuatro 0CEE  
                Lcd_Port@a 00DC             ?i1_recolheTela 0070                  i1_Lcd_Cmd 0D18  
                _PORTBbits 0006                  _PORTCbits 0007                  _PORTDbits 0008  
            ___xxtofl@sign 00E4                  _TRISBbits 0086            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0078          Lcd_Write_String@i 0076                  _Lcd_Clear 0CA4  
           __end_of___flge 06D1                 ?i1_Lcd_Cmd 0070           _Lcd_Write_String 0D52  
              ?_estufaDois 0070                ?_estufaTres 0070              ??_atualizaLCD 004F  
      start_initialization 0015            ??i1_expandeTela 0070          __size_of_Lcd_Init 0063  
            ??_lerSensores 00EA          __size_of_Lcd_Port 0036              ??_iniciaPinos 00DC  
          ??i1_recolheTela 0070                 ?_Lcd_Clear 0070                   ??___flge 00E4  
               init_fetch0 0CB1                __pdataBANK1 00A0            Lcd_Write_Char@a 0074  
          Lcd_Write_Char@y 0073          __size_of_TrataINT 0042                  ___latbits 0002  
            __pcstackBANK0 003C              __pcstackBANK1 00DC              __pcstackBANK3 0190  
        __size_of___xxtofl 00BC              ??_expandeTela 00DC      __size_of_estufaQuatro 0015  
      __end_of_atualizaLCD 0571                   ?_Lcd_Cmd 0070                sprintf@flag 0049  
              sprintf@prec 004A        __size_of_estufaDois 0015        __size_of_estufaTres 0015  
      __end_of_lerSensores 03A9           ___lwdiv@dividend 0072          __size_of_estufaUm 0015  
         ??_Lcd_Set_Cursor 0075              ??_recolheTela 00DC        __end_of_iniciaPinos 0800  
                 ?___fltol 0070                   ?___lwdiv 0070                   ?___lwmod 0078  
              ??i1_Lcd_Cmd 0071                  __pstrings 0800               _estufaQuatro 0CD9  
         ___lwdiv@quotient 0075                   ?_sprintf 003C          interrupt_function 0004  
      __end_of_expandeTela 0E45                  clear_ram0 0C9C                   _PIE1bits 008C  
                 Lcd_Cmd@a 00DF                ??_Lcd_Clear 0074                 _ADCON0bits 001F  
              __stringbase 0805                 _ADCON1bits 009F        __end_of_recolheTela 0DE9  
         ??_Lcd_Write_Char 0071                _atualizaLCD 0491                   _Lcd_Init 074B  
                 _Lcd_Port 0E45                _lerSensores 0210   __end_of_Lcd_Write_String 0D73  
         __size_of_Lcd_Cmd 0020                _iniciaPinos 07AE                   _TrataINT 0F28  
         __size_of___fltol 007A           __size_of___lwdiv 0044           __size_of___lwmod 003A  
       __end_of__stringtab 0806               ??_estufaDois 00DC               ??_estufaTres 00DC  
               sprintf@val 004B                   ___xxtofl 0571            ___lwdiv@divisor 0070  
          ___lwdiv@counter 0077                   __ptext10 062D                   __ptext11 074B  
                 __ptext20 0F6A                   __ptext12 0D32                   __ptext21 06D1  
                 __ptext13 0E45                   __ptext22 0D52                   __ptext14 0F28  
                 __ptext23 0E7B                   __ptext15 0D95                   __ptext24 0FAE  
                 __ptext16 0DE9                   __ptext25 0CA4                   __ptext17 0491  
                 __ptext26 0D18                   __ptext18 03A9                   __ptext27 0D73  
                 __ptext19 0EB2                _expandeTela 0E16           __size_of_sprintf 00E8  
            __size_of_main 01E1                   _estufaUm 0D03                i1Lcd_Port@a 0070  
       __end_of_estufaDois 0CD9         __end_of_estufaTres 0D03                _recolheTela 0DBE  
               _INTCONbits 000B                   init_ram0 0CB5               _valor_entry0 0038  
             _valor_entry1 0034               _valor_entry2 0030               _valor_entry3 002C  
             _valor_entry4 0028               _valor_entry5 0024               _valor_entry6 0020  
    __end_ofi1_expandeTela 0E16         Lcd_Write_Char@temp 0072                   intlevel1 0000  
                sprintf@ap 0048                  sprintf@sp 004D           ___lwmod@dividend 007A  
               i1Lcd_Cmd@a 0073                  stringcode 0800      __end_ofi1_recolheTela 0DBE  
       Lcd_Set_Cursor@temp 007A                   sprintf@c 004E                   sprintf@f 003C  
          ___lwmod@divisor 0078            ___lwmod@counter 007D                 i1_Lcd_Port 0D73  
                 stringdir 0800                   stringtab 0800  
