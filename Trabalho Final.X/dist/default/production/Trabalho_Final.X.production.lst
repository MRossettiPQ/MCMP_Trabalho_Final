

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed May 05 21:30:51 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
     8                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,delta=2
    47                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    48                           	dabs	1,0x7E,2
    49  0000                     
    50                           ; Version 2.20
    51                           ; Generated 12/02/2020 GMT
    52                           ; 
    53                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC16F877A Definitions
    82                           ; 
    83                           ; SFR Addresses
    84  0000                     	;# 
    85  0001                     	;# 
    86  0002                     	;# 
    87  0003                     	;# 
    88  0004                     	;# 
    89  0005                     	;# 
    90  0006                     	;# 
    91  0007                     	;# 
    92  0008                     	;# 
    93  0009                     	;# 
    94  000A                     	;# 
    95  000B                     	;# 
    96  000C                     	;# 
    97  000D                     	;# 
    98  000E                     	;# 
    99  000E                     	;# 
   100  000F                     	;# 
   101  0010                     	;# 
   102  0011                     	;# 
   103  0012                     	;# 
   104  0013                     	;# 
   105  0014                     	;# 
   106  0015                     	;# 
   107  0015                     	;# 
   108  0016                     	;# 
   109  0017                     	;# 
   110  0018                     	;# 
   111  0019                     	;# 
   112  001A                     	;# 
   113  001B                     	;# 
   114  001B                     	;# 
   115  001C                     	;# 
   116  001D                     	;# 
   117  001E                     	;# 
   118  001F                     	;# 
   119  0081                     	;# 
   120  0085                     	;# 
   121  0086                     	;# 
   122  0087                     	;# 
   123  0088                     	;# 
   124  0089                     	;# 
   125  008C                     	;# 
   126  008D                     	;# 
   127  008E                     	;# 
   128  0091                     	;# 
   129  0092                     	;# 
   130  0093                     	;# 
   131  0094                     	;# 
   132  0098                     	;# 
   133  0099                     	;# 
   134  009C                     	;# 
   135  009D                     	;# 
   136  009E                     	;# 
   137  009F                     	;# 
   138  010C                     	;# 
   139  010D                     	;# 
   140  010E                     	;# 
   141  010F                     	;# 
   142  018C                     	;# 
   143  018D                     	;# 
   144  0000                     	;# 
   145  0001                     	;# 
   146  0002                     	;# 
   147  0003                     	;# 
   148  0004                     	;# 
   149  0005                     	;# 
   150  0006                     	;# 
   151  0007                     	;# 
   152  0008                     	;# 
   153  0009                     	;# 
   154  000A                     	;# 
   155  000B                     	;# 
   156  000C                     	;# 
   157  000D                     	;# 
   158  000E                     	;# 
   159  000E                     	;# 
   160  000F                     	;# 
   161  0010                     	;# 
   162  0011                     	;# 
   163  0012                     	;# 
   164  0013                     	;# 
   165  0014                     	;# 
   166  0015                     	;# 
   167  0015                     	;# 
   168  0016                     	;# 
   169  0017                     	;# 
   170  0018                     	;# 
   171  0019                     	;# 
   172  001A                     	;# 
   173  001B                     	;# 
   174  001B                     	;# 
   175  001C                     	;# 
   176  001D                     	;# 
   177  001E                     	;# 
   178  001F                     	;# 
   179  0081                     	;# 
   180  0085                     	;# 
   181  0086                     	;# 
   182  0087                     	;# 
   183  0088                     	;# 
   184  0089                     	;# 
   185  008C                     	;# 
   186  008D                     	;# 
   187  008E                     	;# 
   188  0091                     	;# 
   189  0092                     	;# 
   190  0093                     	;# 
   191  0094                     	;# 
   192  0098                     	;# 
   193  0099                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204                           
   205                           	psect	strings
   206  1000                     __pstrings:
   207  1000                     stringtab:
   208  1000                     __stringtab:
   209                           
   210                           ;	String table - string pointers are 1 byte each
   211  1000  1BFF               	btfsc	btemp+1,7
   212  1001  280A               	ljmp	stringcode
   213  1002  1383               	bcf	3,7
   214  1003  187F               	btfsc	btemp+1,0
   215  1004  1783               	bsf	3,7
   216  1005  0800               	movf	0,w
   217  1006  0A84               	incf	4,f
   218  1007  1903               	skipnz
   219  1008  0AFF               	incf	btemp+1,f
   220  1009  0008               	return
   221  100A                     stringcode:
   222  100A                     stringdir:
   223  100A  3010               	movlw	high stringdir
   224  100B  008A               	movwf	10
   225  100C  0804               	movf	4,w
   226  100D  0A84               	incf	4,f
   227  100E  0782               	addwf	2,f
   228  100F                     __stringbase:
   229  100F  3400               	retlw	0
   230  1010                     __end_of__stringtab:
   231  1010                     __powers_:
   232  1010  3400               	retlw	0
   233  1011  3400               	retlw	0
   234  1012  3480               	retlw	128
   235  1013  343F               	retlw	63
   236  1014  3400               	retlw	0
   237  1015  3400               	retlw	0
   238  1016  3420               	retlw	32
   239  1017  3441               	retlw	65
   240  1018  3400               	retlw	0
   241  1019  3400               	retlw	0
   242  101A  34C8               	retlw	200
   243  101B  3442               	retlw	66
   244  101C  3400               	retlw	0
   245  101D  3400               	retlw	0
   246  101E  347A               	retlw	122
   247  101F  3444               	retlw	68
   248  1020  3400               	retlw	0
   249  1021  3440               	retlw	64
   250  1022  341C               	retlw	28
   251  1023  3446               	retlw	70
   252  1024  3400               	retlw	0
   253  1025  3450               	retlw	80
   254  1026  34C3               	retlw	195
   255  1027  3447               	retlw	71
   256  1028  3400               	retlw	0
   257  1029  3424               	retlw	36
   258  102A  3474               	retlw	116
   259  102B  3449               	retlw	73
   260  102C  3480               	retlw	128
   261  102D  3496               	retlw	150
   262  102E  3418               	retlw	24
   263  102F  344B               	retlw	75
   264  1030  3420               	retlw	32
   265  1031  34BC               	retlw	188
   266  1032  34BE               	retlw	190
   267  1033  344C               	retlw	76
   268  1034  3428               	retlw	40
   269  1035  346B               	retlw	107
   270  1036  346E               	retlw	110
   271  1037  344E               	retlw	78
   272  1038  34F9               	retlw	249
   273  1039  3402               	retlw	2
   274  103A  3415               	retlw	21
   275  103B  3450               	retlw	80
   276  103C  34EC               	retlw	236
   277  103D  3478               	retlw	120
   278  103E  34AD               	retlw	173
   279  103F  3460               	retlw	96
   280  1040  34CA               	retlw	202
   281  1041  34F2               	retlw	242
   282  1042  3449               	retlw	73
   283  1043  3471               	retlw	113
   284  1044                     __end_of__powers_:
   285  1044                     __npowers_:
   286  1044  3400               	retlw	0
   287  1045  3400               	retlw	0
   288  1046  3480               	retlw	128
   289  1047  343F               	retlw	63
   290  1048  34CD               	retlw	205
   291  1049  34CC               	retlw	204
   292  104A  34CC               	retlw	204
   293  104B  343D               	retlw	61
   294  104C  340A               	retlw	10
   295  104D  34D7               	retlw	215
   296  104E  3423               	retlw	35
   297  104F  343C               	retlw	60
   298  1050  346F               	retlw	111
   299  1051  3412               	retlw	18
   300  1052  3483               	retlw	131
   301  1053  343A               	retlw	58
   302  1054  3417               	retlw	23
   303  1055  34B7               	retlw	183
   304  1056  34D1               	retlw	209
   305  1057  3438               	retlw	56
   306  1058  34AC               	retlw	172
   307  1059  34C5               	retlw	197
   308  105A  3427               	retlw	39
   309  105B  3437               	retlw	55
   310  105C  34BD               	retlw	189
   311  105D  3437               	retlw	55
   312  105E  3486               	retlw	134
   313  105F  3435               	retlw	53
   314  1060  3495               	retlw	149
   315  1061  34BF               	retlw	191
   316  1062  34D6               	retlw	214
   317  1063  3433               	retlw	51
   318  1064  3477               	retlw	119
   319  1065  34CC               	retlw	204
   320  1066  342B               	retlw	43
   321  1067  3432               	retlw	50
   322  1068  345F               	retlw	95
   323  1069  3470               	retlw	112
   324  106A  3489               	retlw	137
   325  106B  3430               	retlw	48
   326  106C  34FF               	retlw	255
   327  106D  34E6               	retlw	230
   328  106E  34DB               	retlw	219
   329  106F  342E               	retlw	46
   330  1070  3408               	retlw	8
   331  1071  34E5               	retlw	229
   332  1072  343C               	retlw	60
   333  1073  341E               	retlw	30
   334  1074  3460               	retlw	96
   335  1075  3442               	retlw	66
   336  1076  34A2               	retlw	162
   337  1077  340D               	retlw	13
   338  1078                     __end_of__npowers_:
   339  1078                     _dpowers:
   340  1078  3401               	retlw	1
   341  1079  3400               	retlw	0
   342  107A  3400               	retlw	0
   343  107B  3400               	retlw	0
   344  107C  340A               	retlw	10
   345  107D  3400               	retlw	0
   346  107E  3400               	retlw	0
   347  107F  3400               	retlw	0
   348  1080  3464               	retlw	100
   349  1081  3400               	retlw	0
   350  1082  3400               	retlw	0
   351  1083  3400               	retlw	0
   352  1084  34E8               	retlw	232
   353  1085  3403               	retlw	3
   354  1086  3400               	retlw	0
   355  1087  3400               	retlw	0
   356  1088  3410               	retlw	16
   357  1089  3427               	retlw	39
   358  108A  3400               	retlw	0
   359  108B  3400               	retlw	0
   360  108C  34A0               	retlw	160
   361  108D  3486               	retlw	134
   362  108E  3401               	retlw	1
   363  108F  3400               	retlw	0
   364  1090  3440               	retlw	64
   365  1091  3442               	retlw	66
   366  1092  340F               	retlw	15
   367  1093  3400               	retlw	0
   368  1094  3480               	retlw	128
   369  1095  3496               	retlw	150
   370  1096  3498               	retlw	152
   371  1097  3400               	retlw	0
   372  1098  3400               	retlw	0
   373  1099  34E1               	retlw	225
   374  109A  34F5               	retlw	245
   375  109B  3405               	retlw	5
   376  109C  3400               	retlw	0
   377  109D  34CA               	retlw	202
   378  109E  349A               	retlw	154
   379  109F  343B               	retlw	59
   380  10A0                     __end_of_dpowers:
   381  001E                     _ADRESH	set	30
   382  001F                     _ADCON0bits	set	31
   383  0047                     _RD7	set	71
   384  003A                     _RC2	set	58
   385  003B                     _RC3	set	59
   386  0040                     _RD0	set	64
   387  0046                     _RD6	set	70
   388  0042                     _RD2	set	66
   389  0039                     _RC1	set	57
   390  0044                     _RD4	set	68
   391  0038                     _RC0	set	56
   392  0041                     _RD1	set	65
   393  0043                     _RD3	set	67
   394  0045                     _RD5	set	69
   395  003D                     _RC5	set	61
   396  003C                     _RC4	set	60
   397  003F                     _RC7	set	63
   398  003E                     _RC6	set	62
   399  0031                     _RB1	set	49
   400  0032                     _RB2	set	50
   401  0037                     _RB7	set	55
   402  0036                     _RB6	set	54
   403  0035                     _RB5	set	53
   404  0034                     _RB4	set	52
   405  009E                     _ADRESL	set	158
   406  009F                     _ADCON1bits	set	159
   407  0088                     _TRISD	set	136
   408  0087                     _TRISC	set	135
   409  0085                     _TRISA	set	133
   410  0086                     _TRISB	set	134
   411  10A0                     STR_2:
   412  10A0  3425               	retlw	37	;'%'
   413  10A1  342E               	retlw	46	;'.'
   414  10A2  3432               	retlw	50	;'2'
   415  10A3  3466               	retlw	102	;'f'
   416  10A4  3400               	retlw	0
   417  10A5                     STR_7:
   418  10A5  3453               	retlw	83	;'S'
   419  10A6  3431               	retlw	49	;'1'
   420  10A7  343A               	retlw	58	;':'
   421  10A8  3400               	retlw	0
   422  10A9                     STR_9:
   423  10A9  3453               	retlw	83	;'S'
   424  10AA  3432               	retlw	50	;'2'
   425  10AB  343A               	retlw	58	;':'
   426  10AC  3400               	retlw	0
   427  10AD                     STR_11:
   428  10AD  3453               	retlw	83	;'S'
   429  10AE  3433               	retlw	51	;'3'
   430  10AF  343A               	retlw	58	;':'
   431  10B0  3400               	retlw	0
   432  10B1                     STR_13:
   433  10B1  3453               	retlw	83	;'S'
   434  10B2  3434               	retlw	52	;'4'
   435  10B3  343A               	retlw	58	;':'
   436  10B4  3400               	retlw	0
   437  10B5                     STR_3:
   438  10B5  3441               	retlw	65	;'A'
   439  10B6  343A               	retlw	58	;':'
   440  10B7  3400               	retlw	0
   441  10B8                     STR_1:
   442  10B8  3443               	retlw	67	;'C'
   443  10B9  343A               	retlw	58	;':'
   444  10BA  3400               	retlw	0
   445  10BB                     STR_5:
   446  10BB  344C               	retlw	76	;'L'
   447  10BC  343A               	retlw	58	;':'
   448  10BD  3400               	retlw	0
   449  10A0                     
   450                           	psect	cinit
   451  07E2                     start_initialization:	
   452                           ; #config settings
   453                           
   454  07E2                     __initialization:
   455                           
   456                           ; Clear objects allocated to BANK1
   457  07E2  1383               	bcf	3,7	;select IRP bank0
   458  07E3  30C6               	movlw	low __pbssBANK1
   459  07E4  0084               	movwf	4
   460  07E5  30E2               	movlw	low (__pbssBANK1+28)
   461  07E6  160A  158A  20FF  120A  118A  	fcall	clear_ram0
   462                           
   463                           ; Clear objects allocated to BANK3
   464  07EB  1783               	bsf	3,7	;select IRP bank2
   465  07EC  3090               	movlw	low __pbssBANK3
   466  07ED  0084               	movwf	4
   467  07EE  30E0               	movlw	low (__pbssBANK3+80)
   468  07EF  160A  158A  20FF  120A  118A  	fcall	clear_ram0
   469                           
   470                           ; Clear objects allocated to BANK2
   471  07F4  3010               	movlw	low __pbssBANK2
   472  07F5  0084               	movwf	4
   473  07F6  304C               	movlw	low (__pbssBANK2+60)
   474  07F7  160A  158A  20FF  120A  118A  	fcall	clear_ram0
   475  07FC                     end_of_initialization:	
   476                           ;End of C runtime variable initialization code
   477                           
   478  07FC                     __end_of__initialization:
   479  07FC  0183               	clrf	3
   480  07FD  120A  158A  2814   	ljmp	_main	;jump to C main() function
   481                           
   482                           	psect	bssBANK1
   483  00C6                     __pbssBANK1:
   484  00C6                     _valor_entry6:
   485  00C6                     	ds	4
   486  00CA                     _valor_entry5:
   487  00CA                     	ds	4
   488  00CE                     _valor_entry4:
   489  00CE                     	ds	4
   490  00D2                     _valor_entry3:
   491  00D2                     	ds	4
   492  00D6                     _valor_entry2:
   493  00D6                     	ds	4
   494  00DA                     _valor_entry1:
   495  00DA                     	ds	4
   496  00DE                     _valor_entry0:
   497  00DE                     	ds	4
   498                           
   499                           	psect	bssBANK3
   500  0190                     __pbssBANK3:
   501  0190                     _buffer3:
   502  0190                     	ds	20
   503  01A4                     _buffer2:
   504  01A4                     	ds	20
   505  01B8                     _buffer1:
   506  01B8                     	ds	20
   507  01CC                     _buffer0:
   508  01CC                     	ds	20
   509                           
   510                           	psect	bssBANK2
   511  0110                     __pbssBANK2:
   512  0110                     _buffer6:
   513  0110                     	ds	20
   514  0124                     _buffer5:
   515  0124                     	ds	20
   516  0138                     _buffer4:
   517  0138                     	ds	20
   518                           
   519                           	psect	clrtext
   520  18FF                     clear_ram0:	
   521                           ;	Called with FSR containing the base address, and
   522                           ;	W with the last address+1
   523                           
   524  18FF  0064               	clrwdt	;clear the watchdog before getting into this loop
   525  1900                     clrloop0:
   526  1900  0180               	clrf	0	;clear RAM location pointed to by FSR
   527  1901  0A84               	incf	4,f	;increment pointer
   528  1902  0604               	xorwf	4,w	;XOR with final address
   529  1903  1903               	btfsc	3,2	;have we reached the end yet?
   530  1904  3400               	retlw	0	;all done for this memory range, return
   531  1905  0604               	xorwf	4,w	;XOR again to restore value
   532  1906  2900               	goto	clrloop0	;do the next byte
   533                           
   534                           	psect	cstackBANK1
   535  00A0                     __pcstackBANK1:
   536  00A0                     ?_sprintf:
   537  00A0                     sprintf@f:	
   538                           ; 2 bytes @ 0x0
   539                           
   540                           
   541                           ; 1 bytes @ 0x0
   542  00A0                     	ds	5
   543  00A5                     ??_sprintf:
   544                           
   545                           ; 1 bytes @ 0x5
   546  00A5                     	ds	5
   547  00AA                     _sprintf$932:
   548                           
   549                           ; 4 bytes @ 0xA
   550  00AA                     	ds	4
   551  00AE                     sprintf@ap:
   552                           
   553                           ; 1 bytes @ 0xE
   554  00AE                     	ds	1
   555  00AF                     sprintf@flag:
   556                           
   557                           ; 2 bytes @ 0xF
   558  00AF                     	ds	2
   559  00B1                     sprintf@val:
   560                           
   561                           ; 4 bytes @ 0x11
   562  00B1                     	ds	4
   563  00B5                     sprintf@eexp:
   564                           
   565                           ; 2 bytes @ 0x15
   566  00B5                     	ds	2
   567  00B7                     sprintf@tmpval:
   568                           
   569                           ; 4 bytes @ 0x17
   570  00B7                     	ds	4
   571  00BB                     sprintf@prec:
   572                           
   573                           ; 2 bytes @ 0x1B
   574  00BB                     	ds	2
   575  00BD                     sprintf@sp:
   576                           
   577                           ; 1 bytes @ 0x1D
   578  00BD                     	ds	1
   579  00BE                     sprintf@fval:
   580                           
   581                           ; 4 bytes @ 0x1E
   582  00BE                     	ds	4
   583  00C2                     sprintf@c:
   584                           
   585                           ; 1 bytes @ 0x22
   586  00C2                     	ds	1
   587  00C3                     ??_main:
   588                           
   589                           ; 1 bytes @ 0x23
   590  00C3                     	ds	3
   591                           
   592                           	psect	cstackCOMMON
   593  0070                     __pcstackCOMMON:
   594  0070                     ?_isdigit:
   595  0070                     ?___fleq:	
   596                           ; 1 bit 
   597                           
   598  0070                     ?___flge:	
   599                           ; 1 bit 
   600                           
   601  0070                     ?_lerSensores:	
   602                           ; 1 bit 
   603                           
   604  0070                     ?_expandeTela:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0070                     ??_expandeTela:	
   608                           ; 1 bytes @ 0x0
   609                           
   610  0070                     ?_recolheTela:	
   611                           ; 1 bytes @ 0x0
   612                           
   613  0070                     ??_recolheTela:	
   614                           ; 1 bytes @ 0x0
   615                           
   616  0070                     ?_atualizaLCD:	
   617                           ; 1 bytes @ 0x0
   618                           
   619  0070                     ??_isdigit:	
   620                           ; 1 bytes @ 0x0
   621                           
   622  0070                     ?_Lcd_Port:	
   623                           ; 1 bytes @ 0x0
   624                           
   625  0070                     ??_Lcd_Port:	
   626                           ; 1 bytes @ 0x0
   627                           
   628  0070                     ?_Lcd_Cmd:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0070                     ?_Lcd_Clear:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0070                     ?_Lcd_Init:	
   635                           ; 1 bytes @ 0x0
   636                           
   637  0070                     ?_Lcd_Write_Char:	
   638                           ; 1 bytes @ 0x0
   639                           
   640  0070                     ?__Umul8_16:	
   641                           ; 1 bytes @ 0x0
   642                           
   643  0070                     ?_main:	
   644                           ; 2 bytes @ 0x0
   645                           
   646  0070                     ?___wmul:	
   647                           ; 2 bytes @ 0x0
   648                           
   649  0070                     ?___awmod:	
   650                           ; 2 bytes @ 0x0
   651                           
   652  0070                     ?___lwmod:	
   653                           ; 2 bytes @ 0x0
   654                           
   655  0070                     ?__tdiv_to_l_:	
   656                           ; 2 bytes @ 0x0
   657                           
   658  0070                     ?__div_to_l_:	
   659                           ; 4 bytes @ 0x0
   660                           
   661  0070                     ?___lldiv:	
   662                           ; 4 bytes @ 0x0
   663                           
   664  0070                     ?___flneg:	
   665                           ; 4 bytes @ 0x0
   666                           
   667  0070                     ?___llmod:	
   668                           ; 4 bytes @ 0x0
   669                           
   670  0070                     ?___xxtofl:	
   671                           ; 4 bytes @ 0x0
   672                           
   673  0070                     Lcd_Port@a:	
   674                           ; 4 bytes @ 0x0
   675                           
   676  0070                     __Umul8_16@multiplicand:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  0070                     _isdigit$743:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0070                     ___wmul@multiplier:	
   683                           ; 1 bytes @ 0x0
   684                           
   685  0070                     ___awmod@divisor:	
   686                           ; 2 bytes @ 0x0
   687                           
   688  0070                     ___lwmod@divisor:	
   689                           ; 2 bytes @ 0x0
   690                           
   691  0070                     ___lldiv@divisor:	
   692                           ; 2 bytes @ 0x0
   693                           
   694  0070                     __div_to_l_@f1:	
   695                           ; 4 bytes @ 0x0
   696                           
   697  0070                     ___fleq@ff1:	
   698                           ; 4 bytes @ 0x0
   699                           
   700  0070                     ___flge@ff1:	
   701                           ; 4 bytes @ 0x0
   702                           
   703  0070                     ___flneg@f1:	
   704                           ; 4 bytes @ 0x0
   705                           
   706  0070                     __tdiv_to_l_@f1:	
   707                           ; 4 bytes @ 0x0
   708                           
   709  0070                     ___llmod@divisor:	
   710                           ; 4 bytes @ 0x0
   711                           
   712  0070                     ___xxtofl@val:	
   713                           ; 4 bytes @ 0x0
   714                           
   715                           
   716                           ; 4 bytes @ 0x0
   717  0070                     	ds	1
   718  0071                     ??_Lcd_Cmd:
   719  0071                     ??_Lcd_Write_Char:	
   720                           ; 1 bytes @ 0x1
   721                           
   722  0071                     isdigit@c:	
   723                           ; 1 bytes @ 0x1
   724                           
   725                           
   726                           ; 1 bytes @ 0x1
   727  0071                     	ds	1
   728  0072                     ??__Umul8_16:
   729  0072                     Lcd_Write_Char@temp:	
   730                           ; 1 bytes @ 0x2
   731                           
   732  0072                     ___wmul@multiplicand:	
   733                           ; 1 bytes @ 0x2
   734                           
   735  0072                     ___awmod@dividend:	
   736                           ; 2 bytes @ 0x2
   737                           
   738  0072                     ___lwmod@dividend:	
   739                           ; 2 bytes @ 0x2
   740                           
   741                           
   742                           ; 2 bytes @ 0x2
   743  0072                     	ds	1
   744  0073                     Lcd_Cmd@a:
   745  0073                     Lcd_Write_Char@y:	
   746                           ; 1 bytes @ 0x3
   747                           
   748                           
   749                           ; 1 bytes @ 0x3
   750  0073                     	ds	1
   751  0074                     ??_Lcd_Clear:
   752  0074                     ?_Lcd_Set_Cursor:	
   753                           ; 1 bytes @ 0x4
   754                           
   755  0074                     ??_Lcd_Init:	
   756                           ; 1 bytes @ 0x4
   757                           
   758  0074                     ??___wmul:	
   759                           ; 1 bytes @ 0x4
   760                           
   761  0074                     ??___awmod:	
   762                           ; 1 bytes @ 0x4
   763                           
   764  0074                     ??___flneg:	
   765                           ; 1 bytes @ 0x4
   766                           
   767  0074                     ??___lwmod:	
   768                           ; 1 bytes @ 0x4
   769                           
   770  0074                     ??___xxtofl:	
   771                           ; 1 bytes @ 0x4
   772                           
   773  0074                     Lcd_Set_Cursor@b:	
   774                           ; 1 bytes @ 0x4
   775                           
   776  0074                     Lcd_Write_Char@a:	
   777                           ; 1 bytes @ 0x4
   778                           
   779  0074                     ___wmul@product:	
   780                           ; 1 bytes @ 0x4
   781                           
   782  0074                     __Umul8_16@product:	
   783                           ; 2 bytes @ 0x4
   784                           
   785  0074                     ___lldiv@dividend:	
   786                           ; 2 bytes @ 0x4
   787                           
   788  0074                     __div_to_l_@f2:	
   789                           ; 4 bytes @ 0x4
   790                           
   791  0074                     ___fleq@ff2:	
   792                           ; 4 bytes @ 0x4
   793                           
   794  0074                     ___flge@ff2:	
   795                           ; 4 bytes @ 0x4
   796                           
   797  0074                     __tdiv_to_l_@f2:	
   798                           ; 4 bytes @ 0x4
   799                           
   800  0074                     ___llmod@dividend:	
   801                           ; 4 bytes @ 0x4
   802                           
   803                           
   804                           ; 4 bytes @ 0x4
   805  0074                     	ds	1
   806  0075                     ??_Lcd_Set_Cursor:
   807  0075                     ?_Lcd_Write_String:	
   808                           ; 1 bytes @ 0x5
   809                           
   810  0075                     ___awmod@counter:	
   811                           ; 1 bytes @ 0x5
   812                           
   813  0075                     ___lwmod@counter:	
   814                           ; 1 bytes @ 0x5
   815                           
   816  0075                     Lcd_Write_String@a:	
   817                           ; 1 bytes @ 0x5
   818                           
   819                           
   820                           ; 2 bytes @ 0x5
   821  0075                     	ds	1
   822  0076                     ?___lwdiv:
   823  0076                     ___awmod@sign:	
   824                           ; 2 bytes @ 0x6
   825                           
   826  0076                     ___lwdiv@divisor:	
   827                           ; 1 bytes @ 0x6
   828                           
   829  0076                     __Umul8_16@word_mpld:	
   830                           ; 2 bytes @ 0x6
   831                           
   832                           
   833                           ; 2 bytes @ 0x6
   834  0076                     	ds	1
   835  0077                     ??_Lcd_Write_String:
   836  0077                     ?___awdiv:	
   837                           ; 1 bytes @ 0x7
   838                           
   839  0077                     Lcd_Set_Cursor@a:	
   840                           ; 2 bytes @ 0x7
   841                           
   842  0077                     ___awdiv@divisor:	
   843                           ; 1 bytes @ 0x7
   844                           
   845                           
   846                           ; 2 bytes @ 0x7
   847  0077                     	ds	1
   848  0078                     ??__tdiv_to_l_:
   849  0078                     ??__div_to_l_:	
   850                           ; 1 bytes @ 0x8
   851                           
   852  0078                     ??___lldiv:	
   853                           ; 1 bytes @ 0x8
   854                           
   855  0078                     ??___fleq:	
   856                           ; 1 bytes @ 0x8
   857                           
   858  0078                     ??___flge:	
   859                           ; 1 bytes @ 0x8
   860                           
   861  0078                     ??___llmod:	
   862                           ; 1 bytes @ 0x8
   863                           
   864  0078                     Lcd_Set_Cursor@z:	
   865                           ; 1 bytes @ 0x8
   866                           
   867  0078                     __Umul8_16@multiplier:	
   868                           ; 1 bytes @ 0x8
   869                           
   870  0078                     ___xxtofl@sign:	
   871                           ; 1 bytes @ 0x8
   872                           
   873  0078                     ___lwdiv@dividend:	
   874                           ; 1 bytes @ 0x8
   875                           
   876                           
   877                           ; 2 bytes @ 0x8
   878  0078                     	ds	1
   879  0079                     Lcd_Set_Cursor@y:
   880  0079                     ___llmod@counter:	
   881                           ; 1 bytes @ 0x9
   882                           
   883  0079                     ___xxtofl@exp:	
   884                           ; 1 bytes @ 0x9
   885                           
   886  0079                     ___awdiv@dividend:	
   887                           ; 1 bytes @ 0x9
   888                           
   889  0079                     ___lldiv@quotient:	
   890                           ; 2 bytes @ 0x9
   891                           
   892                           
   893                           ; 4 bytes @ 0x9
   894  0079                     	ds	1
   895  007A                     ??___lwdiv:
   896  007A                     Lcd_Set_Cursor@temp:	
   897                           ; 1 bytes @ 0xA
   898                           
   899  007A                     Lcd_Write_String@i:	
   900                           ; 1 bytes @ 0xA
   901                           
   902  007A                     ___xxtofl@arg:	
   903                           ; 2 bytes @ 0xA
   904                           
   905                           
   906                           ; 4 bytes @ 0xA
   907  007A                     	ds	1
   908  007B                     ??___awdiv:
   909  007B                     ___lwdiv@quotient:	
   910                           ; 1 bytes @ 0xB
   911                           
   912                           
   913                           ; 2 bytes @ 0xB
   914  007B                     	ds	2
   915  007D                     ___lldiv@counter:
   916  007D                     ___lwdiv@counter:	
   917                           ; 1 bytes @ 0xD
   918                           
   919                           
   920                           ; 1 bytes @ 0xD
   921  007D                     	ds	1
   922  007E                     ??___flsub:
   923                           
   924                           	psect	cstackBANK0
   925  0020                     __pcstackBANK0:	
   926                           ; 1 bytes @ 0xE
   927                           
   928  0020                     ??_lerSensores:
   929  0020                     ___awdiv@counter:	
   930                           ; 1 bytes @ 0x0
   931                           
   932  0020                     __div_to_l_@quot:	
   933                           ; 1 bytes @ 0x0
   934                           
   935  0020                     __tdiv_to_l_@quot:	
   936                           ; 4 bytes @ 0x0
   937                           
   938                           
   939                           ; 4 bytes @ 0x0
   940  0020                     	ds	1
   941  0021                     ___awdiv@sign:
   942                           
   943                           ; 1 bytes @ 0x1
   944  0021                     	ds	1
   945  0022                     ___awdiv@quotient:
   946                           
   947                           ; 2 bytes @ 0x2
   948  0022                     	ds	2
   949  0024                     ?___flmul:
   950  0024                     __div_to_l_@cntr:	
   951                           ; 4 bytes @ 0x4
   952                           
   953  0024                     __tdiv_to_l_@cntr:	
   954                           ; 1 bytes @ 0x4
   955                           
   956  0024                     ___flmul@b:	
   957                           ; 1 bytes @ 0x4
   958                           
   959                           
   960                           ; 4 bytes @ 0x4
   961  0024                     	ds	1
   962  0025                     __div_to_l_@exp1:
   963  0025                     __tdiv_to_l_@exp1:	
   964                           ; 1 bytes @ 0x5
   965                           
   966                           
   967                           ; 1 bytes @ 0x5
   968  0025                     	ds	3
   969  0028                     ___flmul@a:
   970                           
   971                           ; 4 bytes @ 0x8
   972  0028                     	ds	4
   973  002C                     ??___flmul:
   974                           
   975                           ; 1 bytes @ 0xC
   976  002C                     	ds	5
   977  0031                     ___flmul@sign:
   978                           
   979                           ; 1 bytes @ 0x11
   980  0031                     	ds	1
   981  0032                     ___flmul@grs:
   982                           
   983                           ; 4 bytes @ 0x12
   984  0032                     	ds	4
   985  0036                     ___flmul@aexp:
   986                           
   987                           ; 1 bytes @ 0x16
   988  0036                     	ds	1
   989  0037                     ___flmul@bexp:
   990                           
   991                           ; 1 bytes @ 0x17
   992  0037                     	ds	1
   993  0038                     ___flmul@prod:
   994                           
   995                           ; 4 bytes @ 0x18
   996  0038                     	ds	4
   997  003C                     ___flmul@temp:
   998                           
   999                           ; 2 bytes @ 0x1C
  1000  003C                     	ds	2
  1001  003E                     ?_fround:
  1002  003E                     ?_scale:	
  1003                           ; 4 bytes @ 0x1E
  1004                           
  1005                           
  1006                           ; 4 bytes @ 0x1E
  1007  003E                     	ds	4
  1008  0042                     ??_fround:
  1009  0042                     ??_scale:	
  1010                           ; 1 bytes @ 0x22
  1011                           
  1012                           
  1013                           ; 1 bytes @ 0x22
  1014  0042                     	ds	7
  1015  0049                     _fround$930:
  1016                           
  1017                           ; 4 bytes @ 0x29
  1018  0049                     	ds	3
  1019  004C                     _scale$931:
  1020                           
  1021                           ; 4 bytes @ 0x2C
  1022  004C                     	ds	1
  1023  004D                     _fround$929:
  1024                           
  1025                           ; 4 bytes @ 0x2D
  1026  004D                     	ds	3
  1027  0050                     scale@scl:
  1028                           
  1029                           ; 1 bytes @ 0x30
  1030  0050                     	ds	1
  1031  0051                     ?___fltol:
  1032  0051                     fround@prec:	
  1033                           ; 4 bytes @ 0x31
  1034                           
  1035  0051                     ___fltol@f1:	
  1036                           ; 1 bytes @ 0x31
  1037                           
  1038                           
  1039                           ; 4 bytes @ 0x31
  1040  0051                     	ds	1
  1041  0052                     ?___fladd:
  1042  0052                     ___fladd@b:	
  1043                           ; 4 bytes @ 0x32
  1044                           
  1045                           
  1046                           ; 4 bytes @ 0x32
  1047  0052                     	ds	3
  1048  0055                     ??___fltol:
  1049                           
  1050                           ; 1 bytes @ 0x35
  1051  0055                     	ds	1
  1052  0056                     ___fladd@a:
  1053                           
  1054                           ; 4 bytes @ 0x36
  1055  0056                     	ds	4
  1056  005A                     ??___fladd:
  1057  005A                     ___fltol@sign1:	
  1058                           ; 1 bytes @ 0x3A
  1059                           
  1060                           
  1061                           ; 1 bytes @ 0x3A
  1062  005A                     	ds	1
  1063  005B                     ___fltol@exp1:
  1064                           
  1065                           ; 1 bytes @ 0x3B
  1066  005B                     	ds	7
  1067  0062                     ___fladd@signs:
  1068                           
  1069                           ; 1 bytes @ 0x42
  1070  0062                     	ds	1
  1071  0063                     ___fladd@aexp:
  1072                           
  1073                           ; 1 bytes @ 0x43
  1074  0063                     	ds	1
  1075  0064                     ___fladd@bexp:
  1076                           
  1077                           ; 1 bytes @ 0x44
  1078  0064                     	ds	1
  1079  0065                     ___fladd@grs:
  1080                           
  1081                           ; 1 bytes @ 0x45
  1082  0065                     	ds	1
  1083  0066                     ?___flsub:
  1084  0066                     ___flsub@a:	
  1085                           ; 4 bytes @ 0x46
  1086                           
  1087                           
  1088                           ; 4 bytes @ 0x46
  1089  0066                     	ds	4
  1090  006A                     ___flsub@b:
  1091                           
  1092                           ; 4 bytes @ 0x4A
  1093  006A                     	ds	4
  1094  006E                     ??_atualizaLCD:
  1095                           
  1096                           ; 1 bytes @ 0x4E
  1097  006E                     	ds	2
  1098                           
  1099                           	psect	maintext
  1100  0814                     __pmaintext:	
  1101 ;;
  1102 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1103 ;;
  1104 ;; *************** function _main *****************
  1105 ;; Defined at:
  1106 ;;		line 34 in file "main.c"
  1107 ;; Parameters:    Size  Location     Type
  1108 ;;		None
  1109 ;; Auto vars:     Size  Location     Type
  1110 ;;		None
  1111 ;; Return value:  Size  Location     Type
  1112 ;;                  2  145[None  ] int 
  1113 ;; Registers used:
  1114 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1115 ;; Tracked objects:
  1116 ;;		On entry : B00/0
  1117 ;;		On exit  : 0/0
  1118 ;;		Unchanged: 0/0
  1119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1120 ;;      Params:         0       0       0       0       0
  1121 ;;      Locals:         0       0       0       0       0
  1122 ;;      Temps:          0       0       3       0       0
  1123 ;;      Totals:         0       0       3       0       0
  1124 ;;Total ram usage:        3 bytes
  1125 ;; Hardware stack levels required when called: 5
  1126 ;; This function calls:
  1127 ;;		_Lcd_Init
  1128 ;;		___flge
  1129 ;;		_atualizaLCD
  1130 ;;		_expandeTela
  1131 ;;		_lerSensores
  1132 ;;		_recolheTela
  1133 ;; This function is called by:
  1134 ;;		Startup code after reset
  1135 ;; This function uses a non-reentrant model
  1136 ;;
  1137                           
  1138                           
  1139                           ;psect for function _main
  1140  0814                     _main:
  1141  0814                     l3658:	
  1142                           ;incstack = 0
  1143                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1144                           
  1145                           
  1146                           ;main.c: 37:     TRISB = 0b00000000;
  1147  0814  1683               	bsf	3,5	;RP0=1, select bank1
  1148  0815  1303               	bcf	3,6	;RP1=0, select bank1
  1149  0816  0186               	clrf	6	;volatile
  1150  0817                     l3660:
  1151                           
  1152                           ;main.c: 38:     TRISA = 0b11111111;
  1153  0817  30FF               	movlw	255
  1154  0818  0085               	movwf	5	;volatile
  1155  0819                     l3662:
  1156                           
  1157                           ;main.c: 39:     TRISC = 0b00000000;
  1158  0819  0187               	clrf	7	;volatile
  1159  081A                     l3664:
  1160                           
  1161                           ;main.c: 40:     TRISD = 0b00000000;
  1162  081A  0188               	clrf	8	;volatile
  1163  081B                     l3666:
  1164                           
  1165                           ;main.c: 43:     ADCON1bits.PCFG0 = 0;
  1166  081B  101F               	bcf	31,0	;volatile
  1167  081C                     l3668:
  1168                           
  1169                           ;main.c: 44:     ADCON1bits.PCFG1 = 0;
  1170  081C  109F               	bcf	31,1	;volatile
  1171  081D                     l3670:
  1172                           
  1173                           ;main.c: 45:     ADCON1bits.PCFG2 = 0;
  1174  081D  111F               	bcf	31,2	;volatile
  1175  081E                     l3672:
  1176                           
  1177                           ;main.c: 46:     ADCON1bits.PCFG3 = 0;
  1178  081E  119F               	bcf	31,3	;volatile
  1179  081F                     l3674:
  1180                           
  1181                           ;main.c: 49:     ADCON0bits.ADCS0 = 0 ;
  1182  081F  1283               	bcf	3,5	;RP0=0, select bank0
  1183  0820  1303               	bcf	3,6	;RP1=0, select bank0
  1184  0821  131F               	bcf	31,6	;volatile
  1185  0822                     l3676:
  1186                           
  1187                           ;main.c: 50:     ADCON0bits.ADCS1 = 0 ;
  1188  0822  139F               	bcf	31,7	;volatile
  1189  0823                     l3678:
  1190                           
  1191                           ;main.c: 52:     ADCON1bits.ADFM = 0 ;
  1192  0823  1683               	bsf	3,5	;RP0=1, select bank1
  1193  0824  1303               	bcf	3,6	;RP1=0, select bank1
  1194  0825  139F               	bcf	31,7	;volatile
  1195  0826                     l3680:
  1196                           
  1197                           ;main.c: 59:     ADRESL = 0x00;
  1198  0826  019E               	clrf	30	;volatile
  1199  0827                     l3682:
  1200                           
  1201                           ;main.c: 60:     ADRESH = 0x00;
  1202  0827  1283               	bcf	3,5	;RP0=0, select bank0
  1203  0828  1303               	bcf	3,6	;RP1=0, select bank0
  1204  0829  019E               	clrf	30	;volatile
  1205  082A                     l3684:
  1206                           
  1207                           ;main.c: 62:     ADCON0bits.ADON = 1;
  1208  082A  141F               	bsf	31,0	;volatile
  1209  082B                     l3686:
  1210                           
  1211                           ;main.c: 64:     Lcd_Init();
  1212  082B  160A  158A  2423  120A  158A  	fcall	_Lcd_Init
  1213  0830                     l3688:
  1214                           
  1215                           ;main.c: 66:     {;main.c: 67:         lerSensores();
  1216  0830  120A  118A  2055  120A  158A  	fcall	_lerSensores
  1217  0835                     l3690:
  1218                           
  1219                           ;main.c: 70:         if(valor_entry0 > 192 )
  1220  0835  3043               	movlw	67
  1221  0836  00F3               	movwf	___flge@ff1+3
  1222  0837  3040               	movlw	64
  1223  0838  00F2               	movwf	___flge@ff1+2
  1224  0839  3000               	movlw	0
  1225  083A  00F1               	movwf	___flge@ff1+1
  1226  083B  3000               	movlw	0
  1227  083C  00F0               	movwf	___flge@ff1
  1228  083D  1683               	bsf	3,5	;RP0=1, select bank1
  1229  083E  1303               	bcf	3,6	;RP1=0, select bank1
  1230  083F  0861               	movf	(_valor_entry0+3)^(0+128),w
  1231  0840  00F7               	movwf	___flge@ff2+3
  1232  0841  0860               	movf	(_valor_entry0+2)^(0+128),w
  1233  0842  00F6               	movwf	___flge@ff2+2
  1234  0843  085F               	movf	(_valor_entry0+1)^(0+128),w
  1235  0844  00F5               	movwf	___flge@ff2+1
  1236  0845  085E               	movf	_valor_entry0^(0+128),w
  1237  0846  00F4               	movwf	___flge@ff2
  1238  0847  160A  118A  20C1  120A  158A  	fcall	___flge
  1239  084C  1803               	btfsc	3,0
  1240  084D  284F               	goto	u5471
  1241  084E  2850               	goto	u5470
  1242  084F                     u5471:
  1243  084F  2855               	goto	l147
  1244  0850                     u5470:
  1245  0850                     l3692:
  1246                           
  1247                           ;main.c: 71:         {;main.c: 72:             expandeTela();
  1248  0850  160A  158A  21CB  120A  158A  	fcall	_expandeTela
  1249  0855                     l147:	
  1250                           ;main.c: 73:         }
  1251                           
  1252                           
  1253                           ;main.c: 76:         if(valor_entry2 < 127)
  1254  0855  1683               	bsf	3,5	;RP0=1, select bank1
  1255  0856  1303               	bcf	3,6	;RP1=0, select bank1
  1256  0857  0859               	movf	(_valor_entry2+3)^(0+128),w
  1257  0858  00F3               	movwf	___flge@ff1+3
  1258  0859  0858               	movf	(_valor_entry2+2)^(0+128),w
  1259  085A  00F2               	movwf	___flge@ff1+2
  1260  085B  0857               	movf	(_valor_entry2+1)^(0+128),w
  1261  085C  00F1               	movwf	___flge@ff1+1
  1262  085D  0856               	movf	_valor_entry2^(0+128),w
  1263  085E  00F0               	movwf	___flge@ff1
  1264  085F  3042               	movlw	66
  1265  0860  00F7               	movwf	___flge@ff2+3
  1266  0861  30FE               	movlw	254
  1267  0862  00F6               	movwf	___flge@ff2+2
  1268  0863  3000               	movlw	0
  1269  0864  00F5               	movwf	___flge@ff2+1
  1270  0865  3000               	movlw	0
  1271  0866  00F4               	movwf	___flge@ff2
  1272  0867  160A  118A  20C1  120A  158A  	fcall	___flge
  1273  086C  1803               	btfsc	3,0
  1274  086D  286F               	goto	u5481
  1275  086E  2870               	goto	u5480
  1276  086F                     u5481:
  1277  086F  2876               	goto	l3696
  1278  0870                     u5480:
  1279  0870                     l3694:
  1280                           
  1281                           ;main.c: 77:         {;main.c: 78:             recolheTela();
  1282  0870  160A  158A  21FE  120A  158A  	fcall	_recolheTela
  1283                           
  1284                           ;main.c: 79:         }
  1285  0875  287B               	goto	l149
  1286  0876                     l3696:
  1287                           
  1288                           ;main.c: 81:         {;main.c: 82:             expandeTela();
  1289  0876  160A  158A  21CB  120A  158A  	fcall	_expandeTela
  1290  087B                     l149:	
  1291                           ;main.c: 83:         }
  1292                           
  1293                           
  1294                           ;main.c: 89:         if(valor_entry3 < 128)
  1295  087B  1683               	bsf	3,5	;RP0=1, select bank1
  1296  087C  1303               	bcf	3,6	;RP1=0, select bank1
  1297  087D  0855               	movf	(_valor_entry3+3)^(0+128),w
  1298  087E  00F3               	movwf	___flge@ff1+3
  1299  087F  0854               	movf	(_valor_entry3+2)^(0+128),w
  1300  0880  00F2               	movwf	___flge@ff1+2
  1301  0881  0853               	movf	(_valor_entry3+1)^(0+128),w
  1302  0882  00F1               	movwf	___flge@ff1+1
  1303  0883  0852               	movf	_valor_entry3^(0+128),w
  1304  0884  00F0               	movwf	___flge@ff1
  1305  0885  3043               	movlw	67
  1306  0886  00F7               	movwf	___flge@ff2+3
  1307  0887  3000               	movlw	0
  1308  0888  00F6               	movwf	___flge@ff2+2
  1309  0889  3000               	movlw	0
  1310  088A  00F5               	movwf	___flge@ff2+1
  1311  088B  3000               	movlw	0
  1312  088C  00F4               	movwf	___flge@ff2
  1313  088D  160A  118A  20C1  120A  158A  	fcall	___flge
  1314  0892  1803               	btfsc	3,0
  1315  0893  2895               	goto	u5491
  1316  0894  2896               	goto	u5490
  1317  0895                     u5491:
  1318  0895  28AA               	goto	l3704
  1319  0896                     u5490:
  1320  0896                     l3698:
  1321                           
  1322                           ;main.c: 90:         {;main.c: 91:             RC6 = 1;
  1323  0896  1283               	bcf	3,5	;RP0=0, select bank0
  1324  0897  1303               	bcf	3,6	;RP1=0, select bank0
  1325  0898  1707               	bsf	7,6	;volatile
  1326  0899                     l3700:
  1327                           
  1328                           ;main.c: 92:             _delay((unsigned long)((500)*(4000000/4000.0)));
  1329  0899  3003               	movlw	3
  1330  089A  1683               	bsf	3,5	;RP0=1, select bank1
  1331  089B  1303               	bcf	3,6	;RP1=0, select bank1
  1332  089C  00C5               	movwf	(??_main^(0+128)+2)
  1333  089D  308A               	movlw	138
  1334  089E  00C4               	movwf	(??_main^(0+128)+1)
  1335  089F  3055               	movlw	85
  1336  08A0  00C3               	movwf	??_main^(0+128)
  1337  08A1                     u5537:
  1338  08A1  0BC3               	decfsz	??_main^(0+128),f
  1339  08A2  28A1               	goto	u5537
  1340  08A3  0BC4               	decfsz	(??_main^(0+128)+1),f
  1341  08A4  28A1               	goto	u5537
  1342  08A5  0BC5               	decfsz	(??_main^(0+128)+2),f
  1343  08A6  28A1               	goto	u5537
  1344  08A7                     l3702:
  1345                           
  1346                           ;main.c: 93:             RC6 = 0;
  1347  08A7  1283               	bcf	3,5	;RP0=0, select bank0
  1348  08A8  1303               	bcf	3,6	;RP1=0, select bank0
  1349  08A9  1307               	bcf	7,6	;volatile
  1350  08AA                     l3704:
  1351                           
  1352                           ;main.c: 97:         if(valor_entry4 < 128)
  1353  08AA  1683               	bsf	3,5	;RP0=1, select bank1
  1354  08AB  1303               	bcf	3,6	;RP1=0, select bank1
  1355  08AC  0851               	movf	(_valor_entry4+3)^(0+128),w
  1356  08AD  00F3               	movwf	___flge@ff1+3
  1357  08AE  0850               	movf	(_valor_entry4+2)^(0+128),w
  1358  08AF  00F2               	movwf	___flge@ff1+2
  1359  08B0  084F               	movf	(_valor_entry4+1)^(0+128),w
  1360  08B1  00F1               	movwf	___flge@ff1+1
  1361  08B2  084E               	movf	_valor_entry4^(0+128),w
  1362  08B3  00F0               	movwf	___flge@ff1
  1363  08B4  3043               	movlw	67
  1364  08B5  00F7               	movwf	___flge@ff2+3
  1365  08B6  3000               	movlw	0
  1366  08B7  00F6               	movwf	___flge@ff2+2
  1367  08B8  3000               	movlw	0
  1368  08B9  00F5               	movwf	___flge@ff2+1
  1369  08BA  3000               	movlw	0
  1370  08BB  00F4               	movwf	___flge@ff2
  1371  08BC  160A  118A  20C1  120A  158A  	fcall	___flge
  1372  08C1  1803               	btfsc	3,0
  1373  08C2  28C4               	goto	u5501
  1374  08C3  28C5               	goto	u5500
  1375  08C4                     u5501:
  1376  08C4  28D9               	goto	l3712
  1377  08C5                     u5500:
  1378  08C5                     l3706:
  1379                           
  1380                           ;main.c: 98:         {;main.c: 99:             RC7 = 1;
  1381  08C5  1283               	bcf	3,5	;RP0=0, select bank0
  1382  08C6  1303               	bcf	3,6	;RP1=0, select bank0
  1383  08C7  1787               	bsf	7,7	;volatile
  1384  08C8                     l3708:
  1385                           
  1386                           ;main.c: 100:             _delay((unsigned long)((500)*(4000000/4000.0)));
  1387  08C8  3003               	movlw	3
  1388  08C9  1683               	bsf	3,5	;RP0=1, select bank1
  1389  08CA  1303               	bcf	3,6	;RP1=0, select bank1
  1390  08CB  00C5               	movwf	(??_main^(0+128)+2)
  1391  08CC  308A               	movlw	138
  1392  08CD  00C4               	movwf	(??_main^(0+128)+1)
  1393  08CE  3055               	movlw	85
  1394  08CF  00C3               	movwf	??_main^(0+128)
  1395  08D0                     u5547:
  1396  08D0  0BC3               	decfsz	??_main^(0+128),f
  1397  08D1  28D0               	goto	u5547
  1398  08D2  0BC4               	decfsz	(??_main^(0+128)+1),f
  1399  08D3  28D0               	goto	u5547
  1400  08D4  0BC5               	decfsz	(??_main^(0+128)+2),f
  1401  08D5  28D0               	goto	u5547
  1402  08D6                     l3710:
  1403                           
  1404                           ;main.c: 101:             RC7 = 0;
  1405  08D6  1283               	bcf	3,5	;RP0=0, select bank0
  1406  08D7  1303               	bcf	3,6	;RP1=0, select bank0
  1407  08D8  1387               	bcf	7,7	;volatile
  1408  08D9                     l3712:
  1409                           
  1410                           ;main.c: 105:         if(valor_entry5 < 128)
  1411  08D9  1683               	bsf	3,5	;RP0=1, select bank1
  1412  08DA  1303               	bcf	3,6	;RP1=0, select bank1
  1413  08DB  084D               	movf	(_valor_entry5+3)^(0+128),w
  1414  08DC  00F3               	movwf	___flge@ff1+3
  1415  08DD  084C               	movf	(_valor_entry5+2)^(0+128),w
  1416  08DE  00F2               	movwf	___flge@ff1+2
  1417  08DF  084B               	movf	(_valor_entry5+1)^(0+128),w
  1418  08E0  00F1               	movwf	___flge@ff1+1
  1419  08E1  084A               	movf	_valor_entry5^(0+128),w
  1420  08E2  00F0               	movwf	___flge@ff1
  1421  08E3  3043               	movlw	67
  1422  08E4  00F7               	movwf	___flge@ff2+3
  1423  08E5  3000               	movlw	0
  1424  08E6  00F6               	movwf	___flge@ff2+2
  1425  08E7  3000               	movlw	0
  1426  08E8  00F5               	movwf	___flge@ff2+1
  1427  08E9  3000               	movlw	0
  1428  08EA  00F4               	movwf	___flge@ff2
  1429  08EB  160A  118A  20C1  120A  158A  	fcall	___flge
  1430  08F0  1803               	btfsc	3,0
  1431  08F1  28F3               	goto	u5511
  1432  08F2  28F4               	goto	u5510
  1433  08F3                     u5511:
  1434  08F3  2908               	goto	l3720
  1435  08F4                     u5510:
  1436  08F4                     l3714:
  1437                           
  1438                           ;main.c: 106:         {;main.c: 107:             RC4 = 1;
  1439  08F4  1283               	bcf	3,5	;RP0=0, select bank0
  1440  08F5  1303               	bcf	3,6	;RP1=0, select bank0
  1441  08F6  1607               	bsf	7,4	;volatile
  1442  08F7                     l3716:
  1443                           
  1444                           ;main.c: 108:             _delay((unsigned long)((500)*(4000000/4000.0)));
  1445  08F7  3003               	movlw	3
  1446  08F8  1683               	bsf	3,5	;RP0=1, select bank1
  1447  08F9  1303               	bcf	3,6	;RP1=0, select bank1
  1448  08FA  00C5               	movwf	(??_main^(0+128)+2)
  1449  08FB  308A               	movlw	138
  1450  08FC  00C4               	movwf	(??_main^(0+128)+1)
  1451  08FD  3055               	movlw	85
  1452  08FE  00C3               	movwf	??_main^(0+128)
  1453  08FF                     u5557:
  1454  08FF  0BC3               	decfsz	??_main^(0+128),f
  1455  0900  28FF               	goto	u5557
  1456  0901  0BC4               	decfsz	(??_main^(0+128)+1),f
  1457  0902  28FF               	goto	u5557
  1458  0903  0BC5               	decfsz	(??_main^(0+128)+2),f
  1459  0904  28FF               	goto	u5557
  1460  0905                     l3718:
  1461                           
  1462                           ;main.c: 109:             RC4 = 0;
  1463  0905  1283               	bcf	3,5	;RP0=0, select bank0
  1464  0906  1303               	bcf	3,6	;RP1=0, select bank0
  1465  0907  1207               	bcf	7,4	;volatile
  1466  0908                     l3720:
  1467                           
  1468                           ;main.c: 113:         if(valor_entry6 < 128)
  1469  0908  1683               	bsf	3,5	;RP0=1, select bank1
  1470  0909  1303               	bcf	3,6	;RP1=0, select bank1
  1471  090A  0849               	movf	(_valor_entry6+3)^(0+128),w
  1472  090B  00F3               	movwf	___flge@ff1+3
  1473  090C  0848               	movf	(_valor_entry6+2)^(0+128),w
  1474  090D  00F2               	movwf	___flge@ff1+2
  1475  090E  0847               	movf	(_valor_entry6+1)^(0+128),w
  1476  090F  00F1               	movwf	___flge@ff1+1
  1477  0910  0846               	movf	_valor_entry6^(0+128),w
  1478  0911  00F0               	movwf	___flge@ff1
  1479  0912  3043               	movlw	67
  1480  0913  00F7               	movwf	___flge@ff2+3
  1481  0914  3000               	movlw	0
  1482  0915  00F6               	movwf	___flge@ff2+2
  1483  0916  3000               	movlw	0
  1484  0917  00F5               	movwf	___flge@ff2+1
  1485  0918  3000               	movlw	0
  1486  0919  00F4               	movwf	___flge@ff2
  1487  091A  160A  118A  20C1  120A  158A  	fcall	___flge
  1488  091F  1803               	btfsc	3,0
  1489  0920  2922               	goto	u5521
  1490  0921  2923               	goto	u5520
  1491  0922                     u5521:
  1492  0922  2937               	goto	l3728
  1493  0923                     u5520:
  1494  0923                     l3722:
  1495                           
  1496                           ;main.c: 114:         {;main.c: 115:             RC5 = 1;
  1497  0923  1283               	bcf	3,5	;RP0=0, select bank0
  1498  0924  1303               	bcf	3,6	;RP1=0, select bank0
  1499  0925  1687               	bsf	7,5	;volatile
  1500  0926                     l3724:
  1501                           
  1502                           ;main.c: 116:             _delay((unsigned long)((500)*(4000000/4000.0)));
  1503  0926  3003               	movlw	3
  1504  0927  1683               	bsf	3,5	;RP0=1, select bank1
  1505  0928  1303               	bcf	3,6	;RP1=0, select bank1
  1506  0929  00C5               	movwf	(??_main^(0+128)+2)
  1507  092A  308A               	movlw	138
  1508  092B  00C4               	movwf	(??_main^(0+128)+1)
  1509  092C  3055               	movlw	85
  1510  092D  00C3               	movwf	??_main^(0+128)
  1511  092E                     u5567:
  1512  092E  0BC3               	decfsz	??_main^(0+128),f
  1513  092F  292E               	goto	u5567
  1514  0930  0BC4               	decfsz	(??_main^(0+128)+1),f
  1515  0931  292E               	goto	u5567
  1516  0932  0BC5               	decfsz	(??_main^(0+128)+2),f
  1517  0933  292E               	goto	u5567
  1518  0934                     l3726:
  1519                           
  1520                           ;main.c: 117:             RC5 = 0;
  1521  0934  1283               	bcf	3,5	;RP0=0, select bank0
  1522  0935  1303               	bcf	3,6	;RP1=0, select bank0
  1523  0936  1287               	bcf	7,5	;volatile
  1524  0937                     l3728:
  1525                           
  1526                           ;main.c: 122:         atualizaLCD();
  1527  0937  160A  118A  2163  120A  158A  	fcall	_atualizaLCD
  1528  093C  2830               	goto	l3688
  1529  093D  120A  118A  2800   	ljmp	start
  1530  0940                     __end_of_main:
  1531                           
  1532                           	psect	text1
  1533  19FE                     __ptext1:	
  1534 ;; *************** function _recolheTela *****************
  1535 ;; Defined at:
  1536 ;;		line 200 in file "main.c"
  1537 ;; Parameters:    Size  Location     Type
  1538 ;;		None
  1539 ;; Auto vars:     Size  Location     Type
  1540 ;;		None
  1541 ;; Return value:  Size  Location     Type
  1542 ;;                  1    wreg      void 
  1543 ;; Registers used:
  1544 ;;		wreg
  1545 ;; Tracked objects:
  1546 ;;		On entry : 0/0
  1547 ;;		On exit  : 0/0
  1548 ;;		Unchanged: 0/0
  1549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1550 ;;      Params:         0       0       0       0       0
  1551 ;;      Locals:         0       0       0       0       0
  1552 ;;      Temps:          3       0       0       0       0
  1553 ;;      Totals:         3       0       0       0       0
  1554 ;;Total ram usage:        3 bytes
  1555 ;; Hardware stack levels used: 1
  1556 ;; This function calls:
  1557 ;;		Nothing
  1558 ;; This function is called by:
  1559 ;;		_main
  1560 ;; This function uses a non-reentrant model
  1561 ;;
  1562                           
  1563                           
  1564                           ;psect for function _recolheTela
  1565  19FE                     _recolheTela:
  1566  19FE                     l3560:	
  1567                           ;incstack = 0
  1568                           ; Regs used in _recolheTela: [wreg]
  1569                           
  1570                           
  1571                           ;main.c: 203:     RD5 = 1;
  1572  19FE  1283               	bcf	3,5	;RP0=0, select bank0
  1573  19FF  1303               	bcf	3,6	;RP1=0, select bank0
  1574  1A00  1688               	bsf	8,5	;volatile
  1575                           
  1576                           ;main.c: 204:     RD3 = 1;
  1577  1A01  1588               	bsf	8,3	;volatile
  1578                           
  1579                           ;main.c: 205:     RD1 = 1;
  1580  1A02  1488               	bsf	8,1	;volatile
  1581                           
  1582                           ;main.c: 206:     RC0 = 1;
  1583  1A03  1407               	bsf	7,0	;volatile
  1584                           
  1585                           ;main.c: 209:     RD4 = 0;
  1586  1A04  1208               	bcf	8,4	;volatile
  1587                           
  1588                           ;main.c: 210:     RC1 = 1;
  1589  1A05  1487               	bsf	7,1	;volatile
  1590                           
  1591                           ;main.c: 211:     RD2 = 0;
  1592  1A06  1108               	bcf	8,2	;volatile
  1593                           
  1594                           ;main.c: 212:     RD6 = 1;
  1595  1A07  1708               	bsf	8,6	;volatile
  1596                           
  1597                           ;main.c: 214:     RD0 = 0;
  1598  1A08  1008               	bcf	8,0	;volatile
  1599                           
  1600                           ;main.c: 215:     RC3 = 1;
  1601  1A09  1587               	bsf	7,3	;volatile
  1602                           
  1603                           ;main.c: 216:     RC2 = 0;
  1604  1A0A  1107               	bcf	7,2	;volatile
  1605                           
  1606                           ;main.c: 217:     RD7 = 1;
  1607  1A0B  1788               	bsf	8,7	;volatile
  1608  1A0C                     l3562:
  1609                           
  1610                           ;main.c: 218:     _delay((unsigned long)((500)*(4000000/4000.0)));
  1611  1A0C  3003               	movlw	3
  1612  1A0D  00F2               	movwf	??_recolheTela+2
  1613  1A0E  308A               	movlw	138
  1614  1A0F  00F1               	movwf	??_recolheTela+1
  1615  1A10  3055               	movlw	85
  1616  1A11  00F0               	movwf	??_recolheTela
  1617  1A12                     u5577:
  1618  1A12  0BF0               	decfsz	??_recolheTela,f
  1619  1A13  2A12               	goto	u5577
  1620  1A14  0BF1               	decfsz	??_recolheTela+1,f
  1621  1A15  2A12               	goto	u5577
  1622  1A16  0BF2               	decfsz	??_recolheTela+2,f
  1623  1A17  2A12               	goto	u5577
  1624  1A18  2A19               	nop2
  1625  1A19                     l3564:
  1626                           
  1627                           ;main.c: 221:     RD4 = 1;
  1628  1A19  1283               	bcf	3,5	;RP0=0, select bank0
  1629  1A1A  1303               	bcf	3,6	;RP1=0, select bank0
  1630  1A1B  1608               	bsf	8,4	;volatile
  1631  1A1C                     l3566:
  1632                           
  1633                           ;main.c: 222:     RC1 = 1;
  1634  1A1C  1487               	bsf	7,1	;volatile
  1635  1A1D                     l3568:
  1636                           
  1637                           ;main.c: 223:     RD2 = 1;
  1638  1A1D  1508               	bsf	8,2	;volatile
  1639  1A1E                     l3570:
  1640                           
  1641                           ;main.c: 224:     RD6 = 1;
  1642  1A1E  1708               	bsf	8,6	;volatile
  1643  1A1F                     l3572:
  1644                           
  1645                           ;main.c: 226:     RD0 = 1;
  1646  1A1F  1408               	bsf	8,0	;volatile
  1647  1A20                     l3574:
  1648                           
  1649                           ;main.c: 227:     RC3 = 1;
  1650  1A20  1587               	bsf	7,3	;volatile
  1651  1A21                     l3576:
  1652                           
  1653                           ;main.c: 228:     RC2 = 1;
  1654  1A21  1507               	bsf	7,2	;volatile
  1655  1A22                     l3578:
  1656                           
  1657                           ;main.c: 229:     RD7 = 1;
  1658  1A22  1788               	bsf	8,7	;volatile
  1659                           
  1660                           ;main.c: 230:     _delay((unsigned long)((500)*(4000000/4000.0)));
  1661  1A23  3003               	movlw	3
  1662  1A24  00F2               	movwf	??_recolheTela+2
  1663  1A25  308A               	movlw	138
  1664  1A26  00F1               	movwf	??_recolheTela+1
  1665  1A27  3055               	movlw	85
  1666  1A28  00F0               	movwf	??_recolheTela
  1667  1A29                     u5587:
  1668  1A29  0BF0               	decfsz	??_recolheTela,f
  1669  1A2A  2A29               	goto	u5587
  1670  1A2B  0BF1               	decfsz	??_recolheTela+1,f
  1671  1A2C  2A29               	goto	u5587
  1672  1A2D  0BF2               	decfsz	??_recolheTela+2,f
  1673  1A2E  2A29               	goto	u5587
  1674  1A2F  2A30               	nop2
  1675  1A30                     l162:
  1676  1A30  0008               	return
  1677  1A31                     __end_of_recolheTela:
  1678                           
  1679                           	psect	text2
  1680  0055                     __ptext2:	
  1681 ;; *************** function _lerSensores *****************
  1682 ;; Defined at:
  1683 ;;		line 126 in file "main.c"
  1684 ;; Parameters:    Size  Location     Type
  1685 ;;		None
  1686 ;; Auto vars:     Size  Location     Type
  1687 ;;		None
  1688 ;; Return value:  Size  Location     Type
  1689 ;;                  1    wreg      void 
  1690 ;; Registers used:
  1691 ;;		wreg, status,2, status,0, pclath, cstack
  1692 ;; Tracked objects:
  1693 ;;		On entry : 0/0
  1694 ;;		On exit  : 0/0
  1695 ;;		Unchanged: 0/0
  1696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1697 ;;      Params:         0       0       0       0       0
  1698 ;;      Locals:         0       0       0       0       0
  1699 ;;      Temps:          0       4       0       0       0
  1700 ;;      Totals:         0       4       0       0       0
  1701 ;;Total ram usage:        4 bytes
  1702 ;; Hardware stack levels used: 1
  1703 ;; Hardware stack levels required when called: 1
  1704 ;; This function calls:
  1705 ;;		___xxtofl
  1706 ;; This function is called by:
  1707 ;;		_main
  1708 ;; This function uses a non-reentrant model
  1709 ;;
  1710                           
  1711                           
  1712                           ;psect for function _lerSensores
  1713  0055                     _lerSensores:
  1714  0055                     l3466:	
  1715                           ;incstack = 0
  1716                           ; Regs used in _lerSensores: [wreg+status,2+status,0+pclath+cstack]
  1717                           
  1718                           
  1719                           ;main.c: 130:     ADCON0bits.CHS0 = 0;
  1720  0055  1283               	bcf	3,5	;RP0=0, select bank0
  1721  0056  1303               	bcf	3,6	;RP1=0, select bank0
  1722  0057  119F               	bcf	31,3	;volatile
  1723                           
  1724                           ;main.c: 131:     ADCON0bits.CHS1 = 0;
  1725  0058  121F               	bcf	31,4	;volatile
  1726                           
  1727                           ;main.c: 132:     ADCON0bits.CHS2 = 0;
  1728  0059  129F               	bcf	31,5	;volatile
  1729                           
  1730                           ;main.c: 134:     ADCON0bits.GO = 1;
  1731  005A  151F               	bsf	31,2	;volatile
  1732  005B                     l3468:
  1733                           
  1734                           ;main.c: 135:     _delay((unsigned long)((20)*(4000000/4000000.0)));
  1735  005B  3005               	movlw	5
  1736  005C  1283               	bcf	3,5	;RP0=0, select bank0
  1737  005D  1303               	bcf	3,6	;RP1=0, select bank0
  1738  005E  00A0               	movwf	??_lerSensores
  1739  005F                     u5597:
  1740  005F  0BA0               	decfsz	??_lerSensores,f
  1741  0060  285F               	goto	u5597
  1742  0061  2862               	nop2
  1743  0062                     l3470:
  1744                           
  1745                           ;main.c: 136:     valor_entry0 = ADRESH;
  1746  0062  1283               	bcf	3,5	;RP0=0, select bank0
  1747  0063  1303               	bcf	3,6	;RP1=0, select bank0
  1748  0064  081E               	movf	30,w	;volatile
  1749  0065  00A0               	movwf	??_lerSensores
  1750  0066  01A1               	clrf	??_lerSensores+1
  1751  0067  01A2               	clrf	??_lerSensores+2
  1752  0068  01A3               	clrf	??_lerSensores+3
  1753  0069  0823               	movf	??_lerSensores+3,w
  1754  006A  00F3               	movwf	___xxtofl@val+3
  1755  006B  0822               	movf	??_lerSensores+2,w
  1756  006C  00F2               	movwf	___xxtofl@val+2
  1757  006D  0821               	movf	??_lerSensores+1,w
  1758  006E  00F1               	movwf	___xxtofl@val+1
  1759  006F  0820               	movf	??_lerSensores,w
  1760  0070  00F0               	movwf	___xxtofl@val
  1761  0071  3000               	movlw	0
  1762  0072  160A  158A  25CB  120A  118A  	fcall	___xxtofl
  1763  0077  0873               	movf	?___xxtofl+3,w
  1764  0078  1683               	bsf	3,5	;RP0=1, select bank1
  1765  0079  1303               	bcf	3,6	;RP1=0, select bank1
  1766  007A  00E1               	movwf	(_valor_entry0+3)^(0+128)
  1767  007B  0872               	movf	?___xxtofl+2,w
  1768  007C  00E0               	movwf	(_valor_entry0+2)^(0+128)
  1769  007D  0871               	movf	?___xxtofl+1,w
  1770  007E  00DF               	movwf	(_valor_entry0+1)^(0+128)
  1771  007F  0870               	movf	?___xxtofl,w
  1772  0080  00DE               	movwf	_valor_entry0^(0+128)
  1773  0081                     l3472:
  1774                           
  1775                           ;main.c: 140:     ADCON0bits.CHS0 = 1;
  1776  0081  1283               	bcf	3,5	;RP0=0, select bank0
  1777  0082  1303               	bcf	3,6	;RP1=0, select bank0
  1778  0083  159F               	bsf	31,3	;volatile
  1779  0084                     l3474:
  1780                           
  1781                           ;main.c: 141:     ADCON0bits.CHS1 = 0;
  1782  0084  121F               	bcf	31,4	;volatile
  1783  0085                     l3476:
  1784                           
  1785                           ;main.c: 142:     ADCON0bits.CHS2 = 0;
  1786  0085  129F               	bcf	31,5	;volatile
  1787  0086                     l3478:
  1788                           
  1789                           ;main.c: 144:     ADCON0bits.GO = 1;
  1790  0086  151F               	bsf	31,2	;volatile
  1791  0087                     l3480:
  1792                           
  1793                           ;main.c: 145:     _delay((unsigned long)((20)*(4000000/4000000.0)));
  1794  0087  3005               	movlw	5
  1795  0088  1283               	bcf	3,5	;RP0=0, select bank0
  1796  0089  1303               	bcf	3,6	;RP1=0, select bank0
  1797  008A  00A0               	movwf	??_lerSensores
  1798  008B                     u5607:
  1799  008B  0BA0               	decfsz	??_lerSensores,f
  1800  008C  288B               	goto	u5607
  1801  008D  288E               	nop2
  1802                           
  1803                           ;main.c: 146:     valor_entry1 = ADRESH;
  1804  008E  1283               	bcf	3,5	;RP0=0, select bank0
  1805  008F  1303               	bcf	3,6	;RP1=0, select bank0
  1806  0090  081E               	movf	30,w	;volatile
  1807  0091  00A0               	movwf	??_lerSensores
  1808  0092  01A1               	clrf	??_lerSensores+1
  1809  0093  01A2               	clrf	??_lerSensores+2
  1810  0094  01A3               	clrf	??_lerSensores+3
  1811  0095  0823               	movf	??_lerSensores+3,w
  1812  0096  00F3               	movwf	___xxtofl@val+3
  1813  0097  0822               	movf	??_lerSensores+2,w
  1814  0098  00F2               	movwf	___xxtofl@val+2
  1815  0099  0821               	movf	??_lerSensores+1,w
  1816  009A  00F1               	movwf	___xxtofl@val+1
  1817  009B  0820               	movf	??_lerSensores,w
  1818  009C  00F0               	movwf	___xxtofl@val
  1819  009D  3000               	movlw	0
  1820  009E  160A  158A  25CB  120A  118A  	fcall	___xxtofl
  1821  00A3  0873               	movf	?___xxtofl+3,w
  1822  00A4  1683               	bsf	3,5	;RP0=1, select bank1
  1823  00A5  1303               	bcf	3,6	;RP1=0, select bank1
  1824  00A6  00DD               	movwf	(_valor_entry1+3)^(0+128)
  1825  00A7  0872               	movf	?___xxtofl+2,w
  1826  00A8  00DC               	movwf	(_valor_entry1+2)^(0+128)
  1827  00A9  0871               	movf	?___xxtofl+1,w
  1828  00AA  00DB               	movwf	(_valor_entry1+1)^(0+128)
  1829  00AB  0870               	movf	?___xxtofl,w
  1830  00AC  00DA               	movwf	_valor_entry1^(0+128)
  1831  00AD                     l3482:
  1832                           
  1833                           ;main.c: 150:     ADCON0bits.CHS0 = 0;
  1834  00AD  1283               	bcf	3,5	;RP0=0, select bank0
  1835  00AE  1303               	bcf	3,6	;RP1=0, select bank0
  1836  00AF  119F               	bcf	31,3	;volatile
  1837  00B0                     l3484:
  1838                           
  1839                           ;main.c: 151:     ADCON0bits.CHS1 = 1;
  1840  00B0  161F               	bsf	31,4	;volatile
  1841  00B1                     l3486:
  1842                           
  1843                           ;main.c: 152:     ADCON0bits.CHS2 = 0;
  1844  00B1  129F               	bcf	31,5	;volatile
  1845  00B2                     l3488:
  1846                           
  1847                           ;main.c: 154:     ADCON0bits.GO = 1;
  1848  00B2  151F               	bsf	31,2	;volatile
  1849  00B3                     l3490:
  1850                           
  1851                           ;main.c: 155:     _delay((unsigned long)((20)*(4000000/4000000.0)));
  1852  00B3  3005               	movlw	5
  1853  00B4  1283               	bcf	3,5	;RP0=0, select bank0
  1854  00B5  1303               	bcf	3,6	;RP1=0, select bank0
  1855  00B6  00A0               	movwf	??_lerSensores
  1856  00B7                     u5617:
  1857  00B7  0BA0               	decfsz	??_lerSensores,f
  1858  00B8  28B7               	goto	u5617
  1859  00B9  28BA               	nop2
  1860  00BA                     l3492:
  1861                           
  1862                           ;main.c: 156:     valor_entry2 = ADRESH;
  1863  00BA  1283               	bcf	3,5	;RP0=0, select bank0
  1864  00BB  1303               	bcf	3,6	;RP1=0, select bank0
  1865  00BC  081E               	movf	30,w	;volatile
  1866  00BD  00A0               	movwf	??_lerSensores
  1867  00BE  01A1               	clrf	??_lerSensores+1
  1868  00BF  01A2               	clrf	??_lerSensores+2
  1869  00C0  01A3               	clrf	??_lerSensores+3
  1870  00C1  0823               	movf	??_lerSensores+3,w
  1871  00C2  00F3               	movwf	___xxtofl@val+3
  1872  00C3  0822               	movf	??_lerSensores+2,w
  1873  00C4  00F2               	movwf	___xxtofl@val+2
  1874  00C5  0821               	movf	??_lerSensores+1,w
  1875  00C6  00F1               	movwf	___xxtofl@val+1
  1876  00C7  0820               	movf	??_lerSensores,w
  1877  00C8  00F0               	movwf	___xxtofl@val
  1878  00C9  3000               	movlw	0
  1879  00CA  160A  158A  25CB  120A  118A  	fcall	___xxtofl
  1880  00CF  0873               	movf	?___xxtofl+3,w
  1881  00D0  1683               	bsf	3,5	;RP0=1, select bank1
  1882  00D1  1303               	bcf	3,6	;RP1=0, select bank1
  1883  00D2  00D9               	movwf	(_valor_entry2+3)^(0+128)
  1884  00D3  0872               	movf	?___xxtofl+2,w
  1885  00D4  00D8               	movwf	(_valor_entry2+2)^(0+128)
  1886  00D5  0871               	movf	?___xxtofl+1,w
  1887  00D6  00D7               	movwf	(_valor_entry2+1)^(0+128)
  1888  00D7  0870               	movf	?___xxtofl,w
  1889  00D8  00D6               	movwf	_valor_entry2^(0+128)
  1890  00D9                     l3494:
  1891                           
  1892                           ;main.c: 160:     ADCON0bits.CHS0 = 1;
  1893  00D9  1283               	bcf	3,5	;RP0=0, select bank0
  1894  00DA  1303               	bcf	3,6	;RP1=0, select bank0
  1895  00DB  159F               	bsf	31,3	;volatile
  1896  00DC                     l3496:
  1897                           
  1898                           ;main.c: 161:     ADCON0bits.CHS1 = 1;
  1899  00DC  161F               	bsf	31,4	;volatile
  1900  00DD                     l3498:
  1901                           
  1902                           ;main.c: 162:     ADCON0bits.CHS2 = 0;
  1903  00DD  129F               	bcf	31,5	;volatile
  1904  00DE                     l3500:
  1905                           
  1906                           ;main.c: 164:     ADCON0bits.GO = 1;
  1907  00DE  151F               	bsf	31,2	;volatile
  1908                           
  1909                           ;main.c: 165:     _delay((unsigned long)((20)*(4000000/4000000.0)));
  1910  00DF  3005               	movlw	5
  1911  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  1912  00E1  1303               	bcf	3,6	;RP1=0, select bank0
  1913  00E2  00A0               	movwf	??_lerSensores
  1914  00E3                     u5627:
  1915  00E3  0BA0               	decfsz	??_lerSensores,f
  1916  00E4  28E3               	goto	u5627
  1917  00E5  28E6               	nop2
  1918  00E6                     l3502:
  1919                           
  1920                           ;main.c: 166:     valor_entry3 = ADRESH;
  1921  00E6  1283               	bcf	3,5	;RP0=0, select bank0
  1922  00E7  1303               	bcf	3,6	;RP1=0, select bank0
  1923  00E8  081E               	movf	30,w	;volatile
  1924  00E9  00A0               	movwf	??_lerSensores
  1925  00EA  01A1               	clrf	??_lerSensores+1
  1926  00EB  01A2               	clrf	??_lerSensores+2
  1927  00EC  01A3               	clrf	??_lerSensores+3
  1928  00ED  0823               	movf	??_lerSensores+3,w
  1929  00EE  00F3               	movwf	___xxtofl@val+3
  1930  00EF  0822               	movf	??_lerSensores+2,w
  1931  00F0  00F2               	movwf	___xxtofl@val+2
  1932  00F1  0821               	movf	??_lerSensores+1,w
  1933  00F2  00F1               	movwf	___xxtofl@val+1
  1934  00F3  0820               	movf	??_lerSensores,w
  1935  00F4  00F0               	movwf	___xxtofl@val
  1936  00F5  3000               	movlw	0
  1937  00F6  160A  158A  25CB  120A  118A  	fcall	___xxtofl
  1938  00FB  0873               	movf	?___xxtofl+3,w
  1939  00FC  1683               	bsf	3,5	;RP0=1, select bank1
  1940  00FD  1303               	bcf	3,6	;RP1=0, select bank1
  1941  00FE  00D5               	movwf	(_valor_entry3+3)^(0+128)
  1942  00FF  0872               	movf	?___xxtofl+2,w
  1943  0100  00D4               	movwf	(_valor_entry3+2)^(0+128)
  1944  0101  0871               	movf	?___xxtofl+1,w
  1945  0102  00D3               	movwf	(_valor_entry3+1)^(0+128)
  1946  0103  0870               	movf	?___xxtofl,w
  1947  0104  00D2               	movwf	_valor_entry3^(0+128)
  1948  0105                     l3504:
  1949                           
  1950                           ;main.c: 170:     ADCON0bits.CHS0 = 0;
  1951  0105  1283               	bcf	3,5	;RP0=0, select bank0
  1952  0106  1303               	bcf	3,6	;RP1=0, select bank0
  1953  0107  119F               	bcf	31,3	;volatile
  1954  0108                     l3506:
  1955                           
  1956                           ;main.c: 171:     ADCON0bits.CHS1 = 0;
  1957  0108  121F               	bcf	31,4	;volatile
  1958  0109                     l3508:
  1959                           
  1960                           ;main.c: 172:     ADCON0bits.CHS2 = 1;
  1961  0109  169F               	bsf	31,5	;volatile
  1962  010A                     l3510:
  1963                           
  1964                           ;main.c: 174:     ADCON0bits.GO = 1;
  1965  010A  151F               	bsf	31,2	;volatile
  1966  010B                     l3512:
  1967                           
  1968                           ;main.c: 175:     _delay((unsigned long)((20)*(4000000/4000000.0)));
  1969  010B  3005               	movlw	5
  1970  010C  1283               	bcf	3,5	;RP0=0, select bank0
  1971  010D  1303               	bcf	3,6	;RP1=0, select bank0
  1972  010E  00A0               	movwf	??_lerSensores
  1973  010F                     u5637:
  1974  010F  0BA0               	decfsz	??_lerSensores,f
  1975  0110  290F               	goto	u5637
  1976  0111  2912               	nop2
  1977                           
  1978                           ;main.c: 176:     valor_entry4 = ADRESH;
  1979  0112  1283               	bcf	3,5	;RP0=0, select bank0
  1980  0113  1303               	bcf	3,6	;RP1=0, select bank0
  1981  0114  081E               	movf	30,w	;volatile
  1982  0115  00A0               	movwf	??_lerSensores
  1983  0116  01A1               	clrf	??_lerSensores+1
  1984  0117  01A2               	clrf	??_lerSensores+2
  1985  0118  01A3               	clrf	??_lerSensores+3
  1986  0119  0823               	movf	??_lerSensores+3,w
  1987  011A  00F3               	movwf	___xxtofl@val+3
  1988  011B  0822               	movf	??_lerSensores+2,w
  1989  011C  00F2               	movwf	___xxtofl@val+2
  1990  011D  0821               	movf	??_lerSensores+1,w
  1991  011E  00F1               	movwf	___xxtofl@val+1
  1992  011F  0820               	movf	??_lerSensores,w
  1993  0120  00F0               	movwf	___xxtofl@val
  1994  0121  3000               	movlw	0
  1995  0122  160A  158A  25CB  120A  118A  	fcall	___xxtofl
  1996  0127  0873               	movf	?___xxtofl+3,w
  1997  0128  1683               	bsf	3,5	;RP0=1, select bank1
  1998  0129  1303               	bcf	3,6	;RP1=0, select bank1
  1999  012A  00D1               	movwf	(_valor_entry4+3)^(0+128)
  2000  012B  0872               	movf	?___xxtofl+2,w
  2001  012C  00D0               	movwf	(_valor_entry4+2)^(0+128)
  2002  012D  0871               	movf	?___xxtofl+1,w
  2003  012E  00CF               	movwf	(_valor_entry4+1)^(0+128)
  2004  012F  0870               	movf	?___xxtofl,w
  2005  0130  00CE               	movwf	_valor_entry4^(0+128)
  2006  0131                     l3514:
  2007                           
  2008                           ;main.c: 180:     ADCON0bits.CHS0 = 1;
  2009  0131  1283               	bcf	3,5	;RP0=0, select bank0
  2010  0132  1303               	bcf	3,6	;RP1=0, select bank0
  2011  0133  159F               	bsf	31,3	;volatile
  2012  0134                     l3516:
  2013                           
  2014                           ;main.c: 181:     ADCON0bits.CHS1 = 0;
  2015  0134  121F               	bcf	31,4	;volatile
  2016  0135                     l3518:
  2017                           
  2018                           ;main.c: 182:     ADCON0bits.CHS2 = 1;
  2019  0135  169F               	bsf	31,5	;volatile
  2020  0136                     l3520:
  2021                           
  2022                           ;main.c: 184:     ADCON0bits.GO = 1;
  2023  0136  151F               	bsf	31,2	;volatile
  2024  0137                     l3522:
  2025                           
  2026                           ;main.c: 185:     _delay((unsigned long)((20)*(4000000/4000000.0)));
  2027  0137  3005               	movlw	5
  2028  0138  1283               	bcf	3,5	;RP0=0, select bank0
  2029  0139  1303               	bcf	3,6	;RP1=0, select bank0
  2030  013A  00A0               	movwf	??_lerSensores
  2031  013B                     u5647:
  2032  013B  0BA0               	decfsz	??_lerSensores,f
  2033  013C  293B               	goto	u5647
  2034  013D  293E               	nop2
  2035  013E                     l3524:
  2036                           
  2037                           ;main.c: 186:     valor_entry5 = ADRESH;
  2038  013E  1283               	bcf	3,5	;RP0=0, select bank0
  2039  013F  1303               	bcf	3,6	;RP1=0, select bank0
  2040  0140  081E               	movf	30,w	;volatile
  2041  0141  00A0               	movwf	??_lerSensores
  2042  0142  01A1               	clrf	??_lerSensores+1
  2043  0143  01A2               	clrf	??_lerSensores+2
  2044  0144  01A3               	clrf	??_lerSensores+3
  2045  0145  0823               	movf	??_lerSensores+3,w
  2046  0146  00F3               	movwf	___xxtofl@val+3
  2047  0147  0822               	movf	??_lerSensores+2,w
  2048  0148  00F2               	movwf	___xxtofl@val+2
  2049  0149  0821               	movf	??_lerSensores+1,w
  2050  014A  00F1               	movwf	___xxtofl@val+1
  2051  014B  0820               	movf	??_lerSensores,w
  2052  014C  00F0               	movwf	___xxtofl@val
  2053  014D  3000               	movlw	0
  2054  014E  160A  158A  25CB  120A  118A  	fcall	___xxtofl
  2055  0153  0873               	movf	?___xxtofl+3,w
  2056  0154  1683               	bsf	3,5	;RP0=1, select bank1
  2057  0155  1303               	bcf	3,6	;RP1=0, select bank1
  2058  0156  00CD               	movwf	(_valor_entry5+3)^(0+128)
  2059  0157  0872               	movf	?___xxtofl+2,w
  2060  0158  00CC               	movwf	(_valor_entry5+2)^(0+128)
  2061  0159  0871               	movf	?___xxtofl+1,w
  2062  015A  00CB               	movwf	(_valor_entry5+1)^(0+128)
  2063  015B  0870               	movf	?___xxtofl,w
  2064  015C  00CA               	movwf	_valor_entry5^(0+128)
  2065  015D                     l3526:
  2066                           
  2067                           ;main.c: 190:     ADCON0bits.CHS0 = 0;
  2068  015D  1283               	bcf	3,5	;RP0=0, select bank0
  2069  015E  1303               	bcf	3,6	;RP1=0, select bank0
  2070  015F  119F               	bcf	31,3	;volatile
  2071  0160                     l3528:
  2072                           
  2073                           ;main.c: 191:     ADCON0bits.CHS1 = 1;
  2074  0160  161F               	bsf	31,4	;volatile
  2075  0161                     l3530:
  2076                           
  2077                           ;main.c: 192:     ADCON0bits.CHS2 = 1;
  2078  0161  169F               	bsf	31,5	;volatile
  2079  0162                     l3532:
  2080                           
  2081                           ;main.c: 194:     ADCON0bits.GO = 1;
  2082  0162  151F               	bsf	31,2	;volatile
  2083                           
  2084                           ;main.c: 195:     _delay((unsigned long)((20)*(4000000/4000000.0)));
  2085  0163  3005               	movlw	5
  2086  0164  1283               	bcf	3,5	;RP0=0, select bank0
  2087  0165  1303               	bcf	3,6	;RP1=0, select bank0
  2088  0166  00A0               	movwf	??_lerSensores
  2089  0167                     u5657:
  2090  0167  0BA0               	decfsz	??_lerSensores,f
  2091  0168  2967               	goto	u5657
  2092  0169  296A               	nop2
  2093  016A                     l3534:
  2094                           
  2095                           ;main.c: 196:     valor_entry6 = ADRESH;
  2096  016A  1283               	bcf	3,5	;RP0=0, select bank0
  2097  016B  1303               	bcf	3,6	;RP1=0, select bank0
  2098  016C  081E               	movf	30,w	;volatile
  2099  016D  00A0               	movwf	??_lerSensores
  2100  016E  01A1               	clrf	??_lerSensores+1
  2101  016F  01A2               	clrf	??_lerSensores+2
  2102  0170  01A3               	clrf	??_lerSensores+3
  2103  0171  0823               	movf	??_lerSensores+3,w
  2104  0172  00F3               	movwf	___xxtofl@val+3
  2105  0173  0822               	movf	??_lerSensores+2,w
  2106  0174  00F2               	movwf	___xxtofl@val+2
  2107  0175  0821               	movf	??_lerSensores+1,w
  2108  0176  00F1               	movwf	___xxtofl@val+1
  2109  0177  0820               	movf	??_lerSensores,w
  2110  0178  00F0               	movwf	___xxtofl@val
  2111  0179  3000               	movlw	0
  2112  017A  160A  158A  25CB  120A  118A  	fcall	___xxtofl
  2113  017F  0873               	movf	?___xxtofl+3,w
  2114  0180  1683               	bsf	3,5	;RP0=1, select bank1
  2115  0181  1303               	bcf	3,6	;RP1=0, select bank1
  2116  0182  00C9               	movwf	(_valor_entry6+3)^(0+128)
  2117  0183  0872               	movf	?___xxtofl+2,w
  2118  0184  00C8               	movwf	(_valor_entry6+2)^(0+128)
  2119  0185  0871               	movf	?___xxtofl+1,w
  2120  0186  00C7               	movwf	(_valor_entry6+1)^(0+128)
  2121  0187  0870               	movf	?___xxtofl,w
  2122  0188  00C6               	movwf	_valor_entry6^(0+128)
  2123  0189                     l159:
  2124  0189  0008               	return
  2125  018A                     __end_of_lerSensores:
  2126                           
  2127                           	psect	text3
  2128  19CB                     __ptext3:	
  2129 ;; *************** function _expandeTela *****************
  2130 ;; Defined at:
  2131 ;;		line 234 in file "main.c"
  2132 ;; Parameters:    Size  Location     Type
  2133 ;;		None
  2134 ;; Auto vars:     Size  Location     Type
  2135 ;;		None
  2136 ;; Return value:  Size  Location     Type
  2137 ;;                  1    wreg      void 
  2138 ;; Registers used:
  2139 ;;		wreg
  2140 ;; Tracked objects:
  2141 ;;		On entry : 0/0
  2142 ;;		On exit  : 0/0
  2143 ;;		Unchanged: 0/0
  2144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2145 ;;      Params:         0       0       0       0       0
  2146 ;;      Locals:         0       0       0       0       0
  2147 ;;      Temps:          3       0       0       0       0
  2148 ;;      Totals:         3       0       0       0       0
  2149 ;;Total ram usage:        3 bytes
  2150 ;; Hardware stack levels used: 1
  2151 ;; This function calls:
  2152 ;;		Nothing
  2153 ;; This function is called by:
  2154 ;;		_main
  2155 ;; This function uses a non-reentrant model
  2156 ;;
  2157                           
  2158                           
  2159                           ;psect for function _expandeTela
  2160  19CB                     _expandeTela:
  2161  19CB                     l3538:	
  2162                           ;incstack = 0
  2163                           ; Regs used in _expandeTela: [wreg]
  2164                           
  2165                           
  2166                           ;main.c: 237:     RD5 = 1;
  2167  19CB  1283               	bcf	3,5	;RP0=0, select bank0
  2168  19CC  1303               	bcf	3,6	;RP1=0, select bank0
  2169  19CD  1688               	bsf	8,5	;volatile
  2170                           
  2171                           ;main.c: 238:     RD3 = 1;
  2172  19CE  1588               	bsf	8,3	;volatile
  2173                           
  2174                           ;main.c: 239:     RD1 = 1;
  2175  19CF  1488               	bsf	8,1	;volatile
  2176                           
  2177                           ;main.c: 240:     RC0 = 1;
  2178  19D0  1407               	bsf	7,0	;volatile
  2179                           
  2180                           ;main.c: 243:     RD4 = 0;
  2181  19D1  1208               	bcf	8,4	;volatile
  2182                           
  2183                           ;main.c: 244:     RC1 = 1;
  2184  19D2  1487               	bsf	7,1	;volatile
  2185                           
  2186                           ;main.c: 245:     RD2 = 0;
  2187  19D3  1108               	bcf	8,2	;volatile
  2188                           
  2189                           ;main.c: 246:     RD6 = 1;
  2190  19D4  1708               	bsf	8,6	;volatile
  2191                           
  2192                           ;main.c: 248:     RD0 = 0;
  2193  19D5  1008               	bcf	8,0	;volatile
  2194                           
  2195                           ;main.c: 249:     RC3 = 1;
  2196  19D6  1587               	bsf	7,3	;volatile
  2197                           
  2198                           ;main.c: 250:     RC2 = 0;
  2199  19D7  1107               	bcf	7,2	;volatile
  2200                           
  2201                           ;main.c: 251:     RD7 = 1;
  2202  19D8  1788               	bsf	8,7	;volatile
  2203  19D9                     l3540:
  2204                           
  2205                           ;main.c: 252:     _delay((unsigned long)((500)*(4000000/4000.0)));
  2206  19D9  3003               	movlw	3
  2207  19DA  00F2               	movwf	??_expandeTela+2
  2208  19DB  308A               	movlw	138
  2209  19DC  00F1               	movwf	??_expandeTela+1
  2210  19DD  3055               	movlw	85
  2211  19DE  00F0               	movwf	??_expandeTela
  2212  19DF                     u5667:
  2213  19DF  0BF0               	decfsz	??_expandeTela,f
  2214  19E0  29DF               	goto	u5667
  2215  19E1  0BF1               	decfsz	??_expandeTela+1,f
  2216  19E2  29DF               	goto	u5667
  2217  19E3  0BF2               	decfsz	??_expandeTela+2,f
  2218  19E4  29DF               	goto	u5667
  2219  19E5  29E6               	nop2
  2220  19E6                     l3542:
  2221                           
  2222                           ;main.c: 255:     RD4 = 1;
  2223  19E6  1283               	bcf	3,5	;RP0=0, select bank0
  2224  19E7  1303               	bcf	3,6	;RP1=0, select bank0
  2225  19E8  1608               	bsf	8,4	;volatile
  2226  19E9                     l3544:
  2227                           
  2228                           ;main.c: 256:     RC1 = 1;
  2229  19E9  1487               	bsf	7,1	;volatile
  2230  19EA                     l3546:
  2231                           
  2232                           ;main.c: 257:     RD2 = 1;
  2233  19EA  1508               	bsf	8,2	;volatile
  2234  19EB                     l3548:
  2235                           
  2236                           ;main.c: 258:     RD6 = 1;
  2237  19EB  1708               	bsf	8,6	;volatile
  2238  19EC                     l3550:
  2239                           
  2240                           ;main.c: 260:     RD0 = 1;
  2241  19EC  1408               	bsf	8,0	;volatile
  2242  19ED                     l3552:
  2243                           
  2244                           ;main.c: 261:     RC3 = 1;
  2245  19ED  1587               	bsf	7,3	;volatile
  2246  19EE                     l3554:
  2247                           
  2248                           ;main.c: 262:     RC2 = 1;
  2249  19EE  1507               	bsf	7,2	;volatile
  2250  19EF                     l3556:
  2251                           
  2252                           ;main.c: 263:     RD7 = 1;
  2253  19EF  1788               	bsf	8,7	;volatile
  2254                           
  2255                           ;main.c: 264:     _delay((unsigned long)((500)*(4000000/4000.0)));
  2256  19F0  3003               	movlw	3
  2257  19F1  00F2               	movwf	??_expandeTela+2
  2258  19F2  308A               	movlw	138
  2259  19F3  00F1               	movwf	??_expandeTela+1
  2260  19F4  3055               	movlw	85
  2261  19F5  00F0               	movwf	??_expandeTela
  2262  19F6                     u5677:
  2263  19F6  0BF0               	decfsz	??_expandeTela,f
  2264  19F7  29F6               	goto	u5677
  2265  19F8  0BF1               	decfsz	??_expandeTela+1,f
  2266  19F9  29F6               	goto	u5677
  2267  19FA  0BF2               	decfsz	??_expandeTela+2,f
  2268  19FB  29F6               	goto	u5677
  2269  19FC  29FD               	nop2
  2270  19FD                     l165:
  2271  19FD  0008               	return
  2272  19FE                     __end_of_expandeTela:
  2273                           
  2274                           	psect	text4
  2275  1163                     __ptext4:	
  2276 ;; *************** function _atualizaLCD *****************
  2277 ;; Defined at:
  2278 ;;		line 268 in file "main.c"
  2279 ;; Parameters:    Size  Location     Type
  2280 ;;		None
  2281 ;; Auto vars:     Size  Location     Type
  2282 ;;		None
  2283 ;; Return value:  Size  Location     Type
  2284 ;;                  1    wreg      void 
  2285 ;; Registers used:
  2286 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2287 ;; Tracked objects:
  2288 ;;		On entry : 0/0
  2289 ;;		On exit  : 0/0
  2290 ;;		Unchanged: 0/0
  2291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2292 ;;      Params:         0       0       0       0       0
  2293 ;;      Locals:         0       0       0       0       0
  2294 ;;      Temps:          0       2       0       0       0
  2295 ;;      Totals:         0       2       0       0       0
  2296 ;;Total ram usage:        2 bytes
  2297 ;; Hardware stack levels used: 1
  2298 ;; Hardware stack levels required when called: 4
  2299 ;; This function calls:
  2300 ;;		_Lcd_Clear
  2301 ;;		_Lcd_Set_Cursor
  2302 ;;		_Lcd_Write_String
  2303 ;;		_sprintf
  2304 ;; This function is called by:
  2305 ;;		_main
  2306 ;; This function uses a non-reentrant model
  2307 ;;
  2308                           
  2309                           
  2310                           ;psect for function _atualizaLCD
  2311  1163                     _atualizaLCD:
  2312  1163                     l3582:	
  2313                           ;incstack = 0
  2314                           ; Regs used in _atualizaLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2315                           
  2316                           
  2317                           ;main.c: 270:     Lcd_Clear();
  2318  1163  160A  158A  2112  160A  118A  	fcall	_Lcd_Clear
  2319                           
  2320                           ;main.c: 271:     Lcd_Set_Cursor(1,1);
  2321  1168  01F4               	clrf	Lcd_Set_Cursor@b
  2322  1169  0AF4               	incf	Lcd_Set_Cursor@b,f
  2323  116A  3001               	movlw	1
  2324  116B  120A  118A  2003  160A  118A  	fcall	_Lcd_Set_Cursor
  2325  1170                     l3584:
  2326                           
  2327                           ;main.c: 272:     Lcd_Write_String("C:");
  2328  1170  30A9               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2329  1171  00F5               	movwf	Lcd_Write_String@a
  2330  1172  3080               	movlw	128
  2331  1173  00F6               	movwf	Lcd_Write_String@a+1
  2332  1174  160A  158A  22A2  160A  118A  	fcall	_Lcd_Write_String
  2333  1179                     l3586:
  2334                           
  2335                           ;main.c: 273:     sprintf(buffer0, "%.2f", valor_entry0);
  2336  1179  3091               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2337  117A  1283               	bcf	3,5	;RP0=0, select bank0
  2338  117B  1303               	bcf	3,6	;RP1=0, select bank0
  2339  117C  00EE               	movwf	??_atualizaLCD
  2340  117D  086E               	movf	??_atualizaLCD,w
  2341  117E  1683               	bsf	3,5	;RP0=1, select bank1
  2342  117F  1303               	bcf	3,6	;RP1=0, select bank1
  2343  1180  00A0               	movwf	sprintf@f^(0+128)
  2344  1181  0861               	movf	(_valor_entry0+3)^(0+128),w
  2345  1182  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  2346  1183  0860               	movf	(_valor_entry0+2)^(0+128),w
  2347  1184  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  2348  1185  085F               	movf	(_valor_entry0+1)^(0+128),w
  2349  1186  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  2350  1187  085E               	movf	_valor_entry0^(0+128),w
  2351  1188  00A1               	movwf	(?_sprintf^(0+128)+1)
  2352  1189  30CC               	movlw	(low (_buffer0| (0+256)))& (0+255)
  2353  118A  120A  118A  218A  160A  118A  	fcall	_sprintf
  2354                           
  2355                           ;main.c: 274:     Lcd_Set_Cursor(1,3);
  2356  118F  3003               	movlw	3
  2357  1190  1283               	bcf	3,5	;RP0=0, select bank0
  2358  1191  1303               	bcf	3,6	;RP1=0, select bank0
  2359  1192  00EE               	movwf	??_atualizaLCD
  2360  1193  086E               	movf	??_atualizaLCD,w
  2361  1194  00F4               	movwf	Lcd_Set_Cursor@b
  2362  1195  3001               	movlw	1
  2363  1196  120A  118A  2003  160A  118A  	fcall	_Lcd_Set_Cursor
  2364  119B                     l3588:
  2365                           
  2366                           ;main.c: 275:     Lcd_Write_String(buffer0);
  2367  119B  30CC               	movlw	(low (_buffer0| (0+256)))& (0+255)
  2368  119C  00F5               	movwf	Lcd_Write_String@a
  2369  119D  3001               	movlw	1
  2370  119E  00F6               	movwf	Lcd_Write_String@a+1
  2371  119F  160A  158A  22A2  160A  118A  	fcall	_Lcd_Write_String
  2372  11A4                     l3590:
  2373                           
  2374                           ;main.c: 276:     _delay((unsigned long)((20)*(4000000/4000.0)));
  2375  11A4  301A               	movlw	26
  2376  11A5  1283               	bcf	3,5	;RP0=0, select bank0
  2377  11A6  1303               	bcf	3,6	;RP1=0, select bank0
  2378  11A7  00EF               	movwf	??_atualizaLCD+1
  2379  11A8  30F7               	movlw	247
  2380  11A9  00EE               	movwf	??_atualizaLCD
  2381  11AA                     u5687:
  2382  11AA  0BEE               	decfsz	??_atualizaLCD,f
  2383  11AB  29AA               	goto	u5687
  2384  11AC  0BEF               	decfsz	??_atualizaLCD+1,f
  2385  11AD  29AA               	goto	u5687
  2386  11AE  29AF               	nop2
  2387  11AF                     l3592:
  2388                           
  2389                           ;main.c: 278:     Lcd_Set_Cursor(1,10);
  2390  11AF  300A               	movlw	10
  2391  11B0  1283               	bcf	3,5	;RP0=0, select bank0
  2392  11B1  1303               	bcf	3,6	;RP1=0, select bank0
  2393  11B2  00EE               	movwf	??_atualizaLCD
  2394  11B3  086E               	movf	??_atualizaLCD,w
  2395  11B4  00F4               	movwf	Lcd_Set_Cursor@b
  2396  11B5  3001               	movlw	1
  2397  11B6  120A  118A  2003  160A  118A  	fcall	_Lcd_Set_Cursor
  2398  11BB                     l3594:
  2399                           
  2400                           ;main.c: 279:     Lcd_Write_String("A:");
  2401  11BB  30A6               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2402  11BC  00F5               	movwf	Lcd_Write_String@a
  2403  11BD  3080               	movlw	128
  2404  11BE  00F6               	movwf	Lcd_Write_String@a+1
  2405  11BF  160A  158A  22A2  160A  118A  	fcall	_Lcd_Write_String
  2406  11C4                     l3596:
  2407                           
  2408                           ;main.c: 280:     sprintf(buffer1, "%.2f", valor_entry1);
  2409  11C4  3091               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2410  11C5  1283               	bcf	3,5	;RP0=0, select bank0
  2411  11C6  1303               	bcf	3,6	;RP1=0, select bank0
  2412  11C7  00EE               	movwf	??_atualizaLCD
  2413  11C8  086E               	movf	??_atualizaLCD,w
  2414  11C9  1683               	bsf	3,5	;RP0=1, select bank1
  2415  11CA  1303               	bcf	3,6	;RP1=0, select bank1
  2416  11CB  00A0               	movwf	sprintf@f^(0+128)
  2417  11CC  085D               	movf	(_valor_entry1+3)^(0+128),w
  2418  11CD  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  2419  11CE  085C               	movf	(_valor_entry1+2)^(0+128),w
  2420  11CF  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  2421  11D0  085B               	movf	(_valor_entry1+1)^(0+128),w
  2422  11D1  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  2423  11D2  085A               	movf	_valor_entry1^(0+128),w
  2424  11D3  00A1               	movwf	(?_sprintf^(0+128)+1)
  2425  11D4  30B8               	movlw	(low (_buffer1| (0+256)))& (0+255)
  2426  11D5  120A  118A  218A  160A  118A  	fcall	_sprintf
  2427  11DA                     l3598:
  2428                           
  2429                           ;main.c: 281:     Lcd_Set_Cursor(1,12);
  2430  11DA  300C               	movlw	12
  2431  11DB  1283               	bcf	3,5	;RP0=0, select bank0
  2432  11DC  1303               	bcf	3,6	;RP1=0, select bank0
  2433  11DD  00EE               	movwf	??_atualizaLCD
  2434  11DE  086E               	movf	??_atualizaLCD,w
  2435  11DF  00F4               	movwf	Lcd_Set_Cursor@b
  2436  11E0  3001               	movlw	1
  2437  11E1  120A  118A  2003  160A  118A  	fcall	_Lcd_Set_Cursor
  2438  11E6                     l3600:
  2439                           
  2440                           ;main.c: 282:     Lcd_Write_String(buffer1);
  2441  11E6  30B8               	movlw	(low (_buffer1| (0+256)))& (0+255)
  2442  11E7  00F5               	movwf	Lcd_Write_String@a
  2443  11E8  3001               	movlw	1
  2444  11E9  00F6               	movwf	Lcd_Write_String@a+1
  2445  11EA  160A  158A  22A2  160A  118A  	fcall	_Lcd_Write_String
  2446  11EF                     l3602:
  2447                           
  2448                           ;main.c: 283:     _delay((unsigned long)((20)*(4000000/4000.0)));
  2449  11EF  301A               	movlw	26
  2450  11F0  1283               	bcf	3,5	;RP0=0, select bank0
  2451  11F1  1303               	bcf	3,6	;RP1=0, select bank0
  2452  11F2  00EF               	movwf	??_atualizaLCD+1
  2453  11F3  30F7               	movlw	247
  2454  11F4  00EE               	movwf	??_atualizaLCD
  2455  11F5                     u5697:
  2456  11F5  0BEE               	decfsz	??_atualizaLCD,f
  2457  11F6  29F5               	goto	u5697
  2458  11F7  0BEF               	decfsz	??_atualizaLCD+1,f
  2459  11F8  29F5               	goto	u5697
  2460  11F9  29FA               	nop2
  2461                           
  2462                           ;main.c: 285:     Lcd_Set_Cursor(1,19);
  2463  11FA  3013               	movlw	19
  2464  11FB  1283               	bcf	3,5	;RP0=0, select bank0
  2465  11FC  1303               	bcf	3,6	;RP1=0, select bank0
  2466  11FD  00EE               	movwf	??_atualizaLCD
  2467  11FE  086E               	movf	??_atualizaLCD,w
  2468  11FF  00F4               	movwf	Lcd_Set_Cursor@b
  2469  1200  3001               	movlw	1
  2470  1201  120A  118A  2003  160A  118A  	fcall	_Lcd_Set_Cursor
  2471  1206                     l3604:
  2472                           
  2473                           ;main.c: 286:     Lcd_Write_String("L:");
  2474  1206  30AC               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2475  1207  00F5               	movwf	Lcd_Write_String@a
  2476  1208  3080               	movlw	128
  2477  1209  00F6               	movwf	Lcd_Write_String@a+1
  2478  120A  160A  158A  22A2  160A  118A  	fcall	_Lcd_Write_String
  2479  120F                     l3606:
  2480                           
  2481                           ;main.c: 287:     sprintf(buffer2, "%.2f", valor_entry2);
  2482  120F  3091               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2483  1210  1283               	bcf	3,5	;RP0=0, select bank0
  2484  1211  1303               	bcf	3,6	;RP1=0, select bank0
  2485  1212  00EE               	movwf	??_atualizaLCD
  2486  1213  086E               	movf	??_atualizaLCD,w
  2487  1214  1683               	bsf	3,5	;RP0=1, select bank1
  2488  1215  1303               	bcf	3,6	;RP1=0, select bank1
  2489  1216  00A0               	movwf	sprintf@f^(0+128)
  2490  1217  0859               	movf	(_valor_entry2+3)^(0+128),w
  2491  1218  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  2492  1219  0858               	movf	(_valor_entry2+2)^(0+128),w
  2493  121A  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  2494  121B  0857               	movf	(_valor_entry2+1)^(0+128),w
  2495  121C  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  2496  121D  0856               	movf	_valor_entry2^(0+128),w
  2497  121E  00A1               	movwf	(?_sprintf^(0+128)+1)
  2498  121F  30A4               	movlw	(low (_buffer2| (0+256)))& (0+255)
  2499  1220  120A  118A  218A  160A  118A  	fcall	_sprintf
  2500                           
  2501                           ;main.c: 288:     Lcd_Set_Cursor(1,21);
  2502  1225  3015               	movlw	21
  2503  1226  1283               	bcf	3,5	;RP0=0, select bank0
  2504  1227  1303               	bcf	3,6	;RP1=0, select bank0
  2505  1228  00EE               	movwf	??_atualizaLCD
  2506  1229  086E               	movf	??_atualizaLCD,w
  2507  122A  00F4               	movwf	Lcd_Set_Cursor@b
  2508  122B  3001               	movlw	1
  2509  122C  120A  118A  2003  160A  118A  	fcall	_Lcd_Set_Cursor
  2510  1231                     l3608:
  2511                           
  2512                           ;main.c: 289:     Lcd_Write_String(buffer2);
  2513  1231  30A4               	movlw	(low (_buffer2| (0+256)))& (0+255)
  2514  1232  00F5               	movwf	Lcd_Write_String@a
  2515  1233  3001               	movlw	1
  2516  1234  00F6               	movwf	Lcd_Write_String@a+1
  2517  1235  160A  158A  22A2  160A  118A  	fcall	_Lcd_Write_String
  2518  123A                     l3610:
  2519                           
  2520                           ;main.c: 290:     _delay((unsigned long)((20)*(4000000/4000.0)));
  2521  123A  301A               	movlw	26
  2522  123B  1283               	bcf	3,5	;RP0=0, select bank0
  2523  123C  1303               	bcf	3,6	;RP1=0, select bank0
  2524  123D  00EF               	movwf	??_atualizaLCD+1
  2525  123E  30F7               	movlw	247
  2526  123F  00EE               	movwf	??_atualizaLCD
  2527  1240                     u5707:
  2528  1240  0BEE               	decfsz	??_atualizaLCD,f
  2529  1241  2A40               	goto	u5707
  2530  1242  0BEF               	decfsz	??_atualizaLCD+1,f
  2531  1243  2A40               	goto	u5707
  2532  1244  2A45               	nop2
  2533  1245                     l3612:
  2534                           
  2535                           ;main.c: 292:     Lcd_Set_Cursor(1,28);
  2536  1245  301C               	movlw	28
  2537  1246  1283               	bcf	3,5	;RP0=0, select bank0
  2538  1247  1303               	bcf	3,6	;RP1=0, select bank0
  2539  1248  00EE               	movwf	??_atualizaLCD
  2540  1249  086E               	movf	??_atualizaLCD,w
  2541  124A  00F4               	movwf	Lcd_Set_Cursor@b
  2542  124B  3001               	movlw	1
  2543  124C  120A  118A  2003  160A  118A  	fcall	_Lcd_Set_Cursor
  2544  1251                     l3614:
  2545                           
  2546                           ;main.c: 293:     Lcd_Write_String("S1:");
  2547  1251  3096               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2548  1252  00F5               	movwf	Lcd_Write_String@a
  2549  1253  3080               	movlw	128
  2550  1254  00F6               	movwf	Lcd_Write_String@a+1
  2551  1255  160A  158A  22A2  160A  118A  	fcall	_Lcd_Write_String
  2552  125A                     l3616:
  2553                           
  2554                           ;main.c: 294:     sprintf(buffer3, "%.2f", valor_entry3);
  2555  125A  3091               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2556  125B  1283               	bcf	3,5	;RP0=0, select bank0
  2557  125C  1303               	bcf	3,6	;RP1=0, select bank0
  2558  125D  00EE               	movwf	??_atualizaLCD
  2559  125E  086E               	movf	??_atualizaLCD,w
  2560  125F  1683               	bsf	3,5	;RP0=1, select bank1
  2561  1260  1303               	bcf	3,6	;RP1=0, select bank1
  2562  1261  00A0               	movwf	sprintf@f^(0+128)
  2563  1262  0855               	movf	(_valor_entry3+3)^(0+128),w
  2564  1263  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  2565  1264  0854               	movf	(_valor_entry3+2)^(0+128),w
  2566  1265  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  2567  1266  0853               	movf	(_valor_entry3+1)^(0+128),w
  2568  1267  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  2569  1268  0852               	movf	_valor_entry3^(0+128),w
  2570  1269  00A1               	movwf	(?_sprintf^(0+128)+1)
  2571  126A  3090               	movlw	(low (_buffer3| (0+256)))& (0+255)
  2572  126B  120A  118A  218A  160A  118A  	fcall	_sprintf
  2573  1270                     l3618:
  2574                           
  2575                           ;main.c: 295:     Lcd_Set_Cursor(1,31);
  2576  1270  301F               	movlw	31
  2577  1271  1283               	bcf	3,5	;RP0=0, select bank0
  2578  1272  1303               	bcf	3,6	;RP1=0, select bank0
  2579  1273  00EE               	movwf	??_atualizaLCD
  2580  1274  086E               	movf	??_atualizaLCD,w
  2581  1275  00F4               	movwf	Lcd_Set_Cursor@b
  2582  1276  3001               	movlw	1
  2583  1277  120A  118A  2003  160A  118A  	fcall	_Lcd_Set_Cursor
  2584  127C                     l3620:
  2585                           
  2586                           ;main.c: 296:     Lcd_Write_String(buffer3);
  2587  127C  3090               	movlw	(low (_buffer3| (0+256)))& (0+255)
  2588  127D  00F5               	movwf	Lcd_Write_String@a
  2589  127E  3001               	movlw	1
  2590  127F  00F6               	movwf	Lcd_Write_String@a+1
  2591  1280  160A  158A  22A2  160A  118A  	fcall	_Lcd_Write_String
  2592  1285                     l3622:
  2593                           
  2594                           ;main.c: 297:     _delay((unsigned long)((20)*(4000000/4000.0)));
  2595  1285  301A               	movlw	26
  2596  1286  1283               	bcf	3,5	;RP0=0, select bank0
  2597  1287  1303               	bcf	3,6	;RP1=0, select bank0
  2598  1288  00EF               	movwf	??_atualizaLCD+1
  2599  1289  30F7               	movlw	247
  2600  128A  00EE               	movwf	??_atualizaLCD
  2601  128B                     u5717:
  2602  128B  0BEE               	decfsz	??_atualizaLCD,f
  2603  128C  2A8B               	goto	u5717
  2604  128D  0BEF               	decfsz	??_atualizaLCD+1,f
  2605  128E  2A8B               	goto	u5717
  2606  128F  2A90               	nop2
  2607                           
  2608                           ;main.c: 299:     Lcd_Set_Cursor(2,1);
  2609  1290  01F4               	clrf	Lcd_Set_Cursor@b
  2610  1291  0AF4               	incf	Lcd_Set_Cursor@b,f
  2611  1292  3002               	movlw	2
  2612  1293  120A  118A  2003  160A  118A  	fcall	_Lcd_Set_Cursor
  2613  1298                     l3624:
  2614                           
  2615                           ;main.c: 300:     Lcd_Write_String("S2:");
  2616  1298  309A               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2617  1299  00F5               	movwf	Lcd_Write_String@a
  2618  129A  3080               	movlw	128
  2619  129B  00F6               	movwf	Lcd_Write_String@a+1
  2620  129C  160A  158A  22A2  160A  118A  	fcall	_Lcd_Write_String
  2621  12A1                     l3626:
  2622                           
  2623                           ;main.c: 301:     sprintf(buffer4, "%.2f", valor_entry4);
  2624  12A1  3091               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2625  12A2  1283               	bcf	3,5	;RP0=0, select bank0
  2626  12A3  1303               	bcf	3,6	;RP1=0, select bank0
  2627  12A4  00EE               	movwf	??_atualizaLCD
  2628  12A5  086E               	movf	??_atualizaLCD,w
  2629  12A6  1683               	bsf	3,5	;RP0=1, select bank1
  2630  12A7  1303               	bcf	3,6	;RP1=0, select bank1
  2631  12A8  00A0               	movwf	sprintf@f^(0+128)
  2632  12A9  0851               	movf	(_valor_entry4+3)^(0+128),w
  2633  12AA  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  2634  12AB  0850               	movf	(_valor_entry4+2)^(0+128),w
  2635  12AC  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  2636  12AD  084F               	movf	(_valor_entry4+1)^(0+128),w
  2637  12AE  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  2638  12AF  084E               	movf	_valor_entry4^(0+128),w
  2639  12B0  00A1               	movwf	(?_sprintf^(0+128)+1)
  2640  12B1  3038               	movlw	(low (_buffer4| (0+256)))& (0+255)
  2641  12B2  120A  118A  218A  160A  118A  	fcall	_sprintf
  2642                           
  2643                           ;main.c: 302:     Lcd_Set_Cursor(2,4);
  2644  12B7  3004               	movlw	4
  2645  12B8  1283               	bcf	3,5	;RP0=0, select bank0
  2646  12B9  1303               	bcf	3,6	;RP1=0, select bank0
  2647  12BA  00EE               	movwf	??_atualizaLCD
  2648  12BB  086E               	movf	??_atualizaLCD,w
  2649  12BC  00F4               	movwf	Lcd_Set_Cursor@b
  2650  12BD  3002               	movlw	2
  2651  12BE  120A  118A  2003  160A  118A  	fcall	_Lcd_Set_Cursor
  2652  12C3                     l3628:
  2653                           
  2654                           ;main.c: 303:     Lcd_Write_String(buffer4);
  2655  12C3  3038               	movlw	(low (_buffer4| (0+256)))& (0+255)
  2656  12C4  00F5               	movwf	Lcd_Write_String@a
  2657  12C5  3001               	movlw	1
  2658  12C6  00F6               	movwf	Lcd_Write_String@a+1
  2659  12C7  160A  158A  22A2  160A  118A  	fcall	_Lcd_Write_String
  2660  12CC                     l3630:
  2661                           
  2662                           ;main.c: 304:     _delay((unsigned long)((20)*(4000000/4000.0)));
  2663  12CC  301A               	movlw	26
  2664  12CD  1283               	bcf	3,5	;RP0=0, select bank0
  2665  12CE  1303               	bcf	3,6	;RP1=0, select bank0
  2666  12CF  00EF               	movwf	??_atualizaLCD+1
  2667  12D0  30F7               	movlw	247
  2668  12D1  00EE               	movwf	??_atualizaLCD
  2669  12D2                     u5727:
  2670  12D2  0BEE               	decfsz	??_atualizaLCD,f
  2671  12D3  2AD2               	goto	u5727
  2672  12D4  0BEF               	decfsz	??_atualizaLCD+1,f
  2673  12D5  2AD2               	goto	u5727
  2674  12D6  2AD7               	nop2
  2675  12D7                     l3632:
  2676                           
  2677                           ;main.c: 306:     Lcd_Set_Cursor(2,11);
  2678  12D7  300B               	movlw	11
  2679  12D8  1283               	bcf	3,5	;RP0=0, select bank0
  2680  12D9  1303               	bcf	3,6	;RP1=0, select bank0
  2681  12DA  00EE               	movwf	??_atualizaLCD
  2682  12DB  086E               	movf	??_atualizaLCD,w
  2683  12DC  00F4               	movwf	Lcd_Set_Cursor@b
  2684  12DD  3002               	movlw	2
  2685  12DE  120A  118A  2003  160A  118A  	fcall	_Lcd_Set_Cursor
  2686  12E3                     l3634:
  2687                           
  2688                           ;main.c: 307:     Lcd_Write_String("S3:");
  2689  12E3  309E               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  2690  12E4  00F5               	movwf	Lcd_Write_String@a
  2691  12E5  3080               	movlw	128
  2692  12E6  00F6               	movwf	Lcd_Write_String@a+1
  2693  12E7  160A  158A  22A2  160A  118A  	fcall	_Lcd_Write_String
  2694  12EC                     l3636:
  2695                           
  2696                           ;main.c: 308:     sprintf(buffer5, "%.2f", valor_entry5);
  2697  12EC  3091               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2698  12ED  1283               	bcf	3,5	;RP0=0, select bank0
  2699  12EE  1303               	bcf	3,6	;RP1=0, select bank0
  2700  12EF  00EE               	movwf	??_atualizaLCD
  2701  12F0  086E               	movf	??_atualizaLCD,w
  2702  12F1  1683               	bsf	3,5	;RP0=1, select bank1
  2703  12F2  1303               	bcf	3,6	;RP1=0, select bank1
  2704  12F3  00A0               	movwf	sprintf@f^(0+128)
  2705  12F4  084D               	movf	(_valor_entry5+3)^(0+128),w
  2706  12F5  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  2707  12F6  084C               	movf	(_valor_entry5+2)^(0+128),w
  2708  12F7  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  2709  12F8  084B               	movf	(_valor_entry5+1)^(0+128),w
  2710  12F9  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  2711  12FA  084A               	movf	_valor_entry5^(0+128),w
  2712  12FB  00A1               	movwf	(?_sprintf^(0+128)+1)
  2713  12FC  3024               	movlw	(low (_buffer5| (0+256)))& (0+255)
  2714  12FD  120A  118A  218A  160A  118A  	fcall	_sprintf
  2715  1302                     l3638:
  2716                           
  2717                           ;main.c: 309:     Lcd_Set_Cursor(2,14);
  2718  1302  300E               	movlw	14
  2719  1303  1283               	bcf	3,5	;RP0=0, select bank0
  2720  1304  1303               	bcf	3,6	;RP1=0, select bank0
  2721  1305  00EE               	movwf	??_atualizaLCD
  2722  1306  086E               	movf	??_atualizaLCD,w
  2723  1307  00F4               	movwf	Lcd_Set_Cursor@b
  2724  1308  3002               	movlw	2
  2725  1309  120A  118A  2003  160A  118A  	fcall	_Lcd_Set_Cursor
  2726  130E                     l3640:
  2727                           
  2728                           ;main.c: 310:     Lcd_Write_String(buffer5);
  2729  130E  3024               	movlw	(low (_buffer5| (0+256)))& (0+255)
  2730  130F  00F5               	movwf	Lcd_Write_String@a
  2731  1310  3001               	movlw	1
  2732  1311  00F6               	movwf	Lcd_Write_String@a+1
  2733  1312  160A  158A  22A2  160A  118A  	fcall	_Lcd_Write_String
  2734  1317                     l3642:
  2735                           
  2736                           ;main.c: 311:     _delay((unsigned long)((20)*(4000000/4000.0)));
  2737  1317  301A               	movlw	26
  2738  1318  1283               	bcf	3,5	;RP0=0, select bank0
  2739  1319  1303               	bcf	3,6	;RP1=0, select bank0
  2740  131A  00EF               	movwf	??_atualizaLCD+1
  2741  131B  30F7               	movlw	247
  2742  131C  00EE               	movwf	??_atualizaLCD
  2743  131D                     u5737:
  2744  131D  0BEE               	decfsz	??_atualizaLCD,f
  2745  131E  2B1D               	goto	u5737
  2746  131F  0BEF               	decfsz	??_atualizaLCD+1,f
  2747  1320  2B1D               	goto	u5737
  2748  1321  2B22               	nop2
  2749                           
  2750                           ;main.c: 313:     Lcd_Set_Cursor(2,21);
  2751  1322  3015               	movlw	21
  2752  1323  1283               	bcf	3,5	;RP0=0, select bank0
  2753  1324  1303               	bcf	3,6	;RP1=0, select bank0
  2754  1325  00EE               	movwf	??_atualizaLCD
  2755  1326  086E               	movf	??_atualizaLCD,w
  2756  1327  00F4               	movwf	Lcd_Set_Cursor@b
  2757  1328  3002               	movlw	2
  2758  1329  120A  118A  2003  160A  118A  	fcall	_Lcd_Set_Cursor
  2759  132E                     l3644:
  2760                           
  2761                           ;main.c: 314:     Lcd_Write_String("S4:");
  2762  132E  30A2               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  2763  132F  00F5               	movwf	Lcd_Write_String@a
  2764  1330  3080               	movlw	128
  2765  1331  00F6               	movwf	Lcd_Write_String@a+1
  2766  1332  160A  158A  22A2  160A  118A  	fcall	_Lcd_Write_String
  2767  1337                     l3646:
  2768                           
  2769                           ;main.c: 315:     sprintf(buffer6, "%.2f", valor_entry6);
  2770  1337  3091               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2771  1338  1283               	bcf	3,5	;RP0=0, select bank0
  2772  1339  1303               	bcf	3,6	;RP1=0, select bank0
  2773  133A  00EE               	movwf	??_atualizaLCD
  2774  133B  086E               	movf	??_atualizaLCD,w
  2775  133C  1683               	bsf	3,5	;RP0=1, select bank1
  2776  133D  1303               	bcf	3,6	;RP1=0, select bank1
  2777  133E  00A0               	movwf	sprintf@f^(0+128)
  2778  133F  0849               	movf	(_valor_entry6+3)^(0+128),w
  2779  1340  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  2780  1341  0848               	movf	(_valor_entry6+2)^(0+128),w
  2781  1342  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  2782  1343  0847               	movf	(_valor_entry6+1)^(0+128),w
  2783  1344  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  2784  1345  0846               	movf	_valor_entry6^(0+128),w
  2785  1346  00A1               	movwf	(?_sprintf^(0+128)+1)
  2786  1347  3010               	movlw	(low (_buffer6| (0+256)))& (0+255)
  2787  1348  120A  118A  218A  160A  118A  	fcall	_sprintf
  2788                           
  2789                           ;main.c: 316:     Lcd_Set_Cursor(2,24);
  2790  134D  3018               	movlw	24
  2791  134E  1283               	bcf	3,5	;RP0=0, select bank0
  2792  134F  1303               	bcf	3,6	;RP1=0, select bank0
  2793  1350  00EE               	movwf	??_atualizaLCD
  2794  1351  086E               	movf	??_atualizaLCD,w
  2795  1352  00F4               	movwf	Lcd_Set_Cursor@b
  2796  1353  3002               	movlw	2
  2797  1354  120A  118A  2003  160A  118A  	fcall	_Lcd_Set_Cursor
  2798  1359                     l3648:
  2799                           
  2800                           ;main.c: 317:     Lcd_Write_String(buffer6);
  2801  1359  3010               	movlw	(low (_buffer6| (0+256)))& (0+255)
  2802  135A  00F5               	movwf	Lcd_Write_String@a
  2803  135B  3001               	movlw	1
  2804  135C  00F6               	movwf	Lcd_Write_String@a+1
  2805  135D  160A  158A  22A2  160A  118A  	fcall	_Lcd_Write_String
  2806  1362                     l3650:
  2807                           
  2808                           ;main.c: 318:     _delay((unsigned long)((100)*(4000000/4000.0)));
  2809  1362  3082               	movlw	130
  2810  1363  1283               	bcf	3,5	;RP0=0, select bank0
  2811  1364  1303               	bcf	3,6	;RP1=0, select bank0
  2812  1365  00EF               	movwf	??_atualizaLCD+1
  2813  1366  30DD               	movlw	221
  2814  1367  00EE               	movwf	??_atualizaLCD
  2815  1368                     u5747:
  2816  1368  0BEE               	decfsz	??_atualizaLCD,f
  2817  1369  2B68               	goto	u5747
  2818  136A  0BEF               	decfsz	??_atualizaLCD+1,f
  2819  136B  2B68               	goto	u5747
  2820  136C                     l168:
  2821  136C  0008               	return
  2822  136D                     __end_of_atualizaLCD:
  2823                           
  2824                           	psect	text5
  2825  018A                     __ptext5:	
  2826 ;; *************** function _sprintf *****************
  2827 ;; Defined at:
  2828 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  2829 ;; Parameters:    Size  Location     Type
  2830 ;;  sp              1    wreg     PTR unsigned char 
  2831 ;;		 -> buffer6(20), buffer5(20), buffer4(20), buffer3(20), 
  2832 ;;		 -> buffer2(20), buffer1(20), buffer0(20), 
  2833 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  2834 ;;		 -> STR_14(5), STR_12(5), STR_10(5), STR_8(5), 
  2835 ;;		 -> STR_6(5), STR_4(5), STR_2(5), 
  2836 ;; Auto vars:     Size  Location     Type
  2837 ;;  sp              1   29[BANK1 ] PTR unsigned char 
  2838 ;;		 -> buffer6(20), buffer5(20), buffer4(20), buffer3(20), 
  2839 ;;		 -> buffer2(20), buffer1(20), buffer0(20), 
  2840 ;;  fval            4   30[BANK1 ] PTR unsigned char 
  2841 ;;  tmpval          4   23[BANK1 ] struct .
  2842 ;;  val             4   17[BANK1 ] unsigned long 
  2843 ;;  prec            2   27[BANK1 ] int 
  2844 ;;  eexp            2   21[BANK1 ] int 
  2845 ;;  flag            2   15[BANK1 ] unsigned short 
  2846 ;;  cp              2    0        PTR const unsigned char 
  2847 ;;  len             2    0        unsigned int 
  2848 ;;  width           2    0        int 
  2849 ;;  c               1   34[BANK1 ] unsigned char 
  2850 ;;  ap              1   14[BANK1 ] PTR void [1]
  2851 ;;		 -> ?_sprintf(2), 
  2852 ;;  d               1    0        unsigned char 
  2853 ;; Return value:  Size  Location     Type
  2854 ;;                  2    0[BANK1 ] int 
  2855 ;; Registers used:
  2856 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2857 ;; Tracked objects:
  2858 ;;		On entry : 0/0
  2859 ;;		On exit  : 0/0
  2860 ;;		Unchanged: 0/0
  2861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2862 ;;      Params:         0       0       5       0       0
  2863 ;;      Locals:         0       0      25       0       0
  2864 ;;      Temps:          0       0       5       0       0
  2865 ;;      Totals:         0       0      35       0       0
  2866 ;;Total ram usage:       35 bytes
  2867 ;; Hardware stack levels used: 1
  2868 ;; Hardware stack levels required when called: 3
  2869 ;; This function calls:
  2870 ;;		___awdiv
  2871 ;;		___fladd
  2872 ;;		___fleq
  2873 ;;		___flge
  2874 ;;		___flmul
  2875 ;;		___flneg
  2876 ;;		___flsub
  2877 ;;		___fltol
  2878 ;;		___lldiv
  2879 ;;		___llmod
  2880 ;;		___wmul
  2881 ;;		___xxtofl
  2882 ;;		__div_to_l_
  2883 ;;		__tdiv_to_l_
  2884 ;;		_fround
  2885 ;;		_isdigit
  2886 ;;		_scale
  2887 ;; This function is called by:
  2888 ;;		_atualizaLCD
  2889 ;; This function uses a non-reentrant model
  2890 ;;
  2891                           
  2892                           
  2893                           ;psect for function _sprintf
  2894  018A                     _sprintf:
  2895                           
  2896                           ;incstack = 0
  2897                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2898                           ;sprintf@sp stored from wreg
  2899  018A  1683               	bsf	3,5	;RP0=1, select bank1
  2900  018B  1303               	bcf	3,6	;RP1=0, select bank1
  2901  018C  00BD               	movwf	sprintf@sp^(0+128)
  2902  018D                     l3250:
  2903                           
  2904                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  2905  018D  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2906  018E  00A5               	movwf	??_sprintf^(0+128)
  2907  018F  0825               	movf	??_sprintf^(0+128),w
  2908  0190  00AE               	movwf	sprintf@ap^(0+128)
  2909                           
  2910                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2911  0191  2FCB               	goto	l3444
  2912  0192                     l3252:
  2913                           
  2914                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2915  0192  3025               	movlw	37
  2916  0193  0642               	xorwf	sprintf@c^(0+128),w
  2917  0194  1903               	btfsc	3,2
  2918  0195  2997               	goto	u5121
  2919  0196  2998               	goto	u5120
  2920  0197                     u5121:
  2921  0197  29A4               	goto	l3258
  2922  0198                     u5120:
  2923  0198                     l3254:
  2924                           
  2925                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2926  0198  0842               	movf	sprintf@c^(0+128),w
  2927  0199  00A5               	movwf	??_sprintf^(0+128)
  2928  019A  083D               	movf	sprintf@sp^(0+128),w
  2929  019B  0084               	movwf	4
  2930  019C  0825               	movf	??_sprintf^(0+128),w
  2931  019D  1783               	bsf	3,7	;select IRP bank2
  2932  019E  0080               	movwf	0
  2933  019F                     l3256:
  2934  019F  3001               	movlw	1
  2935  01A0  00A5               	movwf	??_sprintf^(0+128)
  2936  01A1  0825               	movf	??_sprintf^(0+128),w
  2937  01A2  07BD               	addwf	sprintf@sp^(0+128),f
  2938                           
  2939                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 559:    continue;
  2940  01A3  2FCB               	goto	l3444
  2941  01A4                     l3258:
  2942                           
  2943                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2944  01A4  01AF               	clrf	sprintf@flag^(0+128)
  2945  01A5  01B0               	clrf	(sprintf@flag+1)^(0+128)
  2946  01A6                     l3260:
  2947                           
  2948                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  2949  01A6  0820               	movf	sprintf@f^(0+128),w
  2950  01A7  0084               	movwf	4
  2951  01A8  160A  118A  200A  120A  118A  	fcall	stringdir
  2952  01AD  3A2E               	xorlw	46
  2953  01AE  1D03               	skipz
  2954  01AF  29B1               	goto	u5131
  2955  01B0  29B2               	goto	u5130
  2956  01B1                     u5131:
  2957  01B1  29F7               	goto	l3276
  2958  01B2                     u5130:
  2959  01B2                     l3262:
  2960                           
  2961                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  2962  01B2  1730               	bsf	(sprintf@flag^(0+128)+1),6
  2963  01B3                     l3264:
  2964                           
  2965                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 630:    f++;
  2966  01B3  3001               	movlw	1
  2967  01B4  00A5               	movwf	??_sprintf^(0+128)
  2968  01B5  0825               	movf	??_sprintf^(0+128),w
  2969  01B6  07A0               	addwf	sprintf@f^(0+128),f
  2970  01B7                     l3266:
  2971                           
  2972                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2973  01B7  01BB               	clrf	sprintf@prec^(0+128)
  2974  01B8  01BC               	clrf	(sprintf@prec+1)^(0+128)
  2975                           
  2976                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2977  01B9  29E6               	goto	l3274
  2978  01BA                     l3268:
  2979                           
  2980                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2981  01BA  300A               	movlw	10
  2982  01BB  00F0               	movwf	___wmul@multiplier
  2983  01BC  3000               	movlw	0
  2984  01BD  00F1               	movwf	___wmul@multiplier+1
  2985  01BE  1683               	bsf	3,5	;RP0=1, select bank1
  2986  01BF  1303               	bcf	3,6	;RP1=0, select bank1
  2987  01C0  083C               	movf	(sprintf@prec+1)^(0+128),w
  2988  01C1  00F3               	movwf	___wmul@multiplicand+1
  2989  01C2  083B               	movf	sprintf@prec^(0+128),w
  2990  01C3  00F2               	movwf	___wmul@multiplicand
  2991  01C4  160A  158A  217F  120A  118A  	fcall	___wmul
  2992  01C9  0871               	movf	?___wmul+1,w
  2993  01CA  1683               	bsf	3,5	;RP0=1, select bank1
  2994  01CB  1303               	bcf	3,6	;RP1=0, select bank1
  2995  01CC  00BC               	movwf	(sprintf@prec+1)^(0+128)
  2996  01CD  0870               	movf	?___wmul,w
  2997  01CE  00BB               	movwf	sprintf@prec^(0+128)
  2998  01CF                     l3270:
  2999                           
  3000                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  3001  01CF  0820               	movf	sprintf@f^(0+128),w
  3002  01D0  0084               	movwf	4
  3003  01D1  160A  118A  200A  120A  118A  	fcall	stringdir
  3004  01D6  3ED0               	addlw	208
  3005  01D7  00A5               	movwf	??_sprintf^(0+128)
  3006  01D8  30FF               	movlw	255
  3007  01D9  1803               	skipnc
  3008  01DA  3000               	movlw	0
  3009  01DB  00A6               	movwf	(??_sprintf^(0+128)+1)
  3010  01DC  0825               	movf	??_sprintf^(0+128),w
  3011  01DD  07BB               	addwf	sprintf@prec^(0+128),f
  3012  01DE  1803               	skipnc
  3013  01DF  0ABC               	incf	(sprintf@prec+1)^(0+128),f
  3014  01E0  0826               	movf	(??_sprintf+1)^(0+128),w
  3015  01E1  07BC               	addwf	(sprintf@prec+1)^(0+128),f
  3016  01E2                     l3272:
  3017  01E2  3001               	movlw	1
  3018  01E3  00A5               	movwf	??_sprintf^(0+128)
  3019  01E4  0825               	movf	??_sprintf^(0+128),w
  3020  01E5  07A0               	addwf	sprintf@f^(0+128),f
  3021  01E6                     l3274:
  3022                           
  3023                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  3024  01E6  0820               	movf	sprintf@f^(0+128),w
  3025  01E7  0084               	movwf	4
  3026  01E8  160A  118A  200A  120A  118A  	fcall	stringdir
  3027  01ED  120A  158A  2002  120A  118A  	fcall	_isdigit
  3028  01F2  1803               	btfsc	3,0
  3029  01F3  29F5               	goto	u5141
  3030  01F4  29F6               	goto	u5140
  3031  01F5                     u5141:
  3032  01F5  29BA               	goto	l3268
  3033  01F6                     u5140:
  3034  01F6  29FD               	goto	l3282
  3035  01F7                     l3276:
  3036                           
  3037                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  3038  01F7  01BB               	clrf	sprintf@prec^(0+128)
  3039  01F8  01BC               	clrf	(sprintf@prec+1)^(0+128)
  3040  01F9                     l3278:
  3041                           
  3042                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  3043  01F9  1630               	bsf	(sprintf@flag^(0+128)+1),4
  3044  01FA  29FD               	goto	l3282
  3045  01FB                     l296:	
  3046                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  3047                           
  3048                           
  3049                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  3050  01FB  1530               	bsf	(sprintf@flag^(0+128)+1),2
  3051                           
  3052                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 690:    break;
  3053  01FC  2A19               	goto	l3284
  3054  01FD                     l3282:
  3055  01FD  3001               	movlw	1
  3056  01FE  1683               	bsf	3,5	;RP0=1, select bank1
  3057  01FF  1303               	bcf	3,6	;RP1=0, select bank1
  3058  0200  07A0               	addwf	sprintf@f^(0+128),f
  3059  0201  30FF               	movlw	-1
  3060  0202  0720               	addwf	sprintf@f^(0+128),w
  3061  0203  0084               	movwf	4
  3062  0204  160A  118A  200A  120A  118A  	fcall	stringdir
  3063  0209  00C2               	movwf	sprintf@c^(0+128)
  3064  020A  00A5               	movwf	??_sprintf^(0+128)
  3065  020B  01A6               	clrf	(??_sprintf^(0+128)+1)
  3066                           
  3067                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3068                           ; Switch size 1, requested type "simple"
  3069                           ; Number of cases is 1, Range of values is 0 to 0
  3070                           ; switch strategies available:
  3071                           ; Name         Instructions Cycles
  3072                           ; simple_byte            4     3 (average)
  3073                           ; direct_byte           11     8 (fixed)
  3074                           ; jumptable            260     6 (fixed)
  3075                           ;	Chosen strategy is simple_byte
  3076  020C  0826               	movf	(??_sprintf+1)^(0+128),w
  3077  020D  3A00               	xorlw	0	; case 0
  3078  020E  1903               	skipnz
  3079  020F  2A11               	goto	l3760
  3080  0210  2FCB               	goto	l3444
  3081  0211                     l3760:
  3082                           
  3083                           ; Switch size 1, requested type "simple"
  3084                           ; Number of cases is 2, Range of values is 0 to 102
  3085                           ; switch strategies available:
  3086                           ; Name         Instructions Cycles
  3087                           ; simple_byte            7     4 (average)
  3088                           ; jumptable            260     6 (fixed)
  3089                           ;	Chosen strategy is simple_byte
  3090  0211  0825               	movf	??_sprintf^(0+128),w
  3091  0212  3A00               	xorlw	0	; case 0
  3092  0213  1903               	skipnz
  3093  0214  2FDD               	goto	l3446
  3094  0215  3A66               	xorlw	102	; case 102
  3095  0216  1903               	skipnz
  3096  0217  29FB               	goto	l296
  3097  0218  2FCB               	goto	l3444
  3098  0219                     l3284:
  3099                           
  3100                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  3101  0219  3000               	movlw	0
  3102  021A  052F               	andwf	sprintf@flag^(0+128),w
  3103  021B  00A5               	movwf	??_sprintf^(0+128)
  3104  021C  3007               	movlw	7
  3105  021D  0530               	andwf	(sprintf@flag+1)^(0+128),w
  3106  021E  00A6               	movwf	(??_sprintf+1)^(0+128)
  3107  021F  0825               	movf	??_sprintf^(0+128),w
  3108  0220  0426               	iorwf	(??_sprintf^(0+128)+1),w
  3109  0221  1903               	btfsc	3,2
  3110  0222  2A24               	goto	u5151
  3111  0223  2A25               	goto	u5150
  3112  0224                     u5151:
  3113  0224  2F86               	goto	l3426
  3114  0225                     u5150:
  3115  0225                     l3286:
  3116                           
  3117                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  3118  0225  1E30               	btfss	(sprintf@flag+1)^(0+128),4
  3119  0226  2A28               	goto	u5161
  3120  0227  2A29               	goto	u5160
  3121  0228                     u5161:
  3122  0228  2A2D               	goto	l3290
  3123  0229                     u5160:
  3124  0229                     l3288:
  3125                           
  3126                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  3127  0229  3006               	movlw	6
  3128  022A  00BB               	movwf	sprintf@prec^(0+128)
  3129  022B  3000               	movlw	0
  3130  022C  00BC               	movwf	(sprintf@prec^(0+128)+1)
  3131  022D                     l3290:
  3132                           
  3133                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  3134  022D  082E               	movf	sprintf@ap^(0+128),w
  3135  022E  0084               	movwf	4
  3136  022F  1383               	bcf	3,7	;select IRP bank0
  3137  0230  0800               	movf	0,w
  3138  0231  00BE               	movwf	sprintf@fval^(0+128)
  3139  0232  0A84               	incf	4,f
  3140  0233  0800               	movf	0,w
  3141  0234  00BF               	movwf	(sprintf@fval+1)^(0+128)
  3142  0235  0A84               	incf	4,f
  3143  0236  0800               	movf	0,w
  3144  0237  00C0               	movwf	(sprintf@fval+2)^(0+128)
  3145  0238  0A84               	incf	4,f
  3146  0239  0800               	movf	0,w
  3147  023A  00C1               	movwf	(sprintf@fval+3)^(0+128)
  3148  023B                     l3292:
  3149  023B  3004               	movlw	4
  3150  023C  00A5               	movwf	??_sprintf^(0+128)
  3151  023D  0825               	movf	??_sprintf^(0+128),w
  3152  023E  07AE               	addwf	sprintf@ap^(0+128),f
  3153  023F                     l3294:
  3154                           
  3155                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  3156  023F  0841               	movf	(sprintf@fval+3)^(0+128),w
  3157  0240  00F3               	movwf	___flge@ff1+3
  3158  0241  0840               	movf	(sprintf@fval+2)^(0+128),w
  3159  0242  00F2               	movwf	___flge@ff1+2
  3160  0243  083F               	movf	(sprintf@fval+1)^(0+128),w
  3161  0244  00F1               	movwf	___flge@ff1+1
  3162  0245  083E               	movf	sprintf@fval^(0+128),w
  3163  0246  00F0               	movwf	___flge@ff1
  3164  0247  3000               	movlw	0
  3165  0248  00F7               	movwf	___flge@ff2+3
  3166  0249  3000               	movlw	0
  3167  024A  00F6               	movwf	___flge@ff2+2
  3168  024B  3000               	movlw	0
  3169  024C  00F5               	movwf	___flge@ff2+1
  3170  024D  3000               	movlw	0
  3171  024E  00F4               	movwf	___flge@ff2
  3172  024F  160A  118A  20C1  120A  118A  	fcall	___flge
  3173  0254  1803               	btfsc	3,0
  3174  0255  2A57               	goto	u5171
  3175  0256  2A58               	goto	u5170
  3176  0257                     u5171:
  3177  0257  2A75               	goto	l3300
  3178  0258                     u5170:
  3179  0258                     l3296:
  3180                           
  3181                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  3182  0258  1683               	bsf	3,5	;RP0=1, select bank1
  3183  0259  1303               	bcf	3,6	;RP1=0, select bank1
  3184  025A  0841               	movf	(sprintf@fval+3)^(0+128),w
  3185  025B  00F3               	movwf	___flneg@f1+3
  3186  025C  0840               	movf	(sprintf@fval+2)^(0+128),w
  3187  025D  00F2               	movwf	___flneg@f1+2
  3188  025E  083F               	movf	(sprintf@fval+1)^(0+128),w
  3189  025F  00F1               	movwf	___flneg@f1+1
  3190  0260  083E               	movf	sprintf@fval^(0+128),w
  3191  0261  00F0               	movwf	___flneg@f1
  3192  0262  160A  158A  2107  120A  118A  	fcall	___flneg
  3193  0267  0873               	movf	?___flneg+3,w
  3194  0268  1683               	bsf	3,5	;RP0=1, select bank1
  3195  0269  1303               	bcf	3,6	;RP1=0, select bank1
  3196  026A  00C1               	movwf	(sprintf@fval+3)^(0+128)
  3197  026B  0872               	movf	?___flneg+2,w
  3198  026C  00C0               	movwf	(sprintf@fval+2)^(0+128)
  3199  026D  0871               	movf	?___flneg+1,w
  3200  026E  00BF               	movwf	(sprintf@fval+1)^(0+128)
  3201  026F  0870               	movf	?___flneg,w
  3202  0270  00BE               	movwf	sprintf@fval^(0+128)
  3203  0271                     l3298:
  3204                           
  3205                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  3206  0271  3003               	movlw	3
  3207  0272  04AF               	iorwf	sprintf@flag^(0+128),f
  3208  0273  3000               	movlw	0
  3209  0274  04B0               	iorwf	(sprintf@flag+1)^(0+128),f
  3210  0275                     l3300:
  3211                           
  3212                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  3213  0275  1683               	bsf	3,5	;RP0=1, select bank1
  3214  0276  1303               	bcf	3,6	;RP1=0, select bank1
  3215  0277  01B5               	clrf	sprintf@eexp^(0+128)
  3216  0278  01B6               	clrf	(sprintf@eexp+1)^(0+128)
  3217  0279                     l3302:
  3218                           
  3219                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  3220  0279  0841               	movf	(sprintf@fval+3)^(0+128),w
  3221  027A  00F3               	movwf	___fleq@ff1+3
  3222  027B  0840               	movf	(sprintf@fval+2)^(0+128),w
  3223  027C  00F2               	movwf	___fleq@ff1+2
  3224  027D  083F               	movf	(sprintf@fval+1)^(0+128),w
  3225  027E  00F1               	movwf	___fleq@ff1+1
  3226  027F  083E               	movf	sprintf@fval^(0+128),w
  3227  0280  00F0               	movwf	___fleq@ff1
  3228  0281  3000               	movlw	0
  3229  0282  00F7               	movwf	___fleq@ff2+3
  3230  0283  3000               	movlw	0
  3231  0284  00F6               	movwf	___fleq@ff2+2
  3232  0285  3000               	movlw	0
  3233  0286  00F5               	movwf	___fleq@ff2+1
  3234  0287  3000               	movlw	0
  3235  0288  00F4               	movwf	___fleq@ff2
  3236  0289  160A  158A  2328  120A  118A  	fcall	___fleq
  3237  028E  1803               	btfsc	3,0
  3238  028F  2A91               	goto	u5181
  3239  0290  2A92               	goto	u5180
  3240  0291                     u5181:
  3241  0291  2B82               	goto	l3328
  3242  0292                     u5180:
  3243  0292                     l3304:
  3244                           
  3245                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  3246  0292  1003               	clrc
  3247  0293  1683               	bsf	3,5	;RP0=1, select bank1
  3248  0294  1303               	bcf	3,6	;RP1=0, select bank1
  3249  0295  0D40               	rlf	(sprintf@fval+2)^(0+128),w
  3250  0296  0D41               	rlf	(sprintf@fval+3)^(0+128),w
  3251  0297  3E82               	addlw	130
  3252  0298  00B5               	movwf	sprintf@eexp^(0+128)
  3253  0299  30FF               	movlw	255
  3254  029A  1803               	skipnc
  3255  029B  3000               	movlw	0
  3256  029C  00B6               	movwf	(sprintf@eexp^(0+128)+1)
  3257  029D                     l3306:
  3258                           
  3259                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  3260  029D  30FF               	movlw	255
  3261  029E  07B5               	addwf	sprintf@eexp^(0+128),f
  3262  029F  1803               	skipnc
  3263  02A0  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  3264  02A1  30FF               	movlw	255
  3265  02A2  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  3266  02A3                     l3308:
  3267                           
  3268                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  3269  02A3  3003               	movlw	3
  3270  02A4  00F0               	movwf	___wmul@multiplier
  3271  02A5  3000               	movlw	0
  3272  02A6  00F1               	movwf	___wmul@multiplier+1
  3273  02A7  0836               	movf	(sprintf@eexp+1)^(0+128),w
  3274  02A8  00F3               	movwf	___wmul@multiplicand+1
  3275  02A9  0835               	movf	sprintf@eexp^(0+128),w
  3276  02AA  00F2               	movwf	___wmul@multiplicand
  3277  02AB  160A  158A  217F  120A  118A  	fcall	___wmul
  3278  02B0  0871               	movf	?___wmul+1,w
  3279  02B1  1683               	bsf	3,5	;RP0=1, select bank1
  3280  02B2  1303               	bcf	3,6	;RP1=0, select bank1
  3281  02B3  00B6               	movwf	(sprintf@eexp+1)^(0+128)
  3282  02B4  0870               	movf	?___wmul,w
  3283  02B5  00B5               	movwf	sprintf@eexp^(0+128)
  3284  02B6                     l3310:
  3285                           
  3286                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  3287  02B6  300A               	movlw	10
  3288  02B7  00F7               	movwf	___awdiv@divisor
  3289  02B8  3000               	movlw	0
  3290  02B9  00F8               	movwf	___awdiv@divisor+1
  3291  02BA  0836               	movf	(sprintf@eexp+1)^(0+128),w
  3292  02BB  00FA               	movwf	___awdiv@dividend+1
  3293  02BC  0835               	movf	sprintf@eexp^(0+128),w
  3294  02BD  00F9               	movwf	___awdiv@dividend
  3295  02BE  160A  158A  24E6  120A  118A  	fcall	___awdiv
  3296  02C3  0878               	movf	?___awdiv+1,w
  3297  02C4  1683               	bsf	3,5	;RP0=1, select bank1
  3298  02C5  1303               	bcf	3,6	;RP1=0, select bank1
  3299  02C6  00B6               	movwf	(sprintf@eexp+1)^(0+128)
  3300  02C7  0877               	movf	?___awdiv,w
  3301  02C8  00B5               	movwf	sprintf@eexp^(0+128)
  3302  02C9                     l3312:
  3303                           
  3304                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  3305  02C9  1FB6               	btfss	(sprintf@eexp+1)^(0+128),7
  3306  02CA  2ACC               	goto	u5191
  3307  02CB  2ACD               	goto	u5190
  3308  02CC                     u5191:
  3309  02CC  2AD3               	goto	l3316
  3310  02CD                     u5190:
  3311  02CD                     l3314:
  3312                           
  3313                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  3314  02CD  30FF               	movlw	255
  3315  02CE  07B5               	addwf	sprintf@eexp^(0+128),f
  3316  02CF  1803               	skipnc
  3317  02D0  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  3318  02D1  30FF               	movlw	255
  3319  02D2  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  3320  02D3                     l3316:
  3321                           
  3322                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  3323  02D3  0335               	decf	sprintf@eexp^(0+128),w
  3324  02D4  3AFF               	xorlw	255
  3325  02D5  120A  158A  2140  120A  118A  	fcall	_scale
  3326  02DA  1283               	bcf	3,5	;RP0=0, select bank0
  3327  02DB  1303               	bcf	3,6	;RP1=0, select bank0
  3328  02DC  0841               	movf	?_scale+3,w
  3329  02DD  1683               	bsf	3,5	;RP0=1, select bank1
  3330  02DE  1303               	bcf	3,6	;RP1=0, select bank1
  3331  02DF  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3332  02E0  1283               	bcf	3,5	;RP0=0, select bank0
  3333  02E1  1303               	bcf	3,6	;RP1=0, select bank0
  3334  02E2  0840               	movf	?_scale+2,w
  3335  02E3  1683               	bsf	3,5	;RP0=1, select bank1
  3336  02E4  1303               	bcf	3,6	;RP1=0, select bank1
  3337  02E5  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3338  02E6  1283               	bcf	3,5	;RP0=0, select bank0
  3339  02E7  1303               	bcf	3,6	;RP1=0, select bank0
  3340  02E8  083F               	movf	?_scale+1,w
  3341  02E9  1683               	bsf	3,5	;RP0=1, select bank1
  3342  02EA  1303               	bcf	3,6	;RP1=0, select bank1
  3343  02EB  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3344  02EC  1283               	bcf	3,5	;RP0=0, select bank0
  3345  02ED  1303               	bcf	3,6	;RP1=0, select bank0
  3346  02EE  083E               	movf	?_scale,w
  3347  02EF  1683               	bsf	3,5	;RP0=1, select bank1
  3348  02F0  1303               	bcf	3,6	;RP1=0, select bank1
  3349  02F1  00B7               	movwf	sprintf@tmpval^(0+128)
  3350  02F2                     l3318:
  3351                           
  3352                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  3353  02F2  0841               	movf	(sprintf@fval+3)^(0+128),w
  3354  02F3  1283               	bcf	3,5	;RP0=0, select bank0
  3355  02F4  1303               	bcf	3,6	;RP1=0, select bank0
  3356  02F5  00A7               	movwf	___flmul@b+3
  3357  02F6  1683               	bsf	3,5	;RP0=1, select bank1
  3358  02F7  1303               	bcf	3,6	;RP1=0, select bank1
  3359  02F8  0840               	movf	(sprintf@fval+2)^(0+128),w
  3360  02F9  1283               	bcf	3,5	;RP0=0, select bank0
  3361  02FA  1303               	bcf	3,6	;RP1=0, select bank0
  3362  02FB  00A6               	movwf	___flmul@b+2
  3363  02FC  1683               	bsf	3,5	;RP0=1, select bank1
  3364  02FD  1303               	bcf	3,6	;RP1=0, select bank1
  3365  02FE  083F               	movf	(sprintf@fval+1)^(0+128),w
  3366  02FF  1283               	bcf	3,5	;RP0=0, select bank0
  3367  0300  1303               	bcf	3,6	;RP1=0, select bank0
  3368  0301  00A5               	movwf	___flmul@b+1
  3369  0302  1683               	bsf	3,5	;RP0=1, select bank1
  3370  0303  1303               	bcf	3,6	;RP1=0, select bank1
  3371  0304  083E               	movf	sprintf@fval^(0+128),w
  3372  0305  1283               	bcf	3,5	;RP0=0, select bank0
  3373  0306  1303               	bcf	3,6	;RP1=0, select bank0
  3374  0307  00A4               	movwf	___flmul@b
  3375  0308  1683               	bsf	3,5	;RP0=1, select bank1
  3376  0309  1303               	bcf	3,6	;RP1=0, select bank1
  3377  030A  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3378  030B  1283               	bcf	3,5	;RP0=0, select bank0
  3379  030C  1303               	bcf	3,6	;RP1=0, select bank0
  3380  030D  00AB               	movwf	___flmul@a+3
  3381  030E  1683               	bsf	3,5	;RP0=1, select bank1
  3382  030F  1303               	bcf	3,6	;RP1=0, select bank1
  3383  0310  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3384  0311  1283               	bcf	3,5	;RP0=0, select bank0
  3385  0312  1303               	bcf	3,6	;RP1=0, select bank0
  3386  0313  00AA               	movwf	___flmul@a+2
  3387  0314  1683               	bsf	3,5	;RP0=1, select bank1
  3388  0315  1303               	bcf	3,6	;RP1=0, select bank1
  3389  0316  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3390  0317  1283               	bcf	3,5	;RP0=0, select bank0
  3391  0318  1303               	bcf	3,6	;RP1=0, select bank0
  3392  0319  00A9               	movwf	___flmul@a+1
  3393  031A  1683               	bsf	3,5	;RP0=1, select bank1
  3394  031B  1303               	bcf	3,6	;RP1=0, select bank1
  3395  031C  0837               	movf	sprintf@tmpval^(0+128),w
  3396  031D  1283               	bcf	3,5	;RP0=0, select bank0
  3397  031E  1303               	bcf	3,6	;RP1=0, select bank0
  3398  031F  00A8               	movwf	___flmul@a
  3399  0320  120A  158A  249F  120A  118A  	fcall	___flmul
  3400  0325  1283               	bcf	3,5	;RP0=0, select bank0
  3401  0326  1303               	bcf	3,6	;RP1=0, select bank0
  3402  0327  0827               	movf	?___flmul+3,w
  3403  0328  1683               	bsf	3,5	;RP0=1, select bank1
  3404  0329  1303               	bcf	3,6	;RP1=0, select bank1
  3405  032A  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3406  032B  1283               	bcf	3,5	;RP0=0, select bank0
  3407  032C  1303               	bcf	3,6	;RP1=0, select bank0
  3408  032D  0826               	movf	?___flmul+2,w
  3409  032E  1683               	bsf	3,5	;RP0=1, select bank1
  3410  032F  1303               	bcf	3,6	;RP1=0, select bank1
  3411  0330  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3412  0331  1283               	bcf	3,5	;RP0=0, select bank0
  3413  0332  1303               	bcf	3,6	;RP1=0, select bank0
  3414  0333  0825               	movf	?___flmul+1,w
  3415  0334  1683               	bsf	3,5	;RP0=1, select bank1
  3416  0335  1303               	bcf	3,6	;RP1=0, select bank1
  3417  0336  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3418  0337  1283               	bcf	3,5	;RP0=0, select bank0
  3419  0338  1303               	bcf	3,6	;RP1=0, select bank0
  3420  0339  0824               	movf	?___flmul,w
  3421  033A  1683               	bsf	3,5	;RP0=1, select bank1
  3422  033B  1303               	bcf	3,6	;RP1=0, select bank1
  3423  033C  00B7               	movwf	sprintf@tmpval^(0+128)
  3424  033D                     l3320:
  3425                           
  3426                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  3427  033D  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3428  033E  00F3               	movwf	___flge@ff1+3
  3429  033F  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3430  0340  00F2               	movwf	___flge@ff1+2
  3431  0341  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3432  0342  00F1               	movwf	___flge@ff1+1
  3433  0343  0837               	movf	sprintf@tmpval^(0+128),w
  3434  0344  00F0               	movwf	___flge@ff1
  3435  0345  303F               	movlw	63
  3436  0346  00F7               	movwf	___flge@ff2+3
  3437  0347  3080               	movlw	128
  3438  0348  00F6               	movwf	___flge@ff2+2
  3439  0349  3000               	movlw	0
  3440  034A  00F5               	movwf	___flge@ff2+1
  3441  034B  3000               	movlw	0
  3442  034C  00F4               	movwf	___flge@ff2
  3443  034D  160A  118A  20C1  120A  118A  	fcall	___flge
  3444  0352  1803               	btfsc	3,0
  3445  0353  2B55               	goto	u5201
  3446  0354  2B56               	goto	u5200
  3447  0355                     u5201:
  3448  0355  2B5F               	goto	l3324
  3449  0356                     u5200:
  3450  0356                     l3322:
  3451                           
  3452                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  3453  0356  30FF               	movlw	255
  3454  0357  1683               	bsf	3,5	;RP0=1, select bank1
  3455  0358  1303               	bcf	3,6	;RP1=0, select bank1
  3456  0359  07B5               	addwf	sprintf@eexp^(0+128),f
  3457  035A  1803               	skipnc
  3458  035B  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  3459  035C  30FF               	movlw	255
  3460  035D  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  3461  035E  2B82               	goto	l3328
  3462  035F                     l3324:
  3463  035F  1683               	bsf	3,5	;RP0=1, select bank1
  3464  0360  1303               	bcf	3,6	;RP1=0, select bank1
  3465  0361  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3466  0362  00F3               	movwf	___flge@ff1+3
  3467  0363  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3468  0364  00F2               	movwf	___flge@ff1+2
  3469  0365  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3470  0366  00F1               	movwf	___flge@ff1+1
  3471  0367  0837               	movf	sprintf@tmpval^(0+128),w
  3472  0368  00F0               	movwf	___flge@ff1
  3473  0369  3041               	movlw	65
  3474  036A  00F7               	movwf	___flge@ff2+3
  3475  036B  3020               	movlw	32
  3476  036C  00F6               	movwf	___flge@ff2+2
  3477  036D  3000               	movlw	0
  3478  036E  00F5               	movwf	___flge@ff2+1
  3479  036F  3000               	movlw	0
  3480  0370  00F4               	movwf	___flge@ff2
  3481  0371  160A  118A  20C1  120A  118A  	fcall	___flge
  3482  0376  1C03               	btfss	3,0
  3483  0377  2B79               	goto	u5211
  3484  0378  2B7A               	goto	u5210
  3485  0379                     u5211:
  3486  0379  2B82               	goto	l3328
  3487  037A                     u5210:
  3488  037A                     l3326:
  3489                           
  3490                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  3491  037A  3001               	movlw	1
  3492  037B  1683               	bsf	3,5	;RP0=1, select bank1
  3493  037C  1303               	bcf	3,6	;RP1=0, select bank1
  3494  037D  07B5               	addwf	sprintf@eexp^(0+128),f
  3495  037E  1803               	skipnc
  3496  037F  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  3497  0380  3000               	movlw	0
  3498  0381  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  3499  0382                     l3328:
  3500                           
  3501                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  3502  0382  1683               	bsf	3,5	;RP0=1, select bank1
  3503  0383  1303               	bcf	3,6	;RP1=0, select bank1
  3504  0384  083C               	movf	(sprintf@prec+1)^(0+128),w
  3505  0385  3A80               	xorlw	128
  3506  0386  00FF               	movwf	btemp+1
  3507  0387  3080               	movlw	128
  3508  0388  027F               	subwf	btemp+1,w
  3509  0389  1D03               	skipz
  3510  038A  2B8D               	goto	u5225
  3511  038B  300D               	movlw	13
  3512  038C  023B               	subwf	sprintf@prec^(0+128),w
  3513  038D                     u5225:
  3514  038D  1803               	skipnc
  3515  038E  2B90               	goto	u5221
  3516  038F  2B91               	goto	u5220
  3517  0390                     u5221:
  3518  0390  2BD8               	goto	l3332
  3519  0391                     u5220:
  3520  0391                     l3330:
  3521                           
  3522                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  3523  0391  1683               	bsf	3,5	;RP0=1, select bank1
  3524  0392  1303               	bcf	3,6	;RP1=0, select bank1
  3525  0393  083B               	movf	sprintf@prec^(0+128),w
  3526  0394  160A  118A  236D  120A  118A  	fcall	_fround
  3527  0399  1283               	bcf	3,5	;RP0=0, select bank0
  3528  039A  1303               	bcf	3,6	;RP1=0, select bank0
  3529  039B  0841               	movf	?_fround+3,w
  3530  039C  00D5               	movwf	___fladd@b+3
  3531  039D  0840               	movf	?_fround+2,w
  3532  039E  00D4               	movwf	___fladd@b+2
  3533  039F  083F               	movf	?_fround+1,w
  3534  03A0  00D3               	movwf	___fladd@b+1
  3535  03A1  083E               	movf	?_fround,w
  3536  03A2  00D2               	movwf	___fladd@b
  3537  03A3  1683               	bsf	3,5	;RP0=1, select bank1
  3538  03A4  1303               	bcf	3,6	;RP1=0, select bank1
  3539  03A5  0841               	movf	(sprintf@fval+3)^(0+128),w
  3540  03A6  1283               	bcf	3,5	;RP0=0, select bank0
  3541  03A7  1303               	bcf	3,6	;RP1=0, select bank0
  3542  03A8  00D9               	movwf	___fladd@a+3
  3543  03A9  1683               	bsf	3,5	;RP0=1, select bank1
  3544  03AA  1303               	bcf	3,6	;RP1=0, select bank1
  3545  03AB  0840               	movf	(sprintf@fval+2)^(0+128),w
  3546  03AC  1283               	bcf	3,5	;RP0=0, select bank0
  3547  03AD  1303               	bcf	3,6	;RP1=0, select bank0
  3548  03AE  00D8               	movwf	___fladd@a+2
  3549  03AF  1683               	bsf	3,5	;RP0=1, select bank1
  3550  03B0  1303               	bcf	3,6	;RP1=0, select bank1
  3551  03B1  083F               	movf	(sprintf@fval+1)^(0+128),w
  3552  03B2  1283               	bcf	3,5	;RP0=0, select bank0
  3553  03B3  1303               	bcf	3,6	;RP1=0, select bank0
  3554  03B4  00D7               	movwf	___fladd@a+1
  3555  03B5  1683               	bsf	3,5	;RP0=1, select bank1
  3556  03B6  1303               	bcf	3,6	;RP1=0, select bank1
  3557  03B7  083E               	movf	sprintf@fval^(0+128),w
  3558  03B8  1283               	bcf	3,5	;RP0=0, select bank0
  3559  03B9  1303               	bcf	3,6	;RP1=0, select bank0
  3560  03BA  00D6               	movwf	___fladd@a
  3561  03BB  160A  118A  2578  120A  118A  	fcall	___fladd
  3562  03C0  1283               	bcf	3,5	;RP0=0, select bank0
  3563  03C1  1303               	bcf	3,6	;RP1=0, select bank0
  3564  03C2  0855               	movf	?___fladd+3,w
  3565  03C3  1683               	bsf	3,5	;RP0=1, select bank1
  3566  03C4  1303               	bcf	3,6	;RP1=0, select bank1
  3567  03C5  00C1               	movwf	(sprintf@fval+3)^(0+128)
  3568  03C6  1283               	bcf	3,5	;RP0=0, select bank0
  3569  03C7  1303               	bcf	3,6	;RP1=0, select bank0
  3570  03C8  0854               	movf	?___fladd+2,w
  3571  03C9  1683               	bsf	3,5	;RP0=1, select bank1
  3572  03CA  1303               	bcf	3,6	;RP1=0, select bank1
  3573  03CB  00C0               	movwf	(sprintf@fval+2)^(0+128)
  3574  03CC  1283               	bcf	3,5	;RP0=0, select bank0
  3575  03CD  1303               	bcf	3,6	;RP1=0, select bank0
  3576  03CE  0853               	movf	?___fladd+1,w
  3577  03CF  1683               	bsf	3,5	;RP0=1, select bank1
  3578  03D0  1303               	bcf	3,6	;RP1=0, select bank1
  3579  03D1  00BF               	movwf	(sprintf@fval+1)^(0+128)
  3580  03D2  1283               	bcf	3,5	;RP0=0, select bank0
  3581  03D3  1303               	bcf	3,6	;RP1=0, select bank0
  3582  03D4  0852               	movf	?___fladd,w
  3583  03D5  1683               	bsf	3,5	;RP0=1, select bank1
  3584  03D6  1303               	bcf	3,6	;RP1=0, select bank1
  3585  03D7  00BE               	movwf	sprintf@fval^(0+128)
  3586  03D8                     l3332:
  3587                           
  3588                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  3589  03D8  1683               	bsf	3,5	;RP0=1, select bank1
  3590  03D9  1303               	bcf	3,6	;RP1=0, select bank1
  3591  03DA  0836               	movf	(sprintf@eexp+1)^(0+128),w
  3592  03DB  3A80               	xorlw	128
  3593  03DC  00FF               	movwf	btemp+1
  3594  03DD  3080               	movlw	128
  3595  03DE  027F               	subwf	btemp+1,w
  3596  03DF  1D03               	skipz
  3597  03E0  2BE3               	goto	u5235
  3598  03E1  300A               	movlw	10
  3599  03E2  0235               	subwf	sprintf@eexp^(0+128),w
  3600  03E3                     u5235:
  3601  03E3  1803               	skipnc
  3602  03E4  2BE6               	goto	u5231
  3603  03E5  2BE7               	goto	u5230
  3604  03E6                     u5231:
  3605  03E6  2C38               	goto	l3340
  3606  03E7                     u5230:
  3607  03E7                     l3334:
  3608  03E7  1683               	bsf	3,5	;RP0=1, select bank1
  3609  03E8  1303               	bcf	3,6	;RP1=0, select bank1
  3610  03E9  0841               	movf	(sprintf@fval+3)^(0+128),w
  3611  03EA  00F3               	movwf	___fleq@ff1+3
  3612  03EB  0840               	movf	(sprintf@fval+2)^(0+128),w
  3613  03EC  00F2               	movwf	___fleq@ff1+2
  3614  03ED  083F               	movf	(sprintf@fval+1)^(0+128),w
  3615  03EE  00F1               	movwf	___fleq@ff1+1
  3616  03EF  083E               	movf	sprintf@fval^(0+128),w
  3617  03F0  00F0               	movwf	___fleq@ff1
  3618  03F1  3000               	movlw	0
  3619  03F2  00F7               	movwf	___fleq@ff2+3
  3620  03F3  3000               	movlw	0
  3621  03F4  00F6               	movwf	___fleq@ff2+2
  3622  03F5  3000               	movlw	0
  3623  03F6  00F5               	movwf	___fleq@ff2+1
  3624  03F7  3000               	movlw	0
  3625  03F8  00F4               	movwf	___fleq@ff2
  3626  03F9  160A  158A  2328  120A  118A  	fcall	___fleq
  3627  03FE  1803               	btfsc	3,0
  3628  03FF  2C01               	goto	u5241
  3629  0400  2C02               	goto	u5240
  3630  0401                     u5241:
  3631  0401  2CAA               	goto	l3354
  3632  0402                     u5240:
  3633  0402                     l3336:
  3634  0402  1683               	bsf	3,5	;RP0=1, select bank1
  3635  0403  1303               	bcf	3,6	;RP1=0, select bank1
  3636  0404  0841               	movf	(sprintf@fval+3)^(0+128),w
  3637  0405  1283               	bcf	3,5	;RP0=0, select bank0
  3638  0406  1303               	bcf	3,6	;RP1=0, select bank0
  3639  0407  00D4               	movwf	___fltol@f1+3
  3640  0408  1683               	bsf	3,5	;RP0=1, select bank1
  3641  0409  1303               	bcf	3,6	;RP1=0, select bank1
  3642  040A  0840               	movf	(sprintf@fval+2)^(0+128),w
  3643  040B  1283               	bcf	3,5	;RP0=0, select bank0
  3644  040C  1303               	bcf	3,6	;RP1=0, select bank0
  3645  040D  00D3               	movwf	___fltol@f1+2
  3646  040E  1683               	bsf	3,5	;RP0=1, select bank1
  3647  040F  1303               	bcf	3,6	;RP1=0, select bank1
  3648  0410  083F               	movf	(sprintf@fval+1)^(0+128),w
  3649  0411  1283               	bcf	3,5	;RP0=0, select bank0
  3650  0412  1303               	bcf	3,6	;RP1=0, select bank0
  3651  0413  00D2               	movwf	___fltol@f1+1
  3652  0414  1683               	bsf	3,5	;RP0=1, select bank1
  3653  0415  1303               	bcf	3,6	;RP1=0, select bank1
  3654  0416  083E               	movf	sprintf@fval^(0+128),w
  3655  0417  1283               	bcf	3,5	;RP0=0, select bank0
  3656  0418  1303               	bcf	3,6	;RP1=0, select bank0
  3657  0419  00D1               	movwf	___fltol@f1
  3658  041A  160A  158A  254F  120A  118A  	fcall	___fltol
  3659  041F  1283               	bcf	3,5	;RP0=0, select bank0
  3660  0420  1303               	bcf	3,6	;RP1=0, select bank0
  3661  0421  0854               	movf	?___fltol+3,w
  3662  0422  0453               	iorwf	?___fltol+2,w
  3663  0423  0452               	iorwf	?___fltol+1,w
  3664  0424  0451               	iorwf	?___fltol,w
  3665  0425  1D03               	skipz
  3666  0426  2C28               	goto	u5251
  3667  0427  2C29               	goto	u5250
  3668  0428                     u5251:
  3669  0428  2CAA               	goto	l3354
  3670  0429                     u5250:
  3671  0429                     l3338:
  3672  0429  1683               	bsf	3,5	;RP0=1, select bank1
  3673  042A  1303               	bcf	3,6	;RP1=0, select bank1
  3674  042B  0836               	movf	(sprintf@eexp+1)^(0+128),w
  3675  042C  3A80               	xorlw	128
  3676  042D  00FF               	movwf	btemp+1
  3677  042E  3080               	movlw	128
  3678  042F  027F               	subwf	btemp+1,w
  3679  0430  1D03               	skipz
  3680  0431  2C34               	goto	u5265
  3681  0432  3002               	movlw	2
  3682  0433  0235               	subwf	sprintf@eexp^(0+128),w
  3683  0434                     u5265:
  3684  0434  1C03               	skipc
  3685  0435  2C37               	goto	u5261
  3686  0436  2C38               	goto	u5260
  3687  0437                     u5261:
  3688  0437  2CAA               	goto	l3354
  3689  0438                     u5260:
  3690  0438                     l3340:
  3691                           
  3692                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  3693  0438  1683               	bsf	3,5	;RP0=1, select bank1
  3694  0439  1303               	bcf	3,6	;RP1=0, select bank1
  3695  043A  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3696  043B  00F3               	movwf	___flge@ff1+3
  3697  043C  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3698  043D  00F2               	movwf	___flge@ff1+2
  3699  043E  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3700  043F  00F1               	movwf	___flge@ff1+1
  3701  0440  0837               	movf	sprintf@tmpval^(0+128),w
  3702  0441  00F0               	movwf	___flge@ff1
  3703  0442  3040               	movlw	64
  3704  0443  00F7               	movwf	___flge@ff2+3
  3705  0444  3089               	movlw	137
  3706  0445  00F6               	movwf	___flge@ff2+2
  3707  0446  3070               	movlw	112
  3708  0447  00F5               	movwf	___flge@ff2+1
  3709  0448  305F               	movlw	95
  3710  0449  00F4               	movwf	___flge@ff2
  3711  044A  160A  118A  20C1  120A  118A  	fcall	___flge
  3712  044F  1803               	btfsc	3,0
  3713  0450  2C52               	goto	u5271
  3714  0451  2C53               	goto	u5270
  3715  0452                     u5271:
  3716  0452  2C5C               	goto	l3344
  3717  0453                     u5270:
  3718  0453                     l3342:
  3719                           
  3720                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  3721  0453  30F7               	movlw	247
  3722  0454  1683               	bsf	3,5	;RP0=1, select bank1
  3723  0455  1303               	bcf	3,6	;RP1=0, select bank1
  3724  0456  07B5               	addwf	sprintf@eexp^(0+128),f
  3725  0457  1803               	skipnc
  3726  0458  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  3727  0459  30FF               	movlw	255
  3728  045A  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  3729                           
  3730                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1148:      }else{
  3731  045B  2C64               	goto	l3346
  3732  045C                     l3344:
  3733                           
  3734                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  3735  045C  30F8               	movlw	248
  3736  045D  1683               	bsf	3,5	;RP0=1, select bank1
  3737  045E  1303               	bcf	3,6	;RP1=0, select bank1
  3738  045F  07B5               	addwf	sprintf@eexp^(0+128),f
  3739  0460  1803               	skipnc
  3740  0461  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  3741  0462  30FF               	movlw	255
  3742  0463  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  3743  0464                     l3346:
  3744                           
  3745                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  3746  0464  0835               	movf	sprintf@eexp^(0+128),w
  3747  0465  120A  158A  2140  120A  118A  	fcall	_scale
  3748  046A  1283               	bcf	3,5	;RP0=0, select bank0
  3749  046B  1303               	bcf	3,6	;RP1=0, select bank0
  3750  046C  0841               	movf	?_scale+3,w
  3751  046D  1683               	bsf	3,5	;RP0=1, select bank1
  3752  046E  1303               	bcf	3,6	;RP1=0, select bank1
  3753  046F  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3754  0470  1283               	bcf	3,5	;RP0=0, select bank0
  3755  0471  1303               	bcf	3,6	;RP1=0, select bank0
  3756  0472  0840               	movf	?_scale+2,w
  3757  0473  1683               	bsf	3,5	;RP0=1, select bank1
  3758  0474  1303               	bcf	3,6	;RP1=0, select bank1
  3759  0475  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3760  0476  1283               	bcf	3,5	;RP0=0, select bank0
  3761  0477  1303               	bcf	3,6	;RP1=0, select bank0
  3762  0478  083F               	movf	?_scale+1,w
  3763  0479  1683               	bsf	3,5	;RP0=1, select bank1
  3764  047A  1303               	bcf	3,6	;RP1=0, select bank1
  3765  047B  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3766  047C  1283               	bcf	3,5	;RP0=0, select bank0
  3767  047D  1303               	bcf	3,6	;RP1=0, select bank0
  3768  047E  083E               	movf	?_scale,w
  3769  047F  1683               	bsf	3,5	;RP0=1, select bank1
  3770  0480  1303               	bcf	3,6	;RP1=0, select bank1
  3771  0481  00B7               	movwf	sprintf@tmpval^(0+128)
  3772  0482                     l3348:
  3773  0482  0841               	movf	(sprintf@fval+3)^(0+128),w
  3774  0483  00F3               	movwf	__div_to_l_@f1+3
  3775  0484  0840               	movf	(sprintf@fval+2)^(0+128),w
  3776  0485  00F2               	movwf	__div_to_l_@f1+2
  3777  0486  083F               	movf	(sprintf@fval+1)^(0+128),w
  3778  0487  00F1               	movwf	__div_to_l_@f1+1
  3779  0488  083E               	movf	sprintf@fval^(0+128),w
  3780  0489  00F0               	movwf	__div_to_l_@f1
  3781  048A  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3782  048B  00F7               	movwf	__div_to_l_@f2+3
  3783  048C  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3784  048D  00F6               	movwf	__div_to_l_@f2+2
  3785  048E  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3786  048F  00F5               	movwf	__div_to_l_@f2+1
  3787  0490  0837               	movf	sprintf@tmpval^(0+128),w
  3788  0491  00F4               	movwf	__div_to_l_@f2
  3789  0492  160A  158A  2742  120A  118A  	fcall	__div_to_l_
  3790  0497  0873               	movf	?__div_to_l_+3,w
  3791  0498  1683               	bsf	3,5	;RP0=1, select bank1
  3792  0499  1303               	bcf	3,6	;RP1=0, select bank1
  3793  049A  00B4               	movwf	(sprintf@val+3)^(0+128)
  3794  049B  0872               	movf	?__div_to_l_+2,w
  3795  049C  00B3               	movwf	(sprintf@val+2)^(0+128)
  3796  049D  0871               	movf	?__div_to_l_+1,w
  3797  049E  00B2               	movwf	(sprintf@val+1)^(0+128)
  3798  049F  0870               	movf	?__div_to_l_,w
  3799  04A0  00B1               	movwf	sprintf@val^(0+128)
  3800  04A1                     l3352:
  3801                           
  3802                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  3803  04A1  3000               	movlw	0
  3804  04A2  00C1               	movwf	(sprintf@fval+3)^(0+128)
  3805  04A3  3000               	movlw	0
  3806  04A4  00C0               	movwf	(sprintf@fval+2)^(0+128)
  3807  04A5  3000               	movlw	0
  3808  04A6  00BF               	movwf	(sprintf@fval+1)^(0+128)
  3809  04A7  3000               	movlw	0
  3810  04A8  00BE               	movwf	sprintf@fval^(0+128)
  3811                           
  3812                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  3813  04A9  2D2E               	goto	l3360
  3814  04AA                     l3354:
  3815                           
  3816                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  3817  04AA  1683               	bsf	3,5	;RP0=1, select bank1
  3818  04AB  1303               	bcf	3,6	;RP1=0, select bank1
  3819  04AC  0841               	movf	(sprintf@fval+3)^(0+128),w
  3820  04AD  1283               	bcf	3,5	;RP0=0, select bank0
  3821  04AE  1303               	bcf	3,6	;RP1=0, select bank0
  3822  04AF  00D4               	movwf	___fltol@f1+3
  3823  04B0  1683               	bsf	3,5	;RP0=1, select bank1
  3824  04B1  1303               	bcf	3,6	;RP1=0, select bank1
  3825  04B2  0840               	movf	(sprintf@fval+2)^(0+128),w
  3826  04B3  1283               	bcf	3,5	;RP0=0, select bank0
  3827  04B4  1303               	bcf	3,6	;RP1=0, select bank0
  3828  04B5  00D3               	movwf	___fltol@f1+2
  3829  04B6  1683               	bsf	3,5	;RP0=1, select bank1
  3830  04B7  1303               	bcf	3,6	;RP1=0, select bank1
  3831  04B8  083F               	movf	(sprintf@fval+1)^(0+128),w
  3832  04B9  1283               	bcf	3,5	;RP0=0, select bank0
  3833  04BA  1303               	bcf	3,6	;RP1=0, select bank0
  3834  04BB  00D2               	movwf	___fltol@f1+1
  3835  04BC  1683               	bsf	3,5	;RP0=1, select bank1
  3836  04BD  1303               	bcf	3,6	;RP1=0, select bank1
  3837  04BE  083E               	movf	sprintf@fval^(0+128),w
  3838  04BF  1283               	bcf	3,5	;RP0=0, select bank0
  3839  04C0  1303               	bcf	3,6	;RP1=0, select bank0
  3840  04C1  00D1               	movwf	___fltol@f1
  3841  04C2  160A  158A  254F  120A  118A  	fcall	___fltol
  3842  04C7  1283               	bcf	3,5	;RP0=0, select bank0
  3843  04C8  1303               	bcf	3,6	;RP1=0, select bank0
  3844  04C9  0854               	movf	?___fltol+3,w
  3845  04CA  1683               	bsf	3,5	;RP0=1, select bank1
  3846  04CB  1303               	bcf	3,6	;RP1=0, select bank1
  3847  04CC  00B4               	movwf	(sprintf@val+3)^(0+128)
  3848  04CD  1283               	bcf	3,5	;RP0=0, select bank0
  3849  04CE  1303               	bcf	3,6	;RP1=0, select bank0
  3850  04CF  0853               	movf	?___fltol+2,w
  3851  04D0  1683               	bsf	3,5	;RP0=1, select bank1
  3852  04D1  1303               	bcf	3,6	;RP1=0, select bank1
  3853  04D2  00B3               	movwf	(sprintf@val+2)^(0+128)
  3854  04D3  1283               	bcf	3,5	;RP0=0, select bank0
  3855  04D4  1303               	bcf	3,6	;RP1=0, select bank0
  3856  04D5  0852               	movf	?___fltol+1,w
  3857  04D6  1683               	bsf	3,5	;RP0=1, select bank1
  3858  04D7  1303               	bcf	3,6	;RP1=0, select bank1
  3859  04D8  00B2               	movwf	(sprintf@val+1)^(0+128)
  3860  04D9  1283               	bcf	3,5	;RP0=0, select bank0
  3861  04DA  1303               	bcf	3,6	;RP1=0, select bank0
  3862  04DB  0851               	movf	?___fltol,w
  3863  04DC  1683               	bsf	3,5	;RP0=1, select bank1
  3864  04DD  1303               	bcf	3,6	;RP1=0, select bank1
  3865  04DE  00B1               	movwf	sprintf@val^(0+128)
  3866  04DF                     l3356:
  3867                           
  3868                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  3869  04DF  0834               	movf	(sprintf@val+3)^(0+128),w
  3870  04E0  00F3               	movwf	___xxtofl@val+3
  3871  04E1  0833               	movf	(sprintf@val+2)^(0+128),w
  3872  04E2  00F2               	movwf	___xxtofl@val+2
  3873  04E3  0832               	movf	(sprintf@val+1)^(0+128),w
  3874  04E4  00F1               	movwf	___xxtofl@val+1
  3875  04E5  0831               	movf	sprintf@val^(0+128),w
  3876  04E6  00F0               	movwf	___xxtofl@val
  3877  04E7  3000               	movlw	0
  3878  04E8  160A  158A  25CB  120A  118A  	fcall	___xxtofl
  3879  04ED  0873               	movf	?___xxtofl+3,w
  3880  04EE  1283               	bcf	3,5	;RP0=0, select bank0
  3881  04EF  1303               	bcf	3,6	;RP1=0, select bank0
  3882  04F0  00E9               	movwf	___flsub@a+3
  3883  04F1  0872               	movf	?___xxtofl+2,w
  3884  04F2  00E8               	movwf	___flsub@a+2
  3885  04F3  0871               	movf	?___xxtofl+1,w
  3886  04F4  00E7               	movwf	___flsub@a+1
  3887  04F5  0870               	movf	?___xxtofl,w
  3888  04F6  00E6               	movwf	___flsub@a
  3889  04F7  1683               	bsf	3,5	;RP0=1, select bank1
  3890  04F8  1303               	bcf	3,6	;RP1=0, select bank1
  3891  04F9  0841               	movf	(sprintf@fval+3)^(0+128),w
  3892  04FA  1283               	bcf	3,5	;RP0=0, select bank0
  3893  04FB  1303               	bcf	3,6	;RP1=0, select bank0
  3894  04FC  00ED               	movwf	___flsub@b+3
  3895  04FD  1683               	bsf	3,5	;RP0=1, select bank1
  3896  04FE  1303               	bcf	3,6	;RP1=0, select bank1
  3897  04FF  0840               	movf	(sprintf@fval+2)^(0+128),w
  3898  0500  1283               	bcf	3,5	;RP0=0, select bank0
  3899  0501  1303               	bcf	3,6	;RP1=0, select bank0
  3900  0502  00EC               	movwf	___flsub@b+2
  3901  0503  1683               	bsf	3,5	;RP0=1, select bank1
  3902  0504  1303               	bcf	3,6	;RP1=0, select bank1
  3903  0505  083F               	movf	(sprintf@fval+1)^(0+128),w
  3904  0506  1283               	bcf	3,5	;RP0=0, select bank0
  3905  0507  1303               	bcf	3,6	;RP1=0, select bank0
  3906  0508  00EB               	movwf	___flsub@b+1
  3907  0509  1683               	bsf	3,5	;RP0=1, select bank1
  3908  050A  1303               	bcf	3,6	;RP1=0, select bank1
  3909  050B  083E               	movf	sprintf@fval^(0+128),w
  3910  050C  1283               	bcf	3,5	;RP0=0, select bank0
  3911  050D  1303               	bcf	3,6	;RP1=0, select bank0
  3912  050E  00EA               	movwf	___flsub@b
  3913  050F  160A  158A  215B  120A  118A  	fcall	___flsub
  3914  0514  1283               	bcf	3,5	;RP0=0, select bank0
  3915  0515  1303               	bcf	3,6	;RP1=0, select bank0
  3916  0516  0869               	movf	?___flsub+3,w
  3917  0517  1683               	bsf	3,5	;RP0=1, select bank1
  3918  0518  1303               	bcf	3,6	;RP1=0, select bank1
  3919  0519  00C1               	movwf	(sprintf@fval+3)^(0+128)
  3920  051A  1283               	bcf	3,5	;RP0=0, select bank0
  3921  051B  1303               	bcf	3,6	;RP1=0, select bank0
  3922  051C  0868               	movf	?___flsub+2,w
  3923  051D  1683               	bsf	3,5	;RP0=1, select bank1
  3924  051E  1303               	bcf	3,6	;RP1=0, select bank1
  3925  051F  00C0               	movwf	(sprintf@fval+2)^(0+128)
  3926  0520  1283               	bcf	3,5	;RP0=0, select bank0
  3927  0521  1303               	bcf	3,6	;RP1=0, select bank0
  3928  0522  0867               	movf	?___flsub+1,w
  3929  0523  1683               	bsf	3,5	;RP0=1, select bank1
  3930  0524  1303               	bcf	3,6	;RP1=0, select bank1
  3931  0525  00BF               	movwf	(sprintf@fval+1)^(0+128)
  3932  0526  1283               	bcf	3,5	;RP0=0, select bank0
  3933  0527  1303               	bcf	3,6	;RP1=0, select bank0
  3934  0528  0866               	movf	?___flsub,w
  3935  0529  1683               	bsf	3,5	;RP0=1, select bank1
  3936  052A  1303               	bcf	3,6	;RP1=0, select bank1
  3937  052B  00BE               	movwf	sprintf@fval^(0+128)
  3938  052C                     l3358:
  3939                           
  3940                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  3941  052C  01B5               	clrf	sprintf@eexp^(0+128)
  3942  052D  01B6               	clrf	(sprintf@eexp+1)^(0+128)
  3943  052E                     l3360:
  3944                           
  3945                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3946  052E  01C2               	clrf	sprintf@c^(0+128)
  3947  052F  0AC2               	incf	sprintf@c^(0+128),f
  3948  0530                     l3366:
  3949                           
  3950                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  3951  0530  0842               	movf	sprintf@c^(0+128),w
  3952  0531  00A5               	movwf	??_sprintf^(0+128)
  3953  0532  3001               	movlw	1
  3954  0533                     u5285:
  3955  0533  1003               	clrc
  3956  0534  0DA5               	rlf	??_sprintf^(0+128),f
  3957  0535  3EFF               	addlw	-1
  3958  0536  1D03               	skipz
  3959  0537  2D33               	goto	u5285
  3960  0538  1003               	clrc
  3961  0539  0D25               	rlf	??_sprintf^(0+128),w
  3962  053A  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3963  053B  0084               	movwf	4
  3964  053C  160A  118A  200A  120A  118A  	fcall	stringdir
  3965  0541  00A6               	movwf	(??_sprintf+1)^(0+128)
  3966  0542  160A  118A  200A  120A  118A  	fcall	stringdir
  3967  0547  00A7               	movwf	((??_sprintf+1)^(0+128)+1)
  3968  0548  160A  118A  200A  120A  118A  	fcall	stringdir
  3969  054D  00A8               	movwf	((??_sprintf+1)^(0+128)+2)
  3970  054E  160A  118A  200A  120A  118A  	fcall	stringdir
  3971  0553  00A9               	movwf	((??_sprintf+1)^(0+128)+3)
  3972  0554  0829               	movf	(??_sprintf+4)^(0+128),w
  3973  0555  0234               	subwf	(sprintf@val+3)^(0+128),w
  3974  0556  1D03               	skipz
  3975  0557  2D62               	goto	u5295
  3976  0558  0828               	movf	(??_sprintf+3)^(0+128),w
  3977  0559  0233               	subwf	(sprintf@val+2)^(0+128),w
  3978  055A  1D03               	skipz
  3979  055B  2D62               	goto	u5295
  3980  055C  0827               	movf	(??_sprintf+2)^(0+128),w
  3981  055D  0232               	subwf	(sprintf@val+1)^(0+128),w
  3982  055E  1D03               	skipz
  3983  055F  2D62               	goto	u5295
  3984  0560  0826               	movf	(??_sprintf+1)^(0+128),w
  3985  0561  0231               	subwf	sprintf@val^(0+128),w
  3986  0562                     u5295:
  3987  0562  1803               	skipnc
  3988  0563  2D65               	goto	u5291
  3989  0564  2D66               	goto	u5290
  3990  0565                     u5291:
  3991  0565  2D67               	goto	l3370
  3992  0566                     u5290:
  3993  0566  2D71               	goto	l3372
  3994  0567                     l3370:
  3995  0567  3001               	movlw	1
  3996  0568  00A5               	movwf	??_sprintf^(0+128)
  3997  0569  0825               	movf	??_sprintf^(0+128),w
  3998  056A  07C2               	addwf	sprintf@c^(0+128),f
  3999  056B  300A               	movlw	10
  4000  056C  0642               	xorwf	sprintf@c^(0+128),w
  4001  056D  1D03               	btfss	3,2
  4002  056E  2D70               	goto	u5301
  4003  056F  2D71               	goto	u5300
  4004  0570                     u5301:
  4005  0570  2D30               	goto	l3366
  4006  0571                     u5300:
  4007  0571                     l3372:
  4008                           
  4009                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1201:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x0
      +                          3)
  4010  0571  3003               	movlw	3
  4011  0572  052F               	andwf	sprintf@flag^(0+128),w
  4012  0573  00A5               	movwf	??_sprintf^(0+128)
  4013  0574  3000               	movlw	0
  4014  0575  0530               	andwf	(sprintf@flag+1)^(0+128),w
  4015  0576  00A6               	movwf	(??_sprintf+1)^(0+128)
  4016  0577  0825               	movf	??_sprintf^(0+128),w
  4017  0578  0426               	iorwf	(??_sprintf^(0+128)+1),w
  4018  0579  1903               	btfsc	3,2
  4019  057A  2D7C               	goto	u5311
  4020  057B  2D7D               	goto	u5310
  4021  057C                     u5311:
  4022  057C  2DEF               	goto	l322
  4023  057D                     u5310:
  4024  057D                     l3374:
  4025                           
  4026                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  4027  057D  302D               	movlw	45
  4028  057E  00A5               	movwf	??_sprintf^(0+128)
  4029  057F  083D               	movf	sprintf@sp^(0+128),w
  4030  0580  0084               	movwf	4
  4031  0581  0825               	movf	??_sprintf^(0+128),w
  4032  0582  1783               	bsf	3,7	;select IRP bank2
  4033  0583  0080               	movwf	0
  4034  0584                     l3376:
  4035  0584  3001               	movlw	1
  4036  0585  00A5               	movwf	??_sprintf^(0+128)
  4037  0586  0825               	movf	??_sprintf^(0+128),w
  4038  0587  07BD               	addwf	sprintf@sp^(0+128),f
  4039  0588  2DEF               	goto	l322
  4040  0589                     l3378:
  4041                           
  4042                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  4043  0589  0842               	movf	sprintf@c^(0+128),w
  4044  058A  00A5               	movwf	??_sprintf^(0+128)
  4045  058B  3001               	movlw	1
  4046  058C                     u5325:
  4047  058C  1003               	clrc
  4048  058D  0DA5               	rlf	??_sprintf^(0+128),f
  4049  058E  3EFF               	addlw	-1
  4050  058F  1D03               	skipz
  4051  0590  2D8C               	goto	u5325
  4052  0591  1003               	clrc
  4053  0592  0D25               	rlf	??_sprintf^(0+128),w
  4054  0593  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4055  0594  0084               	movwf	4
  4056  0595  160A  118A  200A  120A  118A  	fcall	stringdir
  4057  059A  00F0               	movwf	___lldiv@divisor
  4058  059B  160A  118A  200A  120A  118A  	fcall	stringdir
  4059  05A0  00F1               	movwf	___lldiv@divisor+1
  4060  05A1  160A  118A  200A  120A  118A  	fcall	stringdir
  4061  05A6  00F2               	movwf	___lldiv@divisor+2
  4062  05A7  160A  118A  200A  120A  118A  	fcall	stringdir
  4063  05AC  00F3               	movwf	___lldiv@divisor+3
  4064  05AD  0834               	movf	(sprintf@val+3)^(0+128),w
  4065  05AE  00F7               	movwf	___lldiv@dividend+3
  4066  05AF  0833               	movf	(sprintf@val+2)^(0+128),w
  4067  05B0  00F6               	movwf	___lldiv@dividend+2
  4068  05B1  0832               	movf	(sprintf@val+1)^(0+128),w
  4069  05B2  00F5               	movwf	___lldiv@dividend+1
  4070  05B3  0831               	movf	sprintf@val^(0+128),w
  4071  05B4  00F4               	movwf	___lldiv@dividend
  4072  05B5  160A  158A  2480  120A  118A  	fcall	___lldiv
  4073  05BA  0873               	movf	?___lldiv+3,w
  4074  05BB  1683               	bsf	3,5	;RP0=1, select bank1
  4075  05BC  1303               	bcf	3,6	;RP1=0, select bank1
  4076  05BD  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  4077  05BE  0872               	movf	?___lldiv+2,w
  4078  05BF  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  4079  05C0  0871               	movf	?___lldiv+1,w
  4080  05C1  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  4081  05C2  0870               	movf	?___lldiv,w
  4082  05C3  00B7               	movwf	sprintf@tmpval^(0+128)
  4083  05C4                     l3380:
  4084                           
  4085                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  4086  05C4  3000               	movlw	0
  4087  05C5  00F3               	movwf	___llmod@divisor+3
  4088  05C6  3000               	movlw	0
  4089  05C7  00F2               	movwf	___llmod@divisor+2
  4090  05C8  3000               	movlw	0
  4091  05C9  00F1               	movwf	___llmod@divisor+1
  4092  05CA  300A               	movlw	10
  4093  05CB  00F0               	movwf	___llmod@divisor
  4094  05CC  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  4095  05CD  00F7               	movwf	___llmod@dividend+3
  4096  05CE  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  4097  05CF  00F6               	movwf	___llmod@dividend+2
  4098  05D0  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  4099  05D1  00F5               	movwf	___llmod@dividend+1
  4100  05D2  0837               	movf	sprintf@tmpval^(0+128),w
  4101  05D3  00F4               	movwf	___llmod@dividend
  4102  05D4  160A  158A  2376  120A  118A  	fcall	___llmod
  4103  05D9  0873               	movf	?___llmod+3,w
  4104  05DA  1683               	bsf	3,5	;RP0=1, select bank1
  4105  05DB  1303               	bcf	3,6	;RP1=0, select bank1
  4106  05DC  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  4107  05DD  0872               	movf	?___llmod+2,w
  4108  05DE  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  4109  05DF  0871               	movf	?___llmod+1,w
  4110  05E0  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  4111  05E1  0870               	movf	?___llmod,w
  4112  05E2  00B7               	movwf	sprintf@tmpval^(0+128)
  4113  05E3                     l3382:
  4114                           
  4115                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  4116  05E3  0837               	movf	sprintf@tmpval^(0+128),w
  4117  05E4  3E30               	addlw	48
  4118  05E5  00A5               	movwf	??_sprintf^(0+128)
  4119  05E6  083D               	movf	sprintf@sp^(0+128),w
  4120  05E7  0084               	movwf	4
  4121  05E8  0825               	movf	??_sprintf^(0+128),w
  4122  05E9  1783               	bsf	3,7	;select IRP bank2
  4123  05EA  0080               	movwf	0
  4124  05EB  3001               	movlw	1
  4125  05EC  00A5               	movwf	??_sprintf^(0+128)
  4126  05ED  0825               	movf	??_sprintf^(0+128),w
  4127  05EE  07BD               	addwf	sprintf@sp^(0+128),f
  4128  05EF                     l322:	
  4129                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1232:    }
  4130                           
  4131                           
  4132                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  4133  05EF  3001               	movlw	1
  4134  05F0  02C2               	subwf	sprintf@c^(0+128),f
  4135  05F1  0A42               	incf	sprintf@c^(0+128),w
  4136  05F2  1D03               	btfss	3,2
  4137  05F3  2DF5               	goto	u5331
  4138  05F4  2DF6               	goto	u5330
  4139  05F5                     u5331:
  4140  05F5  2D89               	goto	l3378
  4141  05F6                     u5330:
  4142  05F6  2E0A               	goto	l3390
  4143  05F7                     l3384:
  4144                           
  4145                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  4146  05F7  3030               	movlw	48
  4147  05F8  1683               	bsf	3,5	;RP0=1, select bank1
  4148  05F9  1303               	bcf	3,6	;RP1=0, select bank1
  4149  05FA  00A5               	movwf	??_sprintf^(0+128)
  4150  05FB  083D               	movf	sprintf@sp^(0+128),w
  4151  05FC  0084               	movwf	4
  4152  05FD  0825               	movf	??_sprintf^(0+128),w
  4153  05FE  1783               	bsf	3,7	;select IRP bank2
  4154  05FF  0080               	movwf	0
  4155  0600                     l3386:
  4156  0600  3001               	movlw	1
  4157  0601  00A5               	movwf	??_sprintf^(0+128)
  4158  0602  0825               	movf	??_sprintf^(0+128),w
  4159  0603  07BD               	addwf	sprintf@sp^(0+128),f
  4160  0604                     l3388:
  4161                           
  4162                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  4163  0604  30FF               	movlw	255
  4164  0605  07B5               	addwf	sprintf@eexp^(0+128),f
  4165  0606  1803               	skipnc
  4166  0607  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  4167  0608  30FF               	movlw	255
  4168  0609  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  4169  060A                     l3390:
  4170                           
  4171                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  4172  060A  0836               	movf	(sprintf@eexp+1)^(0+128),w
  4173  060B  3A80               	xorlw	128
  4174  060C  00FF               	movwf	btemp+1
  4175  060D  3080               	movlw	128
  4176  060E  027F               	subwf	btemp+1,w
  4177  060F  1D03               	skipz
  4178  0610  2E13               	goto	u5345
  4179  0611  3001               	movlw	1
  4180  0612  0235               	subwf	sprintf@eexp^(0+128),w
  4181  0613                     u5345:
  4182  0613  1803               	skipnc
  4183  0614  2E16               	goto	u5341
  4184  0615  2E17               	goto	u5340
  4185  0616                     u5341:
  4186  0616  2DF7               	goto	l3384
  4187  0617                     u5340:
  4188  0617                     l3392:
  4189                           
  4190                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  4191  0617  1683               	bsf	3,5	;RP0=1, select bank1
  4192  0618  1303               	bcf	3,6	;RP1=0, select bank1
  4193  0619  083C               	movf	(sprintf@prec+1)^(0+128),w
  4194  061A  3A80               	xorlw	128
  4195  061B  00FF               	movwf	btemp+1
  4196  061C  3080               	movlw	128
  4197  061D  027F               	subwf	btemp+1,w
  4198  061E  1D03               	skipz
  4199  061F  2E22               	goto	u5355
  4200  0620  3009               	movlw	9
  4201  0621  023B               	subwf	sprintf@prec^(0+128),w
  4202  0622                     u5355:
  4203  0622  1C03               	skipc
  4204  0623  2E25               	goto	u5351
  4205  0624  2E26               	goto	u5350
  4206  0625                     u5351:
  4207  0625  2E2D               	goto	l3396
  4208  0626                     u5350:
  4209  0626                     l3394:
  4210                           
  4211                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  4212  0626  3008               	movlw	8
  4213  0627  1683               	bsf	3,5	;RP0=1, select bank1
  4214  0628  1303               	bcf	3,6	;RP1=0, select bank1
  4215  0629  00A5               	movwf	??_sprintf^(0+128)
  4216  062A  0825               	movf	??_sprintf^(0+128),w
  4217  062B  00C2               	movwf	sprintf@c^(0+128)
  4218  062C  2E33               	goto	l329
  4219  062D                     l3396:
  4220                           
  4221                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  4222  062D  1683               	bsf	3,5	;RP0=1, select bank1
  4223  062E  1303               	bcf	3,6	;RP1=0, select bank1
  4224  062F  083B               	movf	sprintf@prec^(0+128),w
  4225  0630  00A5               	movwf	??_sprintf^(0+128)
  4226  0631  0825               	movf	??_sprintf^(0+128),w
  4227  0632  00C2               	movwf	sprintf@c^(0+128)
  4228  0633                     l329:
  4229                           
  4230                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  4231  0633  0842               	movf	sprintf@c^(0+128),w
  4232  0634  00A5               	movwf	??_sprintf^(0+128)
  4233  0635  01A6               	clrf	(??_sprintf^(0+128)+1)
  4234  0636  0825               	movf	??_sprintf^(0+128),w
  4235  0637  02BB               	subwf	sprintf@prec^(0+128),f
  4236  0638  0826               	movf	(??_sprintf+1)^(0+128),w
  4237  0639  1C03               	skipc
  4238  063A  03BC               	decf	(sprintf@prec+1)^(0+128),f
  4239  063B  02BC               	subwf	(sprintf@prec+1)^(0+128),f
  4240  063C                     l3398:
  4241                           
  4242                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  4243  063C  0842               	movf	sprintf@c^(0+128),w
  4244  063D  1903               	btfsc	3,2
  4245  063E  2E40               	goto	u5361
  4246  063F  2E41               	goto	u5360
  4247  0640                     u5361:
  4248  0640  2E4C               	goto	l3404
  4249  0641                     u5360:
  4250  0641                     l3400:
  4251                           
  4252                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  4253  0641  302E               	movlw	46
  4254  0642  00A5               	movwf	??_sprintf^(0+128)
  4255  0643  083D               	movf	sprintf@sp^(0+128),w
  4256  0644  0084               	movwf	4
  4257  0645  0825               	movf	??_sprintf^(0+128),w
  4258  0646  1783               	bsf	3,7	;select IRP bank2
  4259  0647  0080               	movwf	0
  4260  0648                     l3402:
  4261  0648  3001               	movlw	1
  4262  0649  00A5               	movwf	??_sprintf^(0+128)
  4263  064A  0825               	movf	??_sprintf^(0+128),w
  4264  064B  07BD               	addwf	sprintf@sp^(0+128),f
  4265  064C                     l3404:
  4266                           
  4267                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  4268  064C  0842               	movf	sprintf@c^(0+128),w
  4269  064D  120A  158A  2140  120A  118A  	fcall	_scale
  4270  0652  1283               	bcf	3,5	;RP0=0, select bank0
  4271  0653  1303               	bcf	3,6	;RP1=0, select bank0
  4272  0654  0841               	movf	?_scale+3,w
  4273  0655  1683               	bsf	3,5	;RP0=1, select bank1
  4274  0656  1303               	bcf	3,6	;RP1=0, select bank1
  4275  0657  00AD               	movwf	(_sprintf$932+3)^(0+128)
  4276  0658  1283               	bcf	3,5	;RP0=0, select bank0
  4277  0659  1303               	bcf	3,6	;RP1=0, select bank0
  4278  065A  0840               	movf	?_scale+2,w
  4279  065B  1683               	bsf	3,5	;RP0=1, select bank1
  4280  065C  1303               	bcf	3,6	;RP1=0, select bank1
  4281  065D  00AC               	movwf	(_sprintf$932+2)^(0+128)
  4282  065E  1283               	bcf	3,5	;RP0=0, select bank0
  4283  065F  1303               	bcf	3,6	;RP1=0, select bank0
  4284  0660  083F               	movf	?_scale+1,w
  4285  0661  1683               	bsf	3,5	;RP0=1, select bank1
  4286  0662  1303               	bcf	3,6	;RP1=0, select bank1
  4287  0663  00AB               	movwf	(_sprintf$932+1)^(0+128)
  4288  0664  1283               	bcf	3,5	;RP0=0, select bank0
  4289  0665  1303               	bcf	3,6	;RP1=0, select bank0
  4290  0666  083E               	movf	?_scale,w
  4291  0667  1683               	bsf	3,5	;RP0=1, select bank1
  4292  0668  1303               	bcf	3,6	;RP1=0, select bank1
  4293  0669  00AA               	movwf	_sprintf$932^(0+128)
  4294  066A                     l3406:
  4295                           
  4296                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  4297  066A  082D               	movf	(_sprintf$932+3)^(0+128),w
  4298  066B  1283               	bcf	3,5	;RP0=0, select bank0
  4299  066C  1303               	bcf	3,6	;RP1=0, select bank0
  4300  066D  00AB               	movwf	___flmul@a+3
  4301  066E  1683               	bsf	3,5	;RP0=1, select bank1
  4302  066F  1303               	bcf	3,6	;RP1=0, select bank1
  4303  0670  082C               	movf	(_sprintf$932+2)^(0+128),w
  4304  0671  1283               	bcf	3,5	;RP0=0, select bank0
  4305  0672  1303               	bcf	3,6	;RP1=0, select bank0
  4306  0673  00AA               	movwf	___flmul@a+2
  4307  0674  1683               	bsf	3,5	;RP0=1, select bank1
  4308  0675  1303               	bcf	3,6	;RP1=0, select bank1
  4309  0676  082B               	movf	(_sprintf$932+1)^(0+128),w
  4310  0677  1283               	bcf	3,5	;RP0=0, select bank0
  4311  0678  1303               	bcf	3,6	;RP1=0, select bank0
  4312  0679  00A9               	movwf	___flmul@a+1
  4313  067A  1683               	bsf	3,5	;RP0=1, select bank1
  4314  067B  1303               	bcf	3,6	;RP1=0, select bank1
  4315  067C  082A               	movf	_sprintf$932^(0+128),w
  4316  067D  1283               	bcf	3,5	;RP0=0, select bank0
  4317  067E  1303               	bcf	3,6	;RP1=0, select bank0
  4318  067F  00A8               	movwf	___flmul@a
  4319  0680  1683               	bsf	3,5	;RP0=1, select bank1
  4320  0681  1303               	bcf	3,6	;RP1=0, select bank1
  4321  0682  0841               	movf	(sprintf@fval+3)^(0+128),w
  4322  0683  1283               	bcf	3,5	;RP0=0, select bank0
  4323  0684  1303               	bcf	3,6	;RP1=0, select bank0
  4324  0685  00A7               	movwf	___flmul@b+3
  4325  0686  1683               	bsf	3,5	;RP0=1, select bank1
  4326  0687  1303               	bcf	3,6	;RP1=0, select bank1
  4327  0688  0840               	movf	(sprintf@fval+2)^(0+128),w
  4328  0689  1283               	bcf	3,5	;RP0=0, select bank0
  4329  068A  1303               	bcf	3,6	;RP1=0, select bank0
  4330  068B  00A6               	movwf	___flmul@b+2
  4331  068C  1683               	bsf	3,5	;RP0=1, select bank1
  4332  068D  1303               	bcf	3,6	;RP1=0, select bank1
  4333  068E  083F               	movf	(sprintf@fval+1)^(0+128),w
  4334  068F  1283               	bcf	3,5	;RP0=0, select bank0
  4335  0690  1303               	bcf	3,6	;RP1=0, select bank0
  4336  0691  00A5               	movwf	___flmul@b+1
  4337  0692  1683               	bsf	3,5	;RP0=1, select bank1
  4338  0693  1303               	bcf	3,6	;RP1=0, select bank1
  4339  0694  083E               	movf	sprintf@fval^(0+128),w
  4340  0695  1283               	bcf	3,5	;RP0=0, select bank0
  4341  0696  1303               	bcf	3,6	;RP1=0, select bank0
  4342  0697  00A4               	movwf	___flmul@b
  4343  0698  120A  158A  249F  120A  118A  	fcall	___flmul
  4344  069D  1283               	bcf	3,5	;RP0=0, select bank0
  4345  069E  1303               	bcf	3,6	;RP1=0, select bank0
  4346  069F  0827               	movf	?___flmul+3,w
  4347  06A0  00D4               	movwf	___fltol@f1+3
  4348  06A1  0826               	movf	?___flmul+2,w
  4349  06A2  00D3               	movwf	___fltol@f1+2
  4350  06A3  0825               	movf	?___flmul+1,w
  4351  06A4  00D2               	movwf	___fltol@f1+1
  4352  06A5  0824               	movf	?___flmul,w
  4353  06A6  00D1               	movwf	___fltol@f1
  4354  06A7  160A  158A  254F  120A  118A  	fcall	___fltol
  4355  06AC  1283               	bcf	3,5	;RP0=0, select bank0
  4356  06AD  1303               	bcf	3,6	;RP1=0, select bank0
  4357  06AE  0854               	movf	?___fltol+3,w
  4358  06AF  1683               	bsf	3,5	;RP0=1, select bank1
  4359  06B0  1303               	bcf	3,6	;RP1=0, select bank1
  4360  06B1  00B4               	movwf	(sprintf@val+3)^(0+128)
  4361  06B2  1283               	bcf	3,5	;RP0=0, select bank0
  4362  06B3  1303               	bcf	3,6	;RP1=0, select bank0
  4363  06B4  0853               	movf	?___fltol+2,w
  4364  06B5  1683               	bsf	3,5	;RP0=1, select bank1
  4365  06B6  1303               	bcf	3,6	;RP1=0, select bank1
  4366  06B7  00B3               	movwf	(sprintf@val+2)^(0+128)
  4367  06B8  1283               	bcf	3,5	;RP0=0, select bank0
  4368  06B9  1303               	bcf	3,6	;RP1=0, select bank0
  4369  06BA  0852               	movf	?___fltol+1,w
  4370  06BB  1683               	bsf	3,5	;RP0=1, select bank1
  4371  06BC  1303               	bcf	3,6	;RP1=0, select bank1
  4372  06BD  00B2               	movwf	(sprintf@val+1)^(0+128)
  4373  06BE  1283               	bcf	3,5	;RP0=0, select bank0
  4374  06BF  1303               	bcf	3,6	;RP1=0, select bank0
  4375  06C0  0851               	movf	?___fltol,w
  4376  06C1  1683               	bsf	3,5	;RP0=1, select bank1
  4377  06C2  1303               	bcf	3,6	;RP1=0, select bank1
  4378  06C3  00B1               	movwf	sprintf@val^(0+128)
  4379                           
  4380                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  4381  06C4  2F66               	goto	l3416
  4382  06C5                     l3408:
  4383                           
  4384                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  4385  06C5  0842               	movf	sprintf@c^(0+128),w
  4386  06C6  00A5               	movwf	??_sprintf^(0+128)
  4387  06C7  3001               	movlw	1
  4388  06C8                     u5375:
  4389  06C8  1003               	clrc
  4390  06C9  0DA5               	rlf	??_sprintf^(0+128),f
  4391  06CA  3EFF               	addlw	-1
  4392  06CB  1D03               	skipz
  4393  06CC  2EC8               	goto	u5375
  4394  06CD  1003               	clrc
  4395  06CE  0D25               	rlf	??_sprintf^(0+128),w
  4396  06CF  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4397  06D0  0084               	movwf	4
  4398  06D1  160A  118A  200A  120A  118A  	fcall	stringdir
  4399  06D6  00F0               	movwf	___lldiv@divisor
  4400  06D7  160A  118A  200A  120A  118A  	fcall	stringdir
  4401  06DC  00F1               	movwf	___lldiv@divisor+1
  4402  06DD  160A  118A  200A  120A  118A  	fcall	stringdir
  4403  06E2  00F2               	movwf	___lldiv@divisor+2
  4404  06E3  160A  118A  200A  120A  118A  	fcall	stringdir
  4405  06E8  00F3               	movwf	___lldiv@divisor+3
  4406  06E9  0834               	movf	(sprintf@val+3)^(0+128),w
  4407  06EA  00F7               	movwf	___lldiv@dividend+3
  4408  06EB  0833               	movf	(sprintf@val+2)^(0+128),w
  4409  06EC  00F6               	movwf	___lldiv@dividend+2
  4410  06ED  0832               	movf	(sprintf@val+1)^(0+128),w
  4411  06EE  00F5               	movwf	___lldiv@dividend+1
  4412  06EF  0831               	movf	sprintf@val^(0+128),w
  4413  06F0  00F4               	movwf	___lldiv@dividend
  4414  06F1  160A  158A  2480  120A  118A  	fcall	___lldiv
  4415  06F6  0873               	movf	?___lldiv+3,w
  4416  06F7  1683               	bsf	3,5	;RP0=1, select bank1
  4417  06F8  1303               	bcf	3,6	;RP1=0, select bank1
  4418  06F9  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  4419  06FA  0872               	movf	?___lldiv+2,w
  4420  06FB  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  4421  06FC  0871               	movf	?___lldiv+1,w
  4422  06FD  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  4423  06FE  0870               	movf	?___lldiv,w
  4424  06FF  00B7               	movwf	sprintf@tmpval^(0+128)
  4425  0700                     l3410:
  4426                           
  4427                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  4428  0700  3000               	movlw	0
  4429  0701  00F3               	movwf	___llmod@divisor+3
  4430  0702  3000               	movlw	0
  4431  0703  00F2               	movwf	___llmod@divisor+2
  4432  0704  3000               	movlw	0
  4433  0705  00F1               	movwf	___llmod@divisor+1
  4434  0706  300A               	movlw	10
  4435  0707  00F0               	movwf	___llmod@divisor
  4436  0708  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  4437  0709  00F7               	movwf	___llmod@dividend+3
  4438  070A  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  4439  070B  00F6               	movwf	___llmod@dividend+2
  4440  070C  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  4441  070D  00F5               	movwf	___llmod@dividend+1
  4442  070E  0837               	movf	sprintf@tmpval^(0+128),w
  4443  070F  00F4               	movwf	___llmod@dividend
  4444  0710  160A  158A  2376  120A  118A  	fcall	___llmod
  4445  0715  0873               	movf	?___llmod+3,w
  4446  0716  1683               	bsf	3,5	;RP0=1, select bank1
  4447  0717  1303               	bcf	3,6	;RP1=0, select bank1
  4448  0718  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  4449  0719  0872               	movf	?___llmod+2,w
  4450  071A  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  4451  071B  0871               	movf	?___llmod+1,w
  4452  071C  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  4453  071D  0870               	movf	?___llmod,w
  4454  071E  00B7               	movwf	sprintf@tmpval^(0+128)
  4455  071F                     l3412:
  4456                           
  4457                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  4458  071F  0837               	movf	sprintf@tmpval^(0+128),w
  4459  0720  3E30               	addlw	48
  4460  0721  00A5               	movwf	??_sprintf^(0+128)
  4461  0722  083D               	movf	sprintf@sp^(0+128),w
  4462  0723  0084               	movwf	4
  4463  0724  0825               	movf	??_sprintf^(0+128),w
  4464  0725  1783               	bsf	3,7	;select IRP bank2
  4465  0726  0080               	movwf	0
  4466  0727  3001               	movlw	1
  4467  0728  00A5               	movwf	??_sprintf^(0+128)
  4468  0729  0825               	movf	??_sprintf^(0+128),w
  4469  072A  07BD               	addwf	sprintf@sp^(0+128),f
  4470  072B                     l3414:
  4471                           
  4472                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  4473  072B  0842               	movf	sprintf@c^(0+128),w
  4474  072C  00A5               	movwf	??_sprintf^(0+128)
  4475  072D  3001               	movlw	1
  4476  072E                     u5385:
  4477  072E  1003               	clrc
  4478  072F  0DA5               	rlf	??_sprintf^(0+128),f
  4479  0730  3EFF               	addlw	-1
  4480  0731  1D03               	skipz
  4481  0732  2F2E               	goto	u5385
  4482  0733  1003               	clrc
  4483  0734  0D25               	rlf	??_sprintf^(0+128),w
  4484  0735  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4485  0736  0084               	movwf	4
  4486  0737  160A  118A  200A  120A  118A  	fcall	stringdir
  4487  073C  00F0               	movwf	___llmod@divisor
  4488  073D  160A  118A  200A  120A  118A  	fcall	stringdir
  4489  0742  00F1               	movwf	___llmod@divisor+1
  4490  0743  160A  118A  200A  120A  118A  	fcall	stringdir
  4491  0748  00F2               	movwf	___llmod@divisor+2
  4492  0749  160A  118A  200A  120A  118A  	fcall	stringdir
  4493  074E  00F3               	movwf	___llmod@divisor+3
  4494  074F  0834               	movf	(sprintf@val+3)^(0+128),w
  4495  0750  00F7               	movwf	___llmod@dividend+3
  4496  0751  0833               	movf	(sprintf@val+2)^(0+128),w
  4497  0752  00F6               	movwf	___llmod@dividend+2
  4498  0753  0832               	movf	(sprintf@val+1)^(0+128),w
  4499  0754  00F5               	movwf	___llmod@dividend+1
  4500  0755  0831               	movf	sprintf@val^(0+128),w
  4501  0756  00F4               	movwf	___llmod@dividend
  4502  0757  160A  158A  2376  120A  118A  	fcall	___llmod
  4503  075C  0873               	movf	?___llmod+3,w
  4504  075D  1683               	bsf	3,5	;RP0=1, select bank1
  4505  075E  1303               	bcf	3,6	;RP1=0, select bank1
  4506  075F  00B4               	movwf	(sprintf@val+3)^(0+128)
  4507  0760  0872               	movf	?___llmod+2,w
  4508  0761  00B3               	movwf	(sprintf@val+2)^(0+128)
  4509  0762  0871               	movf	?___llmod+1,w
  4510  0763  00B2               	movwf	(sprintf@val+1)^(0+128)
  4511  0764  0870               	movf	?___llmod,w
  4512  0765  00B1               	movwf	sprintf@val^(0+128)
  4513  0766                     l3416:
  4514                           
  4515                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  4516  0766  3001               	movlw	1
  4517  0767  02C2               	subwf	sprintf@c^(0+128),f
  4518  0768  0A42               	incf	sprintf@c^(0+128),w
  4519  0769  1D03               	btfss	3,2
  4520  076A  2F6C               	goto	u5391
  4521  076B  2F6D               	goto	u5390
  4522  076C                     u5391:
  4523  076C  2EC5               	goto	l3408
  4524  076D                     u5390:
  4525  076D  2F7F               	goto	l3424
  4526  076E                     l3418:
  4527                           
  4528                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  4529  076E  3030               	movlw	48
  4530  076F  00A5               	movwf	??_sprintf^(0+128)
  4531  0770  083D               	movf	sprintf@sp^(0+128),w
  4532  0771  0084               	movwf	4
  4533  0772  0825               	movf	??_sprintf^(0+128),w
  4534  0773  1783               	bsf	3,7	;select IRP bank2
  4535  0774  0080               	movwf	0
  4536  0775                     l3420:
  4537  0775  3001               	movlw	1
  4538  0776  00A5               	movwf	??_sprintf^(0+128)
  4539  0777  0825               	movf	??_sprintf^(0+128),w
  4540  0778  07BD               	addwf	sprintf@sp^(0+128),f
  4541  0779                     l3422:
  4542                           
  4543                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  4544  0779  30FF               	movlw	255
  4545  077A  07BB               	addwf	sprintf@prec^(0+128),f
  4546  077B  1803               	skipnc
  4547  077C  0ABC               	incf	(sprintf@prec+1)^(0+128),f
  4548  077D  30FF               	movlw	255
  4549  077E  07BC               	addwf	(sprintf@prec+1)^(0+128),f
  4550  077F                     l3424:
  4551                           
  4552                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  4553  077F  083B               	movf	sprintf@prec^(0+128),w
  4554  0780  043C               	iorwf	(sprintf@prec+1)^(0+128),w
  4555  0781  1D03               	btfss	3,2
  4556  0782  2F84               	goto	u5401
  4557  0783  2F85               	goto	u5400
  4558  0784                     u5401:
  4559  0784  2F6E               	goto	l3418
  4560  0785                     u5400:
  4561  0785  2FCB               	goto	l3444
  4562  0786                     l3426:
  4563                           
  4564                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
  4565  0786  083B               	movf	sprintf@prec^(0+128),w
  4566  0787  043C               	iorwf	(sprintf@prec+1)^(0+128),w
  4567  0788  1D03               	btfss	3,2
  4568  0789  2F8B               	goto	u5411
  4569  078A  2F8C               	goto	u5410
  4570  078B                     u5411:
  4571  078B  2F9A               	goto	l337
  4572  078C                     u5410:
  4573  078C                     l3428:
  4574  078C  0834               	movf	(sprintf@val+3)^(0+128),w
  4575  078D  0433               	iorwf	(sprintf@val+2)^(0+128),w
  4576  078E  0432               	iorwf	(sprintf@val+1)^(0+128),w
  4577  078F  0431               	iorwf	sprintf@val^(0+128),w
  4578  0790  1D03               	skipz
  4579  0791  2F93               	goto	u5421
  4580  0792  2F94               	goto	u5420
  4581  0793                     u5421:
  4582  0793  2F9A               	goto	l337
  4583  0794                     u5420:
  4584  0794                     l3430:
  4585                           
  4586                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  4587  0794  3001               	movlw	1
  4588  0795  07BB               	addwf	sprintf@prec^(0+128),f
  4589  0796  1803               	skipnc
  4590  0797  0ABC               	incf	(sprintf@prec+1)^(0+128),f
  4591  0798  3000               	movlw	0
  4592  0799  07BC               	addwf	(sprintf@prec+1)^(0+128),f
  4593  079A                     l337:
  4594                           
  4595                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  4596  079A  083C               	movf	(sprintf@prec+1)^(0+128),w
  4597  079B  3A80               	xorlw	128
  4598  079C  3C80               	sublw	128
  4599  079D  1D03               	skipz
  4600  079E  2FA1               	goto	u5435
  4601  079F  083B               	movf	sprintf@prec^(0+128),w
  4602  07A0  0242               	subwf	sprintf@c^(0+128),w
  4603  07A1                     u5435:
  4604  07A1  1803               	skipnc
  4605  07A2  2FA4               	goto	u5431
  4606  07A3  2FA5               	goto	u5430
  4607  07A4                     u5431:
  4608  07A4  2FA6               	goto	l3434
  4609  07A5                     u5430:
  4610  07A5                     l3432:
  4611  07A5  2FB5               	goto	l3438
  4612  07A6                     l3434:
  4613  07A6  1683               	bsf	3,5	;RP0=1, select bank1
  4614  07A7  1303               	bcf	3,6	;RP1=0, select bank1
  4615  07A8  083C               	movf	(sprintf@prec+1)^(0+128),w
  4616  07A9  3A80               	xorlw	128
  4617  07AA  00A5               	movwf	??_sprintf^(0+128)
  4618  07AB  3080               	movlw	128
  4619  07AC  0225               	subwf	??_sprintf^(0+128),w
  4620  07AD  1D03               	skipz
  4621  07AE  2FB1               	goto	u5445
  4622  07AF  0842               	movf	sprintf@c^(0+128),w
  4623  07B0  023B               	subwf	sprintf@prec^(0+128),w
  4624  07B1                     u5445:
  4625  07B1  1803               	skipnc
  4626  07B2  2FB4               	goto	u5441
  4627  07B3  2FB5               	goto	u5440
  4628  07B4                     u5441:
  4629  07B4  2FB5               	goto	l3438
  4630  07B5                     u5440:
  4631  07B5                     l3436:
  4632  07B5                     l3438:
  4633                           
  4634                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  4635  07B5  3003               	movlw	3
  4636  07B6  1683               	bsf	3,5	;RP0=1, select bank1
  4637  07B7  1303               	bcf	3,6	;RP1=0, select bank1
  4638  07B8  052F               	andwf	sprintf@flag^(0+128),w
  4639  07B9  00A5               	movwf	??_sprintf^(0+128)
  4640  07BA  3000               	movlw	0
  4641  07BB  0530               	andwf	(sprintf@flag+1)^(0+128),w
  4642  07BC  00A6               	movwf	(??_sprintf+1)^(0+128)
  4643  07BD  0825               	movf	??_sprintf^(0+128),w
  4644  07BE  0426               	iorwf	(??_sprintf^(0+128)+1),w
  4645  07BF  1903               	btfsc	3,2
  4646  07C0  2FC2               	goto	u5451
  4647  07C1  2FC3               	goto	u5450
  4648  07C2                     u5451:
  4649  07C2  2FCB               	goto	l3444
  4650  07C3                     u5450:
  4651  07C3                     l3440:
  4652                           
  4653                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  4654  07C3  302D               	movlw	45
  4655  07C4  00A5               	movwf	??_sprintf^(0+128)
  4656  07C5  083D               	movf	sprintf@sp^(0+128),w
  4657  07C6  0084               	movwf	4
  4658  07C7  0825               	movf	??_sprintf^(0+128),w
  4659  07C8  1783               	bsf	3,7	;select IRP bank2
  4660  07C9  0080               	movwf	0
  4661  07CA  299F               	goto	l3256
  4662  07CB                     l3444:
  4663                           
  4664                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  4665  07CB  3001               	movlw	1
  4666  07CC  07A0               	addwf	sprintf@f^(0+128),f
  4667  07CD  30FF               	movlw	-1
  4668  07CE  0720               	addwf	sprintf@f^(0+128),w
  4669  07CF  0084               	movwf	4
  4670  07D0  160A  118A  200A  120A  118A  	fcall	stringdir
  4671  07D5  00A5               	movwf	??_sprintf^(0+128)
  4672  07D6  0825               	movf	??_sprintf^(0+128),w
  4673  07D7  00C2               	movwf	sprintf@c^(0+128)
  4674  07D8  0842               	movf	sprintf@c^(0+128),w
  4675  07D9  1D03               	btfss	3,2
  4676  07DA  2FDC               	goto	u5461
  4677  07DB  2FDD               	goto	u5460
  4678  07DC                     u5461:
  4679  07DC  2992               	goto	l3252
  4680  07DD                     u5460:
  4681  07DD                     l3446:
  4682                           
  4683                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  4684  07DD  083D               	movf	sprintf@sp^(0+128),w
  4685  07DE  0084               	movwf	4
  4686  07DF  1783               	bsf	3,7	;select IRP bank2
  4687  07E0  0180               	clrf	0
  4688  07E1                     l343:
  4689  07E1  0008               	return
  4690  07E2                     __end_of_sprintf:
  4691                           
  4692                           	psect	text6
  4693  0940                     __ptext6:	
  4694 ;; *************** function _scale *****************
  4695 ;; Defined at:
  4696 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  4697 ;; Parameters:    Size  Location     Type
  4698 ;;  scl             1    wreg     char 
  4699 ;; Auto vars:     Size  Location     Type
  4700 ;;  scl             1   48[BANK0 ] char 
  4701 ;; Return value:  Size  Location     Type
  4702 ;;                  4   30[BANK0 ] char 
  4703 ;; Registers used:
  4704 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4705 ;; Tracked objects:
  4706 ;;		On entry : 0/0
  4707 ;;		On exit  : 0/0
  4708 ;;		Unchanged: 0/0
  4709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4710 ;;      Params:         0       4       0       0       0
  4711 ;;      Locals:         0       5       0       0       0
  4712 ;;      Temps:          0      10       0       0       0
  4713 ;;      Totals:         0      19       0       0       0
  4714 ;;Total ram usage:       19 bytes
  4715 ;; Hardware stack levels used: 1
  4716 ;; Hardware stack levels required when called: 2
  4717 ;; This function calls:
  4718 ;;		___awdiv
  4719 ;;		___awmod
  4720 ;;		___flmul
  4721 ;; This function is called by:
  4722 ;;		_sprintf
  4723 ;; This function uses a non-reentrant model
  4724 ;;
  4725                           
  4726                           
  4727                           ;psect for function _scale
  4728  0940                     _scale:
  4729                           
  4730                           ;incstack = 0
  4731                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4732                           ;scale@scl stored from wreg
  4733  0940  1283               	bcf	3,5	;RP0=0, select bank0
  4734  0941  1303               	bcf	3,6	;RP1=0, select bank0
  4735  0942  00D0               	movwf	scale@scl
  4736  0943                     l2880:
  4737                           
  4738                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  4739  0943  1FD0               	btfss	scale@scl,7
  4740  0944  2946               	goto	u4081
  4741  0945  2947               	goto	u4080
  4742  0946                     u4081:
  4743  0946  2AF4               	goto	l2902
  4744  0947                     u4080:
  4745  0947                     l2882:
  4746                           
  4747                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  4748  0947  09D0               	comf	scale@scl,f
  4749  0948  0AD0               	incf	scale@scl,f
  4750  0949                     l2884:
  4751                           
  4752                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  4753  0949  0850               	movf	scale@scl,w
  4754  094A  3A80               	xorlw	128
  4755  094B  3E12               	addlw	-238
  4756  094C  1C03               	skipc
  4757  094D  294F               	goto	u4091
  4758  094E  2950               	goto	u4090
  4759  094F                     u4091:
  4760  094F  2A38               	goto	l2892
  4761  0950                     u4090:
  4762  0950                     l2886:
  4763                           
  4764                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4765  0950  300A               	movlw	10
  4766  0951  00F7               	movwf	___awdiv@divisor
  4767  0952  3000               	movlw	0
  4768  0953  00F8               	movwf	___awdiv@divisor+1
  4769  0954  0850               	movf	scale@scl,w
  4770  0955  00F2               	movwf	___awmod@dividend
  4771  0956  01F3               	clrf	___awmod@dividend+1
  4772  0957  1BF2               	btfsc	___awmod@dividend,7
  4773  0958  03F3               	decf	___awmod@dividend+1,f
  4774  0959  3064               	movlw	100
  4775  095A  00F0               	movwf	___awmod@divisor
  4776  095B  3000               	movlw	0
  4777  095C  00F1               	movwf	___awmod@divisor+1
  4778  095D  160A  158A  23CA  120A  158A  	fcall	___awmod
  4779  0962  0871               	movf	?___awmod+1,w
  4780  0963  00FA               	movwf	___awdiv@dividend+1
  4781  0964  0870               	movf	?___awmod,w
  4782  0965  00F9               	movwf	___awdiv@dividend
  4783  0966  160A  158A  24E6  120A  158A  	fcall	___awdiv
  4784  096B  0877               	movf	?___awdiv,w
  4785  096C  1283               	bcf	3,5	;RP0=0, select bank0
  4786  096D  1303               	bcf	3,6	;RP1=0, select bank0
  4787  096E  00C2               	movwf	??_scale
  4788  096F  3001               	movlw	1
  4789  0970                     u4105:
  4790  0970  1003               	clrc
  4791  0971  0DC2               	rlf	??_scale,f
  4792  0972  3EFF               	addlw	-1
  4793  0973  1D03               	skipz
  4794  0974  2970               	goto	u4105
  4795  0975  1003               	clrc
  4796  0976  0D42               	rlf	??_scale,w
  4797  0977  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4798  0978  0084               	movwf	4
  4799  0979  160A  118A  200A  120A  158A  	fcall	stringdir
  4800  097E  00C3               	movwf	??_scale+1
  4801  097F  160A  118A  200A  120A  158A  	fcall	stringdir
  4802  0984  00C4               	movwf	??_scale+2
  4803  0985  160A  118A  200A  120A  158A  	fcall	stringdir
  4804  098A  00C5               	movwf	??_scale+3
  4805  098B  160A  118A  200A  120A  158A  	fcall	stringdir
  4806  0990  00C6               	movwf	??_scale+4
  4807  0991  0846               	movf	??_scale+4,w
  4808  0992  00A7               	movwf	___flmul@b+3
  4809  0993  0845               	movf	??_scale+3,w
  4810  0994  00A6               	movwf	___flmul@b+2
  4811  0995  0844               	movf	??_scale+2,w
  4812  0996  00A5               	movwf	___flmul@b+1
  4813  0997  0843               	movf	??_scale+1,w
  4814  0998  00A4               	movwf	___flmul@b
  4815  0999  3064               	movlw	100
  4816  099A  00F7               	movwf	___awdiv@divisor
  4817  099B  3000               	movlw	0
  4818  099C  00F8               	movwf	___awdiv@divisor+1
  4819  099D  0850               	movf	scale@scl,w
  4820  099E  00F9               	movwf	___awdiv@dividend
  4821  099F  01FA               	clrf	___awdiv@dividend+1
  4822  09A0  1BF9               	btfsc	___awdiv@dividend,7
  4823  09A1  03FA               	decf	___awdiv@dividend+1,f
  4824  09A2  160A  158A  24E6  120A  158A  	fcall	___awdiv
  4825  09A7  0877               	movf	?___awdiv,w
  4826  09A8  1283               	bcf	3,5	;RP0=0, select bank0
  4827  09A9  1303               	bcf	3,6	;RP1=0, select bank0
  4828  09AA  00C7               	movwf	??_scale+5
  4829  09AB  3001               	movlw	1
  4830  09AC                     u4115:
  4831  09AC  1003               	clrc
  4832  09AD  0DC7               	rlf	??_scale+5,f
  4833  09AE  3EFF               	addlw	-1
  4834  09AF  1D03               	skipz
  4835  09B0  29AC               	goto	u4115
  4836  09B1  1003               	clrc
  4837  09B2  0D47               	rlf	??_scale+5,w
  4838  09B3  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4839  09B4  0084               	movwf	4
  4840  09B5  160A  118A  200A  120A  158A  	fcall	stringdir
  4841  09BA  00C8               	movwf	??_scale+6
  4842  09BB  160A  118A  200A  120A  158A  	fcall	stringdir
  4843  09C0  00C9               	movwf	??_scale+7
  4844  09C1  160A  118A  200A  120A  158A  	fcall	stringdir
  4845  09C6  00CA               	movwf	??_scale+8
  4846  09C7  160A  118A  200A  120A  158A  	fcall	stringdir
  4847  09CC  00CB               	movwf	??_scale+9
  4848  09CD  084B               	movf	??_scale+9,w
  4849  09CE  00AB               	movwf	___flmul@a+3
  4850  09CF  084A               	movf	??_scale+8,w
  4851  09D0  00AA               	movwf	___flmul@a+2
  4852  09D1  0849               	movf	??_scale+7,w
  4853  09D2  00A9               	movwf	___flmul@a+1
  4854  09D3  0848               	movf	??_scale+6,w
  4855  09D4  00A8               	movwf	___flmul@a
  4856  09D5  120A  158A  249F  120A  158A  	fcall	___flmul
  4857  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  4858  09DB  1303               	bcf	3,6	;RP1=0, select bank0
  4859  09DC  0827               	movf	?___flmul+3,w
  4860  09DD  00CF               	movwf	_scale$931+3
  4861  09DE  0826               	movf	?___flmul+2,w
  4862  09DF  00CE               	movwf	_scale$931+2
  4863  09E0  0825               	movf	?___flmul+1,w
  4864  09E1  00CD               	movwf	_scale$931+1
  4865  09E2  0824               	movf	?___flmul,w
  4866  09E3  00CC               	movwf	_scale$931
  4867                           
  4868                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4869  09E4  300A               	movlw	10
  4870  09E5  00F0               	movwf	___awmod@divisor
  4871  09E6  3000               	movlw	0
  4872  09E7  00F1               	movwf	___awmod@divisor+1
  4873  09E8  0850               	movf	scale@scl,w
  4874  09E9  00F2               	movwf	___awmod@dividend
  4875  09EA  01F3               	clrf	___awmod@dividend+1
  4876  09EB  1BF2               	btfsc	___awmod@dividend,7
  4877  09EC  03F3               	decf	___awmod@dividend+1,f
  4878  09ED  160A  158A  23CA  120A  158A  	fcall	___awmod
  4879  09F2  0870               	movf	?___awmod,w
  4880  09F3  1283               	bcf	3,5	;RP0=0, select bank0
  4881  09F4  1303               	bcf	3,6	;RP1=0, select bank0
  4882  09F5  00C2               	movwf	??_scale
  4883  09F6  3001               	movlw	1
  4884  09F7                     u4125:
  4885  09F7  1003               	clrc
  4886  09F8  0DC2               	rlf	??_scale,f
  4887  09F9  3EFF               	addlw	-1
  4888  09FA  1D03               	skipz
  4889  09FB  29F7               	goto	u4125
  4890  09FC  1003               	clrc
  4891  09FD  0D42               	rlf	??_scale,w
  4892  09FE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4893  09FF  0084               	movwf	4
  4894  0A00  160A  118A  200A  120A  158A  	fcall	stringdir
  4895  0A05  00C3               	movwf	??_scale+1
  4896  0A06  160A  118A  200A  120A  158A  	fcall	stringdir
  4897  0A0B  00C4               	movwf	??_scale+2
  4898  0A0C  160A  118A  200A  120A  158A  	fcall	stringdir
  4899  0A11  00C5               	movwf	??_scale+3
  4900  0A12  160A  118A  200A  120A  158A  	fcall	stringdir
  4901  0A17  00C6               	movwf	??_scale+4
  4902  0A18  0846               	movf	??_scale+4,w
  4903  0A19  00A7               	movwf	___flmul@b+3
  4904  0A1A  0845               	movf	??_scale+3,w
  4905  0A1B  00A6               	movwf	___flmul@b+2
  4906  0A1C  0844               	movf	??_scale+2,w
  4907  0A1D  00A5               	movwf	___flmul@b+1
  4908  0A1E  0843               	movf	??_scale+1,w
  4909  0A1F  00A4               	movwf	___flmul@b
  4910  0A20  084F               	movf	_scale$931+3,w
  4911  0A21  00AB               	movwf	___flmul@a+3
  4912  0A22  084E               	movf	_scale$931+2,w
  4913  0A23  00AA               	movwf	___flmul@a+2
  4914  0A24  084D               	movf	_scale$931+1,w
  4915  0A25  00A9               	movwf	___flmul@a+1
  4916  0A26  084C               	movf	_scale$931,w
  4917  0A27  00A8               	movwf	___flmul@a
  4918  0A28  120A  158A  249F  120A  158A  	fcall	___flmul
  4919  0A2D  1283               	bcf	3,5	;RP0=0, select bank0
  4920  0A2E  1303               	bcf	3,6	;RP1=0, select bank0
  4921  0A2F  0827               	movf	?___flmul+3,w
  4922  0A30  00C1               	movwf	?_scale+3
  4923  0A31  0826               	movf	?___flmul+2,w
  4924  0A32  00C0               	movwf	?_scale+2
  4925  0A33  0825               	movf	?___flmul+1,w
  4926  0A34  00BF               	movwf	?_scale+1
  4927  0A35  0824               	movf	?___flmul,w
  4928  0A36  00BE               	movwf	?_scale
  4929  0A37  2C9E               	goto	l277
  4930  0A38                     l2892:
  4931  0A38  0850               	movf	scale@scl,w
  4932  0A39  3A80               	xorlw	128
  4933  0A3A  3E75               	addlw	-139
  4934  0A3B  1C03               	skipc
  4935  0A3C  2A3E               	goto	u4131
  4936  0A3D  2A3F               	goto	u4130
  4937  0A3E                     u4131:
  4938  0A3E  2AC7               	goto	l2898
  4939  0A3F                     u4130:
  4940  0A3F                     l2894:
  4941                           
  4942                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  4943  0A3F  300A               	movlw	10
  4944  0A40  00F0               	movwf	___awmod@divisor
  4945  0A41  3000               	movlw	0
  4946  0A42  00F1               	movwf	___awmod@divisor+1
  4947  0A43  0850               	movf	scale@scl,w
  4948  0A44  00F2               	movwf	___awmod@dividend
  4949  0A45  01F3               	clrf	___awmod@dividend+1
  4950  0A46  1BF2               	btfsc	___awmod@dividend,7
  4951  0A47  03F3               	decf	___awmod@dividend+1,f
  4952  0A48  160A  158A  23CA  120A  158A  	fcall	___awmod
  4953  0A4D  0870               	movf	?___awmod,w
  4954  0A4E  1283               	bcf	3,5	;RP0=0, select bank0
  4955  0A4F  1303               	bcf	3,6	;RP1=0, select bank0
  4956  0A50  00C2               	movwf	??_scale
  4957  0A51  3001               	movlw	1
  4958  0A52                     u4145:
  4959  0A52  1003               	clrc
  4960  0A53  0DC2               	rlf	??_scale,f
  4961  0A54  3EFF               	addlw	-1
  4962  0A55  1D03               	skipz
  4963  0A56  2A52               	goto	u4145
  4964  0A57  1003               	clrc
  4965  0A58  0D42               	rlf	??_scale,w
  4966  0A59  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4967  0A5A  0084               	movwf	4
  4968  0A5B  160A  118A  200A  120A  158A  	fcall	stringdir
  4969  0A60  00C3               	movwf	??_scale+1
  4970  0A61  160A  118A  200A  120A  158A  	fcall	stringdir
  4971  0A66  00C4               	movwf	??_scale+2
  4972  0A67  160A  118A  200A  120A  158A  	fcall	stringdir
  4973  0A6C  00C5               	movwf	??_scale+3
  4974  0A6D  160A  118A  200A  120A  158A  	fcall	stringdir
  4975  0A72  00C6               	movwf	??_scale+4
  4976  0A73  0846               	movf	??_scale+4,w
  4977  0A74  00A7               	movwf	___flmul@b+3
  4978  0A75  0845               	movf	??_scale+3,w
  4979  0A76  00A6               	movwf	___flmul@b+2
  4980  0A77  0844               	movf	??_scale+2,w
  4981  0A78  00A5               	movwf	___flmul@b+1
  4982  0A79  0843               	movf	??_scale+1,w
  4983  0A7A  00A4               	movwf	___flmul@b
  4984  0A7B  300A               	movlw	10
  4985  0A7C  00F7               	movwf	___awdiv@divisor
  4986  0A7D  3000               	movlw	0
  4987  0A7E  00F8               	movwf	___awdiv@divisor+1
  4988  0A7F  0850               	movf	scale@scl,w
  4989  0A80  00F9               	movwf	___awdiv@dividend
  4990  0A81  01FA               	clrf	___awdiv@dividend+1
  4991  0A82  1BF9               	btfsc	___awdiv@dividend,7
  4992  0A83  03FA               	decf	___awdiv@dividend+1,f
  4993  0A84  160A  158A  24E6  120A  158A  	fcall	___awdiv
  4994  0A89  0877               	movf	?___awdiv,w
  4995  0A8A  1283               	bcf	3,5	;RP0=0, select bank0
  4996  0A8B  1303               	bcf	3,6	;RP1=0, select bank0
  4997  0A8C  00C7               	movwf	??_scale+5
  4998  0A8D  3001               	movlw	1
  4999  0A8E                     u4155:
  5000  0A8E  1003               	clrc
  5001  0A8F  0DC7               	rlf	??_scale+5,f
  5002  0A90  3EFF               	addlw	-1
  5003  0A91  1D03               	skipz
  5004  0A92  2A8E               	goto	u4155
  5005  0A93  1003               	clrc
  5006  0A94  0D47               	rlf	??_scale+5,w
  5007  0A95  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5008  0A96  0084               	movwf	4
  5009  0A97  160A  118A  200A  120A  158A  	fcall	stringdir
  5010  0A9C  00C8               	movwf	??_scale+6
  5011  0A9D  160A  118A  200A  120A  158A  	fcall	stringdir
  5012  0AA2  00C9               	movwf	??_scale+7
  5013  0AA3  160A  118A  200A  120A  158A  	fcall	stringdir
  5014  0AA8  00CA               	movwf	??_scale+8
  5015  0AA9  160A  118A  200A  120A  158A  	fcall	stringdir
  5016  0AAE  00CB               	movwf	??_scale+9
  5017  0AAF  084B               	movf	??_scale+9,w
  5018  0AB0  00AB               	movwf	___flmul@a+3
  5019  0AB1  084A               	movf	??_scale+8,w
  5020  0AB2  00AA               	movwf	___flmul@a+2
  5021  0AB3  0849               	movf	??_scale+7,w
  5022  0AB4  00A9               	movwf	___flmul@a+1
  5023  0AB5  0848               	movf	??_scale+6,w
  5024  0AB6  00A8               	movwf	___flmul@a
  5025  0AB7  120A  158A  249F  120A  158A  	fcall	___flmul
  5026  0ABC  1283               	bcf	3,5	;RP0=0, select bank0
  5027  0ABD  1303               	bcf	3,6	;RP1=0, select bank0
  5028  0ABE  0827               	movf	?___flmul+3,w
  5029  0ABF  00C1               	movwf	?_scale+3
  5030  0AC0  0826               	movf	?___flmul+2,w
  5031  0AC1  00C0               	movwf	?_scale+2
  5032  0AC2  0825               	movf	?___flmul+1,w
  5033  0AC3  00BF               	movwf	?_scale+1
  5034  0AC4  0824               	movf	?___flmul,w
  5035  0AC5  00BE               	movwf	?_scale
  5036  0AC6  2C9E               	goto	l277
  5037  0AC7                     l2898:
  5038                           
  5039                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  5040  0AC7  0850               	movf	scale@scl,w
  5041  0AC8  00C2               	movwf	??_scale
  5042  0AC9  3001               	movlw	1
  5043  0ACA                     u4165:
  5044  0ACA  1003               	clrc
  5045  0ACB  0DC2               	rlf	??_scale,f
  5046  0ACC  3EFF               	addlw	-1
  5047  0ACD  1D03               	skipz
  5048  0ACE  2ACA               	goto	u4165
  5049  0ACF  1003               	clrc
  5050  0AD0  0D42               	rlf	??_scale,w
  5051  0AD1  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5052  0AD2  0084               	movwf	4
  5053  0AD3  160A  118A  200A  120A  158A  	fcall	stringdir
  5054  0AD8  00C3               	movwf	??_scale+1
  5055  0AD9  160A  118A  200A  120A  158A  	fcall	stringdir
  5056  0ADE  00C4               	movwf	??_scale+2
  5057  0ADF  160A  118A  200A  120A  158A  	fcall	stringdir
  5058  0AE4  00C5               	movwf	??_scale+3
  5059  0AE5  160A  118A  200A  120A  158A  	fcall	stringdir
  5060  0AEA  00C6               	movwf	??_scale+4
  5061  0AEB  0846               	movf	??_scale+4,w
  5062  0AEC  00C1               	movwf	?_scale+3
  5063  0AED  0845               	movf	??_scale+3,w
  5064  0AEE  00C0               	movwf	?_scale+2
  5065  0AEF  0844               	movf	??_scale+2,w
  5066  0AF0  00BF               	movwf	?_scale+1
  5067  0AF1  0843               	movf	??_scale+1,w
  5068  0AF2  00BE               	movwf	?_scale
  5069  0AF3  2C9E               	goto	l277
  5070  0AF4                     l2902:
  5071                           
  5072                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  5073  0AF4  0850               	movf	scale@scl,w
  5074  0AF5  3A80               	xorlw	128
  5075  0AF6  3E12               	addlw	-238
  5076  0AF7  1C03               	skipc
  5077  0AF8  2AFA               	goto	u4171
  5078  0AF9  2AFB               	goto	u4170
  5079  0AFA                     u4171:
  5080  0AFA  2BE3               	goto	l2910
  5081  0AFB                     u4170:
  5082  0AFB                     l2904:
  5083                           
  5084                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  5085  0AFB  300A               	movlw	10
  5086  0AFC  00F7               	movwf	___awdiv@divisor
  5087  0AFD  3000               	movlw	0
  5088  0AFE  00F8               	movwf	___awdiv@divisor+1
  5089  0AFF  0850               	movf	scale@scl,w
  5090  0B00  00F2               	movwf	___awmod@dividend
  5091  0B01  01F3               	clrf	___awmod@dividend+1
  5092  0B02  1BF2               	btfsc	___awmod@dividend,7
  5093  0B03  03F3               	decf	___awmod@dividend+1,f
  5094  0B04  3064               	movlw	100
  5095  0B05  00F0               	movwf	___awmod@divisor
  5096  0B06  3000               	movlw	0
  5097  0B07  00F1               	movwf	___awmod@divisor+1
  5098  0B08  160A  158A  23CA  120A  158A  	fcall	___awmod
  5099  0B0D  0871               	movf	?___awmod+1,w
  5100  0B0E  00FA               	movwf	___awdiv@dividend+1
  5101  0B0F  0870               	movf	?___awmod,w
  5102  0B10  00F9               	movwf	___awdiv@dividend
  5103  0B11  160A  158A  24E6  120A  158A  	fcall	___awdiv
  5104  0B16  0877               	movf	?___awdiv,w
  5105  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  5106  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  5107  0B19  00C2               	movwf	??_scale
  5108  0B1A  3001               	movlw	1
  5109  0B1B                     u4185:
  5110  0B1B  1003               	clrc
  5111  0B1C  0DC2               	rlf	??_scale,f
  5112  0B1D  3EFF               	addlw	-1
  5113  0B1E  1D03               	skipz
  5114  0B1F  2B1B               	goto	u4185
  5115  0B20  1003               	clrc
  5116  0B21  0D42               	rlf	??_scale,w
  5117  0B22  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  5118  0B23  0084               	movwf	4
  5119  0B24  160A  118A  200A  120A  158A  	fcall	stringdir
  5120  0B29  00C3               	movwf	??_scale+1
  5121  0B2A  160A  118A  200A  120A  158A  	fcall	stringdir
  5122  0B2F  00C4               	movwf	??_scale+2
  5123  0B30  160A  118A  200A  120A  158A  	fcall	stringdir
  5124  0B35  00C5               	movwf	??_scale+3
  5125  0B36  160A  118A  200A  120A  158A  	fcall	stringdir
  5126  0B3B  00C6               	movwf	??_scale+4
  5127  0B3C  0846               	movf	??_scale+4,w
  5128  0B3D  00A7               	movwf	___flmul@b+3
  5129  0B3E  0845               	movf	??_scale+3,w
  5130  0B3F  00A6               	movwf	___flmul@b+2
  5131  0B40  0844               	movf	??_scale+2,w
  5132  0B41  00A5               	movwf	___flmul@b+1
  5133  0B42  0843               	movf	??_scale+1,w
  5134  0B43  00A4               	movwf	___flmul@b
  5135  0B44  3064               	movlw	100
  5136  0B45  00F7               	movwf	___awdiv@divisor
  5137  0B46  3000               	movlw	0
  5138  0B47  00F8               	movwf	___awdiv@divisor+1
  5139  0B48  0850               	movf	scale@scl,w
  5140  0B49  00F9               	movwf	___awdiv@dividend
  5141  0B4A  01FA               	clrf	___awdiv@dividend+1
  5142  0B4B  1BF9               	btfsc	___awdiv@dividend,7
  5143  0B4C  03FA               	decf	___awdiv@dividend+1,f
  5144  0B4D  160A  158A  24E6  120A  158A  	fcall	___awdiv
  5145  0B52  0877               	movf	?___awdiv,w
  5146  0B53  1283               	bcf	3,5	;RP0=0, select bank0
  5147  0B54  1303               	bcf	3,6	;RP1=0, select bank0
  5148  0B55  00C7               	movwf	??_scale+5
  5149  0B56  3001               	movlw	1
  5150  0B57                     u4195:
  5151  0B57  1003               	clrc
  5152  0B58  0DC7               	rlf	??_scale+5,f
  5153  0B59  3EFF               	addlw	-1
  5154  0B5A  1D03               	skipz
  5155  0B5B  2B57               	goto	u4195
  5156  0B5C  1003               	clrc
  5157  0B5D  0D47               	rlf	??_scale+5,w
  5158  0B5E  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  5159  0B5F  0084               	movwf	4
  5160  0B60  160A  118A  200A  120A  158A  	fcall	stringdir
  5161  0B65  00C8               	movwf	??_scale+6
  5162  0B66  160A  118A  200A  120A  158A  	fcall	stringdir
  5163  0B6B  00C9               	movwf	??_scale+7
  5164  0B6C  160A  118A  200A  120A  158A  	fcall	stringdir
  5165  0B71  00CA               	movwf	??_scale+8
  5166  0B72  160A  118A  200A  120A  158A  	fcall	stringdir
  5167  0B77  00CB               	movwf	??_scale+9
  5168  0B78  084B               	movf	??_scale+9,w
  5169  0B79  00AB               	movwf	___flmul@a+3
  5170  0B7A  084A               	movf	??_scale+8,w
  5171  0B7B  00AA               	movwf	___flmul@a+2
  5172  0B7C  0849               	movf	??_scale+7,w
  5173  0B7D  00A9               	movwf	___flmul@a+1
  5174  0B7E  0848               	movf	??_scale+6,w
  5175  0B7F  00A8               	movwf	___flmul@a
  5176  0B80  120A  158A  249F  120A  158A  	fcall	___flmul
  5177  0B85  1283               	bcf	3,5	;RP0=0, select bank0
  5178  0B86  1303               	bcf	3,6	;RP1=0, select bank0
  5179  0B87  0827               	movf	?___flmul+3,w
  5180  0B88  00CF               	movwf	_scale$931+3
  5181  0B89  0826               	movf	?___flmul+2,w
  5182  0B8A  00CE               	movwf	_scale$931+2
  5183  0B8B  0825               	movf	?___flmul+1,w
  5184  0B8C  00CD               	movwf	_scale$931+1
  5185  0B8D  0824               	movf	?___flmul,w
  5186  0B8E  00CC               	movwf	_scale$931
  5187                           
  5188                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  5189  0B8F  300A               	movlw	10
  5190  0B90  00F0               	movwf	___awmod@divisor
  5191  0B91  3000               	movlw	0
  5192  0B92  00F1               	movwf	___awmod@divisor+1
  5193  0B93  0850               	movf	scale@scl,w
  5194  0B94  00F2               	movwf	___awmod@dividend
  5195  0B95  01F3               	clrf	___awmod@dividend+1
  5196  0B96  1BF2               	btfsc	___awmod@dividend,7
  5197  0B97  03F3               	decf	___awmod@dividend+1,f
  5198  0B98  160A  158A  23CA  120A  158A  	fcall	___awmod
  5199  0B9D  0870               	movf	?___awmod,w
  5200  0B9E  1283               	bcf	3,5	;RP0=0, select bank0
  5201  0B9F  1303               	bcf	3,6	;RP1=0, select bank0
  5202  0BA0  00C2               	movwf	??_scale
  5203  0BA1  3001               	movlw	1
  5204  0BA2                     u4205:
  5205  0BA2  1003               	clrc
  5206  0BA3  0DC2               	rlf	??_scale,f
  5207  0BA4  3EFF               	addlw	-1
  5208  0BA5  1D03               	skipz
  5209  0BA6  2BA2               	goto	u4205
  5210  0BA7  1003               	clrc
  5211  0BA8  0D42               	rlf	??_scale,w
  5212  0BA9  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  5213  0BAA  0084               	movwf	4
  5214  0BAB  160A  118A  200A  120A  158A  	fcall	stringdir
  5215  0BB0  00C3               	movwf	??_scale+1
  5216  0BB1  160A  118A  200A  120A  158A  	fcall	stringdir
  5217  0BB6  00C4               	movwf	??_scale+2
  5218  0BB7  160A  118A  200A  120A  158A  	fcall	stringdir
  5219  0BBC  00C5               	movwf	??_scale+3
  5220  0BBD  160A  118A  200A  120A  158A  	fcall	stringdir
  5221  0BC2  00C6               	movwf	??_scale+4
  5222  0BC3  0846               	movf	??_scale+4,w
  5223  0BC4  00A7               	movwf	___flmul@b+3
  5224  0BC5  0845               	movf	??_scale+3,w
  5225  0BC6  00A6               	movwf	___flmul@b+2
  5226  0BC7  0844               	movf	??_scale+2,w
  5227  0BC8  00A5               	movwf	___flmul@b+1
  5228  0BC9  0843               	movf	??_scale+1,w
  5229  0BCA  00A4               	movwf	___flmul@b
  5230  0BCB  084F               	movf	_scale$931+3,w
  5231  0BCC  00AB               	movwf	___flmul@a+3
  5232  0BCD  084E               	movf	_scale$931+2,w
  5233  0BCE  00AA               	movwf	___flmul@a+2
  5234  0BCF  084D               	movf	_scale$931+1,w
  5235  0BD0  00A9               	movwf	___flmul@a+1
  5236  0BD1  084C               	movf	_scale$931,w
  5237  0BD2  00A8               	movwf	___flmul@a
  5238  0BD3  120A  158A  249F  120A  158A  	fcall	___flmul
  5239  0BD8  1283               	bcf	3,5	;RP0=0, select bank0
  5240  0BD9  1303               	bcf	3,6	;RP1=0, select bank0
  5241  0BDA  0827               	movf	?___flmul+3,w
  5242  0BDB  00C1               	movwf	?_scale+3
  5243  0BDC  0826               	movf	?___flmul+2,w
  5244  0BDD  00C0               	movwf	?_scale+2
  5245  0BDE  0825               	movf	?___flmul+1,w
  5246  0BDF  00BF               	movwf	?_scale+1
  5247  0BE0  0824               	movf	?___flmul,w
  5248  0BE1  00BE               	movwf	?_scale
  5249  0BE2  2C9E               	goto	l277
  5250  0BE3                     l2910:
  5251  0BE3  0850               	movf	scale@scl,w
  5252  0BE4  3A80               	xorlw	128
  5253  0BE5  3E75               	addlw	-139
  5254  0BE6  1C03               	skipc
  5255  0BE7  2BE9               	goto	u4211
  5256  0BE8  2BEA               	goto	u4210
  5257  0BE9                     u4211:
  5258  0BE9  2C72               	goto	l2916
  5259  0BEA                     u4210:
  5260  0BEA                     l2912:
  5261                           
  5262                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  5263  0BEA  300A               	movlw	10
  5264  0BEB  00F0               	movwf	___awmod@divisor
  5265  0BEC  3000               	movlw	0
  5266  0BED  00F1               	movwf	___awmod@divisor+1
  5267  0BEE  0850               	movf	scale@scl,w
  5268  0BEF  00F2               	movwf	___awmod@dividend
  5269  0BF0  01F3               	clrf	___awmod@dividend+1
  5270  0BF1  1BF2               	btfsc	___awmod@dividend,7
  5271  0BF2  03F3               	decf	___awmod@dividend+1,f
  5272  0BF3  160A  158A  23CA  120A  158A  	fcall	___awmod
  5273  0BF8  0870               	movf	?___awmod,w
  5274  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  5275  0BFA  1303               	bcf	3,6	;RP1=0, select bank0
  5276  0BFB  00C2               	movwf	??_scale
  5277  0BFC  3001               	movlw	1
  5278  0BFD                     u4225:
  5279  0BFD  1003               	clrc
  5280  0BFE  0DC2               	rlf	??_scale,f
  5281  0BFF  3EFF               	addlw	-1
  5282  0C00  1D03               	skipz
  5283  0C01  2BFD               	goto	u4225
  5284  0C02  1003               	clrc
  5285  0C03  0D42               	rlf	??_scale,w
  5286  0C04  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  5287  0C05  0084               	movwf	4
  5288  0C06  160A  118A  200A  120A  158A  	fcall	stringdir
  5289  0C0B  00C3               	movwf	??_scale+1
  5290  0C0C  160A  118A  200A  120A  158A  	fcall	stringdir
  5291  0C11  00C4               	movwf	??_scale+2
  5292  0C12  160A  118A  200A  120A  158A  	fcall	stringdir
  5293  0C17  00C5               	movwf	??_scale+3
  5294  0C18  160A  118A  200A  120A  158A  	fcall	stringdir
  5295  0C1D  00C6               	movwf	??_scale+4
  5296  0C1E  0846               	movf	??_scale+4,w
  5297  0C1F  00A7               	movwf	___flmul@b+3
  5298  0C20  0845               	movf	??_scale+3,w
  5299  0C21  00A6               	movwf	___flmul@b+2
  5300  0C22  0844               	movf	??_scale+2,w
  5301  0C23  00A5               	movwf	___flmul@b+1
  5302  0C24  0843               	movf	??_scale+1,w
  5303  0C25  00A4               	movwf	___flmul@b
  5304  0C26  300A               	movlw	10
  5305  0C27  00F7               	movwf	___awdiv@divisor
  5306  0C28  3000               	movlw	0
  5307  0C29  00F8               	movwf	___awdiv@divisor+1
  5308  0C2A  0850               	movf	scale@scl,w
  5309  0C2B  00F9               	movwf	___awdiv@dividend
  5310  0C2C  01FA               	clrf	___awdiv@dividend+1
  5311  0C2D  1BF9               	btfsc	___awdiv@dividend,7
  5312  0C2E  03FA               	decf	___awdiv@dividend+1,f
  5313  0C2F  160A  158A  24E6  120A  158A  	fcall	___awdiv
  5314  0C34  0877               	movf	?___awdiv,w
  5315  0C35  1283               	bcf	3,5	;RP0=0, select bank0
  5316  0C36  1303               	bcf	3,6	;RP1=0, select bank0
  5317  0C37  00C7               	movwf	??_scale+5
  5318  0C38  3001               	movlw	1
  5319  0C39                     u4235:
  5320  0C39  1003               	clrc
  5321  0C3A  0DC7               	rlf	??_scale+5,f
  5322  0C3B  3EFF               	addlw	-1
  5323  0C3C  1D03               	skipz
  5324  0C3D  2C39               	goto	u4235
  5325  0C3E  1003               	clrc
  5326  0C3F  0D47               	rlf	??_scale+5,w
  5327  0C40  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  5328  0C41  0084               	movwf	4
  5329  0C42  160A  118A  200A  120A  158A  	fcall	stringdir
  5330  0C47  00C8               	movwf	??_scale+6
  5331  0C48  160A  118A  200A  120A  158A  	fcall	stringdir
  5332  0C4D  00C9               	movwf	??_scale+7
  5333  0C4E  160A  118A  200A  120A  158A  	fcall	stringdir
  5334  0C53  00CA               	movwf	??_scale+8
  5335  0C54  160A  118A  200A  120A  158A  	fcall	stringdir
  5336  0C59  00CB               	movwf	??_scale+9
  5337  0C5A  084B               	movf	??_scale+9,w
  5338  0C5B  00AB               	movwf	___flmul@a+3
  5339  0C5C  084A               	movf	??_scale+8,w
  5340  0C5D  00AA               	movwf	___flmul@a+2
  5341  0C5E  0849               	movf	??_scale+7,w
  5342  0C5F  00A9               	movwf	___flmul@a+1
  5343  0C60  0848               	movf	??_scale+6,w
  5344  0C61  00A8               	movwf	___flmul@a
  5345  0C62  120A  158A  249F  120A  158A  	fcall	___flmul
  5346  0C67  1283               	bcf	3,5	;RP0=0, select bank0
  5347  0C68  1303               	bcf	3,6	;RP1=0, select bank0
  5348  0C69  0827               	movf	?___flmul+3,w
  5349  0C6A  00C1               	movwf	?_scale+3
  5350  0C6B  0826               	movf	?___flmul+2,w
  5351  0C6C  00C0               	movwf	?_scale+2
  5352  0C6D  0825               	movf	?___flmul+1,w
  5353  0C6E  00BF               	movwf	?_scale+1
  5354  0C6F  0824               	movf	?___flmul,w
  5355  0C70  00BE               	movwf	?_scale
  5356  0C71  2C9E               	goto	l277
  5357  0C72                     l2916:
  5358                           
  5359                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  5360  0C72  0850               	movf	scale@scl,w
  5361  0C73  00C2               	movwf	??_scale
  5362  0C74  3001               	movlw	1
  5363  0C75                     u4245:
  5364  0C75  1003               	clrc
  5365  0C76  0DC2               	rlf	??_scale,f
  5366  0C77  3EFF               	addlw	-1
  5367  0C78  1D03               	skipz
  5368  0C79  2C75               	goto	u4245
  5369  0C7A  1003               	clrc
  5370  0C7B  0D42               	rlf	??_scale,w
  5371  0C7C  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  5372  0C7D  0084               	movwf	4
  5373  0C7E  160A  118A  200A  120A  158A  	fcall	stringdir
  5374  0C83  00C3               	movwf	??_scale+1
  5375  0C84  160A  118A  200A  120A  158A  	fcall	stringdir
  5376  0C89  00C4               	movwf	??_scale+2
  5377  0C8A  160A  118A  200A  120A  158A  	fcall	stringdir
  5378  0C8F  00C5               	movwf	??_scale+3
  5379  0C90  160A  118A  200A  120A  158A  	fcall	stringdir
  5380  0C95  00C6               	movwf	??_scale+4
  5381  0C96  0846               	movf	??_scale+4,w
  5382  0C97  00C1               	movwf	?_scale+3
  5383  0C98  0845               	movf	??_scale+3,w
  5384  0C99  00C0               	movwf	?_scale+2
  5385  0C9A  0844               	movf	??_scale+2,w
  5386  0C9B  00BF               	movwf	?_scale+1
  5387  0C9C  0843               	movf	??_scale+1,w
  5388  0C9D  00BE               	movwf	?_scale
  5389  0C9E                     l277:
  5390  0C9E  0008               	return
  5391  0C9F                     __end_of_scale:
  5392                           
  5393                           	psect	text7
  5394  1BCA                     __ptext7:	
  5395 ;; *************** function ___awmod *****************
  5396 ;; Defined at:
  5397 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  5398 ;; Parameters:    Size  Location     Type
  5399 ;;  divisor         2    0[COMMON] int 
  5400 ;;  dividend        2    2[COMMON] int 
  5401 ;; Auto vars:     Size  Location     Type
  5402 ;;  sign            1    6[COMMON] unsigned char 
  5403 ;;  counter         1    5[COMMON] unsigned char 
  5404 ;; Return value:  Size  Location     Type
  5405 ;;                  2    0[COMMON] int 
  5406 ;; Registers used:
  5407 ;;		wreg, status,2, status,0
  5408 ;; Tracked objects:
  5409 ;;		On entry : 0/0
  5410 ;;		On exit  : 0/0
  5411 ;;		Unchanged: 0/0
  5412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5413 ;;      Params:         4       0       0       0       0
  5414 ;;      Locals:         2       0       0       0       0
  5415 ;;      Temps:          1       0       0       0       0
  5416 ;;      Totals:         7       0       0       0       0
  5417 ;;Total ram usage:        7 bytes
  5418 ;; Hardware stack levels used: 1
  5419 ;; This function calls:
  5420 ;;		Nothing
  5421 ;; This function is called by:
  5422 ;;		_scale
  5423 ;; This function uses a non-reentrant model
  5424 ;;
  5425                           
  5426                           
  5427                           ;psect for function ___awmod
  5428  1BCA                     ___awmod:
  5429  1BCA                     l2412:	
  5430                           ;incstack = 0
  5431                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5432                           
  5433  1BCA  01F6               	clrf	___awmod@sign
  5434  1BCB                     l2414:
  5435  1BCB  1FF3               	btfss	___awmod@dividend+1,7
  5436  1BCC  2BCE               	goto	u2941
  5437  1BCD  2BCF               	goto	u2940
  5438  1BCE                     u2941:
  5439  1BCE  2BD6               	goto	l2420
  5440  1BCF                     u2940:
  5441  1BCF                     l2416:
  5442  1BCF  09F2               	comf	___awmod@dividend,f
  5443  1BD0  09F3               	comf	___awmod@dividend+1,f
  5444  1BD1  0AF2               	incf	___awmod@dividend,f
  5445  1BD2  1903               	skipnz
  5446  1BD3  0AF3               	incf	___awmod@dividend+1,f
  5447  1BD4                     l2418:
  5448  1BD4  01F6               	clrf	___awmod@sign
  5449  1BD5  0AF6               	incf	___awmod@sign,f
  5450  1BD6                     l2420:
  5451  1BD6  1FF1               	btfss	___awmod@divisor+1,7
  5452  1BD7  2BD9               	goto	u2951
  5453  1BD8  2BDA               	goto	u2950
  5454  1BD9                     u2951:
  5455  1BD9  2BDF               	goto	l2424
  5456  1BDA                     u2950:
  5457  1BDA                     l2422:
  5458  1BDA  09F0               	comf	___awmod@divisor,f
  5459  1BDB  09F1               	comf	___awmod@divisor+1,f
  5460  1BDC  0AF0               	incf	___awmod@divisor,f
  5461  1BDD  1903               	skipnz
  5462  1BDE  0AF1               	incf	___awmod@divisor+1,f
  5463  1BDF                     l2424:
  5464  1BDF  0870               	movf	___awmod@divisor,w
  5465  1BE0  0471               	iorwf	___awmod@divisor+1,w
  5466  1BE1  1903               	btfsc	3,2
  5467  1BE2  2BE4               	goto	u2961
  5468  1BE3  2BE5               	goto	u2960
  5469  1BE4                     u2961:
  5470  1BE4  2C14               	goto	l2442
  5471  1BE5                     u2960:
  5472  1BE5                     l2426:
  5473  1BE5  01F5               	clrf	___awmod@counter
  5474  1BE6  0AF5               	incf	___awmod@counter,f
  5475  1BE7  2BF3               	goto	l2432
  5476  1BE8                     l2428:
  5477  1BE8  3001               	movlw	1
  5478  1BE9                     u2975:
  5479  1BE9  1003               	clrc
  5480  1BEA  0DF0               	rlf	___awmod@divisor,f
  5481  1BEB  0DF1               	rlf	___awmod@divisor+1,f
  5482  1BEC  3EFF               	addlw	-1
  5483  1BED  1D03               	skipz
  5484  1BEE  2BE9               	goto	u2975
  5485  1BEF                     l2430:
  5486  1BEF  3001               	movlw	1
  5487  1BF0  00F4               	movwf	??___awmod
  5488  1BF1  0874               	movf	??___awmod,w
  5489  1BF2  07F5               	addwf	___awmod@counter,f
  5490  1BF3                     l2432:
  5491  1BF3  1FF1               	btfss	___awmod@divisor+1,7
  5492  1BF4  2BF6               	goto	u2981
  5493  1BF5  2BF7               	goto	u2980
  5494  1BF6                     u2981:
  5495  1BF6  2BE8               	goto	l2428
  5496  1BF7                     u2980:
  5497  1BF7                     l2434:
  5498  1BF7  0871               	movf	___awmod@divisor+1,w
  5499  1BF8  0273               	subwf	___awmod@dividend+1,w
  5500  1BF9  1D03               	skipz
  5501  1BFA  2BFD               	goto	u2995
  5502  1BFB  0870               	movf	___awmod@divisor,w
  5503  1BFC  0272               	subwf	___awmod@dividend,w
  5504  1BFD                     u2995:
  5505  1BFD  1C03               	skipc
  5506  1BFE  2C00               	goto	u2991
  5507  1BFF  2C01               	goto	u2990
  5508  1C00                     u2991:
  5509  1C00  2C07               	goto	l2438
  5510  1C01                     u2990:
  5511  1C01                     l2436:
  5512  1C01  0870               	movf	___awmod@divisor,w
  5513  1C02  02F2               	subwf	___awmod@dividend,f
  5514  1C03  0871               	movf	___awmod@divisor+1,w
  5515  1C04  1C03               	skipc
  5516  1C05  03F3               	decf	___awmod@dividend+1,f
  5517  1C06  02F3               	subwf	___awmod@dividend+1,f
  5518  1C07                     l2438:
  5519  1C07  3001               	movlw	1
  5520  1C08                     u3005:
  5521  1C08  1003               	clrc
  5522  1C09  0CF1               	rrf	___awmod@divisor+1,f
  5523  1C0A  0CF0               	rrf	___awmod@divisor,f
  5524  1C0B  3EFF               	addlw	-1
  5525  1C0C  1D03               	skipz
  5526  1C0D  2C08               	goto	u3005
  5527  1C0E                     l2440:
  5528  1C0E  3001               	movlw	1
  5529  1C0F  02F5               	subwf	___awmod@counter,f
  5530  1C10  1D03               	btfss	3,2
  5531  1C11  2C13               	goto	u3011
  5532  1C12  2C14               	goto	u3010
  5533  1C13                     u3011:
  5534  1C13  2BF7               	goto	l2434
  5535  1C14                     u3010:
  5536  1C14                     l2442:
  5537  1C14  0876               	movf	___awmod@sign,w
  5538  1C15  1903               	btfsc	3,2
  5539  1C16  2C18               	goto	u3021
  5540  1C17  2C19               	goto	u3020
  5541  1C18                     u3021:
  5542  1C18  2C1E               	goto	l2446
  5543  1C19                     u3020:
  5544  1C19                     l2444:
  5545  1C19  09F2               	comf	___awmod@dividend,f
  5546  1C1A  09F3               	comf	___awmod@dividend+1,f
  5547  1C1B  0AF2               	incf	___awmod@dividend,f
  5548  1C1C  1903               	skipnz
  5549  1C1D  0AF3               	incf	___awmod@dividend+1,f
  5550  1C1E                     l2446:
  5551  1C1E  0873               	movf	___awmod@dividend+1,w
  5552  1C1F  00F1               	movwf	?___awmod+1
  5553  1C20  0872               	movf	___awmod@dividend,w
  5554  1C21  00F0               	movwf	?___awmod
  5555  1C22                     l513:
  5556  1C22  0008               	return
  5557  1C23                     __end_of___awmod:
  5558                           
  5559                           	psect	text8
  5560  1CE6                     __ptext8:	
  5561 ;; *************** function ___awdiv *****************
  5562 ;; Defined at:
  5563 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  5564 ;; Parameters:    Size  Location     Type
  5565 ;;  divisor         2    7[COMMON] int 
  5566 ;;  dividend        2    9[COMMON] int 
  5567 ;; Auto vars:     Size  Location     Type
  5568 ;;  quotient        2    2[BANK0 ] int 
  5569 ;;  sign            1    1[BANK0 ] unsigned char 
  5570 ;;  counter         1    0[BANK0 ] unsigned char 
  5571 ;; Return value:  Size  Location     Type
  5572 ;;                  2    7[COMMON] int 
  5573 ;; Registers used:
  5574 ;;		wreg, status,2, status,0
  5575 ;; Tracked objects:
  5576 ;;		On entry : 0/0
  5577 ;;		On exit  : 0/0
  5578 ;;		Unchanged: 0/0
  5579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5580 ;;      Params:         4       0       0       0       0
  5581 ;;      Locals:         0       4       0       0       0
  5582 ;;      Temps:          1       0       0       0       0
  5583 ;;      Totals:         5       4       0       0       0
  5584 ;;Total ram usage:        9 bytes
  5585 ;; Hardware stack levels used: 1
  5586 ;; This function calls:
  5587 ;;		Nothing
  5588 ;; This function is called by:
  5589 ;;		_scale
  5590 ;;		_sprintf
  5591 ;; This function uses a non-reentrant model
  5592 ;;
  5593                           
  5594                           
  5595                           ;psect for function ___awdiv
  5596  1CE6                     ___awdiv:
  5597  1CE6                     l2368:	
  5598                           ;incstack = 0
  5599                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5600                           
  5601  1CE6  1283               	bcf	3,5	;RP0=0, select bank0
  5602  1CE7  1303               	bcf	3,6	;RP1=0, select bank0
  5603  1CE8  01A1               	clrf	___awdiv@sign
  5604  1CE9                     l2370:
  5605  1CE9  1FF8               	btfss	___awdiv@divisor+1,7
  5606  1CEA  2CEC               	goto	u2841
  5607  1CEB  2CED               	goto	u2840
  5608  1CEC                     u2841:
  5609  1CEC  2CF4               	goto	l2376
  5610  1CED                     u2840:
  5611  1CED                     l2372:
  5612  1CED  09F7               	comf	___awdiv@divisor,f
  5613  1CEE  09F8               	comf	___awdiv@divisor+1,f
  5614  1CEF  0AF7               	incf	___awdiv@divisor,f
  5615  1CF0  1903               	skipnz
  5616  1CF1  0AF8               	incf	___awdiv@divisor+1,f
  5617  1CF2                     l2374:
  5618  1CF2  01A1               	clrf	___awdiv@sign
  5619  1CF3  0AA1               	incf	___awdiv@sign,f
  5620  1CF4                     l2376:
  5621  1CF4  1FFA               	btfss	___awdiv@dividend+1,7
  5622  1CF5  2CF7               	goto	u2851
  5623  1CF6  2CF8               	goto	u2850
  5624  1CF7                     u2851:
  5625  1CF7  2D01               	goto	l2382
  5626  1CF8                     u2850:
  5627  1CF8                     l2378:
  5628  1CF8  09F9               	comf	___awdiv@dividend,f
  5629  1CF9  09FA               	comf	___awdiv@dividend+1,f
  5630  1CFA  0AF9               	incf	___awdiv@dividend,f
  5631  1CFB  1903               	skipnz
  5632  1CFC  0AFA               	incf	___awdiv@dividend+1,f
  5633  1CFD                     l2380:
  5634  1CFD  3001               	movlw	1
  5635  1CFE  00FB               	movwf	??___awdiv
  5636  1CFF  087B               	movf	??___awdiv,w
  5637  1D00  06A1               	xorwf	___awdiv@sign,f
  5638  1D01                     l2382:
  5639  1D01  01A2               	clrf	___awdiv@quotient
  5640  1D02  01A3               	clrf	___awdiv@quotient+1
  5641  1D03                     l2384:
  5642  1D03  0877               	movf	___awdiv@divisor,w
  5643  1D04  0478               	iorwf	___awdiv@divisor+1,w
  5644  1D05  1903               	btfsc	3,2
  5645  1D06  2D08               	goto	u2861
  5646  1D07  2D09               	goto	u2860
  5647  1D08                     u2861:
  5648  1D08  2D40               	goto	l2404
  5649  1D09                     u2860:
  5650  1D09                     l2386:
  5651  1D09  01A0               	clrf	___awdiv@counter
  5652  1D0A  0AA0               	incf	___awdiv@counter,f
  5653  1D0B  2D17               	goto	l2392
  5654  1D0C                     l2388:
  5655  1D0C  3001               	movlw	1
  5656  1D0D                     u2875:
  5657  1D0D  1003               	clrc
  5658  1D0E  0DF7               	rlf	___awdiv@divisor,f
  5659  1D0F  0DF8               	rlf	___awdiv@divisor+1,f
  5660  1D10  3EFF               	addlw	-1
  5661  1D11  1D03               	skipz
  5662  1D12  2D0D               	goto	u2875
  5663  1D13                     l2390:
  5664  1D13  3001               	movlw	1
  5665  1D14  00FB               	movwf	??___awdiv
  5666  1D15  087B               	movf	??___awdiv,w
  5667  1D16  07A0               	addwf	___awdiv@counter,f
  5668  1D17                     l2392:
  5669  1D17  1FF8               	btfss	___awdiv@divisor+1,7
  5670  1D18  2D1A               	goto	u2881
  5671  1D19  2D1B               	goto	u2880
  5672  1D1A                     u2881:
  5673  1D1A  2D0C               	goto	l2388
  5674  1D1B                     u2880:
  5675  1D1B                     l2394:
  5676  1D1B  3001               	movlw	1
  5677  1D1C                     u2895:
  5678  1D1C  1003               	clrc
  5679  1D1D  0DA2               	rlf	___awdiv@quotient,f
  5680  1D1E  0DA3               	rlf	___awdiv@quotient+1,f
  5681  1D1F  3EFF               	addlw	-1
  5682  1D20  1D03               	skipz
  5683  1D21  2D1C               	goto	u2895
  5684  1D22  0878               	movf	___awdiv@divisor+1,w
  5685  1D23  027A               	subwf	___awdiv@dividend+1,w
  5686  1D24  1D03               	skipz
  5687  1D25  2D28               	goto	u2905
  5688  1D26  0877               	movf	___awdiv@divisor,w
  5689  1D27  0279               	subwf	___awdiv@dividend,w
  5690  1D28                     u2905:
  5691  1D28  1C03               	skipc
  5692  1D29  2D2B               	goto	u2901
  5693  1D2A  2D2C               	goto	u2900
  5694  1D2B                     u2901:
  5695  1D2B  2D33               	goto	l2400
  5696  1D2C                     u2900:
  5697  1D2C                     l2396:
  5698  1D2C  0877               	movf	___awdiv@divisor,w
  5699  1D2D  02F9               	subwf	___awdiv@dividend,f
  5700  1D2E  0878               	movf	___awdiv@divisor+1,w
  5701  1D2F  1C03               	skipc
  5702  1D30  03FA               	decf	___awdiv@dividend+1,f
  5703  1D31  02FA               	subwf	___awdiv@dividend+1,f
  5704  1D32                     l2398:
  5705  1D32  1422               	bsf	___awdiv@quotient,0
  5706  1D33                     l2400:
  5707  1D33  3001               	movlw	1
  5708  1D34                     u2915:
  5709  1D34  1003               	clrc
  5710  1D35  0CF8               	rrf	___awdiv@divisor+1,f
  5711  1D36  0CF7               	rrf	___awdiv@divisor,f
  5712  1D37  3EFF               	addlw	-1
  5713  1D38  1D03               	skipz
  5714  1D39  2D34               	goto	u2915
  5715  1D3A                     l2402:
  5716  1D3A  3001               	movlw	1
  5717  1D3B  02A0               	subwf	___awdiv@counter,f
  5718  1D3C  1D03               	btfss	3,2
  5719  1D3D  2D3F               	goto	u2921
  5720  1D3E  2D40               	goto	u2920
  5721  1D3F                     u2921:
  5722  1D3F  2D1B               	goto	l2394
  5723  1D40                     u2920:
  5724  1D40                     l2404:
  5725  1D40  0821               	movf	___awdiv@sign,w
  5726  1D41  1903               	btfsc	3,2
  5727  1D42  2D44               	goto	u2931
  5728  1D43  2D45               	goto	u2930
  5729  1D44                     u2931:
  5730  1D44  2D4A               	goto	l2408
  5731  1D45                     u2930:
  5732  1D45                     l2406:
  5733  1D45  09A2               	comf	___awdiv@quotient,f
  5734  1D46  09A3               	comf	___awdiv@quotient+1,f
  5735  1D47  0AA2               	incf	___awdiv@quotient,f
  5736  1D48  1903               	skipnz
  5737  1D49  0AA3               	incf	___awdiv@quotient+1,f
  5738  1D4A                     l2408:
  5739  1D4A  0823               	movf	___awdiv@quotient+1,w
  5740  1D4B  00F8               	movwf	?___awdiv+1
  5741  1D4C  0822               	movf	___awdiv@quotient,w
  5742  1D4D  00F7               	movwf	?___awdiv
  5743  1D4E                     l500:
  5744  1D4E  0008               	return
  5745  1D4F                     __end_of___awdiv:
  5746                           
  5747                           	psect	text9
  5748  0802                     __ptext9:	
  5749 ;; *************** function _isdigit *****************
  5750 ;; Defined at:
  5751 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\isdigit.c"
  5752 ;; Parameters:    Size  Location     Type
  5753 ;;  c               1    wreg     unsigned char 
  5754 ;; Auto vars:     Size  Location     Type
  5755 ;;  c               1    1[COMMON] unsigned char 
  5756 ;; Return value:  Size  Location     Type
  5757 ;;		None               void
  5758 ;; Registers used:
  5759 ;;		wreg, status,2, status,0
  5760 ;; Tracked objects:
  5761 ;;		On entry : 0/0
  5762 ;;		On exit  : 0/0
  5763 ;;		Unchanged: 0/0
  5764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5765 ;;      Params:         0       0       0       0       0
  5766 ;;      Locals:         2       0       0       0       0
  5767 ;;      Temps:          0       0       0       0       0
  5768 ;;      Totals:         2       0       0       0       0
  5769 ;;Total ram usage:        2 bytes
  5770 ;; Hardware stack levels used: 1
  5771 ;; This function calls:
  5772 ;;		Nothing
  5773 ;; This function is called by:
  5774 ;;		_sprintf
  5775 ;; This function uses a non-reentrant model
  5776 ;;
  5777                           
  5778                           
  5779                           ;psect for function _isdigit
  5780  0802                     _isdigit:
  5781                           
  5782                           ;incstack = 0
  5783                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  5784                           ;isdigit@c stored from wreg
  5785  0802  00F1               	movwf	isdigit@c
  5786  0803                     l2920:
  5787  0803  01F0               	clrf	_isdigit$743
  5788  0804                     l2922:
  5789  0804  303A               	movlw	58
  5790  0805  0271               	subwf	isdigit@c,w
  5791  0806  1803               	skipnc
  5792  0807  2809               	goto	u4251
  5793  0808  280A               	goto	u4250
  5794  0809                     u4251:
  5795  0809  2812               	goto	l2928
  5796  080A                     u4250:
  5797  080A                     l2924:
  5798  080A  3030               	movlw	48
  5799  080B  0271               	subwf	isdigit@c,w
  5800  080C  1C03               	skipc
  5801  080D  280F               	goto	u4261
  5802  080E  2810               	goto	u4260
  5803  080F                     u4261:
  5804  080F  2812               	goto	l2928
  5805  0810                     u4260:
  5806  0810                     l2926:
  5807  0810  01F0               	clrf	_isdigit$743
  5808  0811  0AF0               	incf	_isdigit$743,f
  5809  0812                     l2928:
  5810  0812  0C70               	rrf	_isdigit$743,w
  5811  0813                     l834:
  5812  0813  0008               	return
  5813  0814                     __end_of_isdigit:
  5814                           
  5815                           	psect	text10
  5816  136D                     __ptext10:	
  5817 ;; *************** function _fround *****************
  5818 ;; Defined at:
  5819 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  5820 ;; Parameters:    Size  Location     Type
  5821 ;;  prec            1    wreg     unsigned char 
  5822 ;; Auto vars:     Size  Location     Type
  5823 ;;  prec            1   49[BANK0 ] unsigned char 
  5824 ;; Return value:  Size  Location     Type
  5825 ;;                  4   30[BANK0 ] unsigned char 
  5826 ;; Registers used:
  5827 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5828 ;; Tracked objects:
  5829 ;;		On entry : 0/0
  5830 ;;		On exit  : 0/0
  5831 ;;		Unchanged: 0/0
  5832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5833 ;;      Params:         0       4       0       0       0
  5834 ;;      Locals:         0       9       0       0       0
  5835 ;;      Temps:          0       7       0       0       0
  5836 ;;      Totals:         0      20       0       0       0
  5837 ;;Total ram usage:       20 bytes
  5838 ;; Hardware stack levels used: 1
  5839 ;; Hardware stack levels required when called: 2
  5840 ;; This function calls:
  5841 ;;		___flmul
  5842 ;;		___lwdiv
  5843 ;;		___lwmod
  5844 ;; This function is called by:
  5845 ;;		_sprintf
  5846 ;; This function uses a non-reentrant model
  5847 ;;
  5848                           
  5849                           
  5850                           ;psect for function _fround
  5851  136D                     _fround:
  5852                           
  5853                           ;incstack = 0
  5854                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5855                           ;fround@prec stored from wreg
  5856  136D  1283               	bcf	3,5	;RP0=0, select bank0
  5857  136E  1303               	bcf	3,6	;RP1=0, select bank0
  5858  136F  00D1               	movwf	fround@prec
  5859  1370                     l2862:
  5860                           
  5861                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  5862  1370  306E               	movlw	110
  5863  1371  0251               	subwf	fround@prec,w
  5864  1372  1C03               	skipc
  5865  1373  2B75               	goto	u4001
  5866  1374  2B76               	goto	u4000
  5867  1375                     u4001:
  5868  1375  2C83               	goto	l2870
  5869  1376                     u4000:
  5870  1376                     l2864:
  5871                           
  5872                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5873  1376  303F               	movlw	63
  5874  1377  00A7               	movwf	___flmul@b+3
  5875  1378  3000               	movlw	0
  5876  1379  00A6               	movwf	___flmul@b+2
  5877  137A  3000               	movlw	0
  5878  137B  00A5               	movwf	___flmul@b+1
  5879  137C  3000               	movlw	0
  5880  137D  00A4               	movwf	___flmul@b
  5881  137E  3064               	movlw	100
  5882  137F  00F6               	movwf	___lwdiv@divisor
  5883  1380  3000               	movlw	0
  5884  1381  00F7               	movwf	___lwdiv@divisor+1
  5885  1382  0851               	movf	fround@prec,w
  5886  1383  00C2               	movwf	??_fround
  5887  1384  01C3               	clrf	??_fround+1
  5888  1385  0842               	movf	??_fround,w
  5889  1386  00F8               	movwf	___lwdiv@dividend
  5890  1387  0843               	movf	??_fround+1,w
  5891  1388  00F9               	movwf	___lwdiv@dividend+1
  5892  1389  160A  158A  22E4  160A  118A  	fcall	___lwdiv
  5893  138E  0876               	movf	?___lwdiv,w
  5894  138F  1283               	bcf	3,5	;RP0=0, select bank0
  5895  1390  1303               	bcf	3,6	;RP1=0, select bank0
  5896  1391  00C4               	movwf	??_fround+2
  5897  1392  3001               	movlw	1
  5898  1393                     u4015:
  5899  1393  1003               	clrc
  5900  1394  0DC4               	rlf	??_fround+2,f
  5901  1395  3EFF               	addlw	-1
  5902  1396  1D03               	skipz
  5903  1397  2B93               	goto	u4015
  5904  1398  1003               	clrc
  5905  1399  0D44               	rlf	??_fround+2,w
  5906  139A  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  5907  139B  0084               	movwf	4
  5908  139C  160A  118A  200A  160A  118A  	fcall	stringdir
  5909  13A1  00C5               	movwf	??_fround+3
  5910  13A2  160A  118A  200A  160A  118A  	fcall	stringdir
  5911  13A7  00C6               	movwf	??_fround+4
  5912  13A8  160A  118A  200A  160A  118A  	fcall	stringdir
  5913  13AD  00C7               	movwf	??_fround+5
  5914  13AE  160A  118A  200A  160A  118A  	fcall	stringdir
  5915  13B3  00C8               	movwf	??_fround+6
  5916  13B4  0848               	movf	??_fround+6,w
  5917  13B5  00AB               	movwf	___flmul@a+3
  5918  13B6  0847               	movf	??_fround+5,w
  5919  13B7  00AA               	movwf	___flmul@a+2
  5920  13B8  0846               	movf	??_fround+4,w
  5921  13B9  00A9               	movwf	___flmul@a+1
  5922  13BA  0845               	movf	??_fround+3,w
  5923  13BB  00A8               	movwf	___flmul@a
  5924  13BC  120A  158A  249F  160A  118A  	fcall	___flmul
  5925  13C1  1283               	bcf	3,5	;RP0=0, select bank0
  5926  13C2  1303               	bcf	3,6	;RP1=0, select bank0
  5927  13C3  0827               	movf	?___flmul+3,w
  5928  13C4  00D0               	movwf	_fround$929+3
  5929  13C5  0826               	movf	?___flmul+2,w
  5930  13C6  00CF               	movwf	_fround$929+2
  5931  13C7  0825               	movf	?___flmul+1,w
  5932  13C8  00CE               	movwf	_fround$929+1
  5933  13C9  0824               	movf	?___flmul,w
  5934  13CA  00CD               	movwf	_fround$929
  5935                           
  5936                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5937  13CB  300A               	movlw	10
  5938  13CC  00F6               	movwf	___lwdiv@divisor
  5939  13CD  3000               	movlw	0
  5940  13CE  00F7               	movwf	___lwdiv@divisor+1
  5941  13CF  0851               	movf	fround@prec,w
  5942  13D0  00C2               	movwf	??_fround
  5943  13D1  01C3               	clrf	??_fround+1
  5944  13D2  0842               	movf	??_fround,w
  5945  13D3  00F2               	movwf	___lwmod@dividend
  5946  13D4  0843               	movf	??_fround+1,w
  5947  13D5  00F3               	movwf	___lwmod@dividend+1
  5948  13D6  3064               	movlw	100
  5949  13D7  00F0               	movwf	___lwmod@divisor
  5950  13D8  3000               	movlw	0
  5951  13D9  00F1               	movwf	___lwmod@divisor+1
  5952  13DA  160A  158A  2268  160A  118A  	fcall	___lwmod
  5953  13DF  0871               	movf	?___lwmod+1,w
  5954  13E0  00F9               	movwf	___lwdiv@dividend+1
  5955  13E1  0870               	movf	?___lwmod,w
  5956  13E2  00F8               	movwf	___lwdiv@dividend
  5957  13E3  160A  158A  22E4  160A  118A  	fcall	___lwdiv
  5958  13E8  0876               	movf	?___lwdiv,w
  5959  13E9  1283               	bcf	3,5	;RP0=0, select bank0
  5960  13EA  1303               	bcf	3,6	;RP1=0, select bank0
  5961  13EB  00C4               	movwf	??_fround+2
  5962  13EC  3001               	movlw	1
  5963  13ED                     u4025:
  5964  13ED  1003               	clrc
  5965  13EE  0DC4               	rlf	??_fround+2,f
  5966  13EF  3EFF               	addlw	-1
  5967  13F0  1D03               	skipz
  5968  13F1  2BED               	goto	u4025
  5969  13F2  1003               	clrc
  5970  13F3  0D44               	rlf	??_fround+2,w
  5971  13F4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5972  13F5  0084               	movwf	4
  5973  13F6  160A  118A  200A  160A  118A  	fcall	stringdir
  5974  13FB  00C5               	movwf	??_fround+3
  5975  13FC  160A  118A  200A  160A  118A  	fcall	stringdir
  5976  1401  00C6               	movwf	??_fround+4
  5977  1402  160A  118A  200A  160A  118A  	fcall	stringdir
  5978  1407  00C7               	movwf	??_fround+5
  5979  1408  160A  118A  200A  160A  118A  	fcall	stringdir
  5980  140D  00C8               	movwf	??_fround+6
  5981  140E  0848               	movf	??_fround+6,w
  5982  140F  00A7               	movwf	___flmul@b+3
  5983  1410  0847               	movf	??_fround+5,w
  5984  1411  00A6               	movwf	___flmul@b+2
  5985  1412  0846               	movf	??_fround+4,w
  5986  1413  00A5               	movwf	___flmul@b+1
  5987  1414  0845               	movf	??_fround+3,w
  5988  1415  00A4               	movwf	___flmul@b
  5989  1416  0850               	movf	_fround$929+3,w
  5990  1417  00AB               	movwf	___flmul@a+3
  5991  1418  084F               	movf	_fround$929+2,w
  5992  1419  00AA               	movwf	___flmul@a+2
  5993  141A  084E               	movf	_fround$929+1,w
  5994  141B  00A9               	movwf	___flmul@a+1
  5995  141C  084D               	movf	_fround$929,w
  5996  141D  00A8               	movwf	___flmul@a
  5997  141E  120A  158A  249F  160A  118A  	fcall	___flmul
  5998  1423  1283               	bcf	3,5	;RP0=0, select bank0
  5999  1424  1303               	bcf	3,6	;RP1=0, select bank0
  6000  1425  0827               	movf	?___flmul+3,w
  6001  1426  00CC               	movwf	_fround$930+3
  6002  1427  0826               	movf	?___flmul+2,w
  6003  1428  00CB               	movwf	_fround$930+2
  6004  1429  0825               	movf	?___flmul+1,w
  6005  142A  00CA               	movwf	_fround$930+1
  6006  142B  0824               	movf	?___flmul,w
  6007  142C  00C9               	movwf	_fround$930
  6008                           
  6009                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  6010  142D  300A               	movlw	10
  6011  142E  00F0               	movwf	___lwmod@divisor
  6012  142F  3000               	movlw	0
  6013  1430  00F1               	movwf	___lwmod@divisor+1
  6014  1431  0851               	movf	fround@prec,w
  6015  1432  00C2               	movwf	??_fround
  6016  1433  01C3               	clrf	??_fround+1
  6017  1434  0842               	movf	??_fround,w
  6018  1435  00F2               	movwf	___lwmod@dividend
  6019  1436  0843               	movf	??_fround+1,w
  6020  1437  00F3               	movwf	___lwmod@dividend+1
  6021  1438  160A  158A  2268  160A  118A  	fcall	___lwmod
  6022  143D  0870               	movf	?___lwmod,w
  6023  143E  1283               	bcf	3,5	;RP0=0, select bank0
  6024  143F  1303               	bcf	3,6	;RP1=0, select bank0
  6025  1440  00C4               	movwf	??_fround+2
  6026  1441  3001               	movlw	1
  6027  1442                     u4035:
  6028  1442  1003               	clrc
  6029  1443  0DC4               	rlf	??_fround+2,f
  6030  1444  3EFF               	addlw	-1
  6031  1445  1D03               	skipz
  6032  1446  2C42               	goto	u4035
  6033  1447  1003               	clrc
  6034  1448  0D44               	rlf	??_fround+2,w
  6035  1449  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  6036  144A  0084               	movwf	4
  6037  144B  160A  118A  200A  160A  118A  	fcall	stringdir
  6038  1450  00C5               	movwf	??_fround+3
  6039  1451  160A  118A  200A  160A  118A  	fcall	stringdir
  6040  1456  00C6               	movwf	??_fround+4
  6041  1457  160A  118A  200A  160A  118A  	fcall	stringdir
  6042  145C  00C7               	movwf	??_fround+5
  6043  145D  160A  118A  200A  160A  118A  	fcall	stringdir
  6044  1462  00C8               	movwf	??_fround+6
  6045  1463  0848               	movf	??_fround+6,w
  6046  1464  00A7               	movwf	___flmul@b+3
  6047  1465  0847               	movf	??_fround+5,w
  6048  1466  00A6               	movwf	___flmul@b+2
  6049  1467  0846               	movf	??_fround+4,w
  6050  1468  00A5               	movwf	___flmul@b+1
  6051  1469  0845               	movf	??_fround+3,w
  6052  146A  00A4               	movwf	___flmul@b
  6053  146B  084C               	movf	_fround$930+3,w
  6054  146C  00AB               	movwf	___flmul@a+3
  6055  146D  084B               	movf	_fround$930+2,w
  6056  146E  00AA               	movwf	___flmul@a+2
  6057  146F  084A               	movf	_fround$930+1,w
  6058  1470  00A9               	movwf	___flmul@a+1
  6059  1471  0849               	movf	_fround$930,w
  6060  1472  00A8               	movwf	___flmul@a
  6061  1473  120A  158A  249F  160A  118A  	fcall	___flmul
  6062  1478  1283               	bcf	3,5	;RP0=0, select bank0
  6063  1479  1303               	bcf	3,6	;RP1=0, select bank0
  6064  147A  0827               	movf	?___flmul+3,w
  6065  147B  00C1               	movwf	?_fround+3
  6066  147C  0826               	movf	?___flmul+2,w
  6067  147D  00C0               	movwf	?_fround+2
  6068  147E  0825               	movf	?___flmul+1,w
  6069  147F  00BF               	movwf	?_fround+1
  6070  1480  0824               	movf	?___flmul,w
  6071  1481  00BE               	movwf	?_fround
  6072  1482  2D77               	goto	l270
  6073  1483                     l2870:
  6074  1483  300B               	movlw	11
  6075  1484  0251               	subwf	fround@prec,w
  6076  1485  1C03               	skipc
  6077  1486  2C88               	goto	u4041
  6078  1487  2C89               	goto	u4040
  6079  1488                     u4041:
  6080  1488  2D34               	goto	l2876
  6081  1489                     u4040:
  6082  1489                     l2872:
  6083                           
  6084                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  6085  1489  303F               	movlw	63
  6086  148A  00A7               	movwf	___flmul@b+3
  6087  148B  3000               	movlw	0
  6088  148C  00A6               	movwf	___flmul@b+2
  6089  148D  3000               	movlw	0
  6090  148E  00A5               	movwf	___flmul@b+1
  6091  148F  3000               	movlw	0
  6092  1490  00A4               	movwf	___flmul@b
  6093  1491  300A               	movlw	10
  6094  1492  00F6               	movwf	___lwdiv@divisor
  6095  1493  3000               	movlw	0
  6096  1494  00F7               	movwf	___lwdiv@divisor+1
  6097  1495  0851               	movf	fround@prec,w
  6098  1496  00C2               	movwf	??_fround
  6099  1497  01C3               	clrf	??_fround+1
  6100  1498  0842               	movf	??_fround,w
  6101  1499  00F8               	movwf	___lwdiv@dividend
  6102  149A  0843               	movf	??_fround+1,w
  6103  149B  00F9               	movwf	___lwdiv@dividend+1
  6104  149C  160A  158A  22E4  160A  118A  	fcall	___lwdiv
  6105  14A1  0876               	movf	?___lwdiv,w
  6106  14A2  1283               	bcf	3,5	;RP0=0, select bank0
  6107  14A3  1303               	bcf	3,6	;RP1=0, select bank0
  6108  14A4  00C4               	movwf	??_fround+2
  6109  14A5  3001               	movlw	1
  6110  14A6                     u4055:
  6111  14A6  1003               	clrc
  6112  14A7  0DC4               	rlf	??_fround+2,f
  6113  14A8  3EFF               	addlw	-1
  6114  14A9  1D03               	skipz
  6115  14AA  2CA6               	goto	u4055
  6116  14AB  1003               	clrc
  6117  14AC  0D44               	rlf	??_fround+2,w
  6118  14AD  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  6119  14AE  0084               	movwf	4
  6120  14AF  160A  118A  200A  160A  118A  	fcall	stringdir
  6121  14B4  00C5               	movwf	??_fround+3
  6122  14B5  160A  118A  200A  160A  118A  	fcall	stringdir
  6123  14BA  00C6               	movwf	??_fround+4
  6124  14BB  160A  118A  200A  160A  118A  	fcall	stringdir
  6125  14C0  00C7               	movwf	??_fround+5
  6126  14C1  160A  118A  200A  160A  118A  	fcall	stringdir
  6127  14C6  00C8               	movwf	??_fround+6
  6128  14C7  0848               	movf	??_fround+6,w
  6129  14C8  00AB               	movwf	___flmul@a+3
  6130  14C9  0847               	movf	??_fround+5,w
  6131  14CA  00AA               	movwf	___flmul@a+2
  6132  14CB  0846               	movf	??_fround+4,w
  6133  14CC  00A9               	movwf	___flmul@a+1
  6134  14CD  0845               	movf	??_fround+3,w
  6135  14CE  00A8               	movwf	___flmul@a
  6136  14CF  120A  158A  249F  160A  118A  	fcall	___flmul
  6137  14D4  1283               	bcf	3,5	;RP0=0, select bank0
  6138  14D5  1303               	bcf	3,6	;RP1=0, select bank0
  6139  14D6  0827               	movf	?___flmul+3,w
  6140  14D7  00D0               	movwf	_fround$929+3
  6141  14D8  0826               	movf	?___flmul+2,w
  6142  14D9  00CF               	movwf	_fround$929+2
  6143  14DA  0825               	movf	?___flmul+1,w
  6144  14DB  00CE               	movwf	_fround$929+1
  6145  14DC  0824               	movf	?___flmul,w
  6146  14DD  00CD               	movwf	_fround$929
  6147                           
  6148                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  6149  14DE  300A               	movlw	10
  6150  14DF  00F0               	movwf	___lwmod@divisor
  6151  14E0  3000               	movlw	0
  6152  14E1  00F1               	movwf	___lwmod@divisor+1
  6153  14E2  0851               	movf	fround@prec,w
  6154  14E3  00C2               	movwf	??_fround
  6155  14E4  01C3               	clrf	??_fround+1
  6156  14E5  0842               	movf	??_fround,w
  6157  14E6  00F2               	movwf	___lwmod@dividend
  6158  14E7  0843               	movf	??_fround+1,w
  6159  14E8  00F3               	movwf	___lwmod@dividend+1
  6160  14E9  160A  158A  2268  160A  118A  	fcall	___lwmod
  6161  14EE  0870               	movf	?___lwmod,w
  6162  14EF  1283               	bcf	3,5	;RP0=0, select bank0
  6163  14F0  1303               	bcf	3,6	;RP1=0, select bank0
  6164  14F1  00C4               	movwf	??_fround+2
  6165  14F2  3001               	movlw	1
  6166  14F3                     u4065:
  6167  14F3  1003               	clrc
  6168  14F4  0DC4               	rlf	??_fround+2,f
  6169  14F5  3EFF               	addlw	-1
  6170  14F6  1D03               	skipz
  6171  14F7  2CF3               	goto	u4065
  6172  14F8  1003               	clrc
  6173  14F9  0D44               	rlf	??_fround+2,w
  6174  14FA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  6175  14FB  0084               	movwf	4
  6176  14FC  160A  118A  200A  160A  118A  	fcall	stringdir
  6177  1501  00C5               	movwf	??_fround+3
  6178  1502  160A  118A  200A  160A  118A  	fcall	stringdir
  6179  1507  00C6               	movwf	??_fround+4
  6180  1508  160A  118A  200A  160A  118A  	fcall	stringdir
  6181  150D  00C7               	movwf	??_fround+5
  6182  150E  160A  118A  200A  160A  118A  	fcall	stringdir
  6183  1513  00C8               	movwf	??_fround+6
  6184  1514  0848               	movf	??_fround+6,w
  6185  1515  00A7               	movwf	___flmul@b+3
  6186  1516  0847               	movf	??_fround+5,w
  6187  1517  00A6               	movwf	___flmul@b+2
  6188  1518  0846               	movf	??_fround+4,w
  6189  1519  00A5               	movwf	___flmul@b+1
  6190  151A  0845               	movf	??_fround+3,w
  6191  151B  00A4               	movwf	___flmul@b
  6192  151C  0850               	movf	_fround$929+3,w
  6193  151D  00AB               	movwf	___flmul@a+3
  6194  151E  084F               	movf	_fround$929+2,w
  6195  151F  00AA               	movwf	___flmul@a+2
  6196  1520  084E               	movf	_fround$929+1,w
  6197  1521  00A9               	movwf	___flmul@a+1
  6198  1522  084D               	movf	_fround$929,w
  6199  1523  00A8               	movwf	___flmul@a
  6200  1524  120A  158A  249F  160A  118A  	fcall	___flmul
  6201  1529  1283               	bcf	3,5	;RP0=0, select bank0
  6202  152A  1303               	bcf	3,6	;RP1=0, select bank0
  6203  152B  0827               	movf	?___flmul+3,w
  6204  152C  00C1               	movwf	?_fround+3
  6205  152D  0826               	movf	?___flmul+2,w
  6206  152E  00C0               	movwf	?_fround+2
  6207  152F  0825               	movf	?___flmul+1,w
  6208  1530  00BF               	movwf	?_fround+1
  6209  1531  0824               	movf	?___flmul,w
  6210  1532  00BE               	movwf	?_fround
  6211  1533  2D77               	goto	l270
  6212  1534                     l2876:
  6213                           
  6214                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  6215  1534  303F               	movlw	63
  6216  1535  00A7               	movwf	___flmul@b+3
  6217  1536  3000               	movlw	0
  6218  1537  00A6               	movwf	___flmul@b+2
  6219  1538  3000               	movlw	0
  6220  1539  00A5               	movwf	___flmul@b+1
  6221  153A  3000               	movlw	0
  6222  153B  00A4               	movwf	___flmul@b
  6223  153C  0851               	movf	fround@prec,w
  6224  153D  00C2               	movwf	??_fround
  6225  153E  3001               	movlw	1
  6226  153F                     u4075:
  6227  153F  1003               	clrc
  6228  1540  0DC2               	rlf	??_fround,f
  6229  1541  3EFF               	addlw	-1
  6230  1542  1D03               	skipz
  6231  1543  2D3F               	goto	u4075
  6232  1544  1003               	clrc
  6233  1545  0D42               	rlf	??_fround,w
  6234  1546  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  6235  1547  0084               	movwf	4
  6236  1548  160A  118A  200A  160A  118A  	fcall	stringdir
  6237  154D  00C3               	movwf	??_fround+1
  6238  154E  160A  118A  200A  160A  118A  	fcall	stringdir
  6239  1553  00C4               	movwf	??_fround+2
  6240  1554  160A  118A  200A  160A  118A  	fcall	stringdir
  6241  1559  00C5               	movwf	??_fround+3
  6242  155A  160A  118A  200A  160A  118A  	fcall	stringdir
  6243  155F  00C6               	movwf	??_fround+4
  6244  1560  0846               	movf	??_fround+4,w
  6245  1561  00AB               	movwf	___flmul@a+3
  6246  1562  0845               	movf	??_fround+3,w
  6247  1563  00AA               	movwf	___flmul@a+2
  6248  1564  0844               	movf	??_fround+2,w
  6249  1565  00A9               	movwf	___flmul@a+1
  6250  1566  0843               	movf	??_fround+1,w
  6251  1567  00A8               	movwf	___flmul@a
  6252  1568  120A  158A  249F  160A  118A  	fcall	___flmul
  6253  156D  1283               	bcf	3,5	;RP0=0, select bank0
  6254  156E  1303               	bcf	3,6	;RP1=0, select bank0
  6255  156F  0827               	movf	?___flmul+3,w
  6256  1570  00C1               	movwf	?_fround+3
  6257  1571  0826               	movf	?___flmul+2,w
  6258  1572  00C0               	movwf	?_fround+2
  6259  1573  0825               	movf	?___flmul+1,w
  6260  1574  00BF               	movwf	?_fround+1
  6261  1575  0824               	movf	?___flmul,w
  6262  1576  00BE               	movwf	?_fround
  6263  1577                     l270:
  6264  1577  0008               	return
  6265  1578                     __end_of_fround:
  6266                           
  6267                           	psect	text11
  6268  1A68                     __ptext11:	
  6269 ;; *************** function ___lwmod *****************
  6270 ;; Defined at:
  6271 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  6272 ;; Parameters:    Size  Location     Type
  6273 ;;  divisor         2    0[COMMON] unsigned int 
  6274 ;;  dividend        2    2[COMMON] unsigned int 
  6275 ;; Auto vars:     Size  Location     Type
  6276 ;;  counter         1    5[COMMON] unsigned char 
  6277 ;; Return value:  Size  Location     Type
  6278 ;;                  2    0[COMMON] unsigned int 
  6279 ;; Registers used:
  6280 ;;		wreg, status,2, status,0
  6281 ;; Tracked objects:
  6282 ;;		On entry : 0/0
  6283 ;;		On exit  : 0/0
  6284 ;;		Unchanged: 0/0
  6285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6286 ;;      Params:         4       0       0       0       0
  6287 ;;      Locals:         1       0       0       0       0
  6288 ;;      Temps:          1       0       0       0       0
  6289 ;;      Totals:         6       0       0       0       0
  6290 ;;Total ram usage:        6 bytes
  6291 ;; Hardware stack levels used: 1
  6292 ;; This function calls:
  6293 ;;		Nothing
  6294 ;; This function is called by:
  6295 ;;		_fround
  6296 ;; This function uses a non-reentrant model
  6297 ;;
  6298                           
  6299                           
  6300                           ;psect for function ___lwmod
  6301  1A68                     ___lwmod:
  6302  1A68                     l2476:	
  6303                           ;incstack = 0
  6304                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6305                           
  6306  1A68  0870               	movf	___lwmod@divisor,w
  6307  1A69  0471               	iorwf	___lwmod@divisor+1,w
  6308  1A6A  1903               	btfsc	3,2
  6309  1A6B  2A6D               	goto	u3101
  6310  1A6C  2A6E               	goto	u3100
  6311  1A6D                     u3101:
  6312  1A6D  2A9D               	goto	l2494
  6313  1A6E                     u3100:
  6314  1A6E                     l2478:
  6315  1A6E  01F5               	clrf	___lwmod@counter
  6316  1A6F  0AF5               	incf	___lwmod@counter,f
  6317  1A70  2A7C               	goto	l2484
  6318  1A71                     l2480:
  6319  1A71  3001               	movlw	1
  6320  1A72                     u3115:
  6321  1A72  1003               	clrc
  6322  1A73  0DF0               	rlf	___lwmod@divisor,f
  6323  1A74  0DF1               	rlf	___lwmod@divisor+1,f
  6324  1A75  3EFF               	addlw	-1
  6325  1A76  1D03               	skipz
  6326  1A77  2A72               	goto	u3115
  6327  1A78                     l2482:
  6328  1A78  3001               	movlw	1
  6329  1A79  00F4               	movwf	??___lwmod
  6330  1A7A  0874               	movf	??___lwmod,w
  6331  1A7B  07F5               	addwf	___lwmod@counter,f
  6332  1A7C                     l2484:
  6333  1A7C  1FF1               	btfss	___lwmod@divisor+1,7
  6334  1A7D  2A7F               	goto	u3121
  6335  1A7E  2A80               	goto	u3120
  6336  1A7F                     u3121:
  6337  1A7F  2A71               	goto	l2480
  6338  1A80                     u3120:
  6339  1A80                     l2486:
  6340  1A80  0871               	movf	___lwmod@divisor+1,w
  6341  1A81  0273               	subwf	___lwmod@dividend+1,w
  6342  1A82  1D03               	skipz
  6343  1A83  2A86               	goto	u3135
  6344  1A84  0870               	movf	___lwmod@divisor,w
  6345  1A85  0272               	subwf	___lwmod@dividend,w
  6346  1A86                     u3135:
  6347  1A86  1C03               	skipc
  6348  1A87  2A89               	goto	u3131
  6349  1A88  2A8A               	goto	u3130
  6350  1A89                     u3131:
  6351  1A89  2A90               	goto	l2490
  6352  1A8A                     u3130:
  6353  1A8A                     l2488:
  6354  1A8A  0870               	movf	___lwmod@divisor,w
  6355  1A8B  02F2               	subwf	___lwmod@dividend,f
  6356  1A8C  0871               	movf	___lwmod@divisor+1,w
  6357  1A8D  1C03               	skipc
  6358  1A8E  03F3               	decf	___lwmod@dividend+1,f
  6359  1A8F  02F3               	subwf	___lwmod@dividend+1,f
  6360  1A90                     l2490:
  6361  1A90  3001               	movlw	1
  6362  1A91                     u3145:
  6363  1A91  1003               	clrc
  6364  1A92  0CF1               	rrf	___lwmod@divisor+1,f
  6365  1A93  0CF0               	rrf	___lwmod@divisor,f
  6366  1A94  3EFF               	addlw	-1
  6367  1A95  1D03               	skipz
  6368  1A96  2A91               	goto	u3145
  6369  1A97                     l2492:
  6370  1A97  3001               	movlw	1
  6371  1A98  02F5               	subwf	___lwmod@counter,f
  6372  1A99  1D03               	btfss	3,2
  6373  1A9A  2A9C               	goto	u3151
  6374  1A9B  2A9D               	goto	u3150
  6375  1A9C                     u3151:
  6376  1A9C  2A80               	goto	l2486
  6377  1A9D                     u3150:
  6378  1A9D                     l2494:
  6379  1A9D  0873               	movf	___lwmod@dividend+1,w
  6380  1A9E  00F1               	movwf	?___lwmod+1
  6381  1A9F  0872               	movf	___lwmod@dividend,w
  6382  1AA0  00F0               	movwf	?___lwmod
  6383  1AA1                     l663:
  6384  1AA1  0008               	return
  6385  1AA2                     __end_of___lwmod:
  6386                           
  6387                           	psect	text12
  6388  1AE4                     __ptext12:	
  6389 ;; *************** function ___lwdiv *****************
  6390 ;; Defined at:
  6391 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  6392 ;; Parameters:    Size  Location     Type
  6393 ;;  divisor         2    6[COMMON] unsigned int 
  6394 ;;  dividend        2    8[COMMON] unsigned int 
  6395 ;; Auto vars:     Size  Location     Type
  6396 ;;  quotient        2   11[COMMON] unsigned int 
  6397 ;;  counter         1   13[COMMON] unsigned char 
  6398 ;; Return value:  Size  Location     Type
  6399 ;;                  2    6[COMMON] unsigned int 
  6400 ;; Registers used:
  6401 ;;		wreg, status,2, status,0
  6402 ;; Tracked objects:
  6403 ;;		On entry : 0/0
  6404 ;;		On exit  : 0/0
  6405 ;;		Unchanged: 0/0
  6406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6407 ;;      Params:         4       0       0       0       0
  6408 ;;      Locals:         3       0       0       0       0
  6409 ;;      Temps:          1       0       0       0       0
  6410 ;;      Totals:         8       0       0       0       0
  6411 ;;Total ram usage:        8 bytes
  6412 ;; Hardware stack levels used: 1
  6413 ;; This function calls:
  6414 ;;		Nothing
  6415 ;; This function is called by:
  6416 ;;		_fround
  6417 ;; This function uses a non-reentrant model
  6418 ;;
  6419                           
  6420                           
  6421                           ;psect for function ___lwdiv
  6422  1AE4                     ___lwdiv:
  6423  1AE4                     l2450:	
  6424                           ;incstack = 0
  6425                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6426                           
  6427  1AE4  01FB               	clrf	___lwdiv@quotient
  6428  1AE5  01FC               	clrf	___lwdiv@quotient+1
  6429  1AE6                     l2452:
  6430  1AE6  0876               	movf	___lwdiv@divisor,w
  6431  1AE7  0477               	iorwf	___lwdiv@divisor+1,w
  6432  1AE8  1903               	btfsc	3,2
  6433  1AE9  2AEB               	goto	u3031
  6434  1AEA  2AEC               	goto	u3030
  6435  1AEB                     u3031:
  6436  1AEB  2B23               	goto	l2472
  6437  1AEC                     u3030:
  6438  1AEC                     l2454:
  6439  1AEC  01FD               	clrf	___lwdiv@counter
  6440  1AED  0AFD               	incf	___lwdiv@counter,f
  6441  1AEE  2AFA               	goto	l2460
  6442  1AEF                     l2456:
  6443  1AEF  3001               	movlw	1
  6444  1AF0                     u3045:
  6445  1AF0  1003               	clrc
  6446  1AF1  0DF6               	rlf	___lwdiv@divisor,f
  6447  1AF2  0DF7               	rlf	___lwdiv@divisor+1,f
  6448  1AF3  3EFF               	addlw	-1
  6449  1AF4  1D03               	skipz
  6450  1AF5  2AF0               	goto	u3045
  6451  1AF6                     l2458:
  6452  1AF6  3001               	movlw	1
  6453  1AF7  00FA               	movwf	??___lwdiv
  6454  1AF8  087A               	movf	??___lwdiv,w
  6455  1AF9  07FD               	addwf	___lwdiv@counter,f
  6456  1AFA                     l2460:
  6457  1AFA  1FF7               	btfss	___lwdiv@divisor+1,7
  6458  1AFB  2AFD               	goto	u3051
  6459  1AFC  2AFE               	goto	u3050
  6460  1AFD                     u3051:
  6461  1AFD  2AEF               	goto	l2456
  6462  1AFE                     u3050:
  6463  1AFE                     l2462:
  6464  1AFE  3001               	movlw	1
  6465  1AFF                     u3065:
  6466  1AFF  1003               	clrc
  6467  1B00  0DFB               	rlf	___lwdiv@quotient,f
  6468  1B01  0DFC               	rlf	___lwdiv@quotient+1,f
  6469  1B02  3EFF               	addlw	-1
  6470  1B03  1D03               	skipz
  6471  1B04  2AFF               	goto	u3065
  6472  1B05  0877               	movf	___lwdiv@divisor+1,w
  6473  1B06  0279               	subwf	___lwdiv@dividend+1,w
  6474  1B07  1D03               	skipz
  6475  1B08  2B0B               	goto	u3075
  6476  1B09  0876               	movf	___lwdiv@divisor,w
  6477  1B0A  0278               	subwf	___lwdiv@dividend,w
  6478  1B0B                     u3075:
  6479  1B0B  1C03               	skipc
  6480  1B0C  2B0E               	goto	u3071
  6481  1B0D  2B0F               	goto	u3070
  6482  1B0E                     u3071:
  6483  1B0E  2B16               	goto	l2468
  6484  1B0F                     u3070:
  6485  1B0F                     l2464:
  6486  1B0F  0876               	movf	___lwdiv@divisor,w
  6487  1B10  02F8               	subwf	___lwdiv@dividend,f
  6488  1B11  0877               	movf	___lwdiv@divisor+1,w
  6489  1B12  1C03               	skipc
  6490  1B13  03F9               	decf	___lwdiv@dividend+1,f
  6491  1B14  02F9               	subwf	___lwdiv@dividend+1,f
  6492  1B15                     l2466:
  6493  1B15  147B               	bsf	___lwdiv@quotient,0
  6494  1B16                     l2468:
  6495  1B16  3001               	movlw	1
  6496  1B17                     u3085:
  6497  1B17  1003               	clrc
  6498  1B18  0CF7               	rrf	___lwdiv@divisor+1,f
  6499  1B19  0CF6               	rrf	___lwdiv@divisor,f
  6500  1B1A  3EFF               	addlw	-1
  6501  1B1B  1D03               	skipz
  6502  1B1C  2B17               	goto	u3085
  6503  1B1D                     l2470:
  6504  1B1D  3001               	movlw	1
  6505  1B1E  02FD               	subwf	___lwdiv@counter,f
  6506  1B1F  1D03               	btfss	3,2
  6507  1B20  2B22               	goto	u3091
  6508  1B21  2B23               	goto	u3090
  6509  1B22                     u3091:
  6510  1B22  2AFE               	goto	l2462
  6511  1B23                     u3090:
  6512  1B23                     l2472:
  6513  1B23  087C               	movf	___lwdiv@quotient+1,w
  6514  1B24  00F7               	movwf	?___lwdiv+1
  6515  1B25  087B               	movf	___lwdiv@quotient,w
  6516  1B26  00F6               	movwf	?___lwdiv
  6517  1B27                     l653:
  6518  1B27  0008               	return
  6519  1B28                     __end_of___lwdiv:
  6520                           
  6521                           	psect	text13
  6522  0C9F                     __ptext13:	
  6523 ;; *************** function ___flmul *****************
  6524 ;; Defined at:
  6525 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcmul.c"
  6526 ;; Parameters:    Size  Location     Type
  6527 ;;  b               4    4[BANK0 ] unsigned int 
  6528 ;;  a               4    8[BANK0 ] unsigned int 
  6529 ;; Auto vars:     Size  Location     Type
  6530 ;;  prod            4   24[BANK0 ] struct .
  6531 ;;  grs             4   18[BANK0 ] unsigned long 
  6532 ;;  temp            2   28[BANK0 ] struct .
  6533 ;;  bexp            1   23[BANK0 ] unsigned char 
  6534 ;;  aexp            1   22[BANK0 ] unsigned char 
  6535 ;;  sign            1   17[BANK0 ] unsigned char 
  6536 ;; Return value:  Size  Location     Type
  6537 ;;                  4    4[BANK0 ] unsigned char 
  6538 ;; Registers used:
  6539 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6540 ;; Tracked objects:
  6541 ;;		On entry : 0/0
  6542 ;;		On exit  : 0/0
  6543 ;;		Unchanged: 0/0
  6544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6545 ;;      Params:         0       8       0       0       0
  6546 ;;      Locals:         0      13       0       0       0
  6547 ;;      Temps:          0       5       0       0       0
  6548 ;;      Totals:         0      26       0       0       0
  6549 ;;Total ram usage:       26 bytes
  6550 ;; Hardware stack levels used: 1
  6551 ;; Hardware stack levels required when called: 1
  6552 ;; This function calls:
  6553 ;;		__Umul8_16
  6554 ;; This function is called by:
  6555 ;;		_fround
  6556 ;;		_scale
  6557 ;;		_sprintf
  6558 ;; This function uses a non-reentrant model
  6559 ;;
  6560                           
  6561                           
  6562                           ;psect for function ___flmul
  6563  0C9F                     ___flmul:
  6564  0C9F                     l2692:	
  6565                           ;incstack = 0
  6566                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6567                           
  6568  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  6569  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  6570  0CA1  0827               	movf	___flmul@b+3,w
  6571  0CA2  3980               	andlw	128
  6572  0CA3  00AC               	movwf	??___flmul
  6573  0CA4  082C               	movf	??___flmul,w
  6574  0CA5  00B1               	movwf	___flmul@sign
  6575  0CA6                     l2694:
  6576  0CA6  0827               	movf	___flmul@b+3,w
  6577  0CA7  00AC               	movwf	??___flmul
  6578  0CA8  072C               	addwf	??___flmul,w
  6579  0CA9  00AD               	movwf	??___flmul+1
  6580  0CAA  082D               	movf	??___flmul+1,w
  6581  0CAB  00B7               	movwf	___flmul@bexp
  6582  0CAC                     l2696:
  6583  0CAC  1FA6               	btfss	___flmul@b+2,7
  6584  0CAD  2CAF               	goto	u3621
  6585  0CAE  2CB0               	goto	u3620
  6586  0CAF                     u3621:
  6587  0CAF  2CB1               	goto	l2700
  6588  0CB0                     u3620:
  6589  0CB0                     l2698:
  6590  0CB0  1437               	bsf	___flmul@bexp,0
  6591  0CB1                     l2700:
  6592  0CB1  0837               	movf	___flmul@bexp,w
  6593  0CB2  1903               	btfsc	3,2
  6594  0CB3  2CB5               	goto	u3631
  6595  0CB4  2CB6               	goto	u3630
  6596  0CB5                     u3631:
  6597  0CB5  2CC5               	goto	l2708
  6598  0CB6                     u3630:
  6599  0CB6                     l2702:
  6600  0CB6  0A37               	incf	___flmul@bexp,w
  6601  0CB7  1D03               	btfss	3,2
  6602  0CB8  2CBA               	goto	u3641
  6603  0CB9  2CBB               	goto	u3640
  6604  0CBA                     u3641:
  6605  0CBA  2CC3               	goto	l2706
  6606  0CBB                     u3640:
  6607  0CBB                     l2704:
  6608  0CBB  3000               	movlw	0
  6609  0CBC  00A7               	movwf	___flmul@b+3
  6610  0CBD  3000               	movlw	0
  6611  0CBE  00A6               	movwf	___flmul@b+2
  6612  0CBF  3000               	movlw	0
  6613  0CC0  00A5               	movwf	___flmul@b+1
  6614  0CC1  3000               	movlw	0
  6615  0CC2  00A4               	movwf	___flmul@b
  6616  0CC3                     l2706:
  6617  0CC3  17A6               	bsf	___flmul@b+2,7
  6618  0CC4  2CCD               	goto	l2710
  6619  0CC5                     l2708:
  6620  0CC5  3000               	movlw	0
  6621  0CC6  00A7               	movwf	___flmul@b+3
  6622  0CC7  3000               	movlw	0
  6623  0CC8  00A6               	movwf	___flmul@b+2
  6624  0CC9  3000               	movlw	0
  6625  0CCA  00A5               	movwf	___flmul@b+1
  6626  0CCB  3000               	movlw	0
  6627  0CCC  00A4               	movwf	___flmul@b
  6628  0CCD                     l2710:
  6629  0CCD  082B               	movf	___flmul@a+3,w
  6630  0CCE  3980               	andlw	128
  6631  0CCF  00AC               	movwf	??___flmul
  6632  0CD0  082C               	movf	??___flmul,w
  6633  0CD1  06B1               	xorwf	___flmul@sign,f
  6634  0CD2                     l2712:
  6635  0CD2  082B               	movf	___flmul@a+3,w
  6636  0CD3  00AC               	movwf	??___flmul
  6637  0CD4  072C               	addwf	??___flmul,w
  6638  0CD5  00AD               	movwf	??___flmul+1
  6639  0CD6  082D               	movf	??___flmul+1,w
  6640  0CD7  00B6               	movwf	___flmul@aexp
  6641  0CD8                     l2714:
  6642  0CD8  1FAA               	btfss	___flmul@a+2,7
  6643  0CD9  2CDB               	goto	u3651
  6644  0CDA  2CDC               	goto	u3650
  6645  0CDB                     u3651:
  6646  0CDB  2CDD               	goto	l2718
  6647  0CDC                     u3650:
  6648  0CDC                     l2716:
  6649  0CDC  1436               	bsf	___flmul@aexp,0
  6650  0CDD                     l2718:
  6651  0CDD  0836               	movf	___flmul@aexp,w
  6652  0CDE  1903               	btfsc	3,2
  6653  0CDF  2CE1               	goto	u3661
  6654  0CE0  2CE2               	goto	u3660
  6655  0CE1                     u3661:
  6656  0CE1  2CF1               	goto	l2726
  6657  0CE2                     u3660:
  6658  0CE2                     l2720:
  6659  0CE2  0A36               	incf	___flmul@aexp,w
  6660  0CE3  1D03               	btfss	3,2
  6661  0CE4  2CE6               	goto	u3671
  6662  0CE5  2CE7               	goto	u3670
  6663  0CE6                     u3671:
  6664  0CE6  2CEF               	goto	l2724
  6665  0CE7                     u3670:
  6666  0CE7                     l2722:
  6667  0CE7  3000               	movlw	0
  6668  0CE8  00AB               	movwf	___flmul@a+3
  6669  0CE9  3000               	movlw	0
  6670  0CEA  00AA               	movwf	___flmul@a+2
  6671  0CEB  3000               	movlw	0
  6672  0CEC  00A9               	movwf	___flmul@a+1
  6673  0CED  3000               	movlw	0
  6674  0CEE  00A8               	movwf	___flmul@a
  6675  0CEF                     l2724:
  6676  0CEF  17AA               	bsf	___flmul@a+2,7
  6677  0CF0  2CF9               	goto	l2728
  6678  0CF1                     l2726:
  6679  0CF1  3000               	movlw	0
  6680  0CF2  00AB               	movwf	___flmul@a+3
  6681  0CF3  3000               	movlw	0
  6682  0CF4  00AA               	movwf	___flmul@a+2
  6683  0CF5  3000               	movlw	0
  6684  0CF6  00A9               	movwf	___flmul@a+1
  6685  0CF7  3000               	movlw	0
  6686  0CF8  00A8               	movwf	___flmul@a
  6687  0CF9                     l2728:
  6688  0CF9  0836               	movf	___flmul@aexp,w
  6689  0CFA  1903               	btfsc	3,2
  6690  0CFB  2CFD               	goto	u3681
  6691  0CFC  2CFE               	goto	u3680
  6692  0CFD                     u3681:
  6693  0CFD  2D03               	goto	l2732
  6694  0CFE                     u3680:
  6695  0CFE                     l2730:
  6696  0CFE  0837               	movf	___flmul@bexp,w
  6697  0CFF  1D03               	btfss	3,2
  6698  0D00  2D02               	goto	u3691
  6699  0D01  2D03               	goto	u3690
  6700  0D02                     u3691:
  6701  0D02  2D0C               	goto	l2736
  6702  0D03                     u3690:
  6703  0D03                     l2732:
  6704  0D03  3000               	movlw	0
  6705  0D04  00A7               	movwf	?___flmul+3
  6706  0D05  3000               	movlw	0
  6707  0D06  00A6               	movwf	?___flmul+2
  6708  0D07  3000               	movlw	0
  6709  0D08  00A5               	movwf	?___flmul+1
  6710  0D09  3000               	movlw	0
  6711  0D0A  00A4               	movwf	?___flmul
  6712  0D0B  2FFF               	goto	l770
  6713  0D0C                     l2736:
  6714  0D0C  0824               	movf	___flmul@b,w
  6715  0D0D  00AC               	movwf	??___flmul
  6716  0D0E  082C               	movf	??___flmul,w
  6717  0D0F  00F0               	movwf	__Umul8_16@multiplicand
  6718  0D10  082A               	movf	___flmul@a+2,w
  6719  0D11  160A  158A  21A4  120A  158A  	fcall	__Umul8_16
  6720  0D16  0871               	movf	?__Umul8_16+1,w
  6721  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  6722  0D18  1303               	bcf	3,6	;RP1=0, select bank0
  6723  0D19  00BD               	movwf	___flmul@temp+1
  6724  0D1A  0870               	movf	?__Umul8_16,w
  6725  0D1B  00BC               	movwf	___flmul@temp
  6726  0D1C                     l2738:
  6727  0D1C  083C               	movf	___flmul@temp,w
  6728  0D1D  00AC               	movwf	??___flmul
  6729  0D1E  01AD               	clrf	??___flmul+1
  6730  0D1F  01AE               	clrf	??___flmul+2
  6731  0D20  01AF               	clrf	??___flmul+3
  6732  0D21  082F               	movf	??___flmul+3,w
  6733  0D22  00B5               	movwf	___flmul@grs+3
  6734  0D23  082E               	movf	??___flmul+2,w
  6735  0D24  00B4               	movwf	___flmul@grs+2
  6736  0D25  082D               	movf	??___flmul+1,w
  6737  0D26  00B3               	movwf	___flmul@grs+1
  6738  0D27  082C               	movf	??___flmul,w
  6739  0D28  00B2               	movwf	___flmul@grs
  6740  0D29                     l2740:
  6741  0D29  083D               	movf	___flmul@temp+1,w
  6742  0D2A  00AC               	movwf	??___flmul
  6743  0D2B  01AD               	clrf	??___flmul+1
  6744  0D2C  01AE               	clrf	??___flmul+2
  6745  0D2D  01AF               	clrf	??___flmul+3
  6746  0D2E  082F               	movf	??___flmul+3,w
  6747  0D2F  00BB               	movwf	___flmul@prod+3
  6748  0D30  082E               	movf	??___flmul+2,w
  6749  0D31  00BA               	movwf	___flmul@prod+2
  6750  0D32  082D               	movf	??___flmul+1,w
  6751  0D33  00B9               	movwf	___flmul@prod+1
  6752  0D34  082C               	movf	??___flmul,w
  6753  0D35  00B8               	movwf	___flmul@prod
  6754  0D36  0825               	movf	___flmul@b+1,w
  6755  0D37  00AC               	movwf	??___flmul
  6756  0D38  082C               	movf	??___flmul,w
  6757  0D39  00F0               	movwf	__Umul8_16@multiplicand
  6758  0D3A  0829               	movf	___flmul@a+1,w
  6759  0D3B  160A  158A  21A4  120A  158A  	fcall	__Umul8_16
  6760  0D40  0871               	movf	?__Umul8_16+1,w
  6761  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  6762  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  6763  0D43  00BD               	movwf	___flmul@temp+1
  6764  0D44  0870               	movf	?__Umul8_16,w
  6765  0D45  00BC               	movwf	___flmul@temp
  6766  0D46                     l2742:
  6767  0D46  083C               	movf	___flmul@temp,w
  6768  0D47  00AC               	movwf	??___flmul
  6769  0D48  01AD               	clrf	??___flmul+1
  6770  0D49  01AE               	clrf	??___flmul+2
  6771  0D4A  01AF               	clrf	??___flmul+3
  6772  0D4B  082C               	movf	??___flmul,w
  6773  0D4C  07B2               	addwf	___flmul@grs,f
  6774  0D4D  082D               	movf	??___flmul+1,w
  6775  0D4E  1103               	clrz
  6776  0D4F  1803               	skipnc
  6777  0D50  3E01               	addlw	1
  6778  0D51  1903               	skipnz
  6779  0D52  2D54               	goto	u3701
  6780  0D53  07B3               	addwf	___flmul@grs+1,f
  6781  0D54                     u3701:
  6782  0D54  082E               	movf	??___flmul+2,w
  6783  0D55  1103               	clrz
  6784  0D56  1803               	skipnc
  6785  0D57  3E01               	addlw	1
  6786  0D58  1903               	skipnz
  6787  0D59  2D5B               	goto	u3702
  6788  0D5A  07B4               	addwf	___flmul@grs+2,f
  6789  0D5B                     u3702:
  6790  0D5B  082F               	movf	??___flmul+3,w
  6791  0D5C  1103               	clrz
  6792  0D5D  1803               	skipnc
  6793  0D5E  3E01               	addlw	1
  6794  0D5F  1903               	skipnz
  6795  0D60  2D62               	goto	u3703
  6796  0D61  07B5               	addwf	___flmul@grs+3,f
  6797  0D62                     u3703:
  6798  0D62                     l2744:
  6799  0D62  083D               	movf	___flmul@temp+1,w
  6800  0D63  00AC               	movwf	??___flmul
  6801  0D64  01AD               	clrf	??___flmul+1
  6802  0D65  01AE               	clrf	??___flmul+2
  6803  0D66  01AF               	clrf	??___flmul+3
  6804  0D67  082C               	movf	??___flmul,w
  6805  0D68  07B8               	addwf	___flmul@prod,f
  6806  0D69  082D               	movf	??___flmul+1,w
  6807  0D6A  1103               	clrz
  6808  0D6B  1803               	skipnc
  6809  0D6C  3E01               	addlw	1
  6810  0D6D  1903               	skipnz
  6811  0D6E  2D70               	goto	u3711
  6812  0D6F  07B9               	addwf	___flmul@prod+1,f
  6813  0D70                     u3711:
  6814  0D70  082E               	movf	??___flmul+2,w
  6815  0D71  1103               	clrz
  6816  0D72  1803               	skipnc
  6817  0D73  3E01               	addlw	1
  6818  0D74  1903               	skipnz
  6819  0D75  2D77               	goto	u3712
  6820  0D76  07BA               	addwf	___flmul@prod+2,f
  6821  0D77                     u3712:
  6822  0D77  082F               	movf	??___flmul+3,w
  6823  0D78  1103               	clrz
  6824  0D79  1803               	skipnc
  6825  0D7A  3E01               	addlw	1
  6826  0D7B  1903               	skipnz
  6827  0D7C  2D7E               	goto	u3713
  6828  0D7D  07BB               	addwf	___flmul@prod+3,f
  6829  0D7E                     u3713:
  6830  0D7E  0826               	movf	___flmul@b+2,w
  6831  0D7F  00AC               	movwf	??___flmul
  6832  0D80  082C               	movf	??___flmul,w
  6833  0D81  00F0               	movwf	__Umul8_16@multiplicand
  6834  0D82  0828               	movf	___flmul@a,w
  6835  0D83  160A  158A  21A4  120A  158A  	fcall	__Umul8_16
  6836  0D88  0871               	movf	?__Umul8_16+1,w
  6837  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  6838  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  6839  0D8B  00BD               	movwf	___flmul@temp+1
  6840  0D8C  0870               	movf	?__Umul8_16,w
  6841  0D8D  00BC               	movwf	___flmul@temp
  6842  0D8E                     l2746:
  6843  0D8E  083C               	movf	___flmul@temp,w
  6844  0D8F  00AC               	movwf	??___flmul
  6845  0D90  01AD               	clrf	??___flmul+1
  6846  0D91  01AE               	clrf	??___flmul+2
  6847  0D92  01AF               	clrf	??___flmul+3
  6848  0D93  082C               	movf	??___flmul,w
  6849  0D94  07B2               	addwf	___flmul@grs,f
  6850  0D95  082D               	movf	??___flmul+1,w
  6851  0D96  1103               	clrz
  6852  0D97  1803               	skipnc
  6853  0D98  3E01               	addlw	1
  6854  0D99  1903               	skipnz
  6855  0D9A  2D9C               	goto	u3721
  6856  0D9B  07B3               	addwf	___flmul@grs+1,f
  6857  0D9C                     u3721:
  6858  0D9C  082E               	movf	??___flmul+2,w
  6859  0D9D  1103               	clrz
  6860  0D9E  1803               	skipnc
  6861  0D9F  3E01               	addlw	1
  6862  0DA0  1903               	skipnz
  6863  0DA1  2DA3               	goto	u3722
  6864  0DA2  07B4               	addwf	___flmul@grs+2,f
  6865  0DA3                     u3722:
  6866  0DA3  082F               	movf	??___flmul+3,w
  6867  0DA4  1103               	clrz
  6868  0DA5  1803               	skipnc
  6869  0DA6  3E01               	addlw	1
  6870  0DA7  1903               	skipnz
  6871  0DA8  2DAA               	goto	u3723
  6872  0DA9  07B5               	addwf	___flmul@grs+3,f
  6873  0DAA                     u3723:
  6874  0DAA                     l2748:
  6875  0DAA  083D               	movf	___flmul@temp+1,w
  6876  0DAB  00AC               	movwf	??___flmul
  6877  0DAC  01AD               	clrf	??___flmul+1
  6878  0DAD  01AE               	clrf	??___flmul+2
  6879  0DAE  01AF               	clrf	??___flmul+3
  6880  0DAF  082C               	movf	??___flmul,w
  6881  0DB0  07B8               	addwf	___flmul@prod,f
  6882  0DB1  082D               	movf	??___flmul+1,w
  6883  0DB2  1103               	clrz
  6884  0DB3  1803               	skipnc
  6885  0DB4  3E01               	addlw	1
  6886  0DB5  1903               	skipnz
  6887  0DB6  2DB8               	goto	u3731
  6888  0DB7  07B9               	addwf	___flmul@prod+1,f
  6889  0DB8                     u3731:
  6890  0DB8  082E               	movf	??___flmul+2,w
  6891  0DB9  1103               	clrz
  6892  0DBA  1803               	skipnc
  6893  0DBB  3E01               	addlw	1
  6894  0DBC  1903               	skipnz
  6895  0DBD  2DBF               	goto	u3732
  6896  0DBE  07BA               	addwf	___flmul@prod+2,f
  6897  0DBF                     u3732:
  6898  0DBF  082F               	movf	??___flmul+3,w
  6899  0DC0  1103               	clrz
  6900  0DC1  1803               	skipnc
  6901  0DC2  3E01               	addlw	1
  6902  0DC3  1903               	skipnz
  6903  0DC4  2DC6               	goto	u3733
  6904  0DC5  07BB               	addwf	___flmul@prod+3,f
  6905  0DC6                     u3733:
  6906  0DC6                     l2750:
  6907  0DC6  3008               	movlw	8
  6908  0DC7  00AC               	movwf	??___flmul
  6909  0DC8                     u3745:
  6910  0DC8  1003               	clrc
  6911  0DC9  0DB2               	rlf	___flmul@grs,f
  6912  0DCA  0DB3               	rlf	___flmul@grs+1,f
  6913  0DCB  0DB4               	rlf	___flmul@grs+2,f
  6914  0DCC  0DB5               	rlf	___flmul@grs+3,f
  6915  0DCD  0BAC               	decfsz	??___flmul,f
  6916  0DCE  2DC8               	goto	u3745
  6917  0DCF                     l2752:
  6918  0DCF  0825               	movf	___flmul@b+1,w
  6919  0DD0  00AC               	movwf	??___flmul
  6920  0DD1  082C               	movf	??___flmul,w
  6921  0DD2  00F0               	movwf	__Umul8_16@multiplicand
  6922  0DD3  0828               	movf	___flmul@a,w
  6923  0DD4  160A  158A  21A4  120A  158A  	fcall	__Umul8_16
  6924  0DD9  0871               	movf	?__Umul8_16+1,w
  6925  0DDA  1283               	bcf	3,5	;RP0=0, select bank0
  6926  0DDB  1303               	bcf	3,6	;RP1=0, select bank0
  6927  0DDC  00BD               	movwf	___flmul@temp+1
  6928  0DDD  0870               	movf	?__Umul8_16,w
  6929  0DDE  00BC               	movwf	___flmul@temp
  6930  0DDF                     l2754:
  6931  0DDF  083C               	movf	___flmul@temp,w
  6932  0DE0  00AC               	movwf	??___flmul
  6933  0DE1  083D               	movf	___flmul@temp+1,w
  6934  0DE2  00AD               	movwf	??___flmul+1
  6935  0DE3  01AE               	clrf	??___flmul+2
  6936  0DE4  01AF               	clrf	??___flmul+3
  6937  0DE5  082C               	movf	??___flmul,w
  6938  0DE6  07B2               	addwf	___flmul@grs,f
  6939  0DE7  082D               	movf	??___flmul+1,w
  6940  0DE8  1103               	clrz
  6941  0DE9  1803               	skipnc
  6942  0DEA  3E01               	addlw	1
  6943  0DEB  1903               	skipnz
  6944  0DEC  2DEE               	goto	u3751
  6945  0DED  07B3               	addwf	___flmul@grs+1,f
  6946  0DEE                     u3751:
  6947  0DEE  082E               	movf	??___flmul+2,w
  6948  0DEF  1103               	clrz
  6949  0DF0  1803               	skipnc
  6950  0DF1  3E01               	addlw	1
  6951  0DF2  1903               	skipnz
  6952  0DF3  2DF5               	goto	u3752
  6953  0DF4  07B4               	addwf	___flmul@grs+2,f
  6954  0DF5                     u3752:
  6955  0DF5  082F               	movf	??___flmul+3,w
  6956  0DF6  1103               	clrz
  6957  0DF7  1803               	skipnc
  6958  0DF8  3E01               	addlw	1
  6959  0DF9  1903               	skipnz
  6960  0DFA  2DFC               	goto	u3753
  6961  0DFB  07B5               	addwf	___flmul@grs+3,f
  6962  0DFC                     u3753:
  6963  0DFC                     l2756:
  6964  0DFC  0824               	movf	___flmul@b,w
  6965  0DFD  00AC               	movwf	??___flmul
  6966  0DFE  082C               	movf	??___flmul,w
  6967  0DFF  00F0               	movwf	__Umul8_16@multiplicand
  6968  0E00  0829               	movf	___flmul@a+1,w
  6969  0E01  160A  158A  21A4  120A  158A  	fcall	__Umul8_16
  6970  0E06  0871               	movf	?__Umul8_16+1,w
  6971  0E07  1283               	bcf	3,5	;RP0=0, select bank0
  6972  0E08  1303               	bcf	3,6	;RP1=0, select bank0
  6973  0E09  00BD               	movwf	___flmul@temp+1
  6974  0E0A  0870               	movf	?__Umul8_16,w
  6975  0E0B  00BC               	movwf	___flmul@temp
  6976  0E0C                     l2758:
  6977  0E0C  083C               	movf	___flmul@temp,w
  6978  0E0D  00AC               	movwf	??___flmul
  6979  0E0E  083D               	movf	___flmul@temp+1,w
  6980  0E0F  00AD               	movwf	??___flmul+1
  6981  0E10  01AE               	clrf	??___flmul+2
  6982  0E11  01AF               	clrf	??___flmul+3
  6983  0E12  082C               	movf	??___flmul,w
  6984  0E13  07B2               	addwf	___flmul@grs,f
  6985  0E14  082D               	movf	??___flmul+1,w
  6986  0E15  1103               	clrz
  6987  0E16  1803               	skipnc
  6988  0E17  3E01               	addlw	1
  6989  0E18  1903               	skipnz
  6990  0E19  2E1B               	goto	u3761
  6991  0E1A  07B3               	addwf	___flmul@grs+1,f
  6992  0E1B                     u3761:
  6993  0E1B  082E               	movf	??___flmul+2,w
  6994  0E1C  1103               	clrz
  6995  0E1D  1803               	skipnc
  6996  0E1E  3E01               	addlw	1
  6997  0E1F  1903               	skipnz
  6998  0E20  2E22               	goto	u3762
  6999  0E21  07B4               	addwf	___flmul@grs+2,f
  7000  0E22                     u3762:
  7001  0E22  082F               	movf	??___flmul+3,w
  7002  0E23  1103               	clrz
  7003  0E24  1803               	skipnc
  7004  0E25  3E01               	addlw	1
  7005  0E26  1903               	skipnz
  7006  0E27  2E29               	goto	u3763
  7007  0E28  07B5               	addwf	___flmul@grs+3,f
  7008  0E29                     u3763:
  7009  0E29                     l2760:
  7010  0E29  3008               	movlw	8
  7011  0E2A  00AC               	movwf	??___flmul
  7012  0E2B                     u3775:
  7013  0E2B  1003               	clrc
  7014  0E2C  0DB2               	rlf	___flmul@grs,f
  7015  0E2D  0DB3               	rlf	___flmul@grs+1,f
  7016  0E2E  0DB4               	rlf	___flmul@grs+2,f
  7017  0E2F  0DB5               	rlf	___flmul@grs+3,f
  7018  0E30  0BAC               	decfsz	??___flmul,f
  7019  0E31  2E2B               	goto	u3775
  7020  0E32  0824               	movf	___flmul@b,w
  7021  0E33  00AC               	movwf	??___flmul
  7022  0E34  082C               	movf	??___flmul,w
  7023  0E35  00F0               	movwf	__Umul8_16@multiplicand
  7024  0E36  0828               	movf	___flmul@a,w
  7025  0E37  160A  158A  21A4  120A  158A  	fcall	__Umul8_16
  7026  0E3C  0871               	movf	?__Umul8_16+1,w
  7027  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  7028  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  7029  0E3F  00BD               	movwf	___flmul@temp+1
  7030  0E40  0870               	movf	?__Umul8_16,w
  7031  0E41  00BC               	movwf	___flmul@temp
  7032  0E42                     l2762:
  7033  0E42  083C               	movf	___flmul@temp,w
  7034  0E43  00AC               	movwf	??___flmul
  7035  0E44  083D               	movf	___flmul@temp+1,w
  7036  0E45  00AD               	movwf	??___flmul+1
  7037  0E46  01AE               	clrf	??___flmul+2
  7038  0E47  01AF               	clrf	??___flmul+3
  7039  0E48  082C               	movf	??___flmul,w
  7040  0E49  07B2               	addwf	___flmul@grs,f
  7041  0E4A  082D               	movf	??___flmul+1,w
  7042  0E4B  1103               	clrz
  7043  0E4C  1803               	skipnc
  7044  0E4D  3E01               	addlw	1
  7045  0E4E  1903               	skipnz
  7046  0E4F  2E51               	goto	u3781
  7047  0E50  07B3               	addwf	___flmul@grs+1,f
  7048  0E51                     u3781:
  7049  0E51  082E               	movf	??___flmul+2,w
  7050  0E52  1103               	clrz
  7051  0E53  1803               	skipnc
  7052  0E54  3E01               	addlw	1
  7053  0E55  1903               	skipnz
  7054  0E56  2E58               	goto	u3782
  7055  0E57  07B4               	addwf	___flmul@grs+2,f
  7056  0E58                     u3782:
  7057  0E58  082F               	movf	??___flmul+3,w
  7058  0E59  1103               	clrz
  7059  0E5A  1803               	skipnc
  7060  0E5B  3E01               	addlw	1
  7061  0E5C  1903               	skipnz
  7062  0E5D  2E5F               	goto	u3783
  7063  0E5E  07B5               	addwf	___flmul@grs+3,f
  7064  0E5F                     u3783:
  7065  0E5F                     l2764:
  7066  0E5F  0825               	movf	___flmul@b+1,w
  7067  0E60  00AC               	movwf	??___flmul
  7068  0E61  082C               	movf	??___flmul,w
  7069  0E62  00F0               	movwf	__Umul8_16@multiplicand
  7070  0E63  082A               	movf	___flmul@a+2,w
  7071  0E64  160A  158A  21A4  120A  158A  	fcall	__Umul8_16
  7072  0E69  0871               	movf	?__Umul8_16+1,w
  7073  0E6A  1283               	bcf	3,5	;RP0=0, select bank0
  7074  0E6B  1303               	bcf	3,6	;RP1=0, select bank0
  7075  0E6C  00BD               	movwf	___flmul@temp+1
  7076  0E6D  0870               	movf	?__Umul8_16,w
  7077  0E6E  00BC               	movwf	___flmul@temp
  7078  0E6F  083C               	movf	___flmul@temp,w
  7079  0E70  00AC               	movwf	??___flmul
  7080  0E71  083D               	movf	___flmul@temp+1,w
  7081  0E72  00AD               	movwf	??___flmul+1
  7082  0E73  01AE               	clrf	??___flmul+2
  7083  0E74  01AF               	clrf	??___flmul+3
  7084  0E75  082C               	movf	??___flmul,w
  7085  0E76  07B8               	addwf	___flmul@prod,f
  7086  0E77  082D               	movf	??___flmul+1,w
  7087  0E78  1103               	clrz
  7088  0E79  1803               	skipnc
  7089  0E7A  3E01               	addlw	1
  7090  0E7B  1903               	skipnz
  7091  0E7C  2E7E               	goto	u3791
  7092  0E7D  07B9               	addwf	___flmul@prod+1,f
  7093  0E7E                     u3791:
  7094  0E7E  082E               	movf	??___flmul+2,w
  7095  0E7F  1103               	clrz
  7096  0E80  1803               	skipnc
  7097  0E81  3E01               	addlw	1
  7098  0E82  1903               	skipnz
  7099  0E83  2E85               	goto	u3792
  7100  0E84  07BA               	addwf	___flmul@prod+2,f
  7101  0E85                     u3792:
  7102  0E85  082F               	movf	??___flmul+3,w
  7103  0E86  1103               	clrz
  7104  0E87  1803               	skipnc
  7105  0E88  3E01               	addlw	1
  7106  0E89  1903               	skipnz
  7107  0E8A  2E8C               	goto	u3793
  7108  0E8B  07BB               	addwf	___flmul@prod+3,f
  7109  0E8C                     u3793:
  7110  0E8C                     l2766:
  7111  0E8C  0826               	movf	___flmul@b+2,w
  7112  0E8D  00AC               	movwf	??___flmul
  7113  0E8E  082C               	movf	??___flmul,w
  7114  0E8F  00F0               	movwf	__Umul8_16@multiplicand
  7115  0E90  0829               	movf	___flmul@a+1,w
  7116  0E91  160A  158A  21A4  120A  158A  	fcall	__Umul8_16
  7117  0E96  0871               	movf	?__Umul8_16+1,w
  7118  0E97  1283               	bcf	3,5	;RP0=0, select bank0
  7119  0E98  1303               	bcf	3,6	;RP1=0, select bank0
  7120  0E99  00BD               	movwf	___flmul@temp+1
  7121  0E9A  0870               	movf	?__Umul8_16,w
  7122  0E9B  00BC               	movwf	___flmul@temp
  7123  0E9C                     l2768:
  7124  0E9C  083C               	movf	___flmul@temp,w
  7125  0E9D  00AC               	movwf	??___flmul
  7126  0E9E  083D               	movf	___flmul@temp+1,w
  7127  0E9F  00AD               	movwf	??___flmul+1
  7128  0EA0  01AE               	clrf	??___flmul+2
  7129  0EA1  01AF               	clrf	??___flmul+3
  7130  0EA2  082C               	movf	??___flmul,w
  7131  0EA3  07B8               	addwf	___flmul@prod,f
  7132  0EA4  082D               	movf	??___flmul+1,w
  7133  0EA5  1103               	clrz
  7134  0EA6  1803               	skipnc
  7135  0EA7  3E01               	addlw	1
  7136  0EA8  1903               	skipnz
  7137  0EA9  2EAB               	goto	u3801
  7138  0EAA  07B9               	addwf	___flmul@prod+1,f
  7139  0EAB                     u3801:
  7140  0EAB  082E               	movf	??___flmul+2,w
  7141  0EAC  1103               	clrz
  7142  0EAD  1803               	skipnc
  7143  0EAE  3E01               	addlw	1
  7144  0EAF  1903               	skipnz
  7145  0EB0  2EB2               	goto	u3802
  7146  0EB1  07BA               	addwf	___flmul@prod+2,f
  7147  0EB2                     u3802:
  7148  0EB2  082F               	movf	??___flmul+3,w
  7149  0EB3  1103               	clrz
  7150  0EB4  1803               	skipnc
  7151  0EB5  3E01               	addlw	1
  7152  0EB6  1903               	skipnz
  7153  0EB7  2EB9               	goto	u3803
  7154  0EB8  07BB               	addwf	___flmul@prod+3,f
  7155  0EB9                     u3803:
  7156  0EB9  0826               	movf	___flmul@b+2,w
  7157  0EBA  00AC               	movwf	??___flmul
  7158  0EBB  082C               	movf	??___flmul,w
  7159  0EBC  00F0               	movwf	__Umul8_16@multiplicand
  7160  0EBD  082A               	movf	___flmul@a+2,w
  7161  0EBE  160A  158A  21A4  120A  158A  	fcall	__Umul8_16
  7162  0EC3  0871               	movf	?__Umul8_16+1,w
  7163  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  7164  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  7165  0EC6  00BD               	movwf	___flmul@temp+1
  7166  0EC7  0870               	movf	?__Umul8_16,w
  7167  0EC8  00BC               	movwf	___flmul@temp
  7168  0EC9                     l2770:
  7169  0EC9  083C               	movf	___flmul@temp,w
  7170  0ECA  00AC               	movwf	??___flmul
  7171  0ECB  083D               	movf	___flmul@temp+1,w
  7172  0ECC  00AD               	movwf	??___flmul+1
  7173  0ECD  01AE               	clrf	??___flmul+2
  7174  0ECE  01AF               	clrf	??___flmul+3
  7175  0ECF  3008               	movlw	8
  7176  0ED0                     u3815:
  7177  0ED0  1003               	clrc
  7178  0ED1  0DAC               	rlf	??___flmul,f
  7179  0ED2  0DAD               	rlf	??___flmul+1,f
  7180  0ED3  0DAE               	rlf	??___flmul+2,f
  7181  0ED4  0DAF               	rlf	??___flmul+3,f
  7182  0ED5                     u3810:
  7183  0ED5  3EFF               	addlw	-1
  7184  0ED6  1D03               	skipz
  7185  0ED7  2ED0               	goto	u3815
  7186  0ED8  082C               	movf	??___flmul,w
  7187  0ED9  07B8               	addwf	___flmul@prod,f
  7188  0EDA  082D               	movf	??___flmul+1,w
  7189  0EDB  1103               	clrz
  7190  0EDC  1803               	skipnc
  7191  0EDD  3E01               	addlw	1
  7192  0EDE  1903               	skipnz
  7193  0EDF  2EE1               	goto	u3821
  7194  0EE0  07B9               	addwf	___flmul@prod+1,f
  7195  0EE1                     u3821:
  7196  0EE1  082E               	movf	??___flmul+2,w
  7197  0EE2  1103               	clrz
  7198  0EE3  1803               	skipnc
  7199  0EE4  3E01               	addlw	1
  7200  0EE5  1903               	skipnz
  7201  0EE6  2EE8               	goto	u3822
  7202  0EE7  07BA               	addwf	___flmul@prod+2,f
  7203  0EE8                     u3822:
  7204  0EE8  082F               	movf	??___flmul+3,w
  7205  0EE9  1103               	clrz
  7206  0EEA  1803               	skipnc
  7207  0EEB  3E01               	addlw	1
  7208  0EEC  1903               	skipnz
  7209  0EED  2EEF               	goto	u3823
  7210  0EEE  07BB               	addwf	___flmul@prod+3,f
  7211  0EEF                     u3823:
  7212  0EEF                     l2772:
  7213  0EEF  0832               	movf	___flmul@grs,w
  7214  0EF0  00AC               	movwf	??___flmul
  7215  0EF1  0833               	movf	___flmul@grs+1,w
  7216  0EF2  00AD               	movwf	??___flmul+1
  7217  0EF3  0834               	movf	___flmul@grs+2,w
  7218  0EF4  00AE               	movwf	??___flmul+2
  7219  0EF5  0835               	movf	___flmul@grs+3,w
  7220  0EF6  00AF               	movwf	??___flmul+3
  7221  0EF7  3018               	movlw	24
  7222  0EF8                     u3835:
  7223  0EF8  1003               	clrc
  7224  0EF9  0CAF               	rrf	??___flmul+3,f
  7225  0EFA  0CAE               	rrf	??___flmul+2,f
  7226  0EFB  0CAD               	rrf	??___flmul+1,f
  7227  0EFC  0CAC               	rrf	??___flmul,f
  7228  0EFD                     u3830:
  7229  0EFD  3EFF               	addlw	-1
  7230  0EFE  1D03               	skipz
  7231  0EFF  2EF8               	goto	u3835
  7232  0F00  082C               	movf	??___flmul,w
  7233  0F01  07B8               	addwf	___flmul@prod,f
  7234  0F02  082D               	movf	??___flmul+1,w
  7235  0F03  1103               	clrz
  7236  0F04  1803               	skipnc
  7237  0F05  3E01               	addlw	1
  7238  0F06  1903               	skipnz
  7239  0F07  2F09               	goto	u3841
  7240  0F08  07B9               	addwf	___flmul@prod+1,f
  7241  0F09                     u3841:
  7242  0F09  082E               	movf	??___flmul+2,w
  7243  0F0A  1103               	clrz
  7244  0F0B  1803               	skipnc
  7245  0F0C  3E01               	addlw	1
  7246  0F0D  1903               	skipnz
  7247  0F0E  2F10               	goto	u3842
  7248  0F0F  07BA               	addwf	___flmul@prod+2,f
  7249  0F10                     u3842:
  7250  0F10  082F               	movf	??___flmul+3,w
  7251  0F11  1103               	clrz
  7252  0F12  1803               	skipnc
  7253  0F13  3E01               	addlw	1
  7254  0F14  1903               	skipnz
  7255  0F15  2F17               	goto	u3843
  7256  0F16  07BB               	addwf	___flmul@prod+3,f
  7257  0F17                     u3843:
  7258  0F17                     l2774:
  7259  0F17  3008               	movlw	8
  7260  0F18  00AC               	movwf	??___flmul
  7261  0F19                     u3855:
  7262  0F19  1003               	clrc
  7263  0F1A  0DB2               	rlf	___flmul@grs,f
  7264  0F1B  0DB3               	rlf	___flmul@grs+1,f
  7265  0F1C  0DB4               	rlf	___flmul@grs+2,f
  7266  0F1D  0DB5               	rlf	___flmul@grs+3,f
  7267  0F1E  0BAC               	decfsz	??___flmul,f
  7268  0F1F  2F19               	goto	u3855
  7269  0F20                     l2776:
  7270  0F20  0837               	movf	___flmul@bexp,w
  7271  0F21  0736               	addwf	___flmul@aexp,w
  7272  0F22  00AC               	movwf	??___flmul
  7273  0F23  01AD               	clrf	??___flmul+1
  7274  0F24  0DAD               	rlf	??___flmul+1,f
  7275  0F25  082C               	movf	??___flmul,w
  7276  0F26  3E82               	addlw	130
  7277  0F27  00BC               	movwf	___flmul@temp
  7278  0F28  082D               	movf	??___flmul+1,w
  7279  0F29  1803               	skipnc
  7280  0F2A  3E01               	addlw	1
  7281  0F2B  3EFF               	addlw	255
  7282  0F2C  00BD               	movwf	___flmul@temp+1
  7283  0F2D  2F4B               	goto	l2788
  7284  0F2E                     l2778:
  7285  0F2E  3001               	movlw	1
  7286  0F2F  00AC               	movwf	??___flmul
  7287  0F30                     u3865:
  7288  0F30  1003               	clrc
  7289  0F31  0DB8               	rlf	___flmul@prod,f
  7290  0F32  0DB9               	rlf	___flmul@prod+1,f
  7291  0F33  0DBA               	rlf	___flmul@prod+2,f
  7292  0F34  0DBB               	rlf	___flmul@prod+3,f
  7293  0F35  0BAC               	decfsz	??___flmul,f
  7294  0F36  2F30               	goto	u3865
  7295  0F37                     l2780:
  7296  0F37  1FB5               	btfss	___flmul@grs+3,7
  7297  0F38  2F3A               	goto	u3871
  7298  0F39  2F3B               	goto	u3870
  7299  0F3A                     u3871:
  7300  0F3A  2F3C               	goto	l2784
  7301  0F3B                     u3870:
  7302  0F3B                     l2782:
  7303  0F3B  1438               	bsf	___flmul@prod,0
  7304  0F3C                     l2784:
  7305  0F3C  3001               	movlw	1
  7306  0F3D  00AC               	movwf	??___flmul
  7307  0F3E                     u3885:
  7308  0F3E  1003               	clrc
  7309  0F3F  0DB2               	rlf	___flmul@grs,f
  7310  0F40  0DB3               	rlf	___flmul@grs+1,f
  7311  0F41  0DB4               	rlf	___flmul@grs+2,f
  7312  0F42  0DB5               	rlf	___flmul@grs+3,f
  7313  0F43  0BAC               	decfsz	??___flmul,f
  7314  0F44  2F3E               	goto	u3885
  7315  0F45                     l2786:
  7316  0F45  30FF               	movlw	255
  7317  0F46  07BC               	addwf	___flmul@temp,f
  7318  0F47  1803               	skipnc
  7319  0F48  0ABD               	incf	___flmul@temp+1,f
  7320  0F49  30FF               	movlw	255
  7321  0F4A  07BD               	addwf	___flmul@temp+1,f
  7322  0F4B                     l2788:
  7323  0F4B  1FBA               	btfss	___flmul@prod+2,7
  7324  0F4C  2F4E               	goto	u3891
  7325  0F4D  2F4F               	goto	u3890
  7326  0F4E                     u3891:
  7327  0F4E  2F2E               	goto	l2778
  7328  0F4F                     u3890:
  7329  0F4F                     l2790:
  7330  0F4F  01B6               	clrf	___flmul@aexp
  7331  0F50                     l2792:
  7332  0F50  1FB5               	btfss	___flmul@grs+3,7
  7333  0F51  2F53               	goto	u3901
  7334  0F52  2F54               	goto	u3900
  7335  0F53                     u3901:
  7336  0F53  2F70               	goto	l2800
  7337  0F54                     u3900:
  7338  0F54                     l2794:
  7339  0F54  30FF               	movlw	255
  7340  0F55  0532               	andwf	___flmul@grs,w
  7341  0F56  00AC               	movwf	??___flmul
  7342  0F57  30FF               	movlw	255
  7343  0F58  0533               	andwf	___flmul@grs+1,w
  7344  0F59  00AD               	movwf	??___flmul+1
  7345  0F5A  30FF               	movlw	255
  7346  0F5B  0534               	andwf	___flmul@grs+2,w
  7347  0F5C  00AE               	movwf	??___flmul+2
  7348  0F5D  307F               	movlw	127
  7349  0F5E  0535               	andwf	___flmul@grs+3,w
  7350  0F5F  00AF               	movwf	??___flmul+3
  7351  0F60  082F               	movf	??___flmul+3,w
  7352  0F61  042E               	iorwf	??___flmul+2,w
  7353  0F62  042D               	iorwf	??___flmul+1,w
  7354  0F63  042C               	iorwf	??___flmul,w
  7355  0F64  1903               	skipnz
  7356  0F65  2F67               	goto	u3911
  7357  0F66  2F68               	goto	u3910
  7358  0F67                     u3911:
  7359  0F67  2F6B               	goto	l776
  7360  0F68                     u3910:
  7361  0F68                     l2796:
  7362  0F68  01B6               	clrf	___flmul@aexp
  7363  0F69  0AB6               	incf	___flmul@aexp,f
  7364  0F6A  2F70               	goto	l2800
  7365  0F6B                     l776:
  7366  0F6B  1C38               	btfss	___flmul@prod,0
  7367  0F6C  2F6E               	goto	u3921
  7368  0F6D  2F6F               	goto	u3920
  7369  0F6E                     u3921:
  7370  0F6E  2F70               	goto	l2800
  7371  0F6F                     u3920:
  7372  0F6F  2F68               	goto	l2796
  7373  0F70                     l2800:
  7374  0F70  0836               	movf	___flmul@aexp,w
  7375  0F71  1903               	btfsc	3,2
  7376  0F72  2F74               	goto	u3931
  7377  0F73  2F75               	goto	u3930
  7378  0F74                     u3931:
  7379  0F74  2FA6               	goto	l2810
  7380  0F75                     u3930:
  7381  0F75                     l2802:
  7382  0F75  3001               	movlw	1
  7383  0F76  07B8               	addwf	___flmul@prod,f
  7384  0F77  3000               	movlw	0
  7385  0F78  1803               	skipnc
  7386  0F79  3001               	movlw	1
  7387  0F7A  07B9               	addwf	___flmul@prod+1,f
  7388  0F7B  3000               	movlw	0
  7389  0F7C  1803               	skipnc
  7390  0F7D  3001               	movlw	1
  7391  0F7E  07BA               	addwf	___flmul@prod+2,f
  7392  0F7F  3000               	movlw	0
  7393  0F80  1803               	skipnc
  7394  0F81  3001               	movlw	1
  7395  0F82  07BB               	addwf	___flmul@prod+3,f
  7396  0F83                     l2804:
  7397  0F83  1C3B               	btfss	___flmul@prod+3,0
  7398  0F84  2F86               	goto	u3941
  7399  0F85  2F87               	goto	u3940
  7400  0F86                     u3941:
  7401  0F86  2FA6               	goto	l2810
  7402  0F87                     u3940:
  7403  0F87                     l2806:
  7404  0F87  0838               	movf	___flmul@prod,w
  7405  0F88  00AC               	movwf	??___flmul
  7406  0F89  0839               	movf	___flmul@prod+1,w
  7407  0F8A  00AD               	movwf	??___flmul+1
  7408  0F8B  083A               	movf	___flmul@prod+2,w
  7409  0F8C  00AE               	movwf	??___flmul+2
  7410  0F8D  083B               	movf	___flmul@prod+3,w
  7411  0F8E  00AF               	movwf	??___flmul+3
  7412  0F8F  3001               	movlw	1
  7413  0F90  00B0               	movwf	??___flmul+4
  7414  0F91                     u3955:
  7415  0F91  0D2F               	rlf	??___flmul+3,w
  7416  0F92  0CAF               	rrf	??___flmul+3,f
  7417  0F93  0CAE               	rrf	??___flmul+2,f
  7418  0F94  0CAD               	rrf	??___flmul+1,f
  7419  0F95  0CAC               	rrf	??___flmul,f
  7420  0F96                     u3950:
  7421  0F96  0BB0               	decfsz	??___flmul+4,f
  7422  0F97  2F91               	goto	u3955
  7423  0F98  082F               	movf	??___flmul+3,w
  7424  0F99  00BB               	movwf	___flmul@prod+3
  7425  0F9A  082E               	movf	??___flmul+2,w
  7426  0F9B  00BA               	movwf	___flmul@prod+2
  7427  0F9C  082D               	movf	??___flmul+1,w
  7428  0F9D  00B9               	movwf	___flmul@prod+1
  7429  0F9E  082C               	movf	??___flmul,w
  7430  0F9F  00B8               	movwf	___flmul@prod
  7431  0FA0                     l2808:
  7432  0FA0  3001               	movlw	1
  7433  0FA1  07BC               	addwf	___flmul@temp,f
  7434  0FA2  1803               	skipnc
  7435  0FA3  0ABD               	incf	___flmul@temp+1,f
  7436  0FA4  3000               	movlw	0
  7437  0FA5  07BD               	addwf	___flmul@temp+1,f
  7438  0FA6                     l2810:
  7439  0FA6  083D               	movf	___flmul@temp+1,w
  7440  0FA7  3A80               	xorlw	128
  7441  0FA8  00FF               	movwf	btemp+1
  7442  0FA9  3080               	movlw	128
  7443  0FAA  027F               	subwf	btemp+1,w
  7444  0FAB  1D03               	skipz
  7445  0FAC  2FAF               	goto	u3965
  7446  0FAD  30FF               	movlw	255
  7447  0FAE  023C               	subwf	___flmul@temp,w
  7448  0FAF                     u3965:
  7449  0FAF  1C03               	skipc
  7450  0FB0  2FB2               	goto	u3961
  7451  0FB1  2FB3               	goto	u3960
  7452  0FB2                     u3961:
  7453  0FB2  2FBE               	goto	l2814
  7454  0FB3                     u3960:
  7455  0FB3                     l2812:
  7456  0FB3  307F               	movlw	127
  7457  0FB4  1283               	bcf	3,5	;RP0=0, select bank0
  7458  0FB5  1303               	bcf	3,6	;RP1=0, select bank0
  7459  0FB6  00BB               	movwf	___flmul@prod+3
  7460  0FB7  3080               	movlw	128
  7461  0FB8  00BA               	movwf	___flmul@prod+2
  7462  0FB9  3000               	movlw	0
  7463  0FBA  00B9               	movwf	___flmul@prod+1
  7464  0FBB  3000               	movlw	0
  7465  0FBC  00B8               	movwf	___flmul@prod
  7466  0FBD  2FF3               	goto	l782
  7467  0FBE                     l2814:
  7468  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  7469  0FBF  1303               	bcf	3,6	;RP1=0, select bank0
  7470  0FC0  083D               	movf	___flmul@temp+1,w
  7471  0FC1  3A80               	xorlw	128
  7472  0FC2  00FF               	movwf	btemp+1
  7473  0FC3  3080               	movlw	128
  7474  0FC4  027F               	subwf	btemp+1,w
  7475  0FC5  1D03               	skipz
  7476  0FC6  2FC9               	goto	u3975
  7477  0FC7  3001               	movlw	1
  7478  0FC8  023C               	subwf	___flmul@temp,w
  7479  0FC9                     u3975:
  7480  0FC9  1803               	skipnc
  7481  0FCA  2FCC               	goto	u3971
  7482  0FCB  2FCD               	goto	u3970
  7483  0FCC                     u3971:
  7484  0FCC  2FD9               	goto	l2820
  7485  0FCD                     u3970:
  7486  0FCD                     l2816:
  7487  0FCD  3000               	movlw	0
  7488  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
  7489  0FCF  1303               	bcf	3,6	;RP1=0, select bank0
  7490  0FD0  00BB               	movwf	___flmul@prod+3
  7491  0FD1  3000               	movlw	0
  7492  0FD2  00BA               	movwf	___flmul@prod+2
  7493  0FD3  3000               	movlw	0
  7494  0FD4  00B9               	movwf	___flmul@prod+1
  7495  0FD5  3000               	movlw	0
  7496  0FD6  00B8               	movwf	___flmul@prod
  7497  0FD7                     l2818:
  7498  0FD7  01B1               	clrf	___flmul@sign
  7499  0FD8  2FF3               	goto	l782
  7500  0FD9                     l2820:
  7501  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  7502  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
  7503  0FDB  083C               	movf	___flmul@temp,w
  7504  0FDC  00AC               	movwf	??___flmul
  7505  0FDD  082C               	movf	??___flmul,w
  7506  0FDE  00B7               	movwf	___flmul@bexp
  7507  0FDF  30FF               	movlw	255
  7508  0FE0  05B8               	andwf	___flmul@prod,f
  7509  0FE1  30FF               	movlw	255
  7510  0FE2  05B9               	andwf	___flmul@prod+1,f
  7511  0FE3  307F               	movlw	127
  7512  0FE4  05BA               	andwf	___flmul@prod+2,f
  7513  0FE5  3000               	movlw	0
  7514  0FE6  05BB               	andwf	___flmul@prod+3,f
  7515  0FE7                     l2822:
  7516  0FE7  1C37               	btfss	___flmul@bexp,0
  7517  0FE8  2FEA               	goto	u3981
  7518  0FE9  2FEB               	goto	u3980
  7519  0FEA                     u3981:
  7520  0FEA  2FEC               	goto	l2826
  7521  0FEB                     u3980:
  7522  0FEB                     l2824:
  7523  0FEB  17BA               	bsf	___flmul@prod+2,7
  7524  0FEC                     l2826:
  7525  0FEC  0837               	movf	___flmul@bexp,w
  7526  0FED  00AC               	movwf	??___flmul
  7527  0FEE  1003               	clrc
  7528  0FEF  0C2C               	rrf	??___flmul,w
  7529  0FF0  00AD               	movwf	??___flmul+1
  7530  0FF1  082D               	movf	??___flmul+1,w
  7531  0FF2  00BB               	movwf	___flmul@prod+3
  7532  0FF3                     l782:
  7533  0FF3  0831               	movf	___flmul@sign,w
  7534  0FF4  00AC               	movwf	??___flmul
  7535  0FF5  082C               	movf	??___flmul,w
  7536  0FF6  04BB               	iorwf	___flmul@prod+3,f
  7537  0FF7                     l2828:
  7538  0FF7  083B               	movf	___flmul@prod+3,w
  7539  0FF8  00A7               	movwf	?___flmul+3
  7540  0FF9  083A               	movf	___flmul@prod+2,w
  7541  0FFA  00A6               	movwf	?___flmul+2
  7542  0FFB  0839               	movf	___flmul@prod+1,w
  7543  0FFC  00A5               	movwf	?___flmul+1
  7544  0FFD  0838               	movf	___flmul@prod,w
  7545  0FFE  00A4               	movwf	?___flmul
  7546  0FFF                     l770:
  7547  0FFF  0008               	return
  7548  1000                     __end_of___flmul:
  7549                           
  7550                           	psect	text14
  7551  19A4                     __ptext14:	
  7552 ;; *************** function __Umul8_16 *****************
  7553 ;; Defined at:
  7554 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul8_16.c"
  7555 ;; Parameters:    Size  Location     Type
  7556 ;;  multiplier      1    wreg     unsigned char 
  7557 ;;  multiplicand    1    0[COMMON] unsigned char 
  7558 ;; Auto vars:     Size  Location     Type
  7559 ;;  multiplier      1    8[COMMON] unsigned char 
  7560 ;;  word_mpld       2    6[COMMON] unsigned int 
  7561 ;;  product         2    4[COMMON] unsigned int 
  7562 ;; Return value:  Size  Location     Type
  7563 ;;                  2    0[COMMON] unsigned int 
  7564 ;; Registers used:
  7565 ;;		wreg, status,2, status,0
  7566 ;; Tracked objects:
  7567 ;;		On entry : 0/0
  7568 ;;		On exit  : 0/0
  7569 ;;		Unchanged: 0/0
  7570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7571 ;;      Params:         2       0       0       0       0
  7572 ;;      Locals:         5       0       0       0       0
  7573 ;;      Temps:          2       0       0       0       0
  7574 ;;      Totals:         9       0       0       0       0
  7575 ;;Total ram usage:        9 bytes
  7576 ;; Hardware stack levels used: 1
  7577 ;; This function calls:
  7578 ;;		Nothing
  7579 ;; This function is called by:
  7580 ;;		___flmul
  7581 ;; This function uses a non-reentrant model
  7582 ;;
  7583                           
  7584                           
  7585                           ;psect for function __Umul8_16
  7586  19A4                     __Umul8_16:
  7587                           
  7588                           ;incstack = 0
  7589                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  7590                           ;__Umul8_16@multiplier stored from wreg
  7591  19A4  00F8               	movwf	__Umul8_16@multiplier
  7592  19A5                     l2344:
  7593  19A5  01F4               	clrf	__Umul8_16@product
  7594  19A6  01F5               	clrf	__Umul8_16@product+1
  7595  19A7                     l2346:
  7596  19A7  0870               	movf	__Umul8_16@multiplicand,w
  7597  19A8  00F2               	movwf	??__Umul8_16
  7598  19A9  01F3               	clrf	??__Umul8_16+1
  7599  19AA  0872               	movf	??__Umul8_16,w
  7600  19AB  00F6               	movwf	__Umul8_16@word_mpld
  7601  19AC  0873               	movf	??__Umul8_16+1,w
  7602  19AD  00F7               	movwf	__Umul8_16@word_mpld+1
  7603  19AE                     l2348:
  7604  19AE  1C78               	btfss	__Umul8_16@multiplier,0
  7605  19AF  29B1               	goto	u2771
  7606  19B0  29B2               	goto	u2770
  7607  19B1                     u2771:
  7608  19B1  29B8               	goto	l789
  7609  19B2                     u2770:
  7610  19B2                     l2350:
  7611  19B2  0876               	movf	__Umul8_16@word_mpld,w
  7612  19B3  07F4               	addwf	__Umul8_16@product,f
  7613  19B4  1803               	skipnc
  7614  19B5  0AF5               	incf	__Umul8_16@product+1,f
  7615  19B6  0877               	movf	__Umul8_16@word_mpld+1,w
  7616  19B7  07F5               	addwf	__Umul8_16@product+1,f
  7617  19B8                     l789:
  7618  19B8  3001               	movlw	1
  7619  19B9                     u2785:
  7620  19B9  1003               	clrc
  7621  19BA  0DF6               	rlf	__Umul8_16@word_mpld,f
  7622  19BB  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  7623  19BC  3EFF               	addlw	-1
  7624  19BD  1D03               	skipz
  7625  19BE  29B9               	goto	u2785
  7626  19BF  1003               	clrc
  7627  19C0  0CF8               	rrf	__Umul8_16@multiplier,f
  7628  19C1                     l2352:
  7629  19C1  0878               	movf	__Umul8_16@multiplier,w
  7630  19C2  1D03               	btfss	3,2
  7631  19C3  29C5               	goto	u2791
  7632  19C4  29C6               	goto	u2790
  7633  19C5                     u2791:
  7634  19C5  29AE               	goto	l2348
  7635  19C6                     u2790:
  7636  19C6                     l2354:
  7637  19C6  0875               	movf	__Umul8_16@product+1,w
  7638  19C7  00F1               	movwf	?__Umul8_16+1
  7639  19C8  0874               	movf	__Umul8_16@product,w
  7640  19C9  00F0               	movwf	?__Umul8_16
  7641  19CA                     l791:
  7642  19CA  0008               	return
  7643  19CB                     __end_of__Umul8_16:
  7644                           
  7645                           	psect	text15
  7646  1E85                     __ptext15:	
  7647 ;; *************** function __tdiv_to_l_ *****************
  7648 ;; Defined at:
  7649 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\ftdivl.c"
  7650 ;; Parameters:    Size  Location     Type
  7651 ;;  f1              4    0[COMMON] float 
  7652 ;;  f2              4    4[COMMON] float 
  7653 ;; Auto vars:     Size  Location     Type
  7654 ;;  quot            4    0[BANK0 ] unsigned long 
  7655 ;;  exp1            1    5[BANK0 ] unsigned char 
  7656 ;;  cntr            1    4[BANK0 ] unsigned char 
  7657 ;; Return value:  Size  Location     Type
  7658 ;;                  4    0[COMMON] unsigned long 
  7659 ;; Registers used:
  7660 ;;		wreg, status,2, status,0
  7661 ;; Tracked objects:
  7662 ;;		On entry : 0/0
  7663 ;;		On exit  : 0/0
  7664 ;;		Unchanged: 0/0
  7665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7666 ;;      Params:         8       0       0       0       0
  7667 ;;      Locals:         0       6       0       0       0
  7668 ;;      Temps:          4       0       0       0       0
  7669 ;;      Totals:        12       6       0       0       0
  7670 ;;Total ram usage:       18 bytes
  7671 ;; Hardware stack levels used: 1
  7672 ;; This function calls:
  7673 ;;		Nothing
  7674 ;; This function is called by:
  7675 ;;		_sprintf
  7676 ;; This function uses a non-reentrant model
  7677 ;;
  7678                           
  7679                           
  7680                           ;psect for function __tdiv_to_l_
  7681  1E85                     __tdiv_to_l_:
  7682  1E85                     l2932:	
  7683                           ;incstack = 0
  7684                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  7685                           
  7686  1E85  0870               	movf	__tdiv_to_l_@f1,w
  7687  1E86  00F8               	movwf	??__tdiv_to_l_
  7688  1E87  0871               	movf	__tdiv_to_l_@f1+1,w
  7689  1E88  00F9               	movwf	??__tdiv_to_l_+1
  7690  1E89  0872               	movf	__tdiv_to_l_@f1+2,w
  7691  1E8A  00FA               	movwf	??__tdiv_to_l_+2
  7692  1E8B  1003               	clrc
  7693  1E8C  0D79               	rlf	??__tdiv_to_l_+1,w
  7694  1E8D  0D7A               	rlf	??__tdiv_to_l_+2,w
  7695  1E8E  00FB               	movwf	??__tdiv_to_l_+3
  7696  1E8F  087B               	movf	??__tdiv_to_l_+3,w
  7697  1E90  1283               	bcf	3,5	;RP0=0, select bank0
  7698  1E91  1303               	bcf	3,6	;RP1=0, select bank0
  7699  1E92  00A5               	movwf	__tdiv_to_l_@exp1
  7700  1E93  0825               	movf	__tdiv_to_l_@exp1,w
  7701  1E94  1D03               	btfss	3,2
  7702  1E95  2E97               	goto	u4271
  7703  1E96  2E98               	goto	u4270
  7704  1E97                     u4271:
  7705  1E97  2EA1               	goto	l2938
  7706  1E98                     u4270:
  7707  1E98                     l2934:
  7708  1E98  3000               	movlw	0
  7709  1E99  00F3               	movwf	?__tdiv_to_l_+3
  7710  1E9A  3000               	movlw	0
  7711  1E9B  00F2               	movwf	?__tdiv_to_l_+2
  7712  1E9C  3000               	movlw	0
  7713  1E9D  00F1               	movwf	?__tdiv_to_l_+1
  7714  1E9E  3000               	movlw	0
  7715  1E9F  00F0               	movwf	?__tdiv_to_l_
  7716  1EA0  2F41               	goto	l564
  7717  1EA1                     l2938:
  7718  1EA1  0874               	movf	__tdiv_to_l_@f2,w
  7719  1EA2  00F8               	movwf	??__tdiv_to_l_
  7720  1EA3  0875               	movf	__tdiv_to_l_@f2+1,w
  7721  1EA4  00F9               	movwf	??__tdiv_to_l_+1
  7722  1EA5  0876               	movf	__tdiv_to_l_@f2+2,w
  7723  1EA6  00FA               	movwf	??__tdiv_to_l_+2
  7724  1EA7  1003               	clrc
  7725  1EA8  0D79               	rlf	??__tdiv_to_l_+1,w
  7726  1EA9  0D7A               	rlf	??__tdiv_to_l_+2,w
  7727  1EAA  00FB               	movwf	??__tdiv_to_l_+3
  7728  1EAB  087B               	movf	??__tdiv_to_l_+3,w
  7729  1EAC  00A4               	movwf	__tdiv_to_l_@cntr
  7730  1EAD  0824               	movf	__tdiv_to_l_@cntr,w
  7731  1EAE  1D03               	btfss	3,2
  7732  1EAF  2EB1               	goto	u4281
  7733  1EB0  2EB2               	goto	u4280
  7734  1EB1                     u4281:
  7735  1EB1  2EB3               	goto	l565
  7736  1EB2                     u4280:
  7737  1EB2  2E98               	goto	l2934
  7738  1EB3                     l565:
  7739  1EB3  17F1               	bsf	__tdiv_to_l_@f1+1,7
  7740  1EB4                     l2944:
  7741  1EB4  30FF               	movlw	255
  7742  1EB5  05F0               	andwf	__tdiv_to_l_@f1,f
  7743  1EB6  30FF               	movlw	255
  7744  1EB7  05F1               	andwf	__tdiv_to_l_@f1+1,f
  7745  1EB8  3000               	movlw	0
  7746  1EB9  05F2               	andwf	__tdiv_to_l_@f1+2,f
  7747  1EBA                     l2946:
  7748  1EBA  17F5               	bsf	__tdiv_to_l_@f2+1,7
  7749  1EBB  30FF               	movlw	255
  7750  1EBC  05F4               	andwf	__tdiv_to_l_@f2,f
  7751  1EBD  30FF               	movlw	255
  7752  1EBE  05F5               	andwf	__tdiv_to_l_@f2+1,f
  7753  1EBF  3000               	movlw	0
  7754  1EC0  05F6               	andwf	__tdiv_to_l_@f2+2,f
  7755  1EC1  3000               	movlw	0
  7756  1EC2  00A3               	movwf	__tdiv_to_l_@quot+3
  7757  1EC3  3000               	movlw	0
  7758  1EC4  00A2               	movwf	__tdiv_to_l_@quot+2
  7759  1EC5  3000               	movlw	0
  7760  1EC6  00A1               	movwf	__tdiv_to_l_@quot+1
  7761  1EC7  3000               	movlw	0
  7762  1EC8  00A0               	movwf	__tdiv_to_l_@quot
  7763  1EC9                     l2948:
  7764  1EC9  307F               	movlw	127
  7765  1ECA  02A5               	subwf	__tdiv_to_l_@exp1,f
  7766  1ECB                     l2950:
  7767  1ECB  3098               	movlw	152
  7768  1ECC  0724               	addwf	__tdiv_to_l_@cntr,w
  7769  1ECD  00F8               	movwf	??__tdiv_to_l_
  7770  1ECE  0878               	movf	??__tdiv_to_l_,w
  7771  1ECF  02A5               	subwf	__tdiv_to_l_@exp1,f
  7772  1ED0  3018               	movlw	24
  7773  1ED1  00F8               	movwf	??__tdiv_to_l_
  7774  1ED2  0878               	movf	??__tdiv_to_l_,w
  7775  1ED3  00A4               	movwf	__tdiv_to_l_@cntr
  7776  1ED4                     l2952:
  7777  1ED4  3001               	movlw	1
  7778  1ED5  00F8               	movwf	??__tdiv_to_l_
  7779  1ED6                     u4295:
  7780  1ED6  1003               	clrc
  7781  1ED7  0DA0               	rlf	__tdiv_to_l_@quot,f
  7782  1ED8  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  7783  1ED9  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  7784  1EDA  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  7785  1EDB  0BF8               	decfsz	??__tdiv_to_l_,f
  7786  1EDC  2ED6               	goto	u4295
  7787  1EDD                     l2954:
  7788  1EDD  0876               	movf	__tdiv_to_l_@f2+2,w
  7789  1EDE  0272               	subwf	__tdiv_to_l_@f1+2,w
  7790  1EDF  1D03               	skipz
  7791  1EE0  2EE7               	goto	u4305
  7792  1EE1  0875               	movf	__tdiv_to_l_@f2+1,w
  7793  1EE2  0271               	subwf	__tdiv_to_l_@f1+1,w
  7794  1EE3  1D03               	skipz
  7795  1EE4  2EE7               	goto	u4305
  7796  1EE5  0874               	movf	__tdiv_to_l_@f2,w
  7797  1EE6  0270               	subwf	__tdiv_to_l_@f1,w
  7798  1EE7                     u4305:
  7799  1EE7  1C03               	skipc
  7800  1EE8  2EEA               	goto	u4301
  7801  1EE9  2EEB               	goto	u4300
  7802  1EEA                     u4301:
  7803  1EEA  2EF6               	goto	l2960
  7804  1EEB                     u4300:
  7805  1EEB                     l2956:
  7806  1EEB  0874               	movf	__tdiv_to_l_@f2,w
  7807  1EEC  02F0               	subwf	__tdiv_to_l_@f1,f
  7808  1EED  0875               	movf	__tdiv_to_l_@f2+1,w
  7809  1EEE  1C03               	skipc
  7810  1EEF  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  7811  1EF0  02F1               	subwf	__tdiv_to_l_@f1+1,f
  7812  1EF1  0876               	movf	__tdiv_to_l_@f2+2,w
  7813  1EF2  1C03               	skipc
  7814  1EF3  0A76               	incf	__tdiv_to_l_@f2+2,w
  7815  1EF4  02F2               	subwf	__tdiv_to_l_@f1+2,f
  7816  1EF5                     l2958:
  7817  1EF5  1420               	bsf	__tdiv_to_l_@quot,0
  7818  1EF6                     l2960:
  7819  1EF6  3001               	movlw	1
  7820  1EF7                     u4315:
  7821  1EF7  1003               	clrc
  7822  1EF8  0DF0               	rlf	__tdiv_to_l_@f1,f
  7823  1EF9  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  7824  1EFA  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  7825  1EFB  3EFF               	addlw	-1
  7826  1EFC  1D03               	skipz
  7827  1EFD  2EF7               	goto	u4315
  7828  1EFE                     l2962:
  7829  1EFE  3001               	movlw	1
  7830  1EFF  02A4               	subwf	__tdiv_to_l_@cntr,f
  7831  1F00  1D03               	btfss	3,2
  7832  1F01  2F03               	goto	u4321
  7833  1F02  2F04               	goto	u4320
  7834  1F03                     u4321:
  7835  1F03  2ED4               	goto	l2952
  7836  1F04                     u4320:
  7837  1F04                     l568:
  7838  1F04  1FA5               	btfss	__tdiv_to_l_@exp1,7
  7839  1F05  2F07               	goto	u4331
  7840  1F06  2F08               	goto	u4330
  7841  1F07                     u4331:
  7842  1F07  2F22               	goto	l2972
  7843  1F08                     u4330:
  7844  1F08                     l2964:
  7845  1F08  0825               	movf	__tdiv_to_l_@exp1,w
  7846  1F09  3A80               	xorlw	128
  7847  1F0A  3E97               	addlw	151
  7848  1F0B  1803               	skipnc
  7849  1F0C  2F0E               	goto	u4341
  7850  1F0D  2F0F               	goto	u4340
  7851  1F0E                     u4341:
  7852  1F0E  2F10               	goto	l2970
  7853  1F0F                     u4340:
  7854  1F0F  2E98               	goto	l2934
  7855  1F10                     l2970:
  7856  1F10  3001               	movlw	1
  7857  1F11                     u4355:
  7858  1F11  1003               	clrc
  7859  1F12  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  7860  1F13  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  7861  1F14  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  7862  1F15  0CA0               	rrf	__tdiv_to_l_@quot,f
  7863  1F16  3EFF               	addlw	-1
  7864  1F17  1D03               	skipz
  7865  1F18  2F11               	goto	u4355
  7866  1F19  3001               	movlw	1
  7867  1F1A  00F8               	movwf	??__tdiv_to_l_
  7868  1F1B  0878               	movf	??__tdiv_to_l_,w
  7869  1F1C  07A5               	addwf	__tdiv_to_l_@exp1,f
  7870  1F1D  1D03               	btfss	3,2
  7871  1F1E  2F20               	goto	u4361
  7872  1F1F  2F21               	goto	u4360
  7873  1F20                     u4361:
  7874  1F20  2F10               	goto	l2970
  7875  1F21                     u4360:
  7876  1F21  2F39               	goto	l2980
  7877  1F22                     l2972:
  7878  1F22  3018               	movlw	24
  7879  1F23  0225               	subwf	__tdiv_to_l_@exp1,w
  7880  1F24  1C03               	skipc
  7881  1F25  2F27               	goto	u4371
  7882  1F26  2F28               	goto	u4370
  7883  1F27                     u4371:
  7884  1F27  2F34               	goto	l575
  7885  1F28                     u4370:
  7886  1F28  2E98               	goto	l2934
  7887  1F29                     l2978:
  7888  1F29  3001               	movlw	1
  7889  1F2A  00F8               	movwf	??__tdiv_to_l_
  7890  1F2B                     u4385:
  7891  1F2B  1003               	clrc
  7892  1F2C  0DA0               	rlf	__tdiv_to_l_@quot,f
  7893  1F2D  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  7894  1F2E  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  7895  1F2F  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  7896  1F30  0BF8               	decfsz	??__tdiv_to_l_,f
  7897  1F31  2F2B               	goto	u4385
  7898  1F32  3001               	movlw	1
  7899  1F33  02A5               	subwf	__tdiv_to_l_@exp1,f
  7900  1F34                     l575:
  7901  1F34  0825               	movf	__tdiv_to_l_@exp1,w
  7902  1F35  1D03               	btfss	3,2
  7903  1F36  2F38               	goto	u4391
  7904  1F37  2F39               	goto	u4390
  7905  1F38                     u4391:
  7906  1F38  2F29               	goto	l2978
  7907  1F39                     u4390:
  7908  1F39                     l2980:
  7909  1F39  0823               	movf	__tdiv_to_l_@quot+3,w
  7910  1F3A  00F3               	movwf	?__tdiv_to_l_+3
  7911  1F3B  0822               	movf	__tdiv_to_l_@quot+2,w
  7912  1F3C  00F2               	movwf	?__tdiv_to_l_+2
  7913  1F3D  0821               	movf	__tdiv_to_l_@quot+1,w
  7914  1F3E  00F1               	movwf	?__tdiv_to_l_+1
  7915  1F3F  0820               	movf	__tdiv_to_l_@quot,w
  7916  1F40  00F0               	movwf	?__tdiv_to_l_
  7917  1F41                     l564:
  7918  1F41  0008               	return
  7919  1F42                     __end_of__tdiv_to_l_:
  7920                           
  7921                           	psect	text16
  7922  1F42                     __ptext16:	
  7923 ;; *************** function __div_to_l_ *****************
  7924 ;; Defined at:
  7925 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fldivl.c"
  7926 ;; Parameters:    Size  Location     Type
  7927 ;;  f1              4    0[COMMON] unsigned long 
  7928 ;;  f2              4    4[COMMON] unsigned long 
  7929 ;; Auto vars:     Size  Location     Type
  7930 ;;  quot            4    0[BANK0 ] unsigned long 
  7931 ;;  exp1            1    5[BANK0 ] unsigned char 
  7932 ;;  cntr            1    4[BANK0 ] unsigned char 
  7933 ;; Return value:  Size  Location     Type
  7934 ;;                  4    0[COMMON] unsigned long 
  7935 ;; Registers used:
  7936 ;;		wreg, status,2, status,0
  7937 ;; Tracked objects:
  7938 ;;		On entry : 0/0
  7939 ;;		On exit  : 0/0
  7940 ;;		Unchanged: 0/0
  7941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7942 ;;      Params:         8       0       0       0       0
  7943 ;;      Locals:         0       6       0       0       0
  7944 ;;      Temps:          1       0       0       0       0
  7945 ;;      Totals:         9       6       0       0       0
  7946 ;;Total ram usage:       15 bytes
  7947 ;; Hardware stack levels used: 1
  7948 ;; This function calls:
  7949 ;;		Nothing
  7950 ;; This function is called by:
  7951 ;;		_sprintf
  7952 ;; This function uses a non-reentrant model
  7953 ;;
  7954                           
  7955                           
  7956                           ;psect for function __div_to_l_
  7957  1F42                     __div_to_l_:
  7958  1F42                     l2984:	
  7959                           ;incstack = 0
  7960                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  7961                           
  7962  1F42  1003               	clrc
  7963  1F43  0D72               	rlf	__div_to_l_@f1+2,w
  7964  1F44  0D73               	rlf	__div_to_l_@f1+3,w
  7965  1F45  00F8               	movwf	??__div_to_l_
  7966  1F46  0878               	movf	??__div_to_l_,w
  7967  1F47  1283               	bcf	3,5	;RP0=0, select bank0
  7968  1F48  1303               	bcf	3,6	;RP1=0, select bank0
  7969  1F49  00A5               	movwf	__div_to_l_@exp1
  7970  1F4A  0825               	movf	__div_to_l_@exp1,w
  7971  1F4B  1D03               	btfss	3,2
  7972  1F4C  2F4E               	goto	u4401
  7973  1F4D  2F4F               	goto	u4400
  7974  1F4E                     u4401:
  7975  1F4E  2F58               	goto	l2990
  7976  1F4F                     u4400:
  7977  1F4F                     l2986:
  7978  1F4F  3000               	movlw	0
  7979  1F50  00F3               	movwf	?__div_to_l_+3
  7980  1F51  3000               	movlw	0
  7981  1F52  00F2               	movwf	?__div_to_l_+2
  7982  1F53  3000               	movlw	0
  7983  1F54  00F1               	movwf	?__div_to_l_+1
  7984  1F55  3000               	movlw	0
  7985  1F56  00F0               	movwf	?__div_to_l_
  7986  1F57  2FFF               	goto	l517
  7987  1F58                     l2990:
  7988  1F58  1003               	clrc
  7989  1F59  0D76               	rlf	__div_to_l_@f2+2,w
  7990  1F5A  0D77               	rlf	__div_to_l_@f2+3,w
  7991  1F5B  00F8               	movwf	??__div_to_l_
  7992  1F5C  0878               	movf	??__div_to_l_,w
  7993  1F5D  00A4               	movwf	__div_to_l_@cntr
  7994  1F5E  0824               	movf	__div_to_l_@cntr,w
  7995  1F5F  1D03               	btfss	3,2
  7996  1F60  2F62               	goto	u4411
  7997  1F61  2F63               	goto	u4410
  7998  1F62                     u4411:
  7999  1F62  2F64               	goto	l518
  8000  1F63                     u4410:
  8001  1F63  2F4F               	goto	l2986
  8002  1F64                     l518:
  8003  1F64  17F2               	bsf	__div_to_l_@f1+2,7
  8004  1F65                     l2996:
  8005  1F65  30FF               	movlw	255
  8006  1F66  05F0               	andwf	__div_to_l_@f1,f
  8007  1F67  30FF               	movlw	255
  8008  1F68  05F1               	andwf	__div_to_l_@f1+1,f
  8009  1F69  30FF               	movlw	255
  8010  1F6A  05F2               	andwf	__div_to_l_@f1+2,f
  8011  1F6B  3000               	movlw	0
  8012  1F6C  05F3               	andwf	__div_to_l_@f1+3,f
  8013  1F6D                     l2998:
  8014  1F6D  17F6               	bsf	__div_to_l_@f2+2,7
  8015  1F6E  30FF               	movlw	255
  8016  1F6F  05F4               	andwf	__div_to_l_@f2,f
  8017  1F70  30FF               	movlw	255
  8018  1F71  05F5               	andwf	__div_to_l_@f2+1,f
  8019  1F72  30FF               	movlw	255
  8020  1F73  05F6               	andwf	__div_to_l_@f2+2,f
  8021  1F74  3000               	movlw	0
  8022  1F75  05F7               	andwf	__div_to_l_@f2+3,f
  8023  1F76  3000               	movlw	0
  8024  1F77  00A3               	movwf	__div_to_l_@quot+3
  8025  1F78  3000               	movlw	0
  8026  1F79  00A2               	movwf	__div_to_l_@quot+2
  8027  1F7A  3000               	movlw	0
  8028  1F7B  00A1               	movwf	__div_to_l_@quot+1
  8029  1F7C  3000               	movlw	0
  8030  1F7D  00A0               	movwf	__div_to_l_@quot
  8031  1F7E                     l3000:
  8032  1F7E  307F               	movlw	127
  8033  1F7F  02A5               	subwf	__div_to_l_@exp1,f
  8034  1F80                     l3002:
  8035  1F80  30A0               	movlw	160
  8036  1F81  0724               	addwf	__div_to_l_@cntr,w
  8037  1F82  00F8               	movwf	??__div_to_l_
  8038  1F83  0878               	movf	??__div_to_l_,w
  8039  1F84  02A5               	subwf	__div_to_l_@exp1,f
  8040  1F85  3020               	movlw	32
  8041  1F86  00F8               	movwf	??__div_to_l_
  8042  1F87  0878               	movf	??__div_to_l_,w
  8043  1F88  00A4               	movwf	__div_to_l_@cntr
  8044  1F89                     l3004:
  8045  1F89  3001               	movlw	1
  8046  1F8A  00F8               	movwf	??__div_to_l_
  8047  1F8B                     u4425:
  8048  1F8B  1003               	clrc
  8049  1F8C  0DA0               	rlf	__div_to_l_@quot,f
  8050  1F8D  0DA1               	rlf	__div_to_l_@quot+1,f
  8051  1F8E  0DA2               	rlf	__div_to_l_@quot+2,f
  8052  1F8F  0DA3               	rlf	__div_to_l_@quot+3,f
  8053  1F90  0BF8               	decfsz	??__div_to_l_,f
  8054  1F91  2F8B               	goto	u4425
  8055  1F92                     l3006:
  8056  1F92  0877               	movf	__div_to_l_@f2+3,w
  8057  1F93  0273               	subwf	__div_to_l_@f1+3,w
  8058  1F94  1D03               	skipz
  8059  1F95  2FA0               	goto	u4435
  8060  1F96  0876               	movf	__div_to_l_@f2+2,w
  8061  1F97  0272               	subwf	__div_to_l_@f1+2,w
  8062  1F98  1D03               	skipz
  8063  1F99  2FA0               	goto	u4435
  8064  1F9A  0875               	movf	__div_to_l_@f2+1,w
  8065  1F9B  0271               	subwf	__div_to_l_@f1+1,w
  8066  1F9C  1D03               	skipz
  8067  1F9D  2FA0               	goto	u4435
  8068  1F9E  0874               	movf	__div_to_l_@f2,w
  8069  1F9F  0270               	subwf	__div_to_l_@f1,w
  8070  1FA0                     u4435:
  8071  1FA0  1C03               	skipc
  8072  1FA1  2FA3               	goto	u4431
  8073  1FA2  2FA4               	goto	u4430
  8074  1FA3                     u4431:
  8075  1FA3  2FB3               	goto	l3012
  8076  1FA4                     u4430:
  8077  1FA4                     l3008:
  8078  1FA4  0874               	movf	__div_to_l_@f2,w
  8079  1FA5  02F0               	subwf	__div_to_l_@f1,f
  8080  1FA6  0875               	movf	__div_to_l_@f2+1,w
  8081  1FA7  1C03               	skipc
  8082  1FA8  0F75               	incfsz	__div_to_l_@f2+1,w
  8083  1FA9  02F1               	subwf	__div_to_l_@f1+1,f
  8084  1FAA  0876               	movf	__div_to_l_@f2+2,w
  8085  1FAB  1C03               	skipc
  8086  1FAC  0F76               	incfsz	__div_to_l_@f2+2,w
  8087  1FAD  02F2               	subwf	__div_to_l_@f1+2,f
  8088  1FAE  0877               	movf	__div_to_l_@f2+3,w
  8089  1FAF  1C03               	skipc
  8090  1FB0  0F77               	incfsz	__div_to_l_@f2+3,w
  8091  1FB1  02F3               	subwf	__div_to_l_@f1+3,f
  8092  1FB2                     l3010:
  8093  1FB2  1420               	bsf	__div_to_l_@quot,0
  8094  1FB3                     l3012:
  8095  1FB3  3001               	movlw	1
  8096  1FB4  00F8               	movwf	??__div_to_l_
  8097  1FB5                     u4445:
  8098  1FB5  1003               	clrc
  8099  1FB6  0DF0               	rlf	__div_to_l_@f1,f
  8100  1FB7  0DF1               	rlf	__div_to_l_@f1+1,f
  8101  1FB8  0DF2               	rlf	__div_to_l_@f1+2,f
  8102  1FB9  0DF3               	rlf	__div_to_l_@f1+3,f
  8103  1FBA  0BF8               	decfsz	??__div_to_l_,f
  8104  1FBB  2FB5               	goto	u4445
  8105  1FBC                     l3014:
  8106  1FBC  3001               	movlw	1
  8107  1FBD  02A4               	subwf	__div_to_l_@cntr,f
  8108  1FBE  1D03               	btfss	3,2
  8109  1FBF  2FC1               	goto	u4451
  8110  1FC0  2FC2               	goto	u4450
  8111  1FC1                     u4451:
  8112  1FC1  2F89               	goto	l3004
  8113  1FC2                     u4450:
  8114  1FC2                     l521:
  8115  1FC2  1FA5               	btfss	__div_to_l_@exp1,7
  8116  1FC3  2FC5               	goto	u4461
  8117  1FC4  2FC6               	goto	u4460
  8118  1FC5                     u4461:
  8119  1FC5  2FE0               	goto	l3024
  8120  1FC6                     u4460:
  8121  1FC6                     l3016:
  8122  1FC6  0825               	movf	__div_to_l_@exp1,w
  8123  1FC7  3A80               	xorlw	128
  8124  1FC8  3E9F               	addlw	159
  8125  1FC9  1803               	skipnc
  8126  1FCA  2FCC               	goto	u4471
  8127  1FCB  2FCD               	goto	u4470
  8128  1FCC                     u4471:
  8129  1FCC  2FCE               	goto	l3022
  8130  1FCD                     u4470:
  8131  1FCD  2F4F               	goto	l2986
  8132  1FCE                     l3022:
  8133  1FCE  3001               	movlw	1
  8134  1FCF                     u4485:
  8135  1FCF  1003               	clrc
  8136  1FD0  0CA3               	rrf	__div_to_l_@quot+3,f
  8137  1FD1  0CA2               	rrf	__div_to_l_@quot+2,f
  8138  1FD2  0CA1               	rrf	__div_to_l_@quot+1,f
  8139  1FD3  0CA0               	rrf	__div_to_l_@quot,f
  8140  1FD4  3EFF               	addlw	-1
  8141  1FD5  1D03               	skipz
  8142  1FD6  2FCF               	goto	u4485
  8143  1FD7  3001               	movlw	1
  8144  1FD8  00F8               	movwf	??__div_to_l_
  8145  1FD9  0878               	movf	??__div_to_l_,w
  8146  1FDA  07A5               	addwf	__div_to_l_@exp1,f
  8147  1FDB  1D03               	btfss	3,2
  8148  1FDC  2FDE               	goto	u4491
  8149  1FDD  2FDF               	goto	u4490
  8150  1FDE                     u4491:
  8151  1FDE  2FCE               	goto	l3022
  8152  1FDF                     u4490:
  8153  1FDF  2FF7               	goto	l3032
  8154  1FE0                     l3024:
  8155  1FE0  3020               	movlw	32
  8156  1FE1  0225               	subwf	__div_to_l_@exp1,w
  8157  1FE2  1C03               	skipc
  8158  1FE3  2FE5               	goto	u4501
  8159  1FE4  2FE6               	goto	u4500
  8160  1FE5                     u4501:
  8161  1FE5  2FF2               	goto	l528
  8162  1FE6                     u4500:
  8163  1FE6  2F4F               	goto	l2986
  8164  1FE7                     l3030:
  8165  1FE7  3001               	movlw	1
  8166  1FE8  00F8               	movwf	??__div_to_l_
  8167  1FE9                     u4515:
  8168  1FE9  1003               	clrc
  8169  1FEA  0DA0               	rlf	__div_to_l_@quot,f
  8170  1FEB  0DA1               	rlf	__div_to_l_@quot+1,f
  8171  1FEC  0DA2               	rlf	__div_to_l_@quot+2,f
  8172  1FED  0DA3               	rlf	__div_to_l_@quot+3,f
  8173  1FEE  0BF8               	decfsz	??__div_to_l_,f
  8174  1FEF  2FE9               	goto	u4515
  8175  1FF0  3001               	movlw	1
  8176  1FF1  02A5               	subwf	__div_to_l_@exp1,f
  8177  1FF2                     l528:
  8178  1FF2  0825               	movf	__div_to_l_@exp1,w
  8179  1FF3  1D03               	btfss	3,2
  8180  1FF4  2FF6               	goto	u4521
  8181  1FF5  2FF7               	goto	u4520
  8182  1FF6                     u4521:
  8183  1FF6  2FE7               	goto	l3030
  8184  1FF7                     u4520:
  8185  1FF7                     l3032:
  8186  1FF7  0823               	movf	__div_to_l_@quot+3,w
  8187  1FF8  00F3               	movwf	?__div_to_l_+3
  8188  1FF9  0822               	movf	__div_to_l_@quot+2,w
  8189  1FFA  00F2               	movwf	?__div_to_l_+2
  8190  1FFB  0821               	movf	__div_to_l_@quot+1,w
  8191  1FFC  00F1               	movwf	?__div_to_l_+1
  8192  1FFD  0820               	movf	__div_to_l_@quot,w
  8193  1FFE  00F0               	movwf	?__div_to_l_
  8194  1FFF                     l517:
  8195  1FFF  0008               	return
  8196  2000                     __end_of__div_to_l_:
  8197                           
  8198                           	psect	text17
  8199  1DCB                     __ptext17:	
  8200 ;; *************** function ___xxtofl *****************
  8201 ;; Defined at:
  8202 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\xxtofl.c"
  8203 ;; Parameters:    Size  Location     Type
  8204 ;;  sign            1    wreg     unsigned char 
  8205 ;;  val             4    0[COMMON] long 
  8206 ;; Auto vars:     Size  Location     Type
  8207 ;;  sign            1    8[COMMON] unsigned char 
  8208 ;;  arg             4   10[COMMON] unsigned long 
  8209 ;;  exp             1    9[COMMON] unsigned char 
  8210 ;; Return value:  Size  Location     Type
  8211 ;;                  4    0[COMMON] unsigned char 
  8212 ;; Registers used:
  8213 ;;		wreg, status,2, status,0
  8214 ;; Tracked objects:
  8215 ;;		On entry : 0/0
  8216 ;;		On exit  : 0/0
  8217 ;;		Unchanged: 0/0
  8218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8219 ;;      Params:         4       0       0       0       0
  8220 ;;      Locals:         6       0       0       0       0
  8221 ;;      Temps:          4       0       0       0       0
  8222 ;;      Totals:        14       0       0       0       0
  8223 ;;Total ram usage:       14 bytes
  8224 ;; Hardware stack levels used: 1
  8225 ;; This function calls:
  8226 ;;		Nothing
  8227 ;; This function is called by:
  8228 ;;		_lerSensores
  8229 ;;		_sprintf
  8230 ;; This function uses a non-reentrant model
  8231 ;;
  8232                           
  8233                           
  8234                           ;psect for function ___xxtofl
  8235  1DCB                     ___xxtofl:
  8236                           
  8237                           ;incstack = 0
  8238                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8239                           ;___xxtofl@sign stored from wreg
  8240  1DCB  00F8               	movwf	___xxtofl@sign
  8241  1DCC                     l3176:
  8242  1DCC  0878               	movf	___xxtofl@sign,w
  8243  1DCD  1903               	btfsc	3,2
  8244  1DCE  2DD0               	goto	u4911
  8245  1DCF  2DD1               	goto	u4910
  8246  1DD0                     u4911:
  8247  1DD0  2DE5               	goto	l3182
  8248  1DD1                     u4910:
  8249  1DD1                     l3178:
  8250  1DD1  1FF3               	btfss	___xxtofl@val+3,7
  8251  1DD2  2DD4               	goto	u4921
  8252  1DD3  2DD5               	goto	u4920
  8253  1DD4                     u4921:
  8254  1DD4  2DE5               	goto	l3182
  8255  1DD5                     u4920:
  8256  1DD5                     l3180:
  8257  1DD5  0970               	comf	___xxtofl@val,w
  8258  1DD6  00FA               	movwf	___xxtofl@arg
  8259  1DD7  0971               	comf	___xxtofl@val+1,w
  8260  1DD8  00FB               	movwf	___xxtofl@arg+1
  8261  1DD9  0972               	comf	___xxtofl@val+2,w
  8262  1DDA  00FC               	movwf	___xxtofl@arg+2
  8263  1DDB  0973               	comf	___xxtofl@val+3,w
  8264  1DDC  00FD               	movwf	___xxtofl@arg+3
  8265  1DDD  0AFA               	incf	___xxtofl@arg,f
  8266  1DDE  1903               	skipnz
  8267  1DDF  0AFB               	incf	___xxtofl@arg+1,f
  8268  1DE0  1903               	skipnz
  8269  1DE1  0AFC               	incf	___xxtofl@arg+2,f
  8270  1DE2  1903               	skipnz
  8271  1DE3  0AFD               	incf	___xxtofl@arg+3,f
  8272  1DE4  2DED               	goto	l814
  8273  1DE5                     l3182:
  8274  1DE5  0873               	movf	___xxtofl@val+3,w
  8275  1DE6  00FD               	movwf	___xxtofl@arg+3
  8276  1DE7  0872               	movf	___xxtofl@val+2,w
  8277  1DE8  00FC               	movwf	___xxtofl@arg+2
  8278  1DE9  0871               	movf	___xxtofl@val+1,w
  8279  1DEA  00FB               	movwf	___xxtofl@arg+1
  8280  1DEB  0870               	movf	___xxtofl@val,w
  8281  1DEC  00FA               	movwf	___xxtofl@arg
  8282  1DED                     l814:
  8283  1DED  0873               	movf	___xxtofl@val+3,w
  8284  1DEE  0472               	iorwf	___xxtofl@val+2,w
  8285  1DEF  0471               	iorwf	___xxtofl@val+1,w
  8286  1DF0  0470               	iorwf	___xxtofl@val,w
  8287  1DF1  1D03               	skipz
  8288  1DF2  2DF4               	goto	u4931
  8289  1DF3  2DF5               	goto	u4930
  8290  1DF4                     u4931:
  8291  1DF4  2DFE               	goto	l3188
  8292  1DF5                     u4930:
  8293  1DF5                     l3184:
  8294  1DF5  3000               	movlw	0
  8295  1DF6  00F3               	movwf	?___xxtofl+3
  8296  1DF7  3000               	movlw	0
  8297  1DF8  00F2               	movwf	?___xxtofl+2
  8298  1DF9  3000               	movlw	0
  8299  1DFA  00F1               	movwf	?___xxtofl+1
  8300  1DFB  3000               	movlw	0
  8301  1DFC  00F0               	movwf	?___xxtofl
  8302  1DFD  2E84               	goto	l816
  8303  1DFE                     l3188:
  8304  1DFE  3096               	movlw	150
  8305  1DFF  00F4               	movwf	??___xxtofl
  8306  1E00  0874               	movf	??___xxtofl,w
  8307  1E01  00F9               	movwf	___xxtofl@exp
  8308  1E02  2E10               	goto	l3192
  8309  1E03                     l3190:
  8310  1E03  3001               	movlw	1
  8311  1E04  00F4               	movwf	??___xxtofl
  8312  1E05  0874               	movf	??___xxtofl,w
  8313  1E06  07F9               	addwf	___xxtofl@exp,f
  8314  1E07  3001               	movlw	1
  8315  1E08                     u4945:
  8316  1E08  1003               	clrc
  8317  1E09  0CFD               	rrf	___xxtofl@arg+3,f
  8318  1E0A  0CFC               	rrf	___xxtofl@arg+2,f
  8319  1E0B  0CFB               	rrf	___xxtofl@arg+1,f
  8320  1E0C  0CFA               	rrf	___xxtofl@arg,f
  8321  1E0D  3EFF               	addlw	-1
  8322  1E0E  1D03               	skipz
  8323  1E0F  2E08               	goto	u4945
  8324  1E10                     l3192:
  8325  1E10  30FE               	movlw	254
  8326  1E11  057D               	andwf	___xxtofl@arg+3,w
  8327  1E12  1D03               	btfss	3,2
  8328  1E13  2E15               	goto	u4951
  8329  1E14  2E16               	goto	u4950
  8330  1E15                     u4951:
  8331  1E15  2E03               	goto	l3190
  8332  1E16                     u4950:
  8333  1E16  2E32               	goto	l820
  8334  1E17                     l3194:
  8335  1E17  3001               	movlw	1
  8336  1E18  00F4               	movwf	??___xxtofl
  8337  1E19  0874               	movf	??___xxtofl,w
  8338  1E1A  07F9               	addwf	___xxtofl@exp,f
  8339  1E1B                     l3196:
  8340  1E1B  3001               	movlw	1
  8341  1E1C  07FA               	addwf	___xxtofl@arg,f
  8342  1E1D  3000               	movlw	0
  8343  1E1E  1803               	skipnc
  8344  1E1F  3001               	movlw	1
  8345  1E20  07FB               	addwf	___xxtofl@arg+1,f
  8346  1E21  3000               	movlw	0
  8347  1E22  1803               	skipnc
  8348  1E23  3001               	movlw	1
  8349  1E24  07FC               	addwf	___xxtofl@arg+2,f
  8350  1E25  3000               	movlw	0
  8351  1E26  1803               	skipnc
  8352  1E27  3001               	movlw	1
  8353  1E28  07FD               	addwf	___xxtofl@arg+3,f
  8354  1E29                     l3198:
  8355  1E29  3001               	movlw	1
  8356  1E2A                     u4965:
  8357  1E2A  1003               	clrc
  8358  1E2B  0CFD               	rrf	___xxtofl@arg+3,f
  8359  1E2C  0CFC               	rrf	___xxtofl@arg+2,f
  8360  1E2D  0CFB               	rrf	___xxtofl@arg+1,f
  8361  1E2E  0CFA               	rrf	___xxtofl@arg,f
  8362  1E2F  3EFF               	addlw	-1
  8363  1E30  1D03               	skipz
  8364  1E31  2E2A               	goto	u4965
  8365  1E32                     l820:
  8366  1E32  30FF               	movlw	255
  8367  1E33  057D               	andwf	___xxtofl@arg+3,w
  8368  1E34  1D03               	btfss	3,2
  8369  1E35  2E37               	goto	u4971
  8370  1E36  2E38               	goto	u4970
  8371  1E37                     u4971:
  8372  1E37  2E17               	goto	l3194
  8373  1E38                     u4970:
  8374  1E38  2E44               	goto	l3202
  8375  1E39                     l3200:
  8376  1E39  3001               	movlw	1
  8377  1E3A  02F9               	subwf	___xxtofl@exp,f
  8378  1E3B  3001               	movlw	1
  8379  1E3C  00F4               	movwf	??___xxtofl
  8380  1E3D                     u4985:
  8381  1E3D  1003               	clrc
  8382  1E3E  0DFA               	rlf	___xxtofl@arg,f
  8383  1E3F  0DFB               	rlf	___xxtofl@arg+1,f
  8384  1E40  0DFC               	rlf	___xxtofl@arg+2,f
  8385  1E41  0DFD               	rlf	___xxtofl@arg+3,f
  8386  1E42  0BF4               	decfsz	??___xxtofl,f
  8387  1E43  2E3D               	goto	u4985
  8388  1E44                     l3202:
  8389  1E44  1BFC               	btfsc	___xxtofl@arg+2,7
  8390  1E45  2E47               	goto	u4991
  8391  1E46  2E48               	goto	u4990
  8392  1E47                     u4991:
  8393  1E47  2E4E               	goto	l827
  8394  1E48                     u4990:
  8395  1E48                     l3204:
  8396  1E48  3002               	movlw	2
  8397  1E49  0279               	subwf	___xxtofl@exp,w
  8398  1E4A  1803               	skipnc
  8399  1E4B  2E4D               	goto	u5001
  8400  1E4C  2E4E               	goto	u5000
  8401  1E4D                     u5001:
  8402  1E4D  2E39               	goto	l3200
  8403  1E4E                     u5000:
  8404  1E4E                     l827:
  8405  1E4E  1879               	btfsc	___xxtofl@exp,0
  8406  1E4F  2E51               	goto	u5011
  8407  1E50  2E52               	goto	u5010
  8408  1E51                     u5011:
  8409  1E51  2E5A               	goto	l828
  8410  1E52                     u5010:
  8411  1E52                     l3206:
  8412  1E52  30FF               	movlw	255
  8413  1E53  05FA               	andwf	___xxtofl@arg,f
  8414  1E54  30FF               	movlw	255
  8415  1E55  05FB               	andwf	___xxtofl@arg+1,f
  8416  1E56  307F               	movlw	127
  8417  1E57  05FC               	andwf	___xxtofl@arg+2,f
  8418  1E58  30FF               	movlw	255
  8419  1E59  05FD               	andwf	___xxtofl@arg+3,f
  8420  1E5A                     l828:
  8421  1E5A  1003               	clrc
  8422  1E5B  0CF9               	rrf	___xxtofl@exp,f
  8423  1E5C                     l3208:
  8424  1E5C  0879               	movf	___xxtofl@exp,w
  8425  1E5D  00F4               	movwf	??___xxtofl
  8426  1E5E  01F5               	clrf	??___xxtofl+1
  8427  1E5F  01F6               	clrf	??___xxtofl+2
  8428  1E60  01F7               	clrf	??___xxtofl+3
  8429  1E61  3018               	movlw	24
  8430  1E62                     u5025:
  8431  1E62  1003               	clrc
  8432  1E63  0DF4               	rlf	??___xxtofl,f
  8433  1E64  0DF5               	rlf	??___xxtofl+1,f
  8434  1E65  0DF6               	rlf	??___xxtofl+2,f
  8435  1E66  0DF7               	rlf	??___xxtofl+3,f
  8436  1E67                     u5020:
  8437  1E67  3EFF               	addlw	-1
  8438  1E68  1D03               	skipz
  8439  1E69  2E62               	goto	u5025
  8440  1E6A  0874               	movf	??___xxtofl,w
  8441  1E6B  04FA               	iorwf	___xxtofl@arg,f
  8442  1E6C  0875               	movf	??___xxtofl+1,w
  8443  1E6D  04FB               	iorwf	___xxtofl@arg+1,f
  8444  1E6E  0876               	movf	??___xxtofl+2,w
  8445  1E6F  04FC               	iorwf	___xxtofl@arg+2,f
  8446  1E70  0877               	movf	??___xxtofl+3,w
  8447  1E71  04FD               	iorwf	___xxtofl@arg+3,f
  8448  1E72                     l3210:
  8449  1E72  0878               	movf	___xxtofl@sign,w
  8450  1E73  1903               	btfsc	3,2
  8451  1E74  2E76               	goto	u5031
  8452  1E75  2E77               	goto	u5030
  8453  1E76                     u5031:
  8454  1E76  2E7C               	goto	l3216
  8455  1E77                     u5030:
  8456  1E77                     l3212:
  8457  1E77  1FF3               	btfss	___xxtofl@val+3,7
  8458  1E78  2E7A               	goto	u5041
  8459  1E79  2E7B               	goto	u5040
  8460  1E7A                     u5041:
  8461  1E7A  2E7C               	goto	l3216
  8462  1E7B                     u5040:
  8463  1E7B                     l3214:
  8464  1E7B  17FD               	bsf	___xxtofl@arg+3,7
  8465  1E7C                     l3216:
  8466  1E7C  087D               	movf	___xxtofl@arg+3,w
  8467  1E7D  00F3               	movwf	?___xxtofl+3
  8468  1E7E  087C               	movf	___xxtofl@arg+2,w
  8469  1E7F  00F2               	movwf	?___xxtofl+2
  8470  1E80  087B               	movf	___xxtofl@arg+1,w
  8471  1E81  00F1               	movwf	?___xxtofl+1
  8472  1E82  087A               	movf	___xxtofl@arg,w
  8473  1E83  00F0               	movwf	?___xxtofl
  8474  1E84                     l816:
  8475  1E84  0008               	return
  8476  1E85                     __end_of___xxtofl:
  8477                           
  8478                           	psect	text18
  8479  197F                     __ptext18:	
  8480 ;; *************** function ___wmul *****************
  8481 ;; Defined at:
  8482 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  8483 ;; Parameters:    Size  Location     Type
  8484 ;;  multiplier      2    0[COMMON] unsigned int 
  8485 ;;  multiplicand    2    2[COMMON] unsigned int 
  8486 ;; Auto vars:     Size  Location     Type
  8487 ;;  product         2    4[COMMON] unsigned int 
  8488 ;; Return value:  Size  Location     Type
  8489 ;;                  2    0[COMMON] unsigned int 
  8490 ;; Registers used:
  8491 ;;		wreg, status,2, status,0
  8492 ;; Tracked objects:
  8493 ;;		On entry : 0/0
  8494 ;;		On exit  : 0/0
  8495 ;;		Unchanged: 0/0
  8496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8497 ;;      Params:         4       0       0       0       0
  8498 ;;      Locals:         2       0       0       0       0
  8499 ;;      Temps:          0       0       0       0       0
  8500 ;;      Totals:         6       0       0       0       0
  8501 ;;Total ram usage:        6 bytes
  8502 ;; Hardware stack levels used: 1
  8503 ;; This function calls:
  8504 ;;		Nothing
  8505 ;; This function is called by:
  8506 ;;		_sprintf
  8507 ;; This function uses a non-reentrant model
  8508 ;;
  8509                           
  8510                           
  8511                           ;psect for function ___wmul
  8512  197F                     ___wmul:
  8513  197F                     l3036:	
  8514                           ;incstack = 0
  8515                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8516                           
  8517  197F  01F4               	clrf	___wmul@product
  8518  1980  01F5               	clrf	___wmul@product+1
  8519  1981                     l3038:
  8520  1981  1C70               	btfss	___wmul@multiplier,0
  8521  1982  2984               	goto	u4531
  8522  1983  2985               	goto	u4530
  8523  1984                     u4531:
  8524  1984  298B               	goto	l347
  8525  1985                     u4530:
  8526  1985                     l3040:
  8527  1985  0872               	movf	___wmul@multiplicand,w
  8528  1986  07F4               	addwf	___wmul@product,f
  8529  1987  1803               	skipnc
  8530  1988  0AF5               	incf	___wmul@product+1,f
  8531  1989  0873               	movf	___wmul@multiplicand+1,w
  8532  198A  07F5               	addwf	___wmul@product+1,f
  8533  198B                     l347:
  8534  198B  3001               	movlw	1
  8535  198C                     u4545:
  8536  198C  1003               	clrc
  8537  198D  0DF2               	rlf	___wmul@multiplicand,f
  8538  198E  0DF3               	rlf	___wmul@multiplicand+1,f
  8539  198F  3EFF               	addlw	-1
  8540  1990  1D03               	skipz
  8541  1991  298C               	goto	u4545
  8542  1992                     l3042:
  8543  1992  3001               	movlw	1
  8544  1993                     u4555:
  8545  1993  1003               	clrc
  8546  1994  0CF1               	rrf	___wmul@multiplier+1,f
  8547  1995  0CF0               	rrf	___wmul@multiplier,f
  8548  1996  3EFF               	addlw	-1
  8549  1997  1D03               	skipz
  8550  1998  2993               	goto	u4555
  8551  1999                     l3044:
  8552  1999  0870               	movf	___wmul@multiplier,w
  8553  199A  0471               	iorwf	___wmul@multiplier+1,w
  8554  199B  1D03               	btfss	3,2
  8555  199C  299E               	goto	u4561
  8556  199D  299F               	goto	u4560
  8557  199E                     u4561:
  8558  199E  2981               	goto	l3038
  8559  199F                     u4560:
  8560  199F                     l3046:
  8561  199F  0875               	movf	___wmul@product+1,w
  8562  19A0  00F1               	movwf	?___wmul+1
  8563  19A1  0874               	movf	___wmul@product,w
  8564  19A2  00F0               	movwf	?___wmul
  8565  19A3                     l349:
  8566  19A3  0008               	return
  8567  19A4                     __end_of___wmul:
  8568                           
  8569                           	psect	text19
  8570  1B76                     __ptext19:	
  8571 ;; *************** function ___llmod *****************
  8572 ;; Defined at:
  8573 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\llmod.c"
  8574 ;; Parameters:    Size  Location     Type
  8575 ;;  divisor         4    0[COMMON] unsigned long 
  8576 ;;  dividend        4    4[COMMON] unsigned long 
  8577 ;; Auto vars:     Size  Location     Type
  8578 ;;  counter         1    9[COMMON] unsigned char 
  8579 ;; Return value:  Size  Location     Type
  8580 ;;                  4    0[COMMON] unsigned long 
  8581 ;; Registers used:
  8582 ;;		wreg, status,2, status,0
  8583 ;; Tracked objects:
  8584 ;;		On entry : 0/0
  8585 ;;		On exit  : 0/0
  8586 ;;		Unchanged: 0/0
  8587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8588 ;;      Params:         8       0       0       0       0
  8589 ;;      Locals:         1       0       0       0       0
  8590 ;;      Temps:          1       0       0       0       0
  8591 ;;      Totals:        10       0       0       0       0
  8592 ;;Total ram usage:       10 bytes
  8593 ;; Hardware stack levels used: 1
  8594 ;; This function calls:
  8595 ;;		Nothing
  8596 ;; This function is called by:
  8597 ;;		_sprintf
  8598 ;; This function uses a non-reentrant model
  8599 ;;
  8600                           
  8601                           
  8602                           ;psect for function ___llmod
  8603  1B76                     ___llmod:
  8604  1B76                     l3150:	
  8605                           ;incstack = 0
  8606                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  8607                           
  8608  1B76  0873               	movf	___llmod@divisor+3,w
  8609  1B77  0472               	iorwf	___llmod@divisor+2,w
  8610  1B78  0471               	iorwf	___llmod@divisor+1,w
  8611  1B79  0470               	iorwf	___llmod@divisor,w
  8612  1B7A  1903               	skipnz
  8613  1B7B  2B7D               	goto	u4851
  8614  1B7C  2B7E               	goto	u4850
  8615  1B7D                     u4851:
  8616  1B7D  2BC1               	goto	l3166
  8617  1B7E                     u4850:
  8618  1B7E                     l3152:
  8619  1B7E  01F9               	clrf	___llmod@counter
  8620  1B7F  0AF9               	incf	___llmod@counter,f
  8621  1B80  2B8E               	goto	l3156
  8622  1B81                     l3154:
  8623  1B81  3001               	movlw	1
  8624  1B82  00F8               	movwf	??___llmod
  8625  1B83                     u4865:
  8626  1B83  1003               	clrc
  8627  1B84  0DF0               	rlf	___llmod@divisor,f
  8628  1B85  0DF1               	rlf	___llmod@divisor+1,f
  8629  1B86  0DF2               	rlf	___llmod@divisor+2,f
  8630  1B87  0DF3               	rlf	___llmod@divisor+3,f
  8631  1B88  0BF8               	decfsz	??___llmod,f
  8632  1B89  2B83               	goto	u4865
  8633  1B8A  3001               	movlw	1
  8634  1B8B  00F8               	movwf	??___llmod
  8635  1B8C  0878               	movf	??___llmod,w
  8636  1B8D  07F9               	addwf	___llmod@counter,f
  8637  1B8E                     l3156:
  8638  1B8E  1FF3               	btfss	___llmod@divisor+3,7
  8639  1B8F  2B91               	goto	u4871
  8640  1B90  2B92               	goto	u4870
  8641  1B91                     u4871:
  8642  1B91  2B81               	goto	l3154
  8643  1B92                     u4870:
  8644  1B92                     l3158:
  8645  1B92  0873               	movf	___llmod@divisor+3,w
  8646  1B93  0277               	subwf	___llmod@dividend+3,w
  8647  1B94  1D03               	skipz
  8648  1B95  2BA0               	goto	u4885
  8649  1B96  0872               	movf	___llmod@divisor+2,w
  8650  1B97  0276               	subwf	___llmod@dividend+2,w
  8651  1B98  1D03               	skipz
  8652  1B99  2BA0               	goto	u4885
  8653  1B9A  0871               	movf	___llmod@divisor+1,w
  8654  1B9B  0275               	subwf	___llmod@dividend+1,w
  8655  1B9C  1D03               	skipz
  8656  1B9D  2BA0               	goto	u4885
  8657  1B9E  0870               	movf	___llmod@divisor,w
  8658  1B9F  0274               	subwf	___llmod@dividend,w
  8659  1BA0                     u4885:
  8660  1BA0  1C03               	skipc
  8661  1BA1  2BA3               	goto	u4881
  8662  1BA2  2BA4               	goto	u4880
  8663  1BA3                     u4881:
  8664  1BA3  2BB2               	goto	l3162
  8665  1BA4                     u4880:
  8666  1BA4                     l3160:
  8667  1BA4  0870               	movf	___llmod@divisor,w
  8668  1BA5  02F4               	subwf	___llmod@dividend,f
  8669  1BA6  0871               	movf	___llmod@divisor+1,w
  8670  1BA7  1C03               	skipc
  8671  1BA8  0F71               	incfsz	___llmod@divisor+1,w
  8672  1BA9  02F5               	subwf	___llmod@dividend+1,f
  8673  1BAA  0872               	movf	___llmod@divisor+2,w
  8674  1BAB  1C03               	skipc
  8675  1BAC  0F72               	incfsz	___llmod@divisor+2,w
  8676  1BAD  02F6               	subwf	___llmod@dividend+2,f
  8677  1BAE  0873               	movf	___llmod@divisor+3,w
  8678  1BAF  1C03               	skipc
  8679  1BB0  0F73               	incfsz	___llmod@divisor+3,w
  8680  1BB1  02F7               	subwf	___llmod@dividend+3,f
  8681  1BB2                     l3162:
  8682  1BB2  3001               	movlw	1
  8683  1BB3                     u4895:
  8684  1BB3  1003               	clrc
  8685  1BB4  0CF3               	rrf	___llmod@divisor+3,f
  8686  1BB5  0CF2               	rrf	___llmod@divisor+2,f
  8687  1BB6  0CF1               	rrf	___llmod@divisor+1,f
  8688  1BB7  0CF0               	rrf	___llmod@divisor,f
  8689  1BB8  3EFF               	addlw	-1
  8690  1BB9  1D03               	skipz
  8691  1BBA  2BB3               	goto	u4895
  8692  1BBB                     l3164:
  8693  1BBB  3001               	movlw	1
  8694  1BBC  02F9               	subwf	___llmod@counter,f
  8695  1BBD  1D03               	btfss	3,2
  8696  1BBE  2BC0               	goto	u4901
  8697  1BBF  2BC1               	goto	u4900
  8698  1BC0                     u4901:
  8699  1BC0  2B92               	goto	l3158
  8700  1BC1                     u4900:
  8701  1BC1                     l3166:
  8702  1BC1  0877               	movf	___llmod@dividend+3,w
  8703  1BC2  00F3               	movwf	?___llmod+3
  8704  1BC3  0876               	movf	___llmod@dividend+2,w
  8705  1BC4  00F2               	movwf	?___llmod+2
  8706  1BC5  0875               	movf	___llmod@dividend+1,w
  8707  1BC6  00F1               	movwf	?___llmod+1
  8708  1BC7  0874               	movf	___llmod@dividend,w
  8709  1BC8  00F0               	movwf	?___llmod
  8710  1BC9                     l603:
  8711  1BC9  0008               	return
  8712  1BCA                     __end_of___llmod:
  8713                           
  8714                           	psect	text20
  8715  1C80                     __ptext20:	
  8716 ;; *************** function ___lldiv *****************
  8717 ;; Defined at:
  8718 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  8719 ;; Parameters:    Size  Location     Type
  8720 ;;  divisor         4    0[COMMON] unsigned long 
  8721 ;;  dividend        4    4[COMMON] unsigned long 
  8722 ;; Auto vars:     Size  Location     Type
  8723 ;;  quotient        4    9[COMMON] unsigned long 
  8724 ;;  counter         1   13[COMMON] unsigned char 
  8725 ;; Return value:  Size  Location     Type
  8726 ;;                  4    0[COMMON] unsigned long 
  8727 ;; Registers used:
  8728 ;;		wreg, status,2, status,0
  8729 ;; Tracked objects:
  8730 ;;		On entry : 0/0
  8731 ;;		On exit  : 0/0
  8732 ;;		Unchanged: 0/0
  8733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8734 ;;      Params:         8       0       0       0       0
  8735 ;;      Locals:         5       0       0       0       0
  8736 ;;      Temps:          1       0       0       0       0
  8737 ;;      Totals:        14       0       0       0       0
  8738 ;;Total ram usage:       14 bytes
  8739 ;; Hardware stack levels used: 1
  8740 ;; This function calls:
  8741 ;;		Nothing
  8742 ;; This function is called by:
  8743 ;;		_sprintf
  8744 ;; This function uses a non-reentrant model
  8745 ;;
  8746                           
  8747                           
  8748                           ;psect for function ___lldiv
  8749  1C80                     ___lldiv:
  8750  1C80                     l3050:	
  8751                           ;incstack = 0
  8752                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  8753                           
  8754  1C80  3000               	movlw	0
  8755  1C81  00FC               	movwf	___lldiv@quotient+3
  8756  1C82  3000               	movlw	0
  8757  1C83  00FB               	movwf	___lldiv@quotient+2
  8758  1C84  3000               	movlw	0
  8759  1C85  00FA               	movwf	___lldiv@quotient+1
  8760  1C86  3000               	movlw	0
  8761  1C87  00F9               	movwf	___lldiv@quotient
  8762  1C88  0873               	movf	___lldiv@divisor+3,w
  8763  1C89  0472               	iorwf	___lldiv@divisor+2,w
  8764  1C8A  0471               	iorwf	___lldiv@divisor+1,w
  8765  1C8B  0470               	iorwf	___lldiv@divisor,w
  8766  1C8C  1903               	skipnz
  8767  1C8D  2C8F               	goto	u4571
  8768  1C8E  2C90               	goto	u4570
  8769  1C8F                     u4571:
  8770  1C8F  2CDD               	goto	l3070
  8771  1C90                     u4570:
  8772  1C90                     l3052:
  8773  1C90  01FD               	clrf	___lldiv@counter
  8774  1C91  0AFD               	incf	___lldiv@counter,f
  8775  1C92  2CA0               	goto	l3056
  8776  1C93                     l3054:
  8777  1C93  3001               	movlw	1
  8778  1C94  00F8               	movwf	??___lldiv
  8779  1C95                     u4585:
  8780  1C95  1003               	clrc
  8781  1C96  0DF0               	rlf	___lldiv@divisor,f
  8782  1C97  0DF1               	rlf	___lldiv@divisor+1,f
  8783  1C98  0DF2               	rlf	___lldiv@divisor+2,f
  8784  1C99  0DF3               	rlf	___lldiv@divisor+3,f
  8785  1C9A  0BF8               	decfsz	??___lldiv,f
  8786  1C9B  2C95               	goto	u4585
  8787  1C9C  3001               	movlw	1
  8788  1C9D  00F8               	movwf	??___lldiv
  8789  1C9E  0878               	movf	??___lldiv,w
  8790  1C9F  07FD               	addwf	___lldiv@counter,f
  8791  1CA0                     l3056:
  8792  1CA0  1FF3               	btfss	___lldiv@divisor+3,7
  8793  1CA1  2CA3               	goto	u4591
  8794  1CA2  2CA4               	goto	u4590
  8795  1CA3                     u4591:
  8796  1CA3  2C93               	goto	l3054
  8797  1CA4                     u4590:
  8798  1CA4                     l3058:
  8799  1CA4  3001               	movlw	1
  8800  1CA5  00F8               	movwf	??___lldiv
  8801  1CA6                     u4605:
  8802  1CA6  1003               	clrc
  8803  1CA7  0DF9               	rlf	___lldiv@quotient,f
  8804  1CA8  0DFA               	rlf	___lldiv@quotient+1,f
  8805  1CA9  0DFB               	rlf	___lldiv@quotient+2,f
  8806  1CAA  0DFC               	rlf	___lldiv@quotient+3,f
  8807  1CAB  0BF8               	decfsz	??___lldiv,f
  8808  1CAC  2CA6               	goto	u4605
  8809  1CAD                     l3060:
  8810  1CAD  0873               	movf	___lldiv@divisor+3,w
  8811  1CAE  0277               	subwf	___lldiv@dividend+3,w
  8812  1CAF  1D03               	skipz
  8813  1CB0  2CBB               	goto	u4615
  8814  1CB1  0872               	movf	___lldiv@divisor+2,w
  8815  1CB2  0276               	subwf	___lldiv@dividend+2,w
  8816  1CB3  1D03               	skipz
  8817  1CB4  2CBB               	goto	u4615
  8818  1CB5  0871               	movf	___lldiv@divisor+1,w
  8819  1CB6  0275               	subwf	___lldiv@dividend+1,w
  8820  1CB7  1D03               	skipz
  8821  1CB8  2CBB               	goto	u4615
  8822  1CB9  0870               	movf	___lldiv@divisor,w
  8823  1CBA  0274               	subwf	___lldiv@dividend,w
  8824  1CBB                     u4615:
  8825  1CBB  1C03               	skipc
  8826  1CBC  2CBE               	goto	u4611
  8827  1CBD  2CBF               	goto	u4610
  8828  1CBE                     u4611:
  8829  1CBE  2CCE               	goto	l3066
  8830  1CBF                     u4610:
  8831  1CBF                     l3062:
  8832  1CBF  0870               	movf	___lldiv@divisor,w
  8833  1CC0  02F4               	subwf	___lldiv@dividend,f
  8834  1CC1  0871               	movf	___lldiv@divisor+1,w
  8835  1CC2  1C03               	skipc
  8836  1CC3  0F71               	incfsz	___lldiv@divisor+1,w
  8837  1CC4  02F5               	subwf	___lldiv@dividend+1,f
  8838  1CC5  0872               	movf	___lldiv@divisor+2,w
  8839  1CC6  1C03               	skipc
  8840  1CC7  0F72               	incfsz	___lldiv@divisor+2,w
  8841  1CC8  02F6               	subwf	___lldiv@dividend+2,f
  8842  1CC9  0873               	movf	___lldiv@divisor+3,w
  8843  1CCA  1C03               	skipc
  8844  1CCB  0F73               	incfsz	___lldiv@divisor+3,w
  8845  1CCC  02F7               	subwf	___lldiv@dividend+3,f
  8846  1CCD                     l3064:
  8847  1CCD  1479               	bsf	___lldiv@quotient,0
  8848  1CCE                     l3066:
  8849  1CCE  3001               	movlw	1
  8850  1CCF                     u4625:
  8851  1CCF  1003               	clrc
  8852  1CD0  0CF3               	rrf	___lldiv@divisor+3,f
  8853  1CD1  0CF2               	rrf	___lldiv@divisor+2,f
  8854  1CD2  0CF1               	rrf	___lldiv@divisor+1,f
  8855  1CD3  0CF0               	rrf	___lldiv@divisor,f
  8856  1CD4  3EFF               	addlw	-1
  8857  1CD5  1D03               	skipz
  8858  1CD6  2CCF               	goto	u4625
  8859  1CD7                     l3068:
  8860  1CD7  3001               	movlw	1
  8861  1CD8  02FD               	subwf	___lldiv@counter,f
  8862  1CD9  1D03               	btfss	3,2
  8863  1CDA  2CDC               	goto	u4631
  8864  1CDB  2CDD               	goto	u4630
  8865  1CDC                     u4631:
  8866  1CDC  2CA4               	goto	l3058
  8867  1CDD                     u4630:
  8868  1CDD                     l3070:
  8869  1CDD  087C               	movf	___lldiv@quotient+3,w
  8870  1CDE  00F3               	movwf	?___lldiv+3
  8871  1CDF  087B               	movf	___lldiv@quotient+2,w
  8872  1CE0  00F2               	movwf	?___lldiv+2
  8873  1CE1  087A               	movf	___lldiv@quotient+1,w
  8874  1CE2  00F1               	movwf	?___lldiv+1
  8875  1CE3  0879               	movf	___lldiv@quotient,w
  8876  1CE4  00F0               	movwf	?___lldiv
  8877  1CE5                     l383:
  8878  1CE5  0008               	return
  8879  1CE6                     __end_of___lldiv:
  8880                           
  8881                           	psect	text21
  8882  1D4F                     __ptext21:	
  8883 ;; *************** function ___fltol *****************
  8884 ;; Defined at:
  8885 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fltol.c"
  8886 ;; Parameters:    Size  Location     Type
  8887 ;;  f1              4   49[BANK0 ] unsigned long 
  8888 ;; Auto vars:     Size  Location     Type
  8889 ;;  exp1            1   59[BANK0 ] unsigned char 
  8890 ;;  sign1           1   58[BANK0 ] unsigned char 
  8891 ;; Return value:  Size  Location     Type
  8892 ;;                  4   49[BANK0 ] long 
  8893 ;; Registers used:
  8894 ;;		wreg, status,2, status,0
  8895 ;; Tracked objects:
  8896 ;;		On entry : 0/0
  8897 ;;		On exit  : 0/0
  8898 ;;		Unchanged: 0/0
  8899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8900 ;;      Params:         0       4       0       0       0
  8901 ;;      Locals:         0       2       0       0       0
  8902 ;;      Temps:          0       5       0       0       0
  8903 ;;      Totals:         0      11       0       0       0
  8904 ;;Total ram usage:       11 bytes
  8905 ;; Hardware stack levels used: 1
  8906 ;; This function calls:
  8907 ;;		Nothing
  8908 ;; This function is called by:
  8909 ;;		_sprintf
  8910 ;; This function uses a non-reentrant model
  8911 ;;
  8912                           
  8913                           
  8914                           ;psect for function ___fltol
  8915  1D4F                     ___fltol:
  8916  1D4F                     l3114:	
  8917                           ;incstack = 0
  8918                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8919                           
  8920  1D4F  1003               	clrc
  8921  1D50  1283               	bcf	3,5	;RP0=0, select bank0
  8922  1D51  1303               	bcf	3,6	;RP1=0, select bank0
  8923  1D52  0D53               	rlf	___fltol@f1+2,w
  8924  1D53  0D54               	rlf	___fltol@f1+3,w
  8925  1D54  00D5               	movwf	??___fltol
  8926  1D55  0855               	movf	??___fltol,w
  8927  1D56  00DB               	movwf	___fltol@exp1
  8928  1D57  085B               	movf	___fltol@exp1,w
  8929  1D58  1D03               	btfss	3,2
  8930  1D59  2D5B               	goto	u4751
  8931  1D5A  2D5C               	goto	u4750
  8932  1D5B                     u4751:
  8933  1D5B  2D65               	goto	l3120
  8934  1D5C                     u4750:
  8935  1D5C                     l3116:
  8936  1D5C  3000               	movlw	0
  8937  1D5D  00D4               	movwf	?___fltol+3
  8938  1D5E  3000               	movlw	0
  8939  1D5F  00D3               	movwf	?___fltol+2
  8940  1D60  3000               	movlw	0
  8941  1D61  00D2               	movwf	?___fltol+1
  8942  1D62  3000               	movlw	0
  8943  1D63  00D1               	movwf	?___fltol
  8944  1D64  2DCA               	goto	l550
  8945  1D65                     l3120:
  8946  1D65  0851               	movf	___fltol@f1,w
  8947  1D66  00D5               	movwf	??___fltol
  8948  1D67  0852               	movf	___fltol@f1+1,w
  8949  1D68  00D6               	movwf	??___fltol+1
  8950  1D69  0853               	movf	___fltol@f1+2,w
  8951  1D6A  00D7               	movwf	??___fltol+2
  8952  1D6B  0854               	movf	___fltol@f1+3,w
  8953  1D6C  00D8               	movwf	??___fltol+3
  8954  1D6D  301F               	movlw	31
  8955  1D6E                     u4765:
  8956  1D6E  1003               	clrc
  8957  1D6F  0CD8               	rrf	??___fltol+3,f
  8958  1D70  0CD7               	rrf	??___fltol+2,f
  8959  1D71  0CD6               	rrf	??___fltol+1,f
  8960  1D72  0CD5               	rrf	??___fltol,f
  8961  1D73                     u4760:
  8962  1D73  3EFF               	addlw	-1
  8963  1D74  1D03               	skipz
  8964  1D75  2D6E               	goto	u4765
  8965  1D76  0855               	movf	??___fltol,w
  8966  1D77  00D9               	movwf	??___fltol+4
  8967  1D78  0859               	movf	??___fltol+4,w
  8968  1D79  00DA               	movwf	___fltol@sign1
  8969  1D7A                     l3122:
  8970  1D7A  17D3               	bsf	___fltol@f1+2,7
  8971  1D7B                     l3124:
  8972  1D7B  30FF               	movlw	255
  8973  1D7C  05D1               	andwf	___fltol@f1,f
  8974  1D7D  30FF               	movlw	255
  8975  1D7E  05D2               	andwf	___fltol@f1+1,f
  8976  1D7F  30FF               	movlw	255
  8977  1D80  05D3               	andwf	___fltol@f1+2,f
  8978  1D81  3000               	movlw	0
  8979  1D82  05D4               	andwf	___fltol@f1+3,f
  8980  1D83                     l3126:
  8981  1D83  3096               	movlw	150
  8982  1D84  02DB               	subwf	___fltol@exp1,f
  8983  1D85                     l3128:
  8984  1D85  1FDB               	btfss	___fltol@exp1,7
  8985  1D86  2D88               	goto	u4771
  8986  1D87  2D89               	goto	u4770
  8987  1D88                     u4771:
  8988  1D88  2DA3               	goto	l3138
  8989  1D89                     u4770:
  8990  1D89                     l3130:
  8991  1D89  085B               	movf	___fltol@exp1,w
  8992  1D8A  3A80               	xorlw	128
  8993  1D8B  3E97               	addlw	151
  8994  1D8C  1803               	skipnc
  8995  1D8D  2D8F               	goto	u4781
  8996  1D8E  2D90               	goto	u4780
  8997  1D8F                     u4781:
  8998  1D8F  2D91               	goto	l3136
  8999  1D90                     u4780:
  9000  1D90  2D5C               	goto	l3116
  9001  1D91                     l3136:
  9002  1D91  3001               	movlw	1
  9003  1D92                     u4795:
  9004  1D92  1003               	clrc
  9005  1D93  0CD4               	rrf	___fltol@f1+3,f
  9006  1D94  0CD3               	rrf	___fltol@f1+2,f
  9007  1D95  0CD2               	rrf	___fltol@f1+1,f
  9008  1D96  0CD1               	rrf	___fltol@f1,f
  9009  1D97  3EFF               	addlw	-1
  9010  1D98  1D03               	skipz
  9011  1D99  2D92               	goto	u4795
  9012  1D9A  3001               	movlw	1
  9013  1D9B  00D5               	movwf	??___fltol
  9014  1D9C  0855               	movf	??___fltol,w
  9015  1D9D  07DB               	addwf	___fltol@exp1,f
  9016  1D9E  1D03               	btfss	3,2
  9017  1D9F  2DA1               	goto	u4801
  9018  1DA0  2DA2               	goto	u4800
  9019  1DA1                     u4801:
  9020  1DA1  2D91               	goto	l3136
  9021  1DA2                     u4800:
  9022  1DA2  2DBA               	goto	l3146
  9023  1DA3                     l3138:
  9024  1DA3  3020               	movlw	32
  9025  1DA4  025B               	subwf	___fltol@exp1,w
  9026  1DA5  1C03               	skipc
  9027  1DA6  2DA8               	goto	u4811
  9028  1DA7  2DA9               	goto	u4810
  9029  1DA8                     u4811:
  9030  1DA8  2DB5               	goto	l557
  9031  1DA9                     u4810:
  9032  1DA9  2D5C               	goto	l3116
  9033  1DAA                     l3144:
  9034  1DAA  3001               	movlw	1
  9035  1DAB  00D5               	movwf	??___fltol
  9036  1DAC                     u4825:
  9037  1DAC  1003               	clrc
  9038  1DAD  0DD1               	rlf	___fltol@f1,f
  9039  1DAE  0DD2               	rlf	___fltol@f1+1,f
  9040  1DAF  0DD3               	rlf	___fltol@f1+2,f
  9041  1DB0  0DD4               	rlf	___fltol@f1+3,f
  9042  1DB1  0BD5               	decfsz	??___fltol,f
  9043  1DB2  2DAC               	goto	u4825
  9044  1DB3  3001               	movlw	1
  9045  1DB4  02DB               	subwf	___fltol@exp1,f
  9046  1DB5                     l557:
  9047  1DB5  085B               	movf	___fltol@exp1,w
  9048  1DB6  1D03               	btfss	3,2
  9049  1DB7  2DB9               	goto	u4831
  9050  1DB8  2DBA               	goto	u4830
  9051  1DB9                     u4831:
  9052  1DB9  2DAA               	goto	l3144
  9053  1DBA                     u4830:
  9054  1DBA                     l3146:
  9055  1DBA  085A               	movf	___fltol@sign1,w
  9056  1DBB  1903               	btfsc	3,2
  9057  1DBC  2DBE               	goto	u4841
  9058  1DBD  2DBF               	goto	u4840
  9059  1DBE                     u4841:
  9060  1DBE  2DCA               	goto	l560
  9061  1DBF                     u4840:
  9062  1DBF                     l3148:
  9063  1DBF  09D1               	comf	___fltol@f1,f
  9064  1DC0  09D2               	comf	___fltol@f1+1,f
  9065  1DC1  09D3               	comf	___fltol@f1+2,f
  9066  1DC2  09D4               	comf	___fltol@f1+3,f
  9067  1DC3  0AD1               	incf	___fltol@f1,f
  9068  1DC4  1903               	skipnz
  9069  1DC5  0AD2               	incf	___fltol@f1+1,f
  9070  1DC6  1903               	skipnz
  9071  1DC7  0AD3               	incf	___fltol@f1+2,f
  9072  1DC8  1903               	skipnz
  9073  1DC9  0AD4               	incf	___fltol@f1+3,f
  9074  1DCA                     l560:
  9075  1DCA                     l550:
  9076  1DCA  0008               	return
  9077  1DCB                     __end_of___fltol:
  9078                           
  9079                           	psect	text22
  9080  195B                     __ptext22:	
  9081 ;; *************** function ___flsub *****************
  9082 ;; Defined at:
  9083 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
  9084 ;; Parameters:    Size  Location     Type
  9085 ;;  a               4   70[BANK0 ] long 
  9086 ;;  b               4   74[BANK0 ] long 
  9087 ;; Auto vars:     Size  Location     Type
  9088 ;;		None
  9089 ;; Return value:  Size  Location     Type
  9090 ;;                  4   70[BANK0 ] long 
  9091 ;; Registers used:
  9092 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  9093 ;; Tracked objects:
  9094 ;;		On entry : 0/0
  9095 ;;		On exit  : 0/0
  9096 ;;		Unchanged: 0/0
  9097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9098 ;;      Params:         0       8       0       0       0
  9099 ;;      Locals:         0       0       0       0       0
  9100 ;;      Temps:          0       0       0       0       0
  9101 ;;      Totals:         0       8       0       0       0
  9102 ;;Total ram usage:        8 bytes
  9103 ;; Hardware stack levels used: 1
  9104 ;; Hardware stack levels required when called: 1
  9105 ;; This function calls:
  9106 ;;		___fladd
  9107 ;; This function is called by:
  9108 ;;		_sprintf
  9109 ;; This function uses a non-reentrant model
  9110 ;;
  9111                           
  9112                           
  9113                           ;psect for function ___flsub
  9114  195B                     ___flsub:
  9115  195B                     l3170:	
  9116                           ;incstack = 0
  9117                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  9118                           
  9119  195B  3080               	movlw	128
  9120  195C  1283               	bcf	3,5	;RP0=0, select bank0
  9121  195D  1303               	bcf	3,6	;RP1=0, select bank0
  9122  195E  06E9               	xorwf	___flsub@a+3,f
  9123  195F                     l3172:
  9124  195F  086D               	movf	___flsub@b+3,w
  9125  1960  00D5               	movwf	___fladd@b+3
  9126  1961  086C               	movf	___flsub@b+2,w
  9127  1962  00D4               	movwf	___fladd@b+2
  9128  1963  086B               	movf	___flsub@b+1,w
  9129  1964  00D3               	movwf	___fladd@b+1
  9130  1965  086A               	movf	___flsub@b,w
  9131  1966  00D2               	movwf	___fladd@b
  9132  1967  0869               	movf	___flsub@a+3,w
  9133  1968  00D9               	movwf	___fladd@a+3
  9134  1969  0868               	movf	___flsub@a+2,w
  9135  196A  00D8               	movwf	___fladd@a+2
  9136  196B  0867               	movf	___flsub@a+1,w
  9137  196C  00D7               	movwf	___fladd@a+1
  9138  196D  0866               	movf	___flsub@a,w
  9139  196E  00D6               	movwf	___fladd@a
  9140  196F  160A  118A  2578  160A  158A  	fcall	___fladd
  9141  1974  1283               	bcf	3,5	;RP0=0, select bank0
  9142  1975  1303               	bcf	3,6	;RP1=0, select bank0
  9143  1976  0855               	movf	?___fladd+3,w
  9144  1977  00E9               	movwf	?___flsub+3
  9145  1978  0854               	movf	?___fladd+2,w
  9146  1979  00E8               	movwf	?___flsub+2
  9147  197A  0853               	movf	?___fladd+1,w
  9148  197B  00E7               	movwf	?___flsub+1
  9149  197C  0852               	movf	?___fladd,w
  9150  197D  00E6               	movwf	?___flsub
  9151  197E                     l720:
  9152  197E  0008               	return
  9153  197F                     __end_of___flsub:
  9154                           
  9155                           	psect	text23
  9156  1578                     __ptext23:	
  9157 ;; *************** function ___fladd *****************
  9158 ;; Defined at:
  9159 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
  9160 ;; Parameters:    Size  Location     Type
  9161 ;;  b               4   50[BANK0 ] long 
  9162 ;;  a               4   54[BANK0 ] long 
  9163 ;; Auto vars:     Size  Location     Type
  9164 ;;  grs             1   69[BANK0 ] unsigned char 
  9165 ;;  bexp            1   68[BANK0 ] unsigned char 
  9166 ;;  aexp            1   67[BANK0 ] unsigned char 
  9167 ;;  signs           1   66[BANK0 ] unsigned char 
  9168 ;; Return value:  Size  Location     Type
  9169 ;;                  4   50[BANK0 ] unsigned char 
  9170 ;; Registers used:
  9171 ;;		wreg, status,2, status,0, btemp+1
  9172 ;; Tracked objects:
  9173 ;;		On entry : 0/0
  9174 ;;		On exit  : 0/0
  9175 ;;		Unchanged: 0/0
  9176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9177 ;;      Params:         0       8       0       0       0
  9178 ;;      Locals:         0       4       0       0       0
  9179 ;;      Temps:          0       8       0       0       0
  9180 ;;      Totals:         0      20       0       0       0
  9181 ;;Total ram usage:       20 bytes
  9182 ;; Hardware stack levels used: 1
  9183 ;; This function calls:
  9184 ;;		Nothing
  9185 ;; This function is called by:
  9186 ;;		_sprintf
  9187 ;;		___flsub
  9188 ;; This function uses a non-reentrant model
  9189 ;;
  9190                           
  9191                           
  9192                           ;psect for function ___fladd
  9193  1578                     ___fladd:
  9194  1578                     l2498:	
  9195                           ;incstack = 0
  9196                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  9197                           
  9198  1578  1283               	bcf	3,5	;RP0=0, select bank0
  9199  1579  1303               	bcf	3,6	;RP1=0, select bank0
  9200  157A  0855               	movf	___fladd@b+3,w
  9201  157B  3980               	andlw	128
  9202  157C  00DA               	movwf	??___fladd
  9203  157D  085A               	movf	??___fladd,w
  9204  157E  00E2               	movwf	___fladd@signs
  9205  157F                     l2500:
  9206  157F  0855               	movf	___fladd@b+3,w
  9207  1580  00DA               	movwf	??___fladd
  9208  1581  075A               	addwf	??___fladd,w
  9209  1582  00DB               	movwf	??___fladd+1
  9210  1583  085B               	movf	??___fladd+1,w
  9211  1584  00E4               	movwf	___fladd@bexp
  9212  1585                     l2502:
  9213  1585  1FD4               	btfss	___fladd@b+2,7
  9214  1586  2D88               	goto	u3161
  9215  1587  2D89               	goto	u3160
  9216  1588                     u3161:
  9217  1588  2D8A               	goto	l2506
  9218  1589                     u3160:
  9219  1589                     l2504:
  9220  1589  1464               	bsf	___fladd@bexp,0
  9221  158A                     l2506:
  9222  158A  0864               	movf	___fladd@bexp,w
  9223  158B  1903               	btfsc	3,2
  9224  158C  2D8E               	goto	u3171
  9225  158D  2D8F               	goto	u3170
  9226  158E                     u3171:
  9227  158E  2D9F               	goto	l2516
  9228  158F                     u3170:
  9229  158F                     l2508:
  9230  158F  0A64               	incf	___fladd@bexp,w
  9231  1590  1D03               	btfss	3,2
  9232  1591  2D93               	goto	u3181
  9233  1592  2D94               	goto	u3180
  9234  1593                     u3181:
  9235  1593  2D9C               	goto	l2512
  9236  1594                     u3180:
  9237  1594                     l2510:
  9238  1594  3000               	movlw	0
  9239  1595  00D5               	movwf	___fladd@b+3
  9240  1596  3000               	movlw	0
  9241  1597  00D4               	movwf	___fladd@b+2
  9242  1598  3000               	movlw	0
  9243  1599  00D3               	movwf	___fladd@b+1
  9244  159A  3000               	movlw	0
  9245  159B  00D2               	movwf	___fladd@b
  9246  159C                     l2512:
  9247  159C  17D4               	bsf	___fladd@b+2,7
  9248  159D                     l2514:
  9249  159D  01D5               	clrf	___fladd@b+3
  9250  159E  2DA7               	goto	l2518
  9251  159F                     l2516:
  9252  159F  3000               	movlw	0
  9253  15A0  00D5               	movwf	___fladd@b+3
  9254  15A1  3000               	movlw	0
  9255  15A2  00D4               	movwf	___fladd@b+2
  9256  15A3  3000               	movlw	0
  9257  15A4  00D3               	movwf	___fladd@b+1
  9258  15A5  3000               	movlw	0
  9259  15A6  00D2               	movwf	___fladd@b
  9260  15A7                     l2518:
  9261  15A7  0859               	movf	___fladd@a+3,w
  9262  15A8  3980               	andlw	128
  9263  15A9  00DA               	movwf	??___fladd
  9264  15AA  085A               	movf	??___fladd,w
  9265  15AB  00E3               	movwf	___fladd@aexp
  9266  15AC                     l2520:
  9267  15AC  0863               	movf	___fladd@aexp,w
  9268  15AD  0662               	xorwf	___fladd@signs,w
  9269  15AE  1903               	skipnz
  9270  15AF  2DB1               	goto	u3191
  9271  15B0  2DB2               	goto	u3190
  9272  15B1                     u3191:
  9273  15B1  2DB3               	goto	l2524
  9274  15B2                     u3190:
  9275  15B2                     l2522:
  9276  15B2  1762               	bsf	___fladd@signs,6
  9277  15B3                     l2524:
  9278  15B3  0859               	movf	___fladd@a+3,w
  9279  15B4  00DA               	movwf	??___fladd
  9280  15B5  075A               	addwf	??___fladd,w
  9281  15B6  00DB               	movwf	??___fladd+1
  9282  15B7  085B               	movf	??___fladd+1,w
  9283  15B8  00E3               	movwf	___fladd@aexp
  9284  15B9                     l2526:
  9285  15B9  1FD8               	btfss	___fladd@a+2,7
  9286  15BA  2DBC               	goto	u3201
  9287  15BB  2DBD               	goto	u3200
  9288  15BC                     u3201:
  9289  15BC  2DBE               	goto	l2530
  9290  15BD                     u3200:
  9291  15BD                     l2528:
  9292  15BD  1463               	bsf	___fladd@aexp,0
  9293  15BE                     l2530:
  9294  15BE  0863               	movf	___fladd@aexp,w
  9295  15BF  1903               	btfsc	3,2
  9296  15C0  2DC2               	goto	u3211
  9297  15C1  2DC3               	goto	u3210
  9298  15C2                     u3211:
  9299  15C2  2DD3               	goto	l2540
  9300  15C3                     u3210:
  9301  15C3                     l2532:
  9302  15C3  0A63               	incf	___fladd@aexp,w
  9303  15C4  1D03               	btfss	3,2
  9304  15C5  2DC7               	goto	u3221
  9305  15C6  2DC8               	goto	u3220
  9306  15C7                     u3221:
  9307  15C7  2DD0               	goto	l2536
  9308  15C8                     u3220:
  9309  15C8                     l2534:
  9310  15C8  3000               	movlw	0
  9311  15C9  00D9               	movwf	___fladd@a+3
  9312  15CA  3000               	movlw	0
  9313  15CB  00D8               	movwf	___fladd@a+2
  9314  15CC  3000               	movlw	0
  9315  15CD  00D7               	movwf	___fladd@a+1
  9316  15CE  3000               	movlw	0
  9317  15CF  00D6               	movwf	___fladd@a
  9318  15D0                     l2536:
  9319  15D0  17D8               	bsf	___fladd@a+2,7
  9320  15D1                     l2538:
  9321  15D1  01D9               	clrf	___fladd@a+3
  9322  15D2  2DDB               	goto	l674
  9323  15D3                     l2540:
  9324  15D3  3000               	movlw	0
  9325  15D4  00D9               	movwf	___fladd@a+3
  9326  15D5  3000               	movlw	0
  9327  15D6  00D8               	movwf	___fladd@a+2
  9328  15D7  3000               	movlw	0
  9329  15D8  00D7               	movwf	___fladd@a+1
  9330  15D9  3000               	movlw	0
  9331  15DA  00D6               	movwf	___fladd@a
  9332  15DB                     l674:
  9333  15DB  0864               	movf	___fladd@bexp,w
  9334  15DC  0263               	subwf	___fladd@aexp,w
  9335  15DD  1803               	skipnc
  9336  15DE  2DE0               	goto	u3231
  9337  15DF  2DE1               	goto	u3230
  9338  15E0                     u3231:
  9339  15E0  2E25               	goto	l2576
  9340  15E1                     u3230:
  9341  15E1                     l2542:
  9342  15E1  1F62               	btfss	___fladd@signs,6
  9343  15E2  2DE4               	goto	u3241
  9344  15E3  2DE5               	goto	u3240
  9345  15E4                     u3241:
  9346  15E4  2DE9               	goto	l2546
  9347  15E5                     u3240:
  9348  15E5                     l2544:
  9349  15E5  3080               	movlw	128
  9350  15E6  00DA               	movwf	??___fladd
  9351  15E7  085A               	movf	??___fladd,w
  9352  15E8  06E2               	xorwf	___fladd@signs,f
  9353  15E9                     l2546:
  9354  15E9  0864               	movf	___fladd@bexp,w
  9355  15EA  00DA               	movwf	??___fladd
  9356  15EB  085A               	movf	??___fladd,w
  9357  15EC  00E5               	movwf	___fladd@grs
  9358  15ED                     l2548:
  9359  15ED  0863               	movf	___fladd@aexp,w
  9360  15EE  00DA               	movwf	??___fladd
  9361  15EF  085A               	movf	??___fladd,w
  9362  15F0  00E4               	movwf	___fladd@bexp
  9363  15F1                     l2550:
  9364  15F1  0865               	movf	___fladd@grs,w
  9365  15F2  00DA               	movwf	??___fladd
  9366  15F3  085A               	movf	??___fladd,w
  9367  15F4  00E3               	movwf	___fladd@aexp
  9368  15F5                     l2552:
  9369  15F5  0852               	movf	___fladd@b,w
  9370  15F6  00DA               	movwf	??___fladd
  9371  15F7  085A               	movf	??___fladd,w
  9372  15F8  00E5               	movwf	___fladd@grs
  9373  15F9                     l2554:
  9374  15F9  0856               	movf	___fladd@a,w
  9375  15FA  00DA               	movwf	??___fladd
  9376  15FB  085A               	movf	??___fladd,w
  9377  15FC  00D2               	movwf	___fladd@b
  9378  15FD                     l2556:
  9379  15FD  0865               	movf	___fladd@grs,w
  9380  15FE  00DA               	movwf	??___fladd
  9381  15FF  085A               	movf	??___fladd,w
  9382  1600  00D6               	movwf	___fladd@a
  9383  1601                     l2558:
  9384  1601  0853               	movf	___fladd@b+1,w
  9385  1602  00DA               	movwf	??___fladd
  9386  1603  085A               	movf	??___fladd,w
  9387  1604  00E5               	movwf	___fladd@grs
  9388  1605                     l2560:
  9389  1605  0857               	movf	___fladd@a+1,w
  9390  1606  00DA               	movwf	??___fladd
  9391  1607  085A               	movf	??___fladd,w
  9392  1608  00D3               	movwf	___fladd@b+1
  9393  1609                     l2562:
  9394  1609  0865               	movf	___fladd@grs,w
  9395  160A  00DA               	movwf	??___fladd
  9396  160B  085A               	movf	??___fladd,w
  9397  160C  00D7               	movwf	___fladd@a+1
  9398  160D                     l2564:
  9399  160D  0854               	movf	___fladd@b+2,w
  9400  160E  00DA               	movwf	??___fladd
  9401  160F  085A               	movf	??___fladd,w
  9402  1610  00E5               	movwf	___fladd@grs
  9403  1611                     l2566:
  9404  1611  0858               	movf	___fladd@a+2,w
  9405  1612  00DA               	movwf	??___fladd
  9406  1613  085A               	movf	??___fladd,w
  9407  1614  00D4               	movwf	___fladd@b+2
  9408  1615                     l2568:
  9409  1615  0865               	movf	___fladd@grs,w
  9410  1616  00DA               	movwf	??___fladd
  9411  1617  085A               	movf	??___fladd,w
  9412  1618  00D8               	movwf	___fladd@a+2
  9413  1619                     l2570:
  9414  1619  0855               	movf	___fladd@b+3,w
  9415  161A  00DA               	movwf	??___fladd
  9416  161B  085A               	movf	??___fladd,w
  9417  161C  00E5               	movwf	___fladd@grs
  9418  161D                     l2572:
  9419  161D  0859               	movf	___fladd@a+3,w
  9420  161E  00DA               	movwf	??___fladd
  9421  161F  085A               	movf	??___fladd,w
  9422  1620  00D5               	movwf	___fladd@b+3
  9423  1621                     l2574:
  9424  1621  0865               	movf	___fladd@grs,w
  9425  1622  00DA               	movwf	??___fladd
  9426  1623  085A               	movf	??___fladd,w
  9427  1624  00D9               	movwf	___fladd@a+3
  9428  1625                     l2576:
  9429  1625  01E5               	clrf	___fladd@grs
  9430  1626                     l2578:
  9431  1626  0863               	movf	___fladd@aexp,w
  9432  1627  00DA               	movwf	??___fladd
  9433  1628  01DB               	clrf	??___fladd+1
  9434  1629  085B               	movf	??___fladd+1,w
  9435  162A  00DD               	movwf	??___fladd+3
  9436  162B  0864               	movf	___fladd@bexp,w
  9437  162C  025A               	subwf	??___fladd,w
  9438  162D  00DC               	movwf	??___fladd+2
  9439  162E  1C03               	skipc
  9440  162F  03DD               	decf	??___fladd+3,f
  9441  1630  085D               	movf	??___fladd+3,w
  9442  1631  3A80               	xorlw	128
  9443  1632  00FF               	movwf	btemp+1
  9444  1633  3080               	movlw	128
  9445  1634  027F               	subwf	btemp+1,w
  9446  1635  1D03               	skipz
  9447  1636  2E39               	goto	u3255
  9448  1637  301A               	movlw	26
  9449  1638  025C               	subwf	??___fladd+2,w
  9450  1639                     u3255:
  9451  1639  1C03               	skipc
  9452  163A  2E3C               	goto	u3251
  9453  163B  2E3D               	goto	u3250
  9454  163C                     u3251:
  9455  163C  2E7A               	goto	l2594
  9456  163D                     u3250:
  9457  163D                     l2580:
  9458  163D  1283               	bcf	3,5	;RP0=0, select bank0
  9459  163E  1303               	bcf	3,6	;RP1=0, select bank0
  9460  163F  0855               	movf	___fladd@b+3,w
  9461  1640  0454               	iorwf	___fladd@b+2,w
  9462  1641  0453               	iorwf	___fladd@b+1,w
  9463  1642  0452               	iorwf	___fladd@b,w
  9464  1643  1D03               	skipz
  9465  1644  2E46               	goto	u3261
  9466  1645  2E48               	goto	u3260
  9467  1646                     u3261:
  9468  1646  3001               	movlw	1
  9469  1647  2E49               	goto	u3270
  9470  1648                     u3260:
  9471  1648  3000               	movlw	0
  9472  1649                     u3270:
  9473  1649  00DA               	movwf	??___fladd
  9474  164A  085A               	movf	??___fladd,w
  9475  164B  00E5               	movwf	___fladd@grs
  9476  164C  3000               	movlw	0
  9477  164D  00D5               	movwf	___fladd@b+3
  9478  164E  3000               	movlw	0
  9479  164F  00D4               	movwf	___fladd@b+2
  9480  1650  3000               	movlw	0
  9481  1651  00D3               	movwf	___fladd@b+1
  9482  1652  3000               	movlw	0
  9483  1653  00D2               	movwf	___fladd@b
  9484  1654  0863               	movf	___fladd@aexp,w
  9485  1655  00DA               	movwf	??___fladd
  9486  1656  085A               	movf	??___fladd,w
  9487  1657  00E4               	movwf	___fladd@bexp
  9488  1658  2E82               	goto	l678
  9489  1659                     l680:
  9490  1659  1C65               	btfss	___fladd@grs,0
  9491  165A  2E5C               	goto	u3281
  9492  165B  2E5D               	goto	u3280
  9493  165C                     u3281:
  9494  165C  2E66               	goto	l2584
  9495  165D                     u3280:
  9496  165D                     l2582:
  9497  165D  0865               	movf	___fladd@grs,w
  9498  165E  00DA               	movwf	??___fladd
  9499  165F  1003               	clrc
  9500  1660  0C5A               	rrf	??___fladd,w
  9501  1661  3801               	iorlw	1
  9502  1662  00DB               	movwf	??___fladd+1
  9503  1663  085B               	movf	??___fladd+1,w
  9504  1664  00E5               	movwf	___fladd@grs
  9505  1665  2E68               	goto	l2586
  9506  1666                     l2584:
  9507  1666  1003               	clrc
  9508  1667  0CE5               	rrf	___fladd@grs,f
  9509  1668                     l2586:
  9510  1668  1C52               	btfss	___fladd@b,0
  9511  1669  2E6B               	goto	u3291
  9512  166A  2E6C               	goto	u3290
  9513  166B                     u3291:
  9514  166B  2E6D               	goto	l2590
  9515  166C                     u3290:
  9516  166C                     l2588:
  9517  166C  17E5               	bsf	___fladd@grs,7
  9518  166D                     l2590:
  9519  166D  3001               	movlw	1
  9520  166E  00DA               	movwf	??___fladd
  9521  166F                     u3305:
  9522  166F  0D55               	rlf	___fladd@b+3,w
  9523  1670  0CD5               	rrf	___fladd@b+3,f
  9524  1671  0CD4               	rrf	___fladd@b+2,f
  9525  1672  0CD3               	rrf	___fladd@b+1,f
  9526  1673  0CD2               	rrf	___fladd@b,f
  9527  1674  0BDA               	decfsz	??___fladd& (0+127),f
  9528  1675  2E6F               	goto	u3305
  9529  1676                     l2592:
  9530  1676  3001               	movlw	1
  9531  1677  00DA               	movwf	??___fladd
  9532  1678  085A               	movf	??___fladd,w
  9533  1679  07E4               	addwf	___fladd@bexp,f
  9534  167A                     l2594:
  9535  167A  1283               	bcf	3,5	;RP0=0, select bank0
  9536  167B  1303               	bcf	3,6	;RP1=0, select bank0
  9537  167C  0863               	movf	___fladd@aexp,w
  9538  167D  0264               	subwf	___fladd@bexp,w
  9539  167E  1C03               	skipc
  9540  167F  2E81               	goto	u3311
  9541  1680  2E82               	goto	u3310
  9542  1681                     u3311:
  9543  1681  2E59               	goto	l680
  9544  1682                     u3310:
  9545  1682                     l678:
  9546  1682  1B62               	btfsc	___fladd@signs,6
  9547  1683  2E85               	goto	u3321
  9548  1684  2E86               	goto	u3320
  9549  1685                     u3321:
  9550  1685  2ED1               	goto	l2620
  9551  1686                     u3320:
  9552  1686                     l2596:
  9553  1686  0864               	movf	___fladd@bexp,w
  9554  1687  1D03               	btfss	3,2
  9555  1688  2E8A               	goto	u3331
  9556  1689  2E8B               	goto	u3330
  9557  168A                     u3331:
  9558  168A  2E94               	goto	l2602
  9559  168B                     u3330:
  9560  168B                     l2598:
  9561  168B  3000               	movlw	0
  9562  168C  00D5               	movwf	?___fladd+3
  9563  168D  3000               	movlw	0
  9564  168E  00D4               	movwf	?___fladd+2
  9565  168F  3000               	movlw	0
  9566  1690  00D3               	movwf	?___fladd+1
  9567  1691  3000               	movlw	0
  9568  1692  00D2               	movwf	?___fladd
  9569  1693  2FFF               	goto	l687
  9570  1694                     l2602:
  9571  1694  0856               	movf	___fladd@a,w
  9572  1695  07D2               	addwf	___fladd@b,f
  9573  1696  0857               	movf	___fladd@a+1,w
  9574  1697  1103               	clrz
  9575  1698  1803               	skipnc
  9576  1699  3E01               	addlw	1
  9577  169A  1903               	skipnz
  9578  169B  2E9D               	goto	u3341
  9579  169C  07D3               	addwf	___fladd@b+1,f
  9580  169D                     u3341:
  9581  169D  0858               	movf	___fladd@a+2,w
  9582  169E  1103               	clrz
  9583  169F  1803               	skipnc
  9584  16A0  3E01               	addlw	1
  9585  16A1  1903               	skipnz
  9586  16A2  2EA4               	goto	u3342
  9587  16A3  07D4               	addwf	___fladd@b+2,f
  9588  16A4                     u3342:
  9589  16A4  0859               	movf	___fladd@a+3,w
  9590  16A5  1103               	clrz
  9591  16A6  1803               	skipnc
  9592  16A7  3E01               	addlw	1
  9593  16A8  1903               	skipnz
  9594  16A9  2EAB               	goto	u3343
  9595  16AA  07D5               	addwf	___fladd@b+3,f
  9596  16AB                     u3343:
  9597  16AB                     l2604:
  9598  16AB  1C55               	btfss	___fladd@b+3,0
  9599  16AC  2EAE               	goto	u3351
  9600  16AD  2EAF               	goto	u3350
  9601  16AE                     u3351:
  9602  16AE  2F85               	goto	l2654
  9603  16AF                     u3350:
  9604  16AF                     l2606:
  9605  16AF  1C65               	btfss	___fladd@grs,0
  9606  16B0  2EB2               	goto	u3361
  9607  16B1  2EB3               	goto	u3360
  9608  16B2                     u3361:
  9609  16B2  2EBC               	goto	l2610
  9610  16B3                     u3360:
  9611  16B3                     l2608:
  9612  16B3  0865               	movf	___fladd@grs,w
  9613  16B4  00DA               	movwf	??___fladd
  9614  16B5  1003               	clrc
  9615  16B6  0C5A               	rrf	??___fladd,w
  9616  16B7  3801               	iorlw	1
  9617  16B8  00DB               	movwf	??___fladd+1
  9618  16B9  085B               	movf	??___fladd+1,w
  9619  16BA  00E5               	movwf	___fladd@grs
  9620  16BB  2EBE               	goto	l2612
  9621  16BC                     l2610:
  9622  16BC  1003               	clrc
  9623  16BD  0CE5               	rrf	___fladd@grs,f
  9624  16BE                     l2612:
  9625  16BE  1C52               	btfss	___fladd@b,0
  9626  16BF  2EC1               	goto	u3371
  9627  16C0  2EC2               	goto	u3370
  9628  16C1                     u3371:
  9629  16C1  2EC3               	goto	l2616
  9630  16C2                     u3370:
  9631  16C2                     l2614:
  9632  16C2  17E5               	bsf	___fladd@grs,7
  9633  16C3                     l2616:
  9634  16C3  3001               	movlw	1
  9635  16C4  00DA               	movwf	??___fladd
  9636  16C5                     u3385:
  9637  16C5  0D55               	rlf	___fladd@b+3,w
  9638  16C6  0CD5               	rrf	___fladd@b+3,f
  9639  16C7  0CD4               	rrf	___fladd@b+2,f
  9640  16C8  0CD3               	rrf	___fladd@b+1,f
  9641  16C9  0CD2               	rrf	___fladd@b,f
  9642  16CA  0BDA               	decfsz	??___fladd& (0+127),f
  9643  16CB  2EC5               	goto	u3385
  9644  16CC                     l2618:
  9645  16CC  3001               	movlw	1
  9646  16CD  00DA               	movwf	??___fladd
  9647  16CE  085A               	movf	??___fladd,w
  9648  16CF  07E4               	addwf	___fladd@bexp,f
  9649  16D0  2F85               	goto	l2654
  9650  16D1                     l2620:
  9651  16D1  0855               	movf	___fladd@b+3,w
  9652  16D2  3A80               	xorlw	128
  9653  16D3  00FF               	movwf	btemp+1
  9654  16D4  0859               	movf	___fladd@a+3,w
  9655  16D5  3A80               	xorlw	128
  9656  16D6  027F               	subwf	btemp+1,w
  9657  16D7  1D03               	skipz
  9658  16D8  2EE3               	goto	u3393
  9659  16D9  0858               	movf	___fladd@a+2,w
  9660  16DA  0254               	subwf	___fladd@b+2,w
  9661  16DB  1D03               	skipz
  9662  16DC  2EE3               	goto	u3393
  9663  16DD  0857               	movf	___fladd@a+1,w
  9664  16DE  0253               	subwf	___fladd@b+1,w
  9665  16DF  1D03               	skipz
  9666  16E0  2EE3               	goto	u3393
  9667  16E1  0856               	movf	___fladd@a,w
  9668  16E2  0252               	subwf	___fladd@b,w
  9669  16E3                     u3393:
  9670  16E3  1803               	skipnc
  9671  16E4  2EE6               	goto	u3391
  9672  16E5  2EE7               	goto	u3390
  9673  16E6                     u3391:
  9674  16E6  2F3F               	goto	l2630
  9675  16E7                     u3390:
  9676  16E7                     l2622:
  9677  16E7  30FF               	movlw	255
  9678  16E8  00DA               	movwf	??___fladd
  9679  16E9  30FF               	movlw	255
  9680  16EA  00DB               	movwf	??___fladd+1
  9681  16EB  30FF               	movlw	255
  9682  16EC  00DC               	movwf	??___fladd+2
  9683  16ED  30FF               	movlw	255
  9684  16EE  00DD               	movwf	??___fladd+3
  9685  16EF  0856               	movf	___fladd@a,w
  9686  16F0  00DE               	movwf	??___fladd+4
  9687  16F1  0857               	movf	___fladd@a+1,w
  9688  16F2  00DF               	movwf	??___fladd+5
  9689  16F3  0858               	movf	___fladd@a+2,w
  9690  16F4  00E0               	movwf	??___fladd+6
  9691  16F5  0859               	movf	___fladd@a+3,w
  9692  16F6  00E1               	movwf	??___fladd+7
  9693  16F7  0852               	movf	___fladd@b,w
  9694  16F8  02DE               	subwf	??___fladd+4,f
  9695  16F9  0853               	movf	___fladd@b+1,w
  9696  16FA  1C03               	skipc
  9697  16FB  0F53               	incfsz	___fladd@b+1,w
  9698  16FC  2EFE               	goto	u3401
  9699  16FD  2EFF               	goto	u3402
  9700  16FE                     u3401:
  9701  16FE  02DF               	subwf	??___fladd+5,f
  9702  16FF                     u3402:
  9703  16FF  0854               	movf	___fladd@b+2,w
  9704  1700  1C03               	skipc
  9705  1701  0F54               	incfsz	___fladd@b+2,w
  9706  1702  2F04               	goto	u3403
  9707  1703  2F05               	goto	u3404
  9708  1704                     u3403:
  9709  1704  02E0               	subwf	??___fladd+6,f
  9710  1705                     u3404:
  9711  1705  0855               	movf	___fladd@b+3,w
  9712  1706  1C03               	skipc
  9713  1707  0F55               	incfsz	___fladd@b+3,w
  9714  1708  2F0A               	goto	u3405
  9715  1709  2F0B               	goto	u3406
  9716  170A                     u3405:
  9717  170A  02E1               	subwf	??___fladd+7,f
  9718  170B                     u3406:
  9719  170B  085E               	movf	??___fladd+4,w
  9720  170C  07DA               	addwf	??___fladd,f
  9721  170D  085F               	movf	??___fladd+5,w
  9722  170E  1803               	skipnc
  9723  170F  0F5F               	incfsz	??___fladd+5,w
  9724  1710  2F12               	goto	u3410
  9725  1711  2F13               	goto	u3411
  9726  1712                     u3410:
  9727  1712  07DB               	addwf	??___fladd+1,f
  9728  1713                     u3411:
  9729  1713  0860               	movf	??___fladd+6,w
  9730  1714  1803               	skipnc
  9731  1715  0F60               	incfsz	??___fladd+6,w
  9732  1716  2F18               	goto	u3412
  9733  1717  2F19               	goto	u3413
  9734  1718                     u3412:
  9735  1718  07DC               	addwf	??___fladd+2,f
  9736  1719                     u3413:
  9737  1719  0861               	movf	??___fladd+7,w
  9738  171A  1803               	skipnc
  9739  171B  0A61               	incf	??___fladd+7,w
  9740  171C  07DD               	addwf	??___fladd+3,f
  9741  171D  085D               	movf	??___fladd+3,w
  9742  171E  00D5               	movwf	___fladd@b+3
  9743  171F  085C               	movf	??___fladd+2,w
  9744  1720  00D4               	movwf	___fladd@b+2
  9745  1721  085B               	movf	??___fladd+1,w
  9746  1722  00D3               	movwf	___fladd@b+1
  9747  1723  085A               	movf	??___fladd,w
  9748  1724  00D2               	movwf	___fladd@b
  9749  1725                     l2624:
  9750  1725  3080               	movlw	128
  9751  1726  00DA               	movwf	??___fladd
  9752  1727  085A               	movf	??___fladd,w
  9753  1728  06E2               	xorwf	___fladd@signs,f
  9754  1729  09E5               	comf	___fladd@grs,f
  9755  172A  0AE5               	incf	___fladd@grs,f
  9756  172B                     l2626:
  9757  172B  0865               	movf	___fladd@grs,w
  9758  172C  1D03               	btfss	3,2
  9759  172D  2F2F               	goto	u3421
  9760  172E  2F30               	goto	u3420
  9761  172F                     u3421:
  9762  172F  2F4D               	goto	l695
  9763  1730                     u3420:
  9764  1730                     l2628:
  9765  1730  3001               	movlw	1
  9766  1731  07D2               	addwf	___fladd@b,f
  9767  1732  3000               	movlw	0
  9768  1733  1803               	skipnc
  9769  1734  3001               	movlw	1
  9770  1735  07D3               	addwf	___fladd@b+1,f
  9771  1736  3000               	movlw	0
  9772  1737  1803               	skipnc
  9773  1738  3001               	movlw	1
  9774  1739  07D4               	addwf	___fladd@b+2,f
  9775  173A  3000               	movlw	0
  9776  173B  1803               	skipnc
  9777  173C  3001               	movlw	1
  9778  173D  07D5               	addwf	___fladd@b+3,f
  9779  173E  2F4D               	goto	l695
  9780  173F                     l2630:
  9781  173F  0856               	movf	___fladd@a,w
  9782  1740  02D2               	subwf	___fladd@b,f
  9783  1741  0857               	movf	___fladd@a+1,w
  9784  1742  1C03               	skipc
  9785  1743  0F57               	incfsz	___fladd@a+1,w
  9786  1744  02D3               	subwf	___fladd@b+1,f
  9787  1745  0858               	movf	___fladd@a+2,w
  9788  1746  1C03               	skipc
  9789  1747  0F58               	incfsz	___fladd@a+2,w
  9790  1748  02D4               	subwf	___fladd@b+2,f
  9791  1749  0859               	movf	___fladd@a+3,w
  9792  174A  1C03               	skipc
  9793  174B  0F59               	incfsz	___fladd@a+3,w
  9794  174C  02D5               	subwf	___fladd@b+3,f
  9795  174D                     l695:
  9796  174D  0855               	movf	___fladd@b+3,w
  9797  174E  0454               	iorwf	___fladd@b+2,w
  9798  174F  0453               	iorwf	___fladd@b+1,w
  9799  1750  0452               	iorwf	___fladd@b,w
  9800  1751  1D03               	skipz
  9801  1752  2F54               	goto	u3431
  9802  1753  2F55               	goto	u3430
  9803  1754                     u3431:
  9804  1754  2F81               	goto	l2652
  9805  1755                     u3430:
  9806  1755                     l2632:
  9807  1755  0865               	movf	___fladd@grs,w
  9808  1756  1D03               	btfss	3,2
  9809  1757  2F59               	goto	u3441
  9810  1758  2F5A               	goto	u3440
  9811  1759                     u3441:
  9812  1759  2F81               	goto	l2652
  9813  175A                     u3440:
  9814  175A                     l2634:
  9815  175A  3000               	movlw	0
  9816  175B  00D5               	movwf	?___fladd+3
  9817  175C  3000               	movlw	0
  9818  175D  00D4               	movwf	?___fladd+2
  9819  175E  3000               	movlw	0
  9820  175F  00D3               	movwf	?___fladd+1
  9821  1760  3000               	movlw	0
  9822  1761  00D2               	movwf	?___fladd
  9823  1762  2FFF               	goto	l687
  9824  1763                     l2638:
  9825  1763  3001               	movlw	1
  9826  1764  00DA               	movwf	??___fladd
  9827  1765                     u3455:
  9828  1765  1003               	clrc
  9829  1766  0DD2               	rlf	___fladd@b,f
  9830  1767  0DD3               	rlf	___fladd@b+1,f
  9831  1768  0DD4               	rlf	___fladd@b+2,f
  9832  1769  0DD5               	rlf	___fladd@b+3,f
  9833  176A  0BDA               	decfsz	??___fladd,f
  9834  176B  2F65               	goto	u3455
  9835  176C                     l2640:
  9836  176C  1FE5               	btfss	___fladd@grs,7
  9837  176D  2F6F               	goto	u3461
  9838  176E  2F70               	goto	u3460
  9839  176F                     u3461:
  9840  176F  2F71               	goto	l699
  9841  1770                     u3460:
  9842  1770                     l2642:
  9843  1770  1452               	bsf	___fladd@b,0
  9844  1771                     l699:
  9845  1771  1C65               	btfss	___fladd@grs,0
  9846  1772  2F74               	goto	u3471
  9847  1773  2F75               	goto	u3470
  9848  1774                     u3471:
  9849  1774  2F78               	goto	l2646
  9850  1775                     u3470:
  9851  1775                     l2644:
  9852  1775  1403               	setc
  9853  1776  0DE5               	rlf	___fladd@grs,f
  9854  1777  2F7A               	goto	l2648
  9855  1778                     l2646:
  9856  1778  1003               	clrc
  9857  1779  0DE5               	rlf	___fladd@grs,f
  9858  177A                     l2648:
  9859  177A  0864               	movf	___fladd@bexp,w
  9860  177B  1903               	btfsc	3,2
  9861  177C  2F7E               	goto	u3481
  9862  177D  2F7F               	goto	u3480
  9863  177E                     u3481:
  9864  177E  2F81               	goto	l2652
  9865  177F                     u3480:
  9866  177F                     l2650:
  9867  177F  3001               	movlw	1
  9868  1780  02E4               	subwf	___fladd@bexp,f
  9869  1781                     l2652:
  9870  1781  1FD4               	btfss	___fladd@b+2,7
  9871  1782  2F84               	goto	u3491
  9872  1783  2F85               	goto	u3490
  9873  1784                     u3491:
  9874  1784  2F63               	goto	l2638
  9875  1785                     u3490:
  9876  1785                     l2654:
  9877  1785  01E3               	clrf	___fladd@aexp
  9878  1786                     l2656:
  9879  1786  1FE5               	btfss	___fladd@grs,7
  9880  1787  2F89               	goto	u3501
  9881  1788  2F8A               	goto	u3500
  9882  1789                     u3501:
  9883  1789  2F98               	goto	l2664
  9884  178A                     u3500:
  9885  178A                     l2658:
  9886  178A  0865               	movf	___fladd@grs,w
  9887  178B  397F               	andlw	127
  9888  178C  1903               	btfsc	3,2
  9889  178D  2F8F               	goto	u3511
  9890  178E  2F90               	goto	u3510
  9891  178F                     u3511:
  9892  178F  2F93               	goto	l705
  9893  1790                     u3510:
  9894  1790                     l2660:
  9895  1790  01E3               	clrf	___fladd@aexp
  9896  1791  0AE3               	incf	___fladd@aexp,f
  9897  1792  2F98               	goto	l2664
  9898  1793                     l705:
  9899  1793  1C52               	btfss	___fladd@b,0
  9900  1794  2F96               	goto	u3521
  9901  1795  2F97               	goto	u3520
  9902  1796                     u3521:
  9903  1796  2F98               	goto	l2664
  9904  1797                     u3520:
  9905  1797  2F90               	goto	l2660
  9906  1798                     l2664:
  9907  1798  0863               	movf	___fladd@aexp,w
  9908  1799  1903               	btfsc	3,2
  9909  179A  2F9C               	goto	u3531
  9910  179B  2F9D               	goto	u3530
  9911  179C                     u3531:
  9912  179C  2FD1               	goto	l708
  9913  179D                     u3530:
  9914  179D                     l2666:
  9915  179D  3001               	movlw	1
  9916  179E  07D2               	addwf	___fladd@b,f
  9917  179F  3000               	movlw	0
  9918  17A0  1803               	skipnc
  9919  17A1  3001               	movlw	1
  9920  17A2  07D3               	addwf	___fladd@b+1,f
  9921  17A3  3000               	movlw	0
  9922  17A4  1803               	skipnc
  9923  17A5  3001               	movlw	1
  9924  17A6  07D4               	addwf	___fladd@b+2,f
  9925  17A7  3000               	movlw	0
  9926  17A8  1803               	skipnc
  9927  17A9  3001               	movlw	1
  9928  17AA  07D5               	addwf	___fladd@b+3,f
  9929  17AB                     l2668:
  9930  17AB  1C55               	btfss	___fladd@b+3,0
  9931  17AC  2FAE               	goto	u3541
  9932  17AD  2FAF               	goto	u3540
  9933  17AE                     u3541:
  9934  17AE  2FD1               	goto	l708
  9935  17AF                     u3540:
  9936  17AF                     l2670:
  9937  17AF  0852               	movf	___fladd@b,w
  9938  17B0  00DA               	movwf	??___fladd
  9939  17B1  0853               	movf	___fladd@b+1,w
  9940  17B2  00DB               	movwf	??___fladd+1
  9941  17B3  0854               	movf	___fladd@b+2,w
  9942  17B4  00DC               	movwf	??___fladd+2
  9943  17B5  0855               	movf	___fladd@b+3,w
  9944  17B6  00DD               	movwf	??___fladd+3
  9945  17B7  3001               	movlw	1
  9946  17B8  00DE               	movwf	??___fladd+4
  9947  17B9                     u3555:
  9948  17B9  0D5D               	rlf	??___fladd+3,w
  9949  17BA  0CDD               	rrf	??___fladd+3,f
  9950  17BB  0CDC               	rrf	??___fladd+2,f
  9951  17BC  0CDB               	rrf	??___fladd+1,f
  9952  17BD  0CDA               	rrf	??___fladd,f
  9953  17BE                     u3550:
  9954  17BE  0BDE               	decfsz	??___fladd+4,f
  9955  17BF  2FB9               	goto	u3555
  9956  17C0  085D               	movf	??___fladd+3,w
  9957  17C1  00D5               	movwf	___fladd@b+3
  9958  17C2  085C               	movf	??___fladd+2,w
  9959  17C3  00D4               	movwf	___fladd@b+2
  9960  17C4  085B               	movf	??___fladd+1,w
  9961  17C5  00D3               	movwf	___fladd@b+1
  9962  17C6  085A               	movf	??___fladd,w
  9963  17C7  00D2               	movwf	___fladd@b
  9964  17C8  0A64               	incf	___fladd@bexp,w
  9965  17C9  1903               	btfsc	3,2
  9966  17CA  2FCC               	goto	u3561
  9967  17CB  2FCD               	goto	u3560
  9968  17CC                     u3561:
  9969  17CC  2FD1               	goto	l708
  9970  17CD                     u3560:
  9971  17CD                     l2672:
  9972  17CD  3001               	movlw	1
  9973  17CE  00DA               	movwf	??___fladd
  9974  17CF  085A               	movf	??___fladd,w
  9975  17D0  07E4               	addwf	___fladd@bexp,f
  9976  17D1                     l708:
  9977  17D1  0A64               	incf	___fladd@bexp,w
  9978  17D2  1903               	btfsc	3,2
  9979  17D3  2FD5               	goto	u3571
  9980  17D4  2FD6               	goto	u3570
  9981  17D5                     u3571:
  9982  17D5  2FDB               	goto	l2676
  9983  17D6                     u3570:
  9984  17D6                     l2674:
  9985  17D6  0864               	movf	___fladd@bexp,w
  9986  17D7  1D03               	btfss	3,2
  9987  17D8  2FDA               	goto	u3581
  9988  17D9  2FDB               	goto	u3580
  9989  17DA                     u3581:
  9990  17DA  2FE9               	goto	l2682
  9991  17DB                     u3580:
  9992  17DB                     l2676:
  9993  17DB  3000               	movlw	0
  9994  17DC  00D5               	movwf	___fladd@b+3
  9995  17DD  3000               	movlw	0
  9996  17DE  00D4               	movwf	___fladd@b+2
  9997  17DF  3000               	movlw	0
  9998  17E0  00D3               	movwf	___fladd@b+1
  9999  17E1  3000               	movlw	0
 10000  17E2  00D2               	movwf	___fladd@b
 10001  17E3                     l2678:
 10002  17E3  0864               	movf	___fladd@bexp,w
 10003  17E4  1D03               	btfss	3,2
 10004  17E5  2FE7               	goto	u3591
 10005  17E6  2FE8               	goto	u3590
 10006  17E7                     u3591:
 10007  17E7  2FE9               	goto	l2682
 10008  17E8                     u3590:
 10009  17E8                     l2680:
 10010  17E8  01E2               	clrf	___fladd@signs
 10011  17E9                     l2682:
 10012  17E9  1C64               	btfss	___fladd@bexp,0
 10013  17EA  2FEC               	goto	u3601
 10014  17EB  2FED               	goto	u3600
 10015  17EC                     u3601:
 10016  17EC  2FEF               	goto	l2686
 10017  17ED                     u3600:
 10018  17ED                     l2684:
 10019  17ED  17D4               	bsf	___fladd@b+2,7
 10020  17EE  2FF3               	goto	l716
 10021  17EF                     l2686:
 10022  17EF  307F               	movlw	127
 10023  17F0  00DA               	movwf	??___fladd
 10024  17F1  085A               	movf	??___fladd,w
 10025  17F2  05D4               	andwf	___fladd@b+2,f
 10026  17F3                     l716:
 10027  17F3  0864               	movf	___fladd@bexp,w
 10028  17F4  00DA               	movwf	??___fladd
 10029  17F5  1003               	clrc
 10030  17F6  0C5A               	rrf	??___fladd,w
 10031  17F7  00DB               	movwf	??___fladd+1
 10032  17F8  085B               	movf	??___fladd+1,w
 10033  17F9  00D5               	movwf	___fladd@b+3
 10034  17FA                     l2688:
 10035  17FA  1FE2               	btfss	___fladd@signs,7
 10036  17FB  2FFD               	goto	u3611
 10037  17FC  2FFE               	goto	u3610
 10038  17FD                     u3611:
 10039  17FD  2FFF               	goto	l717
 10040  17FE                     u3610:
 10041  17FE                     l2690:
 10042  17FE  17D5               	bsf	___fladd@b+3,7
 10043  17FF                     l717:
 10044  17FF                     l687:
 10045  17FF  0008               	return
 10046  1800                     __end_of___fladd:
 10047                           
 10048                           	psect	text24
 10049  1907                     __ptext24:	
 10050 ;; *************** function ___flneg *****************
 10051 ;; Defined at:
 10052 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\flneg.c"
 10053 ;; Parameters:    Size  Location     Type
 10054 ;;  f1              4    0[COMMON] unsigned char 
 10055 ;; Auto vars:     Size  Location     Type
 10056 ;;		None
 10057 ;; Return value:  Size  Location     Type
 10058 ;;                  4    0[COMMON] unsigned char 
 10059 ;; Registers used:
 10060 ;;		wreg
 10061 ;; Tracked objects:
 10062 ;;		On entry : 0/0
 10063 ;;		On exit  : 0/0
 10064 ;;		Unchanged: 0/0
 10065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10066 ;;      Params:         4       0       0       0       0
 10067 ;;      Locals:         0       0       0       0       0
 10068 ;;      Temps:          0       0       0       0       0
 10069 ;;      Totals:         4       0       0       0       0
 10070 ;;Total ram usage:        4 bytes
 10071 ;; Hardware stack levels used: 1
 10072 ;; This function calls:
 10073 ;;		Nothing
 10074 ;; This function is called by:
 10075 ;;		_sprintf
 10076 ;; This function uses a non-reentrant model
 10077 ;;
 10078                           
 10079                           
 10080                           ;psect for function ___flneg
 10081  1907                     ___flneg:
 10082  1907                     l3106:	
 10083                           ;incstack = 0
 10084                           ; Regs used in ___flneg: [wreg]
 10085                           
 10086  1907  0873               	movf	___flneg@f1+3,w
 10087  1908  0472               	iorwf	___flneg@f1+2,w
 10088  1909  0471               	iorwf	___flneg@f1+1,w
 10089  190A  0470               	iorwf	___flneg@f1,w
 10090  190B  1903               	skipnz
 10091  190C  290E               	goto	u4741
 10092  190D  290F               	goto	u4740
 10093  190E                     u4741:
 10094  190E  2911               	goto	l3110
 10095  190F                     u4740:
 10096  190F                     l3108:
 10097  190F  3080               	movlw	128
 10098  1910  06F3               	xorwf	___flneg@f1+3,f
 10099  1911                     l3110:
 10100  1911                     l546:
 10101  1911  0008               	return
 10102  1912                     __end_of___flneg:
 10103                           
 10104                           	psect	text25
 10105  10C1                     __ptext25:	
 10106 ;; *************** function ___flge *****************
 10107 ;; Defined at:
 10108 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\flge.c"
 10109 ;; Parameters:    Size  Location     Type
 10110 ;;  ff1             4    0[COMMON] unsigned char 
 10111 ;;  ff2             4    4[COMMON] unsigned char 
 10112 ;; Auto vars:     Size  Location     Type
 10113 ;;		None
 10114 ;; Return value:  Size  Location     Type
 10115 ;;		None               void
 10116 ;; Registers used:
 10117 ;;		wreg, status,2, status,0
 10118 ;; Tracked objects:
 10119 ;;		On entry : 0/0
 10120 ;;		On exit  : 0/0
 10121 ;;		Unchanged: 0/0
 10122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10123 ;;      Params:         8       0       0       0       0
 10124 ;;      Locals:         0       0       0       0       0
 10125 ;;      Temps:          4       0       0       0       0
 10126 ;;      Totals:        12       0       0       0       0
 10127 ;;Total ram usage:       12 bytes
 10128 ;; Hardware stack levels used: 1
 10129 ;; This function calls:
 10130 ;;		Nothing
 10131 ;; This function is called by:
 10132 ;;		_main
 10133 ;;		_sprintf
 10134 ;; This function uses a non-reentrant model
 10135 ;;
 10136                           
 10137                           
 10138                           ;psect for function ___flge
 10139  10C1                     ___flge:
 10140  10C1                     l3086:	
 10141                           ;incstack = 0
 10142                           ; Regs used in ___flge: [wreg+status,2+status,0]
 10143                           
 10144  10C1  3000               	movlw	0
 10145  10C2  0570               	andwf	___flge@ff1,w
 10146  10C3  00F8               	movwf	??___flge
 10147  10C4  3000               	movlw	0
 10148  10C5  0571               	andwf	___flge@ff1+1,w
 10149  10C6  00F9               	movwf	??___flge+1
 10150  10C7  3080               	movlw	128
 10151  10C8  0572               	andwf	___flge@ff1+2,w
 10152  10C9  00FA               	movwf	??___flge+2
 10153  10CA  307F               	movlw	127
 10154  10CB  0573               	andwf	___flge@ff1+3,w
 10155  10CC  00FB               	movwf	??___flge+3
 10156  10CD  087B               	movf	??___flge+3,w
 10157  10CE  047A               	iorwf	??___flge+2,w
 10158  10CF  0479               	iorwf	??___flge+1,w
 10159  10D0  0478               	iorwf	??___flge,w
 10160  10D1  1D03               	skipz
 10161  10D2  28D4               	goto	u4671
 10162  10D3  28D5               	goto	u4670
 10163  10D4                     u4671:
 10164  10D4  28DD               	goto	l538
 10165  10D5                     u4670:
 10166  10D5                     l3088:
 10167  10D5  3000               	movlw	0
 10168  10D6  00F3               	movwf	___flge@ff1+3
 10169  10D7  3000               	movlw	0
 10170  10D8  00F2               	movwf	___flge@ff1+2
 10171  10D9  3000               	movlw	0
 10172  10DA  00F1               	movwf	___flge@ff1+1
 10173  10DB  3000               	movlw	0
 10174  10DC  00F0               	movwf	___flge@ff1
 10175  10DD                     l538:
 10176  10DD  3000               	movlw	0
 10177  10DE  0574               	andwf	___flge@ff2,w
 10178  10DF  00F8               	movwf	??___flge
 10179  10E0  3000               	movlw	0
 10180  10E1  0575               	andwf	___flge@ff2+1,w
 10181  10E2  00F9               	movwf	??___flge+1
 10182  10E3  3080               	movlw	128
 10183  10E4  0576               	andwf	___flge@ff2+2,w
 10184  10E5  00FA               	movwf	??___flge+2
 10185  10E6  307F               	movlw	127
 10186  10E7  0577               	andwf	___flge@ff2+3,w
 10187  10E8  00FB               	movwf	??___flge+3
 10188  10E9  087B               	movf	??___flge+3,w
 10189  10EA  047A               	iorwf	??___flge+2,w
 10190  10EB  0479               	iorwf	??___flge+1,w
 10191  10EC  0478               	iorwf	??___flge,w
 10192  10ED  1D03               	skipz
 10193  10EE  28F0               	goto	u4681
 10194  10EF  28F1               	goto	u4680
 10195  10F0                     u4681:
 10196  10F0  28F9               	goto	l3092
 10197  10F1                     u4680:
 10198  10F1                     l3090:
 10199  10F1  3000               	movlw	0
 10200  10F2  00F7               	movwf	___flge@ff2+3
 10201  10F3  3000               	movlw	0
 10202  10F4  00F6               	movwf	___flge@ff2+2
 10203  10F5  3000               	movlw	0
 10204  10F6  00F5               	movwf	___flge@ff2+1
 10205  10F7  3000               	movlw	0
 10206  10F8  00F4               	movwf	___flge@ff2
 10207  10F9                     l3092:
 10208  10F9  1FF3               	btfss	___flge@ff1+3,7
 10209  10FA  28FC               	goto	u4691
 10210  10FB  28FD               	goto	u4690
 10211  10FC                     u4691:
 10212  10FC  2921               	goto	l3096
 10213  10FD                     u4690:
 10214  10FD                     l3094:
 10215  10FD  3000               	movlw	0
 10216  10FE  00F8               	movwf	??___flge
 10217  10FF  3000               	movlw	0
 10218  1100  00F9               	movwf	??___flge+1
 10219  1101  3000               	movlw	0
 10220  1102  00FA               	movwf	??___flge+2
 10221  1103  3080               	movlw	128
 10222  1104  00FB               	movwf	??___flge+3
 10223  1105  0870               	movf	___flge@ff1,w
 10224  1106  02F8               	subwf	??___flge,f
 10225  1107  0871               	movf	___flge@ff1+1,w
 10226  1108  1C03               	skipc
 10227  1109  0F71               	incfsz	___flge@ff1+1,w
 10228  110A  290C               	goto	u4701
 10229  110B  290D               	goto	u4702
 10230  110C                     u4701:
 10231  110C  02F9               	subwf	??___flge+1,f
 10232  110D                     u4702:
 10233  110D  0872               	movf	___flge@ff1+2,w
 10234  110E  1C03               	skipc
 10235  110F  0F72               	incfsz	___flge@ff1+2,w
 10236  1110  2912               	goto	u4703
 10237  1111  2913               	goto	u4704
 10238  1112                     u4703:
 10239  1112  02FA               	subwf	??___flge+2,f
 10240  1113                     u4704:
 10241  1113  0873               	movf	___flge@ff1+3,w
 10242  1114  1C03               	skipc
 10243  1115  0F73               	incfsz	___flge@ff1+3,w
 10244  1116  2918               	goto	u4705
 10245  1117  2919               	goto	u4706
 10246  1118                     u4705:
 10247  1118  02FB               	subwf	??___flge+3,f
 10248  1119                     u4706:
 10249  1119  087B               	movf	??___flge+3,w
 10250  111A  00F3               	movwf	___flge@ff1+3
 10251  111B  087A               	movf	??___flge+2,w
 10252  111C  00F2               	movwf	___flge@ff1+2
 10253  111D  0879               	movf	??___flge+1,w
 10254  111E  00F1               	movwf	___flge@ff1+1
 10255  111F  0878               	movf	??___flge,w
 10256  1120  00F0               	movwf	___flge@ff1
 10257  1121                     l3096:
 10258  1121  1FF7               	btfss	___flge@ff2+3,7
 10259  1122  2924               	goto	u4711
 10260  1123  2925               	goto	u4710
 10261  1124                     u4711:
 10262  1124  2949               	goto	l541
 10263  1125                     u4710:
 10264  1125                     l3098:
 10265  1125  3000               	movlw	0
 10266  1126  00F8               	movwf	??___flge
 10267  1127  3000               	movlw	0
 10268  1128  00F9               	movwf	??___flge+1
 10269  1129  3000               	movlw	0
 10270  112A  00FA               	movwf	??___flge+2
 10271  112B  3080               	movlw	128
 10272  112C  00FB               	movwf	??___flge+3
 10273  112D  0874               	movf	___flge@ff2,w
 10274  112E  02F8               	subwf	??___flge,f
 10275  112F  0875               	movf	___flge@ff2+1,w
 10276  1130  1C03               	skipc
 10277  1131  0F75               	incfsz	___flge@ff2+1,w
 10278  1132  2934               	goto	u4721
 10279  1133  2935               	goto	u4722
 10280  1134                     u4721:
 10281  1134  02F9               	subwf	??___flge+1,f
 10282  1135                     u4722:
 10283  1135  0876               	movf	___flge@ff2+2,w
 10284  1136  1C03               	skipc
 10285  1137  0F76               	incfsz	___flge@ff2+2,w
 10286  1138  293A               	goto	u4723
 10287  1139  293B               	goto	u4724
 10288  113A                     u4723:
 10289  113A  02FA               	subwf	??___flge+2,f
 10290  113B                     u4724:
 10291  113B  0877               	movf	___flge@ff2+3,w
 10292  113C  1C03               	skipc
 10293  113D  0F77               	incfsz	___flge@ff2+3,w
 10294  113E  2940               	goto	u4725
 10295  113F  2941               	goto	u4726
 10296  1140                     u4725:
 10297  1140  02FB               	subwf	??___flge+3,f
 10298  1141                     u4726:
 10299  1141  087B               	movf	??___flge+3,w
 10300  1142  00F7               	movwf	___flge@ff2+3
 10301  1143  087A               	movf	??___flge+2,w
 10302  1144  00F6               	movwf	___flge@ff2+2
 10303  1145  0879               	movf	??___flge+1,w
 10304  1146  00F5               	movwf	___flge@ff2+1
 10305  1147  0878               	movf	??___flge,w
 10306  1148  00F4               	movwf	___flge@ff2
 10307  1149                     l541:
 10308  1149  3080               	movlw	128
 10309  114A  06F3               	xorwf	___flge@ff1+3,f
 10310  114B  3080               	movlw	128
 10311  114C  06F7               	xorwf	___flge@ff2+3,f
 10312  114D  0877               	movf	___flge@ff2+3,w
 10313  114E  0273               	subwf	___flge@ff1+3,w
 10314  114F  1D03               	skipz
 10315  1150  295B               	goto	u4735
 10316  1151  0876               	movf	___flge@ff2+2,w
 10317  1152  0272               	subwf	___flge@ff1+2,w
 10318  1153  1D03               	skipz
 10319  1154  295B               	goto	u4735
 10320  1155  0875               	movf	___flge@ff2+1,w
 10321  1156  0271               	subwf	___flge@ff1+1,w
 10322  1157  1D03               	skipz
 10323  1158  295B               	goto	u4735
 10324  1159  0874               	movf	___flge@ff2,w
 10325  115A  0270               	subwf	___flge@ff1,w
 10326  115B                     u4735:
 10327  115B  1803               	skipnc
 10328  115C  295E               	goto	u4731
 10329  115D  295F               	goto	u4730
 10330  115E                     u4731:
 10331  115E  2961               	goto	l3102
 10332  115F                     u4730:
 10333  115F                     l3100:
 10334  115F  1003               	clrc
 10335  1160  2962               	goto	l542
 10336  1161                     l3102:
 10337  1161  1403               	setc
 10338  1162                     l542:
 10339  1162  0008               	return
 10340  1163                     __end_of___flge:
 10341                           
 10342                           	psect	text26
 10343  1B28                     __ptext26:	
 10344 ;; *************** function ___fleq *****************
 10345 ;; Defined at:
 10346 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fleq.c"
 10347 ;; Parameters:    Size  Location     Type
 10348 ;;  ff1             4    0[COMMON] unsigned char 
 10349 ;;  ff2             4    4[COMMON] unsigned char 
 10350 ;; Auto vars:     Size  Location     Type
 10351 ;;		None
 10352 ;; Return value:  Size  Location     Type
 10353 ;;		None               void
 10354 ;; Registers used:
 10355 ;;		wreg, status,2, status,0
 10356 ;; Tracked objects:
 10357 ;;		On entry : 0/0
 10358 ;;		On exit  : 0/0
 10359 ;;		Unchanged: 0/0
 10360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10361 ;;      Params:         8       0       0       0       0
 10362 ;;      Locals:         0       0       0       0       0
 10363 ;;      Temps:          4       0       0       0       0
 10364 ;;      Totals:        12       0       0       0       0
 10365 ;;Total ram usage:       12 bytes
 10366 ;; Hardware stack levels used: 1
 10367 ;; This function calls:
 10368 ;;		Nothing
 10369 ;; This function is called by:
 10370 ;;		_sprintf
 10371 ;; This function uses a non-reentrant model
 10372 ;;
 10373                           
 10374                           
 10375                           ;psect for function ___fleq
 10376  1B28                     ___fleq:
 10377  1B28                     l3074:	
 10378                           ;incstack = 0
 10379                           ; Regs used in ___fleq: [wreg+status,2+status,0]
 10380                           
 10381  1B28  3000               	movlw	0
 10382  1B29  0570               	andwf	___fleq@ff1,w
 10383  1B2A  00F8               	movwf	??___fleq
 10384  1B2B  3000               	movlw	0
 10385  1B2C  0571               	andwf	___fleq@ff1+1,w
 10386  1B2D  00F9               	movwf	??___fleq+1
 10387  1B2E  3080               	movlw	128
 10388  1B2F  0572               	andwf	___fleq@ff1+2,w
 10389  1B30  00FA               	movwf	??___fleq+2
 10390  1B31  307F               	movlw	127
 10391  1B32  0573               	andwf	___fleq@ff1+3,w
 10392  1B33  00FB               	movwf	??___fleq+3
 10393  1B34  087B               	movf	??___fleq+3,w
 10394  1B35  047A               	iorwf	??___fleq+2,w
 10395  1B36  0479               	iorwf	??___fleq+1,w
 10396  1B37  0478               	iorwf	??___fleq,w
 10397  1B38  1D03               	skipz
 10398  1B39  2B3B               	goto	u4641
 10399  1B3A  2B3C               	goto	u4640
 10400  1B3B                     u4641:
 10401  1B3B  2B44               	goto	l533
 10402  1B3C                     u4640:
 10403  1B3C                     l3076:
 10404  1B3C  3000               	movlw	0
 10405  1B3D  00F3               	movwf	___fleq@ff1+3
 10406  1B3E  3000               	movlw	0
 10407  1B3F  00F2               	movwf	___fleq@ff1+2
 10408  1B40  3000               	movlw	0
 10409  1B41  00F1               	movwf	___fleq@ff1+1
 10410  1B42  3000               	movlw	0
 10411  1B43  00F0               	movwf	___fleq@ff1
 10412  1B44                     l533:
 10413  1B44  3000               	movlw	0
 10414  1B45  0574               	andwf	___fleq@ff2,w
 10415  1B46  00F8               	movwf	??___fleq
 10416  1B47  3000               	movlw	0
 10417  1B48  0575               	andwf	___fleq@ff2+1,w
 10418  1B49  00F9               	movwf	??___fleq+1
 10419  1B4A  3080               	movlw	128
 10420  1B4B  0576               	andwf	___fleq@ff2+2,w
 10421  1B4C  00FA               	movwf	??___fleq+2
 10422  1B4D  307F               	movlw	127
 10423  1B4E  0577               	andwf	___fleq@ff2+3,w
 10424  1B4F  00FB               	movwf	??___fleq+3
 10425  1B50  087B               	movf	??___fleq+3,w
 10426  1B51  047A               	iorwf	??___fleq+2,w
 10427  1B52  0479               	iorwf	??___fleq+1,w
 10428  1B53  0478               	iorwf	??___fleq,w
 10429  1B54  1D03               	skipz
 10430  1B55  2B57               	goto	u4651
 10431  1B56  2B58               	goto	u4650
 10432  1B57                     u4651:
 10433  1B57  2B60               	goto	l534
 10434  1B58                     u4650:
 10435  1B58                     l3078:
 10436  1B58  3000               	movlw	0
 10437  1B59  00F7               	movwf	___fleq@ff2+3
 10438  1B5A  3000               	movlw	0
 10439  1B5B  00F6               	movwf	___fleq@ff2+2
 10440  1B5C  3000               	movlw	0
 10441  1B5D  00F5               	movwf	___fleq@ff2+1
 10442  1B5E  3000               	movlw	0
 10443  1B5F  00F4               	movwf	___fleq@ff2
 10444  1B60                     l534:
 10445  1B60  0877               	movf	___fleq@ff2+3,w
 10446  1B61  0673               	xorwf	___fleq@ff1+3,w
 10447  1B62  1D03               	skipz
 10448  1B63  2B6E               	goto	u4665
 10449  1B64  0876               	movf	___fleq@ff2+2,w
 10450  1B65  0672               	xorwf	___fleq@ff1+2,w
 10451  1B66  1D03               	skipz
 10452  1B67  2B6E               	goto	u4665
 10453  1B68  0875               	movf	___fleq@ff2+1,w
 10454  1B69  0671               	xorwf	___fleq@ff1+1,w
 10455  1B6A  1D03               	skipz
 10456  1B6B  2B6E               	goto	u4665
 10457  1B6C  0874               	movf	___fleq@ff2,w
 10458  1B6D  0670               	xorwf	___fleq@ff1,w
 10459  1B6E                     u4665:
 10460  1B6E  1903               	skipnz
 10461  1B6F  2B71               	goto	u4661
 10462  1B70  2B72               	goto	u4660
 10463  1B71                     u4661:
 10464  1B71  2B74               	goto	l3082
 10465  1B72                     u4660:
 10466  1B72                     l3080:
 10467  1B72  1003               	clrc
 10468  1B73  2B75               	goto	l535
 10469  1B74                     l3082:
 10470  1B74  1403               	setc
 10471  1B75                     l535:
 10472  1B75  0008               	return
 10473  1B76                     __end_of___fleq:
 10474                           
 10475                           	psect	text27
 10476  1AA2                     __ptext27:	
 10477 ;; *************** function _Lcd_Write_String *****************
 10478 ;; Defined at:
 10479 ;;		line 97 in file "./lcd.h"
 10480 ;; Parameters:    Size  Location     Type
 10481 ;;  a               2    5[COMMON] PTR unsigned char 
 10482 ;;		 -> buffer6(20), STR_13(4), buffer5(20), STR_11(4), 
 10483 ;;		 -> buffer4(20), STR_9(4), buffer3(20), STR_7(4), 
 10484 ;;		 -> buffer2(20), STR_5(3), buffer1(20), STR_3(3), 
 10485 ;;		 -> buffer0(20), STR_1(3), 
 10486 ;; Auto vars:     Size  Location     Type
 10487 ;;  i               2   10[COMMON] int 
 10488 ;; Return value:  Size  Location     Type
 10489 ;;                  1    wreg      void 
 10490 ;; Registers used:
 10491 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10492 ;; Tracked objects:
 10493 ;;		On entry : 0/0
 10494 ;;		On exit  : 0/0
 10495 ;;		Unchanged: 0/0
 10496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10497 ;;      Params:         2       0       0       0       0
 10498 ;;      Locals:         2       0       0       0       0
 10499 ;;      Temps:          3       0       0       0       0
 10500 ;;      Totals:         7       0       0       0       0
 10501 ;;Total ram usage:        7 bytes
 10502 ;; Hardware stack levels used: 1
 10503 ;; Hardware stack levels required when called: 2
 10504 ;; This function calls:
 10505 ;;		_Lcd_Write_Char
 10506 ;; This function is called by:
 10507 ;;		_atualizaLCD
 10508 ;; This function uses a non-reentrant model
 10509 ;;
 10510                           
 10511                           
 10512                           ;psect for function _Lcd_Write_String
 10513  1AA2                     _Lcd_Write_String:
 10514  1AA2                     l3242:	
 10515                           ;incstack = 0
 10516                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10517                           
 10518                           
 10519                           ;./lcd.h: 97: void Lcd_Write_String(char *a);./lcd.h: 98: {;./lcd.h: 99:  int i;;./lcd.h
      +                          : 100:  for(i=0;a[i]!='\0';i++)
 10520  1AA2  01FA               	clrf	Lcd_Write_String@i
 10521  1AA3  01FB               	clrf	Lcd_Write_String@i+1
 10522  1AA4  2AC7               	goto	l3248
 10523  1AA5                     l3244:
 10524                           
 10525                           ;./lcd.h: 101:     Lcd_Write_Char(a[i]);
 10526  1AA5  087A               	movf	Lcd_Write_String@i,w
 10527  1AA6  0775               	addwf	Lcd_Write_String@a,w
 10528  1AA7  00F8               	movwf	??_Lcd_Write_String+1
 10529  1AA8  0876               	movf	Lcd_Write_String@a+1,w
 10530  1AA9  00F7               	movwf	??_Lcd_Write_String
 10531  1AAA  1803               	skipnc
 10532  1AAB  0AF7               	incf	??_Lcd_Write_String,f
 10533  1AAC  1FFA               	btfss	Lcd_Write_String@i,7
 10534  1AAD  2AAF               	goto	u5090
 10535  1AAE  03F7               	decf	??_Lcd_Write_String,f
 10536  1AAF                     u5090:
 10537  1AAF  0877               	movf	??_Lcd_Write_String,w
 10538  1AB0  00F9               	movwf	??_Lcd_Write_String+2
 10539  1AB1  0879               	movf	??_Lcd_Write_String+2,w
 10540  1AB2  1283               	bcf	3,5	;RP0=0, select bank0
 10541  1AB3  1303               	bcf	3,6	;RP1=0, select bank0
 10542  1AB4  00FF               	movwf	btemp+1
 10543  1AB5  0878               	movf	??_Lcd_Write_String+1,w
 10544  1AB6  0084               	movwf	4
 10545  1AB7  160A  118A  2000  160A  158A  	fcall	stringtab
 10546  1ABC  160A  158A  2231  160A  158A  	fcall	_Lcd_Write_Char
 10547  1AC1                     l3246:
 10548  1AC1  3001               	movlw	1
 10549  1AC2  07FA               	addwf	Lcd_Write_String@i,f
 10550  1AC3  1803               	skipnc
 10551  1AC4  0AFB               	incf	Lcd_Write_String@i+1,f
 10552  1AC5  3000               	movlw	0
 10553  1AC6  07FB               	addwf	Lcd_Write_String@i+1,f
 10554  1AC7                     l3248:
 10555  1AC7  087A               	movf	Lcd_Write_String@i,w
 10556  1AC8  0775               	addwf	Lcd_Write_String@a,w
 10557  1AC9  00F8               	movwf	??_Lcd_Write_String+1
 10558  1ACA  0876               	movf	Lcd_Write_String@a+1,w
 10559  1ACB  00F7               	movwf	??_Lcd_Write_String
 10560  1ACC  1803               	skipnc
 10561  1ACD  0AF7               	incf	??_Lcd_Write_String,f
 10562  1ACE  1FFA               	btfss	Lcd_Write_String@i,7
 10563  1ACF  2AD1               	goto	u5100
 10564  1AD0  03F7               	decf	??_Lcd_Write_String,f
 10565  1AD1                     u5100:
 10566  1AD1  0877               	movf	??_Lcd_Write_String,w
 10567  1AD2  00F9               	movwf	??_Lcd_Write_String+2
 10568  1AD3  0879               	movf	??_Lcd_Write_String+2,w
 10569  1AD4  1283               	bcf	3,5	;RP0=0, select bank0
 10570  1AD5  1303               	bcf	3,6	;RP1=0, select bank0
 10571  1AD6  00FF               	movwf	btemp+1
 10572  1AD7  0878               	movf	??_Lcd_Write_String+1,w
 10573  1AD8  0084               	movwf	4
 10574  1AD9  160A  118A  2000  160A  158A  	fcall	stringtab
 10575  1ADE  3A00               	xorlw	0
 10576  1ADF  1D03               	skipz
 10577  1AE0  2AE2               	goto	u5111
 10578  1AE1  2AE3               	goto	u5110
 10579  1AE2                     u5111:
 10580  1AE2  2AA5               	goto	l3244
 10581  1AE3                     u5110:
 10582  1AE3                     l107:
 10583  1AE3  0008               	return
 10584  1AE4                     __end_of_Lcd_Write_String:
 10585                           
 10586                           	psect	text28
 10587  1A31                     __ptext28:	
 10588 ;; *************** function _Lcd_Write_Char *****************
 10589 ;; Defined at:
 10590 ;;		line 81 in file "./lcd.h"
 10591 ;; Parameters:    Size  Location     Type
 10592 ;;  a               1    wreg     unsigned char 
 10593 ;; Auto vars:     Size  Location     Type
 10594 ;;  a               1    4[COMMON] unsigned char 
 10595 ;;  y               1    3[COMMON] unsigned char 
 10596 ;;  temp            1    2[COMMON] unsigned char 
 10597 ;; Return value:  Size  Location     Type
 10598 ;;                  1    wreg      void 
 10599 ;; Registers used:
 10600 ;;		wreg, status,2, status,0, pclath, cstack
 10601 ;; Tracked objects:
 10602 ;;		On entry : 0/0
 10603 ;;		On exit  : 0/0
 10604 ;;		Unchanged: 0/0
 10605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10606 ;;      Params:         0       0       0       0       0
 10607 ;;      Locals:         3       0       0       0       0
 10608 ;;      Temps:          1       0       0       0       0
 10609 ;;      Totals:         4       0       0       0       0
 10610 ;;Total ram usage:        4 bytes
 10611 ;; Hardware stack levels used: 1
 10612 ;; Hardware stack levels required when called: 1
 10613 ;; This function calls:
 10614 ;;		_Lcd_Port
 10615 ;; This function is called by:
 10616 ;;		_Lcd_Write_String
 10617 ;; This function uses a non-reentrant model
 10618 ;;
 10619                           
 10620                           
 10621                           ;psect for function _Lcd_Write_Char
 10622  1A31                     _Lcd_Write_Char:
 10623                           
 10624                           ;incstack = 0
 10625                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 10626                           ;Lcd_Write_Char@a stored from wreg
 10627  1A31  00F4               	movwf	Lcd_Write_Char@a
 10628  1A32                     l2842:
 10629                           
 10630                           ;./lcd.h: 81: void Lcd_Write_Char(char a);./lcd.h: 82: {;./lcd.h: 83:    char temp,y;;./
      +                          lcd.h: 84:    temp = a&0x0F;
 10631  1A32  0874               	movf	Lcd_Write_Char@a,w
 10632  1A33  390F               	andlw	15
 10633  1A34  00F1               	movwf	??_Lcd_Write_Char
 10634  1A35  0871               	movf	??_Lcd_Write_Char,w
 10635  1A36  00F2               	movwf	Lcd_Write_Char@temp
 10636                           
 10637                           ;./lcd.h: 85:    y = a&0xF0;
 10638  1A37  0874               	movf	Lcd_Write_Char@a,w
 10639  1A38  39F0               	andlw	240
 10640  1A39  00F1               	movwf	??_Lcd_Write_Char
 10641  1A3A  0871               	movf	??_Lcd_Write_Char,w
 10642  1A3B  00F3               	movwf	Lcd_Write_Char@y
 10643  1A3C                     l2844:
 10644                           
 10645                           ;./lcd.h: 86:    RB2 = 1;
 10646  1A3C  1283               	bcf	3,5	;RP0=0, select bank0
 10647  1A3D  1303               	bcf	3,6	;RP1=0, select bank0
 10648  1A3E  1506               	bsf	6,2	;volatile
 10649  1A3F                     l2846:
 10650                           
 10651                           ;./lcd.h: 87:    Lcd_Port(y>>4);
 10652  1A3F  0873               	movf	Lcd_Write_Char@y,w
 10653  1A40  00F1               	movwf	??_Lcd_Write_Char
 10654  1A41  3004               	movlw	4
 10655  1A42                     u3995:
 10656  1A42  1003               	clrc
 10657  1A43  0CF1               	rrf	??_Lcd_Write_Char,f
 10658  1A44  3EFF               	addlw	-1
 10659  1A45  1D03               	skipz
 10660  1A46  2A42               	goto	u3995
 10661  1A47  0871               	movf	??_Lcd_Write_Char,w
 10662  1A48  160A  158A  2139  160A  158A  	fcall	_Lcd_Port
 10663  1A4D                     l2848:
 10664                           
 10665                           ;./lcd.h: 88:    RB1 = 1;
 10666  1A4D  1283               	bcf	3,5	;RP0=0, select bank0
 10667  1A4E  1303               	bcf	3,6	;RP1=0, select bank0
 10668  1A4F  1486               	bsf	6,1	;volatile
 10669  1A50                     l2850:
 10670                           
 10671                           ;./lcd.h: 89:    _delay((unsigned long)((40)*(4000000/4000000.0)));
 10672  1A50  300D               	movlw	13
 10673  1A51  00F1               	movwf	??_Lcd_Write_Char
 10674  1A52                     u5757:
 10675  1A52  0BF1               	decfsz	??_Lcd_Write_Char,f
 10676  1A53  2A52               	goto	u5757
 10677  1A54                     l2852:
 10678                           
 10679                           ;./lcd.h: 90:    RB1 = 0;
 10680  1A54  1283               	bcf	3,5	;RP0=0, select bank0
 10681  1A55  1303               	bcf	3,6	;RP1=0, select bank0
 10682  1A56  1086               	bcf	6,1	;volatile
 10683  1A57                     l2854:
 10684                           
 10685                           ;./lcd.h: 91:    Lcd_Port(temp);
 10686  1A57  0872               	movf	Lcd_Write_Char@temp,w
 10687  1A58  160A  158A  2139  160A  158A  	fcall	_Lcd_Port
 10688  1A5D                     l2856:
 10689                           
 10690                           ;./lcd.h: 92:    RB1 = 1;
 10691  1A5D  1283               	bcf	3,5	;RP0=0, select bank0
 10692  1A5E  1303               	bcf	3,6	;RP1=0, select bank0
 10693  1A5F  1486               	bsf	6,1	;volatile
 10694  1A60                     l2858:
 10695                           
 10696                           ;./lcd.h: 93:    _delay((unsigned long)((40)*(4000000/4000000.0)));
 10697  1A60  300D               	movlw	13
 10698  1A61  00F1               	movwf	??_Lcd_Write_Char
 10699  1A62                     u5767:
 10700  1A62  0BF1               	decfsz	??_Lcd_Write_Char,f
 10701  1A63  2A62               	goto	u5767
 10702  1A64                     l2860:
 10703                           
 10704                           ;./lcd.h: 94:    RB1 = 0;
 10705  1A64  1283               	bcf	3,5	;RP0=0, select bank0
 10706  1A65  1303               	bcf	3,6	;RP1=0, select bank0
 10707  1A66  1086               	bcf	6,1	;volatile
 10708  1A67                     l101:
 10709  1A67  0008               	return
 10710  1A68                     __end_of_Lcd_Write_Char:
 10711                           
 10712                           	psect	text29
 10713  0003                     __ptext29:	
 10714 ;; *************** function _Lcd_Set_Cursor *****************
 10715 ;; Defined at:
 10716 ;;		line 41 in file "./lcd.h"
 10717 ;; Parameters:    Size  Location     Type
 10718 ;;  a               1    wreg     unsigned char 
 10719 ;;  b               1    4[COMMON] unsigned char 
 10720 ;; Auto vars:     Size  Location     Type
 10721 ;;  a               1    7[COMMON] unsigned char 
 10722 ;;  temp            1   10[COMMON] unsigned char 
 10723 ;;  y               1    9[COMMON] unsigned char 
 10724 ;;  z               1    8[COMMON] unsigned char 
 10725 ;; Return value:  Size  Location     Type
 10726 ;;                  1    wreg      void 
 10727 ;; Registers used:
 10728 ;;		wreg, status,2, status,0, pclath, cstack
 10729 ;; Tracked objects:
 10730 ;;		On entry : 0/0
 10731 ;;		On exit  : 0/0
 10732 ;;		Unchanged: 0/0
 10733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10734 ;;      Params:         1       0       0       0       0
 10735 ;;      Locals:         4       0       0       0       0
 10736 ;;      Temps:          2       0       0       0       0
 10737 ;;      Totals:         7       0       0       0       0
 10738 ;;Total ram usage:        7 bytes
 10739 ;; Hardware stack levels used: 1
 10740 ;; Hardware stack levels required when called: 2
 10741 ;; This function calls:
 10742 ;;		_Lcd_Cmd
 10743 ;; This function is called by:
 10744 ;;		_atualizaLCD
 10745 ;; This function uses a non-reentrant model
 10746 ;;
 10747                           
 10748                           
 10749                           ;psect for function _Lcd_Set_Cursor
 10750  0003                     _Lcd_Set_Cursor:
 10751                           
 10752                           ;incstack = 0
 10753                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 10754                           ;Lcd_Set_Cursor@a stored from wreg
 10755  0003  00F7               	movwf	Lcd_Set_Cursor@a
 10756  0004                     l3222:
 10757                           
 10758                           ;./lcd.h: 41: void Lcd_Set_Cursor(char a, char b);./lcd.h: 42: {;./lcd.h: 43:  char temp
      +                          ,z,y;;./lcd.h: 44:  if(a == 1)
 10759  0004  0377               	decf	Lcd_Set_Cursor@a,w
 10760  0005  1D03               	btfss	3,2
 10761  0006  2808               	goto	u5051
 10762  0007  2809               	goto	u5050
 10763  0008                     u5051:
 10764  0008  282C               	goto	l3232
 10765  0009                     u5050:
 10766  0009                     l3224:
 10767                           
 10768                           ;./lcd.h: 45:  {;./lcd.h: 46:    temp = 0x80 + b - 1;
 10769  0009  0874               	movf	Lcd_Set_Cursor@b,w
 10770  000A  3E7F               	addlw	127
 10771  000B  00F5               	movwf	??_Lcd_Set_Cursor
 10772  000C  0875               	movf	??_Lcd_Set_Cursor,w
 10773  000D  00FA               	movwf	Lcd_Set_Cursor@temp
 10774                           
 10775                           ;./lcd.h: 47:   z = temp>>4;
 10776  000E  087A               	movf	Lcd_Set_Cursor@temp,w
 10777  000F  00F5               	movwf	??_Lcd_Set_Cursor
 10778  0010  3004               	movlw	4
 10779  0011                     u5065:
 10780  0011  1003               	clrc
 10781  0012  0CF5               	rrf	??_Lcd_Set_Cursor,f
 10782  0013  3EFF               	addlw	-1
 10783  0014  1D03               	skipz
 10784  0015  2811               	goto	u5065
 10785  0016  0875               	movf	??_Lcd_Set_Cursor,w
 10786  0017  00F6               	movwf	??_Lcd_Set_Cursor+1
 10787  0018  0876               	movf	??_Lcd_Set_Cursor+1,w
 10788  0019  00F8               	movwf	Lcd_Set_Cursor@z
 10789  001A                     l3226:
 10790                           
 10791                           ;./lcd.h: 48:   y = temp & 0x0F;
 10792  001A  087A               	movf	Lcd_Set_Cursor@temp,w
 10793  001B  390F               	andlw	15
 10794  001C  00F5               	movwf	??_Lcd_Set_Cursor
 10795  001D  0875               	movf	??_Lcd_Set_Cursor,w
 10796  001E  00F9               	movwf	Lcd_Set_Cursor@y
 10797  001F                     l3228:
 10798                           
 10799                           ;./lcd.h: 49:   Lcd_Cmd(z);
 10800  001F  0878               	movf	Lcd_Set_Cursor@z,w
 10801  0020  160A  158A  211F  120A  118A  	fcall	_Lcd_Cmd
 10802  0025                     l3230:
 10803                           
 10804                           ;./lcd.h: 50:   Lcd_Cmd(y);
 10805  0025  0879               	movf	Lcd_Set_Cursor@y,w
 10806  0026  160A  158A  211F  120A  118A  	fcall	_Lcd_Cmd
 10807                           
 10808                           ;./lcd.h: 51:  }
 10809  002B  2854               	goto	l95
 10810  002C                     l3232:
 10811  002C  3002               	movlw	2
 10812  002D  0677               	xorwf	Lcd_Set_Cursor@a,w
 10813  002E  1D03               	btfss	3,2
 10814  002F  2831               	goto	u5071
 10815  0030  2832               	goto	u5070
 10816  0031                     u5071:
 10817  0031  2854               	goto	l95
 10818  0032                     u5070:
 10819  0032                     l3234:
 10820                           
 10821                           ;./lcd.h: 53:  {;./lcd.h: 54:   temp = 0xC0 + b - 1;
 10822  0032  0874               	movf	Lcd_Set_Cursor@b,w
 10823  0033  3EBF               	addlw	191
 10824  0034  00F5               	movwf	??_Lcd_Set_Cursor
 10825  0035  0875               	movf	??_Lcd_Set_Cursor,w
 10826  0036  00FA               	movwf	Lcd_Set_Cursor@temp
 10827                           
 10828                           ;./lcd.h: 55:   z = temp>>4;
 10829  0037  087A               	movf	Lcd_Set_Cursor@temp,w
 10830  0038  00F5               	movwf	??_Lcd_Set_Cursor
 10831  0039  3004               	movlw	4
 10832  003A                     u5085:
 10833  003A  1003               	clrc
 10834  003B  0CF5               	rrf	??_Lcd_Set_Cursor,f
 10835  003C  3EFF               	addlw	-1
 10836  003D  1D03               	skipz
 10837  003E  283A               	goto	u5085
 10838  003F  0875               	movf	??_Lcd_Set_Cursor,w
 10839  0040  00F6               	movwf	??_Lcd_Set_Cursor+1
 10840  0041  0876               	movf	??_Lcd_Set_Cursor+1,w
 10841  0042  00F8               	movwf	Lcd_Set_Cursor@z
 10842  0043                     l3236:
 10843                           
 10844                           ;./lcd.h: 56:   y = temp & 0x0F;
 10845  0043  087A               	movf	Lcd_Set_Cursor@temp,w
 10846  0044  390F               	andlw	15
 10847  0045  00F5               	movwf	??_Lcd_Set_Cursor
 10848  0046  0875               	movf	??_Lcd_Set_Cursor,w
 10849  0047  00F9               	movwf	Lcd_Set_Cursor@y
 10850  0048                     l3238:
 10851                           
 10852                           ;./lcd.h: 57:   Lcd_Cmd(z);
 10853  0048  0878               	movf	Lcd_Set_Cursor@z,w
 10854  0049  160A  158A  211F  120A  118A  	fcall	_Lcd_Cmd
 10855  004E                     l3240:
 10856                           
 10857                           ;./lcd.h: 58:   Lcd_Cmd(y);
 10858  004E  0879               	movf	Lcd_Set_Cursor@y,w
 10859  004F  160A  158A  211F  120A  118A  	fcall	_Lcd_Cmd
 10860  0054                     l95:
 10861  0054  0008               	return
 10862  0055                     __end_of_Lcd_Set_Cursor:
 10863                           
 10864                           	psect	text30
 10865  1912                     __ptext30:	
 10866 ;; *************** function _Lcd_Clear *****************
 10867 ;; Defined at:
 10868 ;;		line 35 in file "./lcd.h"
 10869 ;; Parameters:    Size  Location     Type
 10870 ;;		None
 10871 ;; Auto vars:     Size  Location     Type
 10872 ;;		None
 10873 ;; Return value:  Size  Location     Type
 10874 ;;                  1    wreg      void 
 10875 ;; Registers used:
 10876 ;;		wreg, status,2, status,0, pclath, cstack
 10877 ;; Tracked objects:
 10878 ;;		On entry : 0/0
 10879 ;;		On exit  : 0/0
 10880 ;;		Unchanged: 0/0
 10881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10882 ;;      Params:         0       0       0       0       0
 10883 ;;      Locals:         0       0       0       0       0
 10884 ;;      Temps:          0       0       0       0       0
 10885 ;;      Totals:         0       0       0       0       0
 10886 ;;Total ram usage:        0 bytes
 10887 ;; Hardware stack levels used: 1
 10888 ;; Hardware stack levels required when called: 2
 10889 ;; This function calls:
 10890 ;;		_Lcd_Cmd
 10891 ;; This function is called by:
 10892 ;;		_atualizaLCD
 10893 ;; This function uses a non-reentrant model
 10894 ;;
 10895                           
 10896                           
 10897                           ;psect for function _Lcd_Clear
 10898  1912                     _Lcd_Clear:
 10899  1912                     l3220:	
 10900                           ;incstack = 0
 10901                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
 10902                           
 10903                           
 10904                           ;./lcd.h: 37:  Lcd_Cmd(0);
 10905  1912  3000               	movlw	0
 10906  1913  160A  158A  211F  160A  158A  	fcall	_Lcd_Cmd
 10907                           
 10908                           ;./lcd.h: 38:  Lcd_Cmd(1);
 10909  1918  3001               	movlw	1
 10910  1919  160A  158A  211F  160A  158A  	fcall	_Lcd_Cmd
 10911  191E                     l89:
 10912  191E  0008               	return
 10913  191F                     __end_of_Lcd_Clear:
 10914                           
 10915                           	psect	text31
 10916  1C23                     __ptext31:	
 10917 ;; *************** function _Lcd_Init *****************
 10918 ;; Defined at:
 10919 ;;		line 62 in file "./lcd.h"
 10920 ;; Parameters:    Size  Location     Type
 10921 ;;		None
 10922 ;; Auto vars:     Size  Location     Type
 10923 ;;		None
 10924 ;; Return value:  Size  Location     Type
 10925 ;;                  1    wreg      void 
 10926 ;; Registers used:
 10927 ;;		wreg, status,2, status,0, pclath, cstack
 10928 ;; Tracked objects:
 10929 ;;		On entry : 0/0
 10930 ;;		On exit  : 0/0
 10931 ;;		Unchanged: 0/0
 10932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10933 ;;      Params:         0       0       0       0       0
 10934 ;;      Locals:         0       0       0       0       0
 10935 ;;      Temps:          2       0       0       0       0
 10936 ;;      Totals:         2       0       0       0       0
 10937 ;;Total ram usage:        2 bytes
 10938 ;; Hardware stack levels used: 1
 10939 ;; Hardware stack levels required when called: 2
 10940 ;; This function calls:
 10941 ;;		_Lcd_Cmd
 10942 ;;		_Lcd_Port
 10943 ;; This function is called by:
 10944 ;;		_main
 10945 ;; This function uses a non-reentrant model
 10946 ;;
 10947                           
 10948                           
 10949                           ;psect for function _Lcd_Init
 10950  1C23                     _Lcd_Init:
 10951  1C23                     l3456:	
 10952                           ;incstack = 0
 10953                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
 10954                           
 10955                           
 10956                           ;./lcd.h: 64:   Lcd_Port(0x00);
 10957  1C23  3000               	movlw	0
 10958  1C24  160A  158A  2139  160A  158A  	fcall	_Lcd_Port
 10959  1C29                     l3458:
 10960                           
 10961                           ;./lcd.h: 65:    _delay((unsigned long)((20)*(4000000/4000.0)));
 10962  1C29  301A               	movlw	26
 10963  1C2A  00F5               	movwf	??_Lcd_Init+1
 10964  1C2B  30F8               	movlw	248
 10965  1C2C  00F4               	movwf	??_Lcd_Init
 10966  1C2D                     u5777:
 10967  1C2D  0BF4               	decfsz	??_Lcd_Init,f
 10968  1C2E  2C2D               	goto	u5777
 10969  1C2F  0BF5               	decfsz	??_Lcd_Init+1,f
 10970  1C30  2C2D               	goto	u5777
 10971  1C31  0000               	nop
 10972  1C32                     l3460:
 10973                           
 10974                           ;./lcd.h: 66:   Lcd_Cmd(0x03);
 10975  1C32  3003               	movlw	3
 10976  1C33  160A  158A  211F  160A  158A  	fcall	_Lcd_Cmd
 10977                           
 10978                           ;./lcd.h: 67:  _delay((unsigned long)((5)*(4000000/4000.0)));
 10979  1C38  3007               	movlw	7
 10980  1C39  00F5               	movwf	??_Lcd_Init+1
 10981  1C3A  307D               	movlw	125
 10982  1C3B  00F4               	movwf	??_Lcd_Init
 10983  1C3C                     u5787:
 10984  1C3C  0BF4               	decfsz	??_Lcd_Init,f
 10985  1C3D  2C3C               	goto	u5787
 10986  1C3E  0BF5               	decfsz	??_Lcd_Init+1,f
 10987  1C3F  2C3C               	goto	u5787
 10988  1C40                     l3462:
 10989                           
 10990                           ;./lcd.h: 68:   Lcd_Cmd(0x03);
 10991  1C40  3003               	movlw	3
 10992  1C41  160A  158A  211F  160A  158A  	fcall	_Lcd_Cmd
 10993  1C46                     l3464:
 10994                           
 10995                           ;./lcd.h: 69:  _delay((unsigned long)((11)*(4000000/4000.0)));
 10996  1C46  300F               	movlw	15
 10997  1C47  00F5               	movwf	??_Lcd_Init+1
 10998  1C48  3047               	movlw	71
 10999  1C49  00F4               	movwf	??_Lcd_Init
 11000  1C4A                     u5797:
 11001  1C4A  0BF4               	decfsz	??_Lcd_Init,f
 11002  1C4B  2C4A               	goto	u5797
 11003  1C4C  0BF5               	decfsz	??_Lcd_Init+1,f
 11004  1C4D  2C4A               	goto	u5797
 11005  1C4E  2C4F               	nop2
 11006                           
 11007                           ;./lcd.h: 70:   Lcd_Cmd(0x03);
 11008  1C4F  3003               	movlw	3
 11009  1C50  160A  158A  211F  160A  158A  	fcall	_Lcd_Cmd
 11010                           
 11011                           ;./lcd.h: 72:   Lcd_Cmd(0x02);
 11012  1C55  3002               	movlw	2
 11013  1C56  160A  158A  211F  160A  158A  	fcall	_Lcd_Cmd
 11014                           
 11015                           ;./lcd.h: 73:   Lcd_Cmd(0x02);
 11016  1C5B  3002               	movlw	2
 11017  1C5C  160A  158A  211F  160A  158A  	fcall	_Lcd_Cmd
 11018                           
 11019                           ;./lcd.h: 74:   Lcd_Cmd(0x08);
 11020  1C61  3008               	movlw	8
 11021  1C62  160A  158A  211F  160A  158A  	fcall	_Lcd_Cmd
 11022                           
 11023                           ;./lcd.h: 75:   Lcd_Cmd(0x00);
 11024  1C67  3000               	movlw	0
 11025  1C68  160A  158A  211F  160A  158A  	fcall	_Lcd_Cmd
 11026                           
 11027                           ;./lcd.h: 76:   Lcd_Cmd(0x0C);
 11028  1C6D  300C               	movlw	12
 11029  1C6E  160A  158A  211F  160A  158A  	fcall	_Lcd_Cmd
 11030                           
 11031                           ;./lcd.h: 77:   Lcd_Cmd(0x00);
 11032  1C73  3000               	movlw	0
 11033  1C74  160A  158A  211F  160A  158A  	fcall	_Lcd_Cmd
 11034                           
 11035                           ;./lcd.h: 78:   Lcd_Cmd(0x06);
 11036  1C79  3006               	movlw	6
 11037  1C7A  160A  158A  211F  160A  158A  	fcall	_Lcd_Cmd
 11038  1C7F                     l98:
 11039  1C7F  0008               	return
 11040  1C80                     __end_of_Lcd_Init:
 11041                           
 11042                           	psect	text32
 11043  191F                     __ptext32:	
 11044 ;; *************** function _Lcd_Cmd *****************
 11045 ;; Defined at:
 11046 ;;		line 26 in file "./lcd.h"
 11047 ;; Parameters:    Size  Location     Type
 11048 ;;  a               1    wreg     unsigned char 
 11049 ;; Auto vars:     Size  Location     Type
 11050 ;;  a               1    3[COMMON] unsigned char 
 11051 ;; Return value:  Size  Location     Type
 11052 ;;                  1    wreg      void 
 11053 ;; Registers used:
 11054 ;;		wreg, status,2, status,0, pclath, cstack
 11055 ;; Tracked objects:
 11056 ;;		On entry : 0/0
 11057 ;;		On exit  : 0/0
 11058 ;;		Unchanged: 0/0
 11059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11060 ;;      Params:         0       0       0       0       0
 11061 ;;      Locals:         1       0       0       0       0
 11062 ;;      Temps:          2       0       0       0       0
 11063 ;;      Totals:         3       0       0       0       0
 11064 ;;Total ram usage:        3 bytes
 11065 ;; Hardware stack levels used: 1
 11066 ;; Hardware stack levels required when called: 1
 11067 ;; This function calls:
 11068 ;;		_Lcd_Port
 11069 ;; This function is called by:
 11070 ;;		_Lcd_Clear
 11071 ;;		_Lcd_Set_Cursor
 11072 ;;		_Lcd_Init
 11073 ;;		_Lcd_Shift_Right
 11074 ;;		_Lcd_Shift_Left
 11075 ;; This function uses a non-reentrant model
 11076 ;;
 11077                           
 11078                           
 11079                           ;psect for function _Lcd_Cmd
 11080  191F                     _Lcd_Cmd:
 11081                           
 11082                           ;incstack = 0
 11083                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
 11084                           ;Lcd_Cmd@a stored from wreg
 11085  191F  00F3               	movwf	Lcd_Cmd@a
 11086  1920                     l2832:
 11087                           
 11088                           ;./lcd.h: 26: void Lcd_Cmd(char a);./lcd.h: 27: {;./lcd.h: 28:  RB2 = 0;
 11089  1920  1283               	bcf	3,5	;RP0=0, select bank0
 11090  1921  1303               	bcf	3,6	;RP1=0, select bank0
 11091  1922  1106               	bcf	6,2	;volatile
 11092  1923                     l2834:
 11093                           
 11094                           ;./lcd.h: 29:  Lcd_Port(a);
 11095  1923  0873               	movf	Lcd_Cmd@a,w
 11096  1924  160A  158A  2139  160A  158A  	fcall	_Lcd_Port
 11097  1929                     l2836:
 11098                           
 11099                           ;./lcd.h: 30:  RB1 = 1;
 11100  1929  1283               	bcf	3,5	;RP0=0, select bank0
 11101  192A  1303               	bcf	3,6	;RP1=0, select bank0
 11102  192B  1486               	bsf	6,1	;volatile
 11103  192C                     l2838:
 11104                           
 11105                           ;./lcd.h: 31:         _delay((unsigned long)((4)*(4000000/4000.0)));
 11106  192C  3006               	movlw	6
 11107  192D  00F2               	movwf	??_Lcd_Cmd+1
 11108  192E  3030               	movlw	48
 11109  192F  00F1               	movwf	??_Lcd_Cmd
 11110  1930                     u5807:
 11111  1930  0BF1               	decfsz	??_Lcd_Cmd,f
 11112  1931  2930               	goto	u5807
 11113  1932  0BF2               	decfsz	??_Lcd_Cmd+1,f
 11114  1933  2930               	goto	u5807
 11115  1934  0000               	nop
 11116  1935                     l2840:
 11117                           
 11118                           ;./lcd.h: 32:         RB1 = 0;
 11119  1935  1283               	bcf	3,5	;RP0=0, select bank0
 11120  1936  1303               	bcf	3,6	;RP1=0, select bank0
 11121  1937  1086               	bcf	6,1	;volatile
 11122  1938                     l86:
 11123  1938  0008               	return
 11124  1939                     __end_of_Lcd_Cmd:
 11125                           
 11126                           	psect	text33
 11127  1939                     __ptext33:	
 11128 ;; *************** function _Lcd_Port *****************
 11129 ;; Defined at:
 11130 ;;		line 4 in file "./lcd.h"
 11131 ;; Parameters:    Size  Location     Type
 11132 ;;  a               1    wreg     unsigned char 
 11133 ;; Auto vars:     Size  Location     Type
 11134 ;;  a               1    0[COMMON] unsigned char 
 11135 ;; Return value:  Size  Location     Type
 11136 ;;                  1    wreg      void 
 11137 ;; Registers used:
 11138 ;;		wreg
 11139 ;; Tracked objects:
 11140 ;;		On entry : 0/0
 11141 ;;		On exit  : 0/0
 11142 ;;		Unchanged: 0/0
 11143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11144 ;;      Params:         0       0       0       0       0
 11145 ;;      Locals:         1       0       0       0       0
 11146 ;;      Temps:          0       0       0       0       0
 11147 ;;      Totals:         1       0       0       0       0
 11148 ;;Total ram usage:        1 bytes
 11149 ;; Hardware stack levels used: 1
 11150 ;; This function calls:
 11151 ;;		Nothing
 11152 ;; This function is called by:
 11153 ;;		_Lcd_Cmd
 11154 ;;		_Lcd_Init
 11155 ;;		_Lcd_Write_Char
 11156 ;; This function uses a non-reentrant model
 11157 ;;
 11158                           
 11159                           
 11160                           ;psect for function _Lcd_Port
 11161  1939                     _Lcd_Port:
 11162                           
 11163                           ;incstack = 0
 11164                           ; Regs used in _Lcd_Port: [wreg]
 11165                           ;Lcd_Port@a stored from wreg
 11166  1939  00F0               	movwf	Lcd_Port@a
 11167  193A                     l2358:
 11168                           
 11169                           ;./lcd.h: 4: void Lcd_Port(char a);./lcd.h: 5: {;./lcd.h: 6:  if(a & 1)
 11170  193A  1C70               	btfss	Lcd_Port@a,0
 11171  193B  293D               	goto	u2801
 11172  193C  293E               	goto	u2800
 11173  193D                     u2801:
 11174  193D  2942               	goto	l75
 11175  193E                     u2800:
 11176  193E                     l2360:
 11177                           
 11178                           ;./lcd.h: 7:   RB4 = 1;
 11179  193E  1283               	bcf	3,5	;RP0=0, select bank0
 11180  193F  1303               	bcf	3,6	;RP1=0, select bank0
 11181  1940  1606               	bsf	6,4	;volatile
 11182  1941  2945               	goto	l76
 11183  1942                     l75:	
 11184                           ;./lcd.h: 8:  else
 11185                           
 11186                           
 11187                           ;./lcd.h: 9:   RB4 = 0;
 11188  1942  1283               	bcf	3,5	;RP0=0, select bank0
 11189  1943  1303               	bcf	3,6	;RP1=0, select bank0
 11190  1944  1206               	bcf	6,4	;volatile
 11191  1945                     l76:
 11192                           
 11193                           ;./lcd.h: 11:  if(a & 2)
 11194  1945  1CF0               	btfss	Lcd_Port@a,1
 11195  1946  2948               	goto	u2811
 11196  1947  2949               	goto	u2810
 11197  1948                     u2811:
 11198  1948  294B               	goto	l77
 11199  1949                     u2810:
 11200  1949                     l2362:
 11201                           
 11202                           ;./lcd.h: 12:   RB5 = 1;
 11203  1949  1686               	bsf	6,5	;volatile
 11204  194A  294C               	goto	l78
 11205  194B                     l77:	
 11206                           ;./lcd.h: 13:  else
 11207                           
 11208                           
 11209                           ;./lcd.h: 14:   RB5 = 0;
 11210  194B  1286               	bcf	6,5	;volatile
 11211  194C                     l78:
 11212                           
 11213                           ;./lcd.h: 16:  if(a & 4)
 11214  194C  1D70               	btfss	Lcd_Port@a,2
 11215  194D  294F               	goto	u2821
 11216  194E  2950               	goto	u2820
 11217  194F                     u2821:
 11218  194F  2952               	goto	l79
 11219  1950                     u2820:
 11220  1950                     l2364:
 11221                           
 11222                           ;./lcd.h: 17:   RB6 = 1;
 11223  1950  1706               	bsf	6,6	;volatile
 11224  1951  2953               	goto	l80
 11225  1952                     l79:	
 11226                           ;./lcd.h: 18:  else
 11227                           
 11228                           
 11229                           ;./lcd.h: 19:   RB6 = 0;
 11230  1952  1306               	bcf	6,6	;volatile
 11231  1953                     l80:
 11232                           
 11233                           ;./lcd.h: 21:  if(a & 8)
 11234  1953  1DF0               	btfss	Lcd_Port@a,3
 11235  1954  2956               	goto	u2831
 11236  1955  2957               	goto	u2830
 11237  1956                     u2831:
 11238  1956  2959               	goto	l81
 11239  1957                     u2830:
 11240  1957                     l2366:
 11241                           
 11242                           ;./lcd.h: 22:   RB7 = 1;
 11243  1957  1786               	bsf	6,7	;volatile
 11244  1958  295A               	goto	l83
 11245  1959                     l81:	
 11246                           ;./lcd.h: 23:  else
 11247                           
 11248                           
 11249                           ;./lcd.h: 24:   RB7 = 0;
 11250  1959  1386               	bcf	6,7	;volatile
 11251  195A                     l83:
 11252  195A  0008               	return
 11253  195B                     __end_of_Lcd_Port:
 11254  007E                     btemp	set	126	;btemp
 11255  007E                     wtemp0	set	126
 11256                           
 11257                           	psect	config
 11258                           
 11259                           ;Config register CONFIG @ 0x2007
 11260                           ;	Oscillator Selection bits
 11261                           ;	FOSC = HS, HS oscillator
 11262                           ;	Watchdog Timer Enable bit
 11263                           ;	WDTE = OFF, WDT disabled
 11264                           ;	Power-up Timer Enable bit
 11265                           ;	PWRTE = ON, PWRT enabled
 11266                           ;	Brown-out Reset Enable bit
 11267                           ;	BOREN = ON, BOR enabled
 11268                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
 11269                           ;	LVP = 0x1, unprogrammed default
 11270                           ;	Data EEPROM Memory Code Protection bit
 11271                           ;	CPD = 0x1, unprogrammed default
 11272                           ;	Flash Program Memory Write Enable bits
 11273                           ;	WRT = 0x3, unprogrammed default
 11274                           ;	In-Circuit Debugger Mode bit
 11275                           ;	DEBUG = 0x1, unprogrammed default
 11276                           ;	Flash Program Memory Code Protection bit
 11277                           ;	CP = 0x1, unprogrammed default
 11278  2007                     	org	8199
 11279  2007  3FF2               	dw	16370

Data Sizes:
    Strings     30
    Constant    144
    Data        0
    BSS         168
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     38      66
    BANK3            96      0      80
    BANK2            96      0      60

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_14(CODE[5]), STR_12(CODE[5]), STR_10(CODE[5]), STR_8(CODE[5]), 
		 -> STR_6(CODE[5]), STR_4(CODE[5]), STR_2(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> buffer6(BANK2[20]), buffer5(BANK2[20]), buffer4(BANK2[20]), buffer3(BANK3[20]), 
		 -> buffer2(BANK3[20]), buffer1(BANK3[20]), buffer0(BANK3[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> buffer6(BANK2[20]), STR_13(CODE[4]), buffer5(BANK2[20]), STR_11(CODE[4]), 
		 -> buffer4(BANK2[20]), STR_9(CODE[4]), buffer3(BANK3[20]), STR_7(CODE[4]), 
		 -> buffer2(BANK3[20]), STR_5(CODE[3]), buffer1(BANK3[20]), STR_3(CODE[3]), 
		 -> buffer0(BANK3[20]), STR_1(CODE[3]), 


Critical Paths under _main in COMMON

    _lerSensores->___xxtofl
    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___flsub->___xxtofl
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_atualizaLCD
    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround

Critical Paths under _main in BANK1

    _atualizaLCD->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   38236
                                             35 BANK1      3     3      0
                           _Lcd_Init
                             ___flge
                        _atualizaLCD
                        _expandeTela
                        _lerSensores
                        _recolheTela
 ---------------------------------------------------------------------------------
 (1) _recolheTela                                          3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _lerSensores                                          4     4      0     930
                                              0 BANK0      4     4      0
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _expandeTela                                          3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _atualizaLCD                                          2     2      0   35406
                                             78 BANK0      2     2      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             42    37      5   32520
                                              0 BANK1     35    30      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               19    15      4    7408
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              20    16      4    5871
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    4393
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     930
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                             10     2      8     615
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             11     7      4     457
                                             49 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    2485
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    2288
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8    1702
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2    1332
                                              5 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       7     6      1    1444
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   ___flge
   _atualizaLCD
     _Lcd_Clear
       _Lcd_Cmd
     _Lcd_Set_Cursor
       _Lcd_Cmd
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
           ___lwmod
       ___fleq
       ___flge
       ___flmul
       ___flneg
       ___flsub
         ___fladd
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
         _scale (ARG)
           ___awdiv
           ___awmod
           ___flmul
       ___lldiv
       ___llmod
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
       _isdigit
       _scale
   _expandeTela
   _lerSensores
     ___xxtofl
   _recolheTela

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0     12C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     26      42       7       82.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0      50       9       83.3%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0      3C      11       62.5%
DATA                 0      0     12C      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed May 05 21:30:51 2021

                        pc 0002                         l80 1953                         l81 1959  
                       l83 195A                         l75 1942                         l76 1945  
                       l77 194B                         l78 194C                         l86 1938  
                       l79 1952                         l95 0054                         l89 191E  
                       l98 1C7F               ___awdiv@sign 0021                         fsr 0004  
      ___wmul@multiplicand 0072        __Umul8_16@word_mpld 0076                        l101 1A67  
                      l107 1AE3                        l322 05EF                        l162 1A30  
                      l147 0855                        l500 1D4E                        l165 19FD  
                      l149 087B                        l270 1577                        l343 07E1  
                      l159 0189                        l168 136C                        l521 1FC2  
                      l513 1C22                        l337 079A                        l329 0633  
                      l603 1BC9                        l347 198B                        l533 1B44  
                      l541 1149                        l349 19A3                        l517 1FFF  
                      l277 0C9E                        l534 1B60                        l542 1162  
                      l550 1DCA                        l518 1F64                        l535 1B75  
                      l383 1CE5                        l720 197E                        l560 1DCA  
                      l528 1FF2                        l296 01FB                        l705 1793  
                      l538 10DD                        l546 1911                        l716 17F3  
                      l708 17D1                        l820 1E32                        l564 1F41  
                      l717 17FF                        l557 1DB5                        l565 1EB3  
                      l653 1B27                        l814 1DED                        l575 1F34  
                      l663 1AA1                        l680 1659                        l816 1E84  
                      l568 1F04                        l674 15DB                        l770 0FFF  
                      l834 0813                        l827 1E4E                        l828 1E5A  
                      l678 1682                        l782 0FF3                        l695 174D  
                      l687 17FF                        l791 19CA                        l776 0F6B  
                      l699 1771                        l789 19B8                        _RB1 0031  
                      _RB2 0032                        _RC0 0038                        _RC1 0039  
                      _RB4 0034                        _RD0 0040                        _RC2 003A  
                      _RB5 0035                        _RD1 0041                        _RC3 003B  
                      _RB6 0036                        _RC4 003C                        _RD2 0042  
                      _RB7 0037                        _RC5 003D                        _RD3 0043  
                      _RC6 003E                        _RD4 0044                        _RC7 003F  
                      _RD5 0045                        _RD6 0046                        _RD7 0047  
                      fsr0 0004                        indf 0000               ___awmod@sign 0076  
             ?_atualizaLCD 0070               ___flmul@aexp 0036               ___flmul@bexp 0037  
              _sprintf$932 00AA               ___flmul@sign 0031               ___flmul@temp 003C  
             ___flmul@prod 0038               ___fltol@exp1 005B                       l3000 1F7E  
                     l3010 1FB2                       l3002 1F80                       l3100 115F  
                     l3012 1FB3                       l3004 1F89                       l3102 1161  
                     l3110 1911                       l3030 1FE7                       l3022 1FCE  
                     l3014 1FBC                       l3006 1F92                       l3120 1D65  
                     l3040 1985                       l3200 1E39                       l3032 1FF7  
                     l3016 1FC6                       l3024 1FE0                       l3008 1FA4  
                     l2400 1D33                       l3106 1907                       l3130 1D89  
                     l3122 1D7A                       l3114 1D4F                       l3050 1C80  
                     l3042 1992                       l3210 1E72                       l3202 1E44  
                     l2402 1D3A                       l3220 1912                       l3108 190F  
                     l2500 157F                       l3124 1D7B                       l3116 1D5C  
                     l3060 1CAD                       l3052 1C90                       l3044 1999  
                     l3036 197F                       l3212 1E77                       l3204 1E48  
                     l2404 1D40                       l2420 1BD6                       l2412 1BCA  
                     l3300 0275                       l3230 0025                       l3222 0004  
                     l2510 1594                       l2502 1585                       l3126 1D83  
                     l3062 1CBF                       l3054 1C93                       l3070 1CDD  
                     l3150 1B76                       l3046 199F                       l3038 1981  
                     l3214 1E7B                       l3206 1E52                       l2350 19B2  
                     l2406 1D45                       l2430 1BEF                       l2422 1BDA  
                     l2414 1BCB                       l3310 02B6                       l3302 0279  
                     l2360 193E                       l3240 004E                       l3224 0009  
                     l3232 002C                       l3080 1B72                       l2520 15AC  
                     l2512 159C                       l2504 1589                       l3144 1DAA  
                     l3136 1D91                       l3128 1D85                       l3064 1CCD  
                     l3056 1CA0                       l3160 1BA4                       l3152 1B7E  
                     l3216 1E7C                       l3208 1E5C                       l2352 19C1  
                     l2344 19A5                       l2408 1D4A                       l2440 1C0E  
                     l2432 1BF3                       l2424 1BDF                       l2416 1BCF  
                     l3400 0641                       l3320 033D                       l3312 02C9  
                     l3304 0292                       l2362 1949                       l3234 0032  
                     l3226 001A                       l3242 1AA2                       l3082 1B74  
                     l3074 1B28                       l3090 10F1                       l2610 16BC  
                     l2602 1694                       l2530 15BE                       l2522 15B2  
                     l2514 159D                       l2506 158A                       l3170 195B  
                     l3146 1DBA                       l3138 1DA3                       l3066 1CCE  
                     l3058 1CA4                       l3162 1BB2                       l3154 1B81  
                     l2354 19C6                       l2346 19A7                       l2450 1AE4  
                     l2370 1CE9                       l2434 1BF7                       l2426 1BE5  
                     l2442 1C14                       l2418 1BD4                       l3410 0700  
                     l3402 0648                       l3330 0391                       l3322 0356  
                     l3314 02CD                       l3306 029D                       l3250 018D  
                     l2364 1950                       l3236 0043                       l3228 001F  
                     l3244 1AA5                       l3076 1B3C                       l3092 10F9  
                     l2612 16BE                       l2604 16AB                       l2620 16D1  
                     l2532 15C3                       l2540 15D3                       l2524 15B3  
                     l2508 158F                       l2516 159F                       l3172 195F  
                     l3148 1DBF                       l3068 1CD7                       l3164 1BBB  
                     l3156 1B8E                       l3180 1DD5                       l2348 19AE  
                     l2700 0CB1                       l2460 1AFA                       l2452 1AE6  
                     l2380 1CFD                       l2372 1CED                       l2444 1C19  
                     l2436 1C01                       l2428 1BE8                       l3420 0775  
                     l3412 071F                       l3404 064C                       l3340 0438  
                     l3332 03D8                       l3324 035F                       l3316 02D3  
                     l3308 02A3                       l3260 01A6                       l3252 0192  
                     l3500 00DE                       l2366 1957                       l2358 193A  
                     l3238 0048                       l3246 1AC1                       l3078 1B58  
                     l3094 10FD                       l3086 10C1                       l2622 16E7  
                     l2630 173F                       l2614 16C2                       l2606 16AF  
                     l2550 15F1                       l2542 15E1                       l2534 15C8  
                     l2526 15B9                       l2518 15A7                       l3158 1B92  
                     l3166 1BC1                       l3190 1E03                       l3182 1DE5  
                     l2710 0CCD                       l2702 0CB6                       l2470 1B1D  
                     l2462 1AFE                       l2454 1AEC                       l2390 1D13  
                     l2382 1D01                       l2374 1CF2                       l2446 1C1E  
                     l2438 1C07                       l3430 0794                       l3422 0779  
                     l3414 072B                       l3406 066A                       l3342 0453  
                     l3334 03E7                       l3326 037A                       l3318 02F2  
                     l3270 01CF                       l3262 01B2                       l3254 0198  
                     l3510 010A                       l3502 00E6                       l3248 1AC7  
                     l3096 1121                       l3088 10D5                       l2640 176C  
                     l2632 1755                       l2624 1725                       l2616 16C3  
                     l2608 16B3                       l2560 1605                       l2552 15F5  
                     l2544 15E5                       l2536 15D0                       l2528 15BD  
                     l3192 1E10                       l3184 1DF5                       l3176 1DCC  
                     l2800 0F70                       l2720 0CE2                       l2712 0CD2  
                     l2704 0CBB                       l2464 1B0F                       l2456 1AEF  
                     l2472 1B23                       l2480 1A71                       l2392 1D17  
                     l2384 1D03                       l2376 1CF4                       l2368 1CE6  
                     l3440 07C3                       l3432 07A5                       l3424 077F  
                     l3408 06C5                       l3416 0766                       l3360 052E  
                     l3352 04A1                       l3344 045C                       l3336 0402  
                     l3328 0382                       l3272 01E2                       l3264 01B3  
                     l3256 019F                       l3600 11E6                       l3520 0136  
                     l3512 010B                       l3504 0105                       l3098 1125  
                     l2650 177F                       l2642 1770                       l2634 175A  
                     l2626 172B                       l2618 16CC                       l2570 1619  
                     l2562 1609                       l2554 15F9                       l2546 15E9  
                     l2538 15D1                       l3194 1E17                       l3178 1DD1  
                     l2802 0F75                       l2810 0FA6                       l2730 0CFE  
                     l2722 0CE7                       l2714 0CD8                       l2706 0CC3  
                     l2466 1B15                       l2458 1AF6                       l2490 1A90  
                     l2482 1A78                       l2394 1D1B                       l2386 1D09  
                     l2378 1CF8                       l3434 07A6                       l3418 076E  
                     l3370 0567                       l3346 0464                       l3338 0429  
                     l3354 04AA                       l3290 022D                       l3426 0786  
                     l3282 01FD                       l3274 01E6                       l3266 01B7  
                     l3258 01A4                       l3610 123A                       l3602 11EF  
                     l3530 0161                       l3522 0137                       l3514 0131  
                     l3506 0108                       l3460 1C32                       l2660 1790  
                     l2644 1775                       l2652 1781                       l2628 1730  
                     l2580 163D                       l2572 161D                       l2564 160D  
                     l2556 15FD                       l2548 15ED                       l3196 1E1B  
                     l3188 1DFE                       l2820 0FD9                       l2812 0FB3  
                     l2804 0F83                       l2740 0D29                       l2732 0D03  
                     l2724 0CEF                       l2716 0CDC                       l2708 0CC5  
                     l2468 1B16                       l2492 1A97                       l2484 1A7C  
                     l2476 1A68                       l2396 1D2C                       l2388 1D0C  
                     l3436 07B5                       l3428 078C                       l3380 05C4  
                     l3372 0571                       l3356 04DF                       l3348 0482  
                     l3292 023B                       l3284 0219                       l3268 01BA  
                     l3276 01F7                       l3444 07CB                       l3620 127C  
                     l3612 1245                       l3604 1206                       l3540 19D9  
                     l3532 0162                       l3524 013E                       l3516 0134  
                     l3508 0109                       l3700 0899                       l3462 1C40  
                     l2670 17AF                       l2646 1778                       l2638 1763  
                     l2654 1785                       l2590 166D                       l2582 165D  
                     l2574 1621                       l2566 1611                       l2558 1601  
                     l3198 1E29                       l2822 0FE7                       l2814 0FBE  
                     l2806 0F87                       l2750 0DC6                       l2742 0D46  
                     l2726 0CF1                       l2718 0CDD                       l2486 1A80  
                     l2478 1A6E                       l2494 1A9D                       l2398 1D32  
                     l2910 0BE3                       l2902 0AF4                       l3438 07B5  
                     l3390 060A                       l3382 05E3                       l3374 057D  
                     l3366 0530                       l3358 052C                       l3294 023F  
                     l3286 0225                       l3446 07DD                       l3278 01F9  
                     l3630 12CC                       l3622 1285                       l3614 1251  
                     l3606 120F                       l3550 19EC                       l3542 19E6  
                     l3534 016A                       l3526 015D                       l3518 0135  
                     l3470 0062                       l3710 08D6                       l3702 08A7  
                     l2840 1935                       l2832 1920                       l3464 1C46  
                     l3456 1C23                       l2680 17E8                       l2672 17CD  
                     l2664 1798                       l2656 1786                       l2648 177A  
                     l2592 1676                       l2584 1666                       l2568 1615  
                     l2576 1625                       l2824 0FEB                       l2816 0FCD  
                     l2808 0FA0                       l2760 0E29                       l2752 0DCF  
                     l2744 0D62                       l2736 0D0C                       l2728 0CF9  
                     l2488 1A8A                       l2920 0803                       l2912 0BEA  
                     l2904 0AFB                       l3392 0617                       l3384 05F7  
                     l3376 0584                       l3296 0258                       l3288 0229  
                     l3640 130E                       l3632 12D7                       l3624 1298  
                     l3616 125A                       l3608 1231                       l3552 19ED  
                     l3544 19E9                       l3528 0160                       l3480 0087  
                     l3472 0081                       l3560 19FE                       l3720 0908  
                     l3712 08D9                       l3704 08AA                       l2834 1923  
                     l3458 1C29                       l2850 1A50                       l2842 1A32  
                     l2690 17FE                       l2682 17E9                       l2674 17D6  
                     l2666 179D                       l2658 178A                       l2586 1668  
                     l2594 167A                       l2578 1626                       l2498 1578  
                     l2826 0FEC                       l2818 0FD7                       l2770 0EC9  
                     l2762 0E42                       l2754 0DDF                       l2746 0D8E  
                     l2738 0D1C                       l2922 0804                       l3394 0626  
                     l3386 0600                       l3378 0589                       l3298 0271  
                     l3650 1362                       l3642 1317                       l3634 12E3  
                     l3626 12A1                       l3618 1270                       l3554 19EE  
                     l3546 19EA                       l3538 19CB                       l3490 00B3  
                     l3482 00AD                       l3474 0084                       l3466 0055  
                     l3570 1A1E                       l3562 1A0C                       l3722 0923  
                     l3714 08F4                       l3706 08C5                       l2836 1929  
                     l2860 1A64                       l2852 1A54                       l2844 1A3C  
                     l2684 17ED                       l2676 17DB                       l2668 17AB  
                     l2596 1686                       l2588 166C                       l2932 1E85  
                     l2828 0FF7                       l2780 0F37                       l2772 0EEF  
                     l2764 0E5F                       l2756 0DFC                       l2748 0DAA  
                     l2692 0C9F                       l2924 080A                       l2916 0C72  
                     l3396 062D                       l3388 0604                       l3644 132E  
                     l3636 12EC                       l3628 12C3                       l3556 19EF  
                     l3548 19EB                       l3492 00BA                       l3484 00B0  
                     l3476 0085                       l3468 005B                       l3572 1A1F  
                     l3564 1A19                       l3724 0926                       l3716 08F7  
                     l3708 08C8                       l3660 0817                       l2838 192C  
                     l2854 1A57                       l2846 1A3F                       l2686 17EF  
                     l2678 17E3                       l2598 168B                       l2950 1ECB  
                     l2934 1E98                       l2790 0F4F                       l2782 0F3B  
                     l2774 0F17                       l2766 0E8C                       l2758 0E0C  
                     l2694 0CA6                       l2870 1483                       l2862 1370  
                     l2926 0810                       l3398 063C                       l3646 1337  
                     l3638 1302                       l3590 11A4                       l3582 1163  
                     l3494 00D9                       l3486 00B1                       l3478 0086  
                     l3574 1A20                       l3566 1A1C                       l3726 0934  
                     l3718 0905                       l3670 081D                       l3662 0819  
                     l2856 1A5D                       l2848 1A4D                       l2688 17FA  
                     l2960 1EF6                       l2952 1ED4                       l2944 1EB4  
                     l2792 0F50                       l2784 0F3C                       l2776 0F20  
                     l2768 0E9C                       l2696 0CAC                       l2872 1489  
                     l2864 1376                       l2928 0812                       l2880 0943  
                     l3760 0211                       l3648 1359                       l3592 11AF  
                     l3584 1170                       l3496 00DC                       l3488 00B2  
                     l3576 1A21                       l3568 1A1D                       l3728 0937  
                     l3680 0826                       l3672 081E                       l3664 081A  
                     l2858 1A60                       l2970 1F10                       l2962 1EFE  
                     l2954 1EDD                       l2946 1EBA                       l2938 1EA1  
                     l2794 0F54                       l2786 0F45                       l2778 0F2E  
                     l2698 0CB0                       l2882 0947                       l3594 11BB  
                     l3586 1179                       l3498 00DD                       l3578 1A22  
                     l3690 0835                       l3682 0827                       l3674 081F  
                     l3666 081B                       l3658 0814                       l2980 1F39  
                     l2964 1F08                       l2972 1F22                       l2956 1EEB  
                     l2948 1EC9                       l2796 0F68                       l2788 0F4B  
                     l2876 1534                       l2892 0A38                       l2884 0949  
                     l3596 11C4                       l3588 119B                       l3692 0850  
                     l3684 082A                       l3676 0822                       l3668 081C  
                     l2990 1F58                       l2958 1EF5                       l2894 0A3F  
                     l2886 0950                       l3598 11DA                       l3694 0870  
                     l3686 082B                       l3678 0823                       l2984 1F42  
                     l3696 0876                       l3688 0830                       l2986 1F4F  
                     l2978 1F29                       l2898 0AC7                       l3698 0896  
                     l2996 1F65                       l2998 1F6D                       STR_1 10B8  
                     STR_2 10A0                       STR_3 10B5                       STR_4 10A0  
                     STR_5 10BB                       STR_6 10A0                       STR_7 10A5  
                     STR_8 10A0                       STR_9 10A9                       u3010 1C14  
                     u3011 1C13                       u3100 1A6E                       u3020 1C19  
                     u3101 1A6D                       u3021 1C18                       u3005 1C08  
                     u3030 1AEC                       u3031 1AEB                       u3200 15BD  
                     u3120 1A80                       u4000 1376                       u3201 15BC  
                     u3121 1A7F                       u4001 1375                       u3210 15C3  
                     u3050 1AFE                       u3130 1A8A                       u3211 15C2  
                     u3051 1AFD                       u3131 1A89                       u3115 1A72  
                     u3220 15C8                       u3221 15C7                       u3045 1AF0  
                     u3310 1682                       u3230 15E1                       u3070 1B0F  
                     u3150 1A9D                       u3311 1681                       u3231 15E0  
                     u3071 1B0E                       u3151 1A9C                       u3135 1A86  
                     u4015 1393                       u3320 1686                       u3240 15E5  
                     u3160 1589                       u5000 1E4E                       u4040 1489  
                     u3401 16FE                       u3321 1685                       u3305 166F  
                     u3241 15E4                       u3161 1588                       u5001 1E4D  
                     u3065 1AFF                       u3145 1A91                       u4041 1488  
                     u4025 13ED                       u4105 0970                       u3410 1712  
                     u3402 16FF                       u3330 168B                       u3250 163D  
                     u3170 158F                       u5010 1E52                       u3090 1B23  
                     u4210 0BEA                       u4130 0A3F                       u3411 1713  
                     u3403 1704                       u3331 168A                       u3251 163C  
                     u3171 158E                       u5011 1E51                       u3091 1B22  
                     u3075 1B0B                       u4035 1442                       u4211 0BE9  
                     u4131 0A3E                       u4115 09AC                       u5100 1AD1  
                     u3500 178A                       u3420 1730                       u3412 1718  
                     u3404 1705                       u3260 1648                       u3180 1594  
                     u5020 1E67                       u4300 1EEB                       u3501 1789  
                     u3421 172F                       u3413 1719                       u3405 170A  
                     u3341 169D                       u3261 1646                       u3181 1593  
                     u4301 1EEA                       u3085 1B17                       u4205 0BA2  
                     u4125 09F7                       u5110 1AE3                       u3510 1790  
                     u3430 1755                       u3406 170B                       u3350 16AF  
                     u3342 16A4                       u3270 1649                       u3190 15B2  
                     u5030 1E77                       u5111 1AE2                       u3511 178F  
                     u3431 1754                       u3351 16AE                       u3343 16AB  
                     u3255 1639                       u3191 15B1                       u5031 1E76  
                     u4055 14A6                       u2800 193E                       u3600 17ED  
                     u3520 1797                       u3440 175A                       u3360 16B3  
                     u3280 165D                       u5040 1E7B                       u4400 1F4F  
                     u4320 1F04                       u4080 0947                       u5200 0356  
                     u5120 0198                       u2801 193D                       u3601 17EC  
                     u3521 1796                       u3441 1759                       u3361 16B2  
                     u3281 165C                       u5041 1E7A                       u5025 1E62  
                     u4401 1F4E                       u4321 1F03                       u4305 1EE7  
                     u4065 14F3                       u4225 0BFD                       u4145 0A52  
                     u4081 0946                       u5201 0355                       u5121 0197  
                     u2810 1949                       u5050 0009                       u3610 17FE  
                     u3530 179D                       u3370 16C2                       u3290 166C  
                     u4410 1F63                       u4330 1F08                       u4250 080A  
                     u4170 0AFB                       u4090 0950                       u5210 037A  
                     u5130 01B2                       u2811 1948                       u5051 0008  
                     u3611 17FD                       u3531 179C                       u3371 16C1  
                     u3291 166B                       u4411 1F62                       u4331 1F07  
                     u4315 1EF7                       u4075 153F                       u4251 0809  
                     u4235 0C39                       u4171 0AFA                       u4155 0A8E  
                     u4091 094F                       u5211 0379                       u5131 01B1  
                     u2820 1950                       u3540 17AF                       u3460 1770  
                     u4500 1FE6                       u4340 1F0F                       u3620 0CB0  
                     u4260 0810                       u2900 1D2C                       u5300 0571  
                     u5220 0391                       u5140 01F6                       u2821 194F  
                     u3541 17AE                       u3461 176F                       u4501 1FE5  
                     u4341 1F0E                       u3701 0D54                       u3621 0CAF  
                     u4261 080F                       u2901 1D2B                       u4245 0C75  
                     u4165 0ACA                       u5301 0570                       u5221 0390  
                     u5141 01F5                       u2830 1957                       u5070 0032  
                     u3550 17BE                       u3470 1775                       u3390 16E7  
                     u4430 1FA4                       u4270 1E98                       u3702 0D5B  
                     u3630 0CB6                       u5310 057D                       u5230 03E7  
                     u5150 0225                       u2831 1956                       u5071 0031  
                     u3471 1774                       u3455 1765                       u3391 16E6  
                     u4431 1FA3                       u4271 1E97                       u3711 0D70  
                     u3703 0D62                       u3631 0CB5                       u5311 057C  
                     u5231 03E6                       u5151 0224                       u3560 17CD  
                     u3480 177F                       u4520 1FF7                       u4360 1F21  
                     u4280 1EB2                       u3712 0D77                       u3640 0CBB  
                     u2920 1D40                       u2840 1CED                       u5400 0785  
                     u5240 0402                       u5160 0229                       u5065 0011  
                     u3561 17CC                       u3481 177E                       u3393 16E3  
                     u3385 16C5                       u4521 1FF6                       u4425 1F8B  
                     u4361 1F20                       u4281 1EB1                       u3801 0EAB  
                     u3721 0D9C                       u3713 0D7E                       u3641 0CBA  
                     u2921 1D3F                       u2905 1D28                       u2841 1CEC  
                     u4185 0B1B                       u5401 0784                       u5241 0401  
                     u5225 038D                       u5161 0228                       u5090 1AAF  
                     u3570 17D6                       u3490 1785                       u4610 1CBF  
                     u4530 1985                       u4450 1FC2                       u4370 1F28  
                     u2770 19B2                       u3810 0ED5                       u3802 0EB2  
                     u3722 0DA3                       u3650 0CDC                       u2930 1D45  
                     u2850 1CF8                       u5410 078C                       u5330 05F6  
                     u5250 0429                       u5170 0258                       u3571 17D5  
                     u3555 17B9                       u3491 1784                       u4611 1CBE  
                     u4531 1984                       u4515 1FE9                       u4451 1FC1  
                     u4435 1FA0                       u4371 1F27                       u4355 1F11  
                     u2771 19B1                       u3803 0EB9                       u3731 0DB8  
                     u3723 0DAA                       u3651 0CDB                       u2931 1D44  
                     u2915 1D34                       u2851 1CF7                       u4195 0B57  
                     u5411 078B                       u5331 05F5                       u5251 0428  
                     u5235 03E3                       u5171 0257                       u3580 17DB  
                     u4460 1FC6                       u3900 0F54                       u3732 0DBF  
                     u3660 0CE2                       u2860 1D09                       u2940 1BCF  
                     u5420 0794                       u5340 0617                       u5260 0438  
                     u5180 0292                       u5500 08C5                       u5085 003A  
                     u4701 110C                       u3581 17DA                       u4605 1CA6  
                     u4461 1FC5                       u4445 1FB5                       u3901 0F53  
                     u3821 0EE1                       u3733 0DC6                       u3661 0CE1  
                     u2861 1D08                       u2941 1BCE                       u5421 0793  
                     u5341 0616                       u5325 058C                       u5261 0437  
                     u5181 0291                       u5501 08C4                       u4710 1125  
                     u4702 110D                       u3590 17E8                       u4630 1CDD  
                     u4470 1FCD                       u4390 1F39                       u2790 19C6  
                     u3910 0F68                       u3830 0EFD                       u3822 0EE8  
                     u3670 0CE7                       u2950 1BDA                       u5430 07A5  
                     u5350 0626                       u5270 0453                       u5190 02CD  
                     u5510 08F4                       u4711 1124                       u4703 1112  
                     u3591 17E7                       u4631 1CDC                       u4615 1CBB  
                     u4471 1FCC                       u4391 1F38                       u4295 1ED6  
                     u2791 19C5                       u3911 0F67                       u3823 0EEF  
                     u3815 0ED0                       u3751 0DEE                       u3671 0CE6  
                     u2951 1BD9                       u5431 07A4                       u5351 0625  
                     u5271 0452                       u5191 02CC                       u5511 08F3  
                     u4640 1B3C                       u4704 1113                       u4800 1DA2  
                     u4560 199F                       u3920 0F6F                       u3752 0DF5  
                     u3680 0CFE                       u2880 1D1B                       u2960 1BE5  
                     u5440 07B5                       u5360 0641                       u5520 0923  
                     u4641 1B3B                       u4721 1134                       u4705 1118  
                     u4801 1DA1                       u4625 1CCF                       u4561 199E  
                     u4545 198C                       u4385 1F2B                       u2785 19B9  
                     u3921 0F6E                       u3841 0F09                       u3761 0E1B  
                     u3753 0DFC                       u3745 0DC8                       u3681 0CFD  
                     u2881 1D1A                       u2961 1BE4                       u5441 07B4  
                     u5361 0640                       u5345 0613                       u5265 0434  
                     u5521 0922                       u4650 1B58                       u4730 115F  
                     u4722 1135                       u4706 1119                       u4810 1DA9  
                     u4570 1C90                       u4490 1FDF                       u3930 0F75  
                     u3842 0F10                       u3762 0E22                       u3690 0D03  
                     u5450 07C3                       u5290 0566                       u4651 1B57  
                     u4731 115E                       u4723 113A                       u4811 1DA8  
                     u4571 1C8F                       u4555 1993                       u4491 1FDE  
                     u3931 0F74                       u3843 0F17                       u3835 0EF8  
                     u3763 0E29                       u3691 0D02                       u2875 1D0D  
                     u5451 07C2                       u5435 07A1                       u5355 0622  
                     u5291 0565                       u4660 1B72                       u4724 113B  
                     u4740 190F                       u4900 1BC1                       u3940 0F87  
                     u2980 1BF7                       u5460 07DD                       u4661 1B71  
                     u4725 1140                       u4741 190E                       u4901 1BC0  
                     u4485 1FCF                       u3941 0F86                       u3781 0E51  
                     u2981 1BF6                       u5461 07DC                       u5445 07B1  
                     u5285 0533                       u4726 1141                       u4670 10D5  
                     u4830 1DBA                       u4750 1D5C                       u4590 1CA4  
                     u4910 1DD1                       u3950 0F96                       u3870 0F3B  
                     u3782 0E58                       u2990 1C01                       u5390 076D  
                     u5470 0850                       u4735 115B                       u4671 10D4  
                     u4831 1DB9                       u4751 1D5B                       u4591 1CA3  
                     u4911 1DD0                       u3871 0F3A                       u3855 0F19  
                     u3791 0E7E                       u3783 0E5F                       u3775 0E2B  
                     u2895 1D1C                       u2991 1C00                       u2975 1BE9  
                     u5391 076C                       u5375 06C8                       u5295 0562  
                     u5607 008B                       u5471 084F                       u4680 10F1  
                     u4840 1DBF                       u4760 1D73                       u4920 1DD5  
                     u3960 0FB3                       u3792 0E85                       u5480 0870  
                     u4665 1B6E                       u4681 10F0                       u4841 1DBE  
                     u4825 1DAC                       u4585 1C95                       u4921 1DD4  
                     u3961 0FB2                       u3865 0F30                       u3793 0E8C  
                     u5385 072E                       u5617 00B7                       u5537 08A1  
                     u5481 086F                       u4690 10FD                       u4770 1D89  
                     u4850 1B7E                       u4930 1DF5                       u3970 0FCD  
                     u3890 0F4F                       u5490 0896                       u4691 10FC  
                     u4771 1D88                       u4851 1B7D                       u4931 1DF4  
                     u3971 0FCC                       u3955 0F91                       u3891 0F4E  
                     u2995 1BFD                       u5707 1240                       u5627 00E3  
                     u5547 08D0                       u5491 0895                       u4780 1D90  
                     u3980 0FEB                       u4781 1D8F                       u4765 1D6E  
                     u3981 0FEA                       u3965 0FAF                       u3885 0F3E  
                     u5717 128B                       u5637 010F                       u5557 08FF  
                     u4870 1B92                       u4950 1E16                       u5807 1930  
                     u4871 1B91                       u4951 1E15                       u3975 0FC9  
                     u5727 12D2                       u5647 013B                       u5567 092E  
                     u4880 1BA4                       u4881 1BA3                       u4865 1B83  
                     u4945 1E08                       u5737 131D                       u5657 0167  
                     u5577 1A12                       u4970 1E38                       u3995 1A42  
                     u4795 1D92                       u4971 1E37                       u5747 1368  
                     u5667 19DF                       u5587 1A29                       u5757 1A52  
                     u4885 1BA0                       u4965 1E2A                       u5677 19F6  
                     u5597 005F                       u4990 1E48                       u5767 1A62  
                     u4895 1BB3                       u4991 1E47                       u5687 11AA  
                     u5777 1C2D                       u4985 1E3D                       u5697 11F5  
                     u5787 1C3C                       u5797 1C4A               ?_lerSensores 0070  
        ?_Lcd_Write_String 0075                       _main 0814                       btemp 007E  
                     start 0000         ??_Lcd_Write_String 0077            __end_of_Lcd_Cmd 1939  
            ___fltol@sign1 005A            __end_of___fladd 1800                      ?_main 0070  
          __end_of___awdiv 1D4F            __end_of___flneg 1912                      STR_10 10A0  
                    STR_11 10AD                      STR_12 10A0                      STR_13 10B1  
                    STR_14 10A0            __end_of___awmod 1C23            __end_of___flmul 1000  
          __end_of___flsub 197F            __end_of___fltol 1DCB            __end_of___lldiv 1CE6  
          ___awdiv@divisor 0077            __end_of___llmod 1BCA            __end_of___lwdiv 1B28  
          __end_of___lwmod 1AA2            ___awdiv@counter 0020    __size_of_Lcd_Set_Cursor 0052  
                    _TRISA 0085                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088            __end_of_dpowers 10A0                      _scale 0940  
             ?_expandeTela 0070            __end_of_isdigit 0814                      pclath 000A  
                    status 0003                      wtemp0 007E            __end_of_sprintf 07E2  
         __end_of_Lcd_Init 1C80           __end_of_Lcd_Port 195B            __initialization 07E2  
             __end_of_main 0940               ?_recolheTela 0070                     ??_main 00C3  
       __size_of_Lcd_Clear 000D       __size_of__tdiv_to_l_ 00BD           ___llmod@dividend 0074  
                   ?_scale 003E                     _ADRESH 001E                     _ADRESL 009E  
         ___awdiv@dividend 0079                  ??_Lcd_Cmd 0071    __size_of_Lcd_Write_Char 0037  
         __end_of___xxtofl 1E85           __end_of__powers_ 1044                     ___flge 10C1  
                   ___fleq 1B28                  ??___fladd 005A                     ___wmul 197F  
                ??___awdiv 007B                  ??___flneg 0074                  ??___awmod 0074  
                ??___flmul 002C                  ??___flsub 007E                  ??___fltol 0055  
                ??___lldiv 0078                  ??___llmod 0078                  ??___lwdiv 007A  
                ??___lwmod 0074                     _fround 136D           ___awdiv@quotient 0022  
          ___awmod@divisor 0070            ___awmod@counter 0075                  ??_isdigit 0070  
       __size_of__Umul8_16 0027                  ??_sprintf 00A5       __size_of_atualizaLCD 020A  
          Lcd_Set_Cursor@a 0077            Lcd_Set_Cursor@b 0074            Lcd_Set_Cursor@y 0079  
          Lcd_Set_Cursor@z 0078                 ___flge@ff1 0070                 ___flge@ff2 0074  
             ___xxtofl@arg 007A               ___xxtofl@exp 0079               ___xxtofl@val 0070  
               ___fleq@ff1 0070                 ___fleq@ff2 0074    __end_of__initialization 07FC  
               ___flneg@f1 0070          __end_of_Lcd_Clear 191F       __size_of_lerSensores 0135  
               ___fltol@f1 0051             __pcstackCOMMON 0070              __end_of_scale 0C9F  
           _Lcd_Set_Cursor 0003                 __div_to_l_ 1F42                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070            __div_to_l_@exp1 0025            __div_to_l_@cntr 0024  
                  ??_scale 0042            __div_to_l_@quot 0020                 __pbssBANK1 00C6  
               __pbssBANK2 0110                 __pbssBANK3 0190       __size_of_expandeTela 0033  
            __div_to_l_@f1 0070              __div_to_l_@f2 0074          __end_of__Umul8_16 19CB  
               __pmaintext 0814                    ?___flge 0070                    ?___fleq 0070  
                  ?___wmul 0070                    ?_fround 003E  __size_of_Lcd_Write_String 0042  
   __end_of_Lcd_Set_Cursor 0055       __size_of_recolheTela 0033                  ?___xxtofl 0070  
               ??_Lcd_Init 0074                 ??_Lcd_Port 0070                 __stringtab 1000  
           _Lcd_Write_Char 1A31                    _Lcd_Cmd 191F          __end_of__npowers_ 1078  
          __size_of___flge 00A2            __size_of___fleq 004E                    ___fladd 1578  
                  ___awdiv 1CE6                    ___flneg 1907                    ___awmod 1BCA  
                  ___flmul 0C9F                    ___flsub 195B                    ___fltol 1D4F  
                  ___lldiv 1C80            __size_of___wmul 0025                    ___llmod 1B76  
                  ___lwdiv 1AE4                 _fround$930 0049                 _fround$929 004D  
                  ___lwmod 1A68            __size_of_fround 020B            ?_Lcd_Set_Cursor 0074  
                  __ptext1 19FE                    __ptext2 0055                    __ptext3 19CB  
                  __ptext4 1163                    __ptext5 018A                    __ptext6 0940  
                  __ptext7 1BCA                    __ptext8 1CE6                    __ptext9 0802  
                  _buffer0 01CC                    _buffer1 01B8                    _buffer2 01A4  
                  _buffer3 0190                    _buffer4 0138                    _buffer5 0124  
                  _buffer6 0110                ?__div_to_l_ 0070                    _dpowers 1078  
                  _isdigit 0802                 ??___xxtofl 0074           ___awmod@dividend 0072  
                  _sprintf 018A                    clrloop0 1900     __end_of_Lcd_Write_Char 1A68  
     end_of_initialization 07FC            ___lldiv@divisor 0070            ___lldiv@counter 007D  
                Lcd_Port@a 0070             __tdiv_to_l_@f1 0070             __tdiv_to_l_@f2 0074  
            ??__tdiv_to_l_ 0078                ___fladd@grs 0065              ___xxtofl@sign 0078  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0075          Lcd_Write_String@i 007A  
              ___flmul@grs 0032        __size_of__div_to_l_ 00BE                  _Lcd_Clear 1912  
           __end_of___flge 1163             __end_of___fleq 1B76             __end_of___wmul 19A4  
         _Lcd_Write_String 1AA2             __end_of_fround 1578              ??_atualizaLCD 006E  
      start_initialization 07E2        __end_of__tdiv_to_l_ 1F42          __size_of_Lcd_Init 005D  
            ??_lerSensores 0020          __size_of_Lcd_Port 0022            ___llmod@divisor 0070  
          ___llmod@counter 0079                 ?_Lcd_Clear 0070                   ??___flge 0078  
                 ??___fleq 0078                   ??___wmul 0074                  __Umul8_16 19A4  
          Lcd_Write_Char@a 0074            Lcd_Write_Char@y 0073                   ??_fround 0042  
            sprintf@tmpval 00B7                  ___fladd@a 0056                  ___fladd@b 0052  
               fround@prec 0051                  ___flmul@a 0028                  ___flmul@b 0024  
                ___flsub@a 0066                  ___flsub@b 006A                  ___latbits 0002  
            __pcstackBANK0 0020              __pcstackBANK1 00A0          __size_of___xxtofl 00BA  
            ??_expandeTela 0070        __end_of_atualizaLCD 136D                   ?_Lcd_Cmd 0070  
              sprintf@flag 00AF                sprintf@eexp 00B5                sprintf@fval 00BE  
              sprintf@prec 00BB        __end_of_lerSensores 018A           ___lwdiv@dividend 0078  
         ??_Lcd_Set_Cursor 0075              ??_recolheTela 0070                   ?___fladd 0052  
                 ?___awdiv 0077                   ?___flneg 0070                   ?___awmod 0070  
                 ?___flmul 0024                   ?___flsub 0066                   ?___fltol 0051  
                 ?___lldiv 0070                   ?___llmod 0070                  __npowers_ 1044  
               ?__Umul8_16 0070                   ?___lwdiv 0076                   ?___lwmod 0070  
                __pstrings 1000                __tdiv_to_l_ 1E85               ??__div_to_l_ 0078  
                 ?_isdigit 0070                  _scale$931 004C           ___lwdiv@quotient 007B  
                 ?_sprintf 00A0             __size_of_scale 035F             ___wmul@product 0074  
      __end_of_expandeTela 19FE                  clear_ram0 18FF                   Lcd_Cmd@a 0073  
       __end_of__div_to_l_ 2000                ??_Lcd_Clear 0074                 _ADCON0bits 001F  
              __stringbase 100F                 _ADCON1bits 009F          ___wmul@multiplier 0070  
      __end_of_recolheTela 1A31           ??_Lcd_Write_Char 0071                _atualizaLCD 1163  
                 _Lcd_Init 1C23                   _Lcd_Port 1939                _lerSensores 0055  
 __end_of_Lcd_Write_String 1AE4           __size_of_Lcd_Cmd 001A                ??__Umul8_16 0072  
         __size_of___fladd 0288           __size_of___awdiv 0069           __size_of___flneg 000B  
         __size_of___awmod 0059           __size_of___flmul 0361           __size_of___flsub 0024  
         __size_of___fltol 007C           __size_of___lldiv 0066           __size_of___llmod 0054  
         __size_of___lwdiv 0044           __size_of___lwmod 003A         __end_of__stringtab 1010  
              _isdigit$743 0070                 sprintf@val 00B1                   ___xxtofl 1DCB  
         __size_of_isdigit 0012            ___lwdiv@divisor 0076            ___lwdiv@counter 007D  
                 __ptext10 136D                   __ptext11 1A68                   __ptext20 1C80  
                 __ptext12 1AE4                   __ptext21 1D4F                   __ptext13 0C9F  
                 __ptext30 1912                   __ptext22 195B                   __ptext14 19A4  
                 __ptext31 1C23                   __ptext23 1578                   __ptext15 1E85  
                 __ptext32 191F                   __ptext24 1907                   __ptext16 1F42  
                 __ptext33 1939                   __ptext25 10C1                   __ptext17 1DCB  
                 __ptext26 1B28                   __ptext18 197F                   __ptext27 1AA2  
                 __ptext19 1B76                   __ptext28 1A31                   __ptext29 0003  
                 __powers_ 1010                _expandeTela 19CB           __size_of_sprintf 0658  
            __size_of_main 012C                _recolheTela 19FE                   isdigit@c 0071  
                 scale@scl 0050               _valor_entry0 00DE               _valor_entry1 00DA  
             _valor_entry2 00D6               _valor_entry3 00D2               _valor_entry4 00CE  
             _valor_entry5 00CA               _valor_entry6 00C6         Lcd_Write_Char@temp 0072  
                sprintf@ap 00AE           __tdiv_to_l_@exp1 0025           __tdiv_to_l_@cntr 0024  
                sprintf@sp 00BD           __tdiv_to_l_@quot 0020           ___lwmod@dividend 0072  
         ___lldiv@dividend 0074                  stringcode 100A         Lcd_Set_Cursor@temp 007A  
             ?__tdiv_to_l_ 0070     __Umul8_16@multiplicand 0070                   sprintf@c 00C2  
                 sprintf@f 00A0           ___lldiv@quotient 0079            ___lwmod@divisor 0070  
          ___lwmod@counter 0075                   stringdir 100A                   stringtab 1000  
            ___fladd@signs 0062               ___fladd@aexp 0063               ___fladd@bexp 0064  
     __Umul8_16@multiplier 0078          __Umul8_16@product 0074  
