

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat May 08 00:23:14 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    44                           	dabs	1,0x7E,2
    45  0000                     
    46                           ; Version 2.20
    47                           ; Generated 12/02/2020 GMT
    48                           ; 
    49                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC16F877A Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     	;# 
    81  0001                     	;# 
    82  0002                     	;# 
    83  0003                     	;# 
    84  0004                     	;# 
    85  0005                     	;# 
    86  0006                     	;# 
    87  0007                     	;# 
    88  0008                     	;# 
    89  0009                     	;# 
    90  000A                     	;# 
    91  000B                     	;# 
    92  000C                     	;# 
    93  000D                     	;# 
    94  000E                     	;# 
    95  000E                     	;# 
    96  000F                     	;# 
    97  0010                     	;# 
    98  0011                     	;# 
    99  0012                     	;# 
   100  0013                     	;# 
   101  0014                     	;# 
   102  0015                     	;# 
   103  0015                     	;# 
   104  0016                     	;# 
   105  0017                     	;# 
   106  0018                     	;# 
   107  0019                     	;# 
   108  001A                     	;# 
   109  001B                     	;# 
   110  001B                     	;# 
   111  001C                     	;# 
   112  001D                     	;# 
   113  001E                     	;# 
   114  001F                     	;# 
   115  0081                     	;# 
   116  0085                     	;# 
   117  0086                     	;# 
   118  0087                     	;# 
   119  0088                     	;# 
   120  0089                     	;# 
   121  008C                     	;# 
   122  008D                     	;# 
   123  008E                     	;# 
   124  0091                     	;# 
   125  0092                     	;# 
   126  0093                     	;# 
   127  0094                     	;# 
   128  0098                     	;# 
   129  0099                     	;# 
   130  009C                     	;# 
   131  009D                     	;# 
   132  009E                     	;# 
   133  009F                     	;# 
   134  010C                     	;# 
   135  010D                     	;# 
   136  010E                     	;# 
   137  010F                     	;# 
   138  018C                     	;# 
   139  018D                     	;# 
   140  0000                     	;# 
   141  0001                     	;# 
   142  0002                     	;# 
   143  0003                     	;# 
   144  0004                     	;# 
   145  0005                     	;# 
   146  0006                     	;# 
   147  0007                     	;# 
   148  0008                     	;# 
   149  0009                     	;# 
   150  000A                     	;# 
   151  000B                     	;# 
   152  000C                     	;# 
   153  000D                     	;# 
   154  000E                     	;# 
   155  000E                     	;# 
   156  000F                     	;# 
   157  0010                     	;# 
   158  0011                     	;# 
   159  0012                     	;# 
   160  0013                     	;# 
   161  0014                     	;# 
   162  0015                     	;# 
   163  0015                     	;# 
   164  0016                     	;# 
   165  0017                     	;# 
   166  0018                     	;# 
   167  0019                     	;# 
   168  001A                     	;# 
   169  001B                     	;# 
   170  001B                     	;# 
   171  001C                     	;# 
   172  001D                     	;# 
   173  001E                     	;# 
   174  001F                     	;# 
   175  0081                     	;# 
   176  0085                     	;# 
   177  0086                     	;# 
   178  0087                     	;# 
   179  0088                     	;# 
   180  0089                     	;# 
   181  008C                     	;# 
   182  008D                     	;# 
   183  008E                     	;# 
   184  0091                     	;# 
   185  0092                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  018C                     	;# 
   199  018D                     	;# 
   200                           
   201                           	psect	idataBANK0
   202  0D4E                     __pidataBANK0:
   203                           
   204                           ;initializer for _valor_entry6
   205  0D4E  3400               	retlw	0
   206  0D4F  3480               	retlw	128
   207  0D50  3480               	retlw	128
   208  0D51  3443               	retlw	67
   209                           
   210                           ;initializer for _valor_entry5
   211  0D52  3400               	retlw	0
   212  0D53  3480               	retlw	128
   213  0D54  3480               	retlw	128
   214  0D55  3443               	retlw	67
   215                           
   216                           ;initializer for _valor_entry4
   217  0D56  3400               	retlw	0
   218  0D57  3480               	retlw	128
   219  0D58  3480               	retlw	128
   220  0D59  3443               	retlw	67
   221                           
   222                           ;initializer for _valor_entry3
   223  0D5A  3400               	retlw	0
   224  0D5B  3480               	retlw	128
   225  0D5C  3480               	retlw	128
   226  0D5D  3443               	retlw	67
   227                           
   228                           	psect	strings
   229  0800                     __pstrings:
   230  0800                     stringtab:
   231  0800                     __stringtab:
   232  0800                     stringcode:	
   233                           ;	String table - string pointers are 1 byte each
   234                           
   235  0800                     stringdir:
   236  0800  3008               	movlw	high stringdir
   237  0801  008A               	movwf	10
   238  0802  0804               	movf	4,w
   239  0803  0A84               	incf	4,f
   240  0804  0782               	addwf	2,f
   241  0805                     __stringbase:
   242  0805  3400               	retlw	0
   243  0806                     __end_of__stringtab:
   244  0806                     _dpowers:
   245  0806  3401               	retlw	1
   246  0807  3400               	retlw	0
   247  0808  340A               	retlw	10
   248  0809  3400               	retlw	0
   249  080A  3464               	retlw	100
   250  080B  3400               	retlw	0
   251  080C  34E8               	retlw	232
   252  080D  3403               	retlw	3
   253  080E  3410               	retlw	16
   254  080F  3427               	retlw	39
   255  0810                     __end_of_dpowers:
   256  0008                     _PORTDbits	set	8
   257  0007                     _PORTCbits	set	7
   258  0006                     _PORTBbits	set	6
   259  0010                     _T1CONbits	set	16
   260  000B                     _INTCONbits	set	11
   261  001E                     _ADRESH	set	30
   262  001F                     _ADCON0bits	set	31
   263  000F                     _TMR1H	set	15
   264  000E                     _TMR1L	set	14
   265  003C                     _RC4	set	60
   266  003D                     _RC5	set	61
   267  003E                     _RC6	set	62
   268  003F                     _RC7	set	63
   269  0038                     _RC0	set	56
   270  0041                     _RD1	set	65
   271  0043                     _RD3	set	67
   272  0045                     _RD5	set	69
   273  0047                     _RD7	set	71
   274  003A                     _RC2	set	58
   275  003B                     _RC3	set	59
   276  0040                     _RD0	set	64
   277  0046                     _RD6	set	70
   278  0042                     _RD2	set	66
   279  0039                     _RC1	set	57
   280  0044                     _RD4	set	68
   281  0060                     _TMR1IF	set	96
   282  0059                     _INTF	set	89
   283  0033                     _RB3	set	51
   284  002C                     _RA4	set	44
   285  0031                     _RB1	set	49
   286  0032                     _RB2	set	50
   287  0037                     _RB7	set	55
   288  0036                     _RB6	set	54
   289  0035                     _RB5	set	53
   290  0034                     _RB4	set	52
   291  009E                     _ADRESL	set	158
   292  009F                     _ADCON1bits	set	159
   293  0088                     _TRISD	set	136
   294  0087                     _TRISC	set	135
   295  0085                     _TRISA	set	133
   296  008C                     _PIE1bits	set	140
   297  0086                     _TRISBbits	set	134
   298  0081                     _OPTION_REGbits	set	129
   299  0810                     STR_1:
   300  0810  3451               	retlw	81	;'Q'
   301  0811  343A               	retlw	58	;':'
   302  0812  3425               	retlw	37	;'%'
   303  0813  3469               	retlw	105	;'i'
   304  0814  3420               	retlw	32	;' '
   305  0815  3443               	retlw	67	;'C'
   306  0816  343A               	retlw	58	;':'
   307  0817  3425               	retlw	37	;'%'
   308  0818  3469               	retlw	105	;'i'
   309  0819  3420               	retlw	32	;' '
   310  081A  344C               	retlw	76	;'L'
   311  081B  343A               	retlw	58	;':'
   312  081C  3425               	retlw	37	;'%'
   313  081D  3469               	retlw	105	;'i'
   314  081E  3420               	retlw	32	;' '
   315  081F  3453               	retlw	83	;'S'
   316  0820  3431               	retlw	49	;'1'
   317  0821  343A               	retlw	58	;':'
   318  0822  3425               	retlw	37	;'%'
   319  0823  3469               	retlw	105	;'i'
   320  0824  3400               	retlw	0
   321  0825                     STR_2:
   322  0825  3453               	retlw	83	;'S'
   323  0826  3432               	retlw	50	;'2'
   324  0827  343A               	retlw	58	;':'
   325  0828  3425               	retlw	37	;'%'
   326  0829  3469               	retlw	105	;'i'
   327  082A  3420               	retlw	32	;' '
   328  082B  3453               	retlw	83	;'S'
   329  082C  3433               	retlw	51	;'3'
   330  082D  343A               	retlw	58	;':'
   331  082E  3425               	retlw	37	;'%'
   332  082F  3469               	retlw	105	;'i'
   333  0830  3420               	retlw	32	;' '
   334  0831  3453               	retlw	83	;'S'
   335  0832  3434               	retlw	52	;'4'
   336  0833  343A               	retlw	58	;':'
   337  0834  3425               	retlw	37	;'%'
   338  0835  3469               	retlw	105	;'i'
   339  0836  3420               	retlw	32	;' '
   340  0837  3400               	retlw	0
   341                           
   342                           	psect	cinit
   343  0015                     start_initialization:	
   344                           ; #config settings
   345                           
   346  0015                     __initialization:
   347                           
   348                           ; Initialize objects allocated to BANK0
   349  0015  1383               	bcf	3,7	;select IRP bank0
   350  0016  3069               	movlw	low (__pdataBANK0+16)
   351  0017  00FD               	movwf	btemp+-1
   352  0018  300D               	movlw	high __pidataBANK0
   353  0019  00FE               	movwf	btemp
   354  001A  304E               	movlw	low __pidataBANK0
   355  001B  00FF               	movwf	btemp+1
   356  001C  3059               	movlw	low __pdataBANK0
   357  001D  0084               	movwf	4
   358  001E  120A  118A  27EF  120A  118A  	fcall	init_ram0
   359                           
   360                           ; Clear objects allocated to BANK1
   361  0023  1683               	bsf	3,5	;RP0=1, select bank1
   362  0024  1303               	bcf	3,6	;RP1=0, select bank1
   363  0025  01B5               	clrf	__pbssBANK1& (0+127)
   364  0026  01B6               	clrf	(__pbssBANK1+1)& (0+127)
   365  0027  01B7               	clrf	(__pbssBANK1+2)& (0+127)
   366  0028  01B8               	clrf	(__pbssBANK1+3)& (0+127)
   367  0029  01B9               	clrf	(__pbssBANK1+4)& (0+127)
   368  002A  01BA               	clrf	(__pbssBANK1+5)& (0+127)
   369  002B  01BB               	clrf	(__pbssBANK1+6)& (0+127)
   370  002C  01BC               	clrf	(__pbssBANK1+7)& (0+127)
   371                           
   372                           ; Clear objects allocated to BANK0
   373  002D  1283               	bcf	3,5	;RP0=0, select bank0
   374  002E  1303               	bcf	3,6	;RP1=0, select bank0
   375  002F  01E9               	clrf	__pbssBANK0& (0+127)
   376  0030  01EA               	clrf	(__pbssBANK0+1)& (0+127)
   377  0031  01EB               	clrf	(__pbssBANK0+2)& (0+127)
   378  0032  01EC               	clrf	(__pbssBANK0+3)& (0+127)
   379  0033                     end_of_initialization:	
   380                           ;End of C runtime variable initialization code
   381                           
   382  0033                     __end_of__initialization:
   383  0033  0183               	clrf	3
   384  0034  120A  118A  2E6E   	ljmp	_main	;jump to C main() function
   385                           
   386                           	psect	bssBANK0
   387  0069                     __pbssBANK0:
   388  0069                     _valor_entry1:
   389  0069                     	ds	4
   390                           
   391                           	psect	dataBANK0
   392  0059                     __pdataBANK0:
   393  0059                     _valor_entry6:
   394  0059                     	ds	4
   395  005D                     _valor_entry5:
   396  005D                     	ds	4
   397  0061                     _valor_entry4:
   398  0061                     	ds	4
   399  0065                     _valor_entry3:
   400  0065                     	ds	4
   401                           
   402                           	psect	bssBANK1
   403  00B5                     __pbssBANK1:
   404  00B5                     _valor_entry2:
   405  00B5                     	ds	4
   406  00B9                     _valor_entry0:
   407  00B9                     	ds	4
   408                           
   409                           	psect	inittext
   410  07EB                     init_fetch0:	
   411                           ;	Called with low address in FSR and high address in W
   412                           
   413  07EB  087E               	movf	btemp,w
   414  07EC  008A               	movwf	10
   415  07ED  087F               	movf	btemp+1,w
   416  07EE  0082               	movwf	2
   417  07EF                     init_ram0:	
   418                           ;Called with:
   419                           ;	high address of idata address in btemp 
   420                           ;	low address of idata address in btemp+1 
   421                           ;	low address of data in FSR
   422                           ;	high address + 1 of data in btemp-1
   423                           
   424  07EF  120A  118A  27EB  120A  118A  	fcall	init_fetch0
   425  07F4  0080               	movwf	0
   426  07F5  0A84               	incf	4,f
   427  07F6  0804               	movf	4,w
   428  07F7  067D               	xorwf	btemp+-1,w
   429  07F8  1903               	btfsc	3,2
   430  07F9  3400               	retlw	0
   431  07FA  0AFF               	incf	btemp+1,f
   432  07FB  1903               	btfsc	3,2
   433  07FC  0AFE               	incf	btemp,f
   434  07FD  2FEF               	goto	init_ram0
   435                           
   436                           	psect	cstackBANK1
   437  00A0                     __pcstackBANK1:
   438  00A0                     ?___flge:
   439  00A0                     ??_iniciaPinos:	
   440                           ; 1 bit 
   441                           
   442  00A0                     ??_recolheTela:	
   443                           ; 1 bytes @ 0x0
   444                           
   445  00A0                     ??_expandeTela:	
   446                           ; 1 bytes @ 0x0
   447                           
   448  00A0                     ??_Lcd_Port:	
   449                           ; 1 bytes @ 0x0
   450                           
   451  00A0                     ?___xxtofl:	
   452                           ; 1 bytes @ 0x0
   453                           
   454  00A0                     Lcd_Port@a:	
   455                           ; 4 bytes @ 0x0
   456                           
   457  00A0                     ___flge@ff1:	
   458                           ; 1 bytes @ 0x0
   459                           
   460  00A0                     ___xxtofl@val:	
   461                           ; 4 bytes @ 0x0
   462                           
   463                           
   464                           ; 4 bytes @ 0x0
   465  00A0                     	ds	1
   466  00A1                     ??_Lcd_Cmd:
   467                           
   468                           ; 1 bytes @ 0x1
   469  00A1                     	ds	2
   470  00A3                     Lcd_Cmd@a:
   471                           
   472                           ; 1 bytes @ 0x3
   473  00A3                     	ds	1
   474  00A4                     ??_Lcd_Init:
   475  00A4                     ??___xxtofl:	
   476                           ; 1 bytes @ 0x4
   477                           
   478  00A4                     ___flge@ff2:	
   479                           ; 1 bytes @ 0x4
   480                           
   481                           
   482                           ; 4 bytes @ 0x4
   483  00A4                     	ds	4
   484  00A8                     ??___flge:
   485  00A8                     ___xxtofl@sign:	
   486                           ; 1 bytes @ 0x8
   487                           
   488                           
   489                           ; 1 bytes @ 0x8
   490  00A8                     	ds	1
   491  00A9                     ___xxtofl@exp:
   492                           
   493                           ; 1 bytes @ 0x9
   494  00A9                     	ds	1
   495  00AA                     ___xxtofl@arg:
   496                           
   497                           ; 4 bytes @ 0xA
   498  00AA                     	ds	2
   499  00AC                     ??_controleEstufas:
   500  00AC                     ??_estufaUm:	
   501                           ; 1 bytes @ 0xC
   502                           
   503  00AC                     ??_estufaDois:	
   504                           ; 1 bytes @ 0xC
   505                           
   506  00AC                     ??_estufaTres:	
   507                           ; 1 bytes @ 0xC
   508                           
   509  00AC                     ??_estufaQuatro:	
   510                           ; 1 bytes @ 0xC
   511                           
   512                           
   513                           ; 1 bytes @ 0xC
   514  00AC                     	ds	2
   515  00AE                     ??_lerSensores:
   516                           
   517                           ; 1 bytes @ 0xE
   518  00AE                     	ds	4
   519  00B2                     ??_main:
   520                           
   521                           ; 1 bytes @ 0x12
   522  00B2                     	ds	3
   523                           
   524                           	psect	cstackCOMMON
   525  0070                     __pcstackCOMMON:
   526  0070                     ?_iniciaPinos:
   527  0070                     ?_lerSensores:	
   528                           ; 1 bytes @ 0x0
   529                           
   530  0070                     ?_recolheTela:	
   531                           ; 1 bytes @ 0x0
   532                           
   533  0070                     ?_expandeTela:	
   534                           ; 1 bytes @ 0x0
   535                           
   536  0070                     ?_controleEstufas:	
   537                           ; 1 bytes @ 0x0
   538                           
   539  0070                     ?_atualizaLCD:	
   540                           ; 1 bytes @ 0x0
   541                           
   542  0070                     ?_estufaUm:	
   543                           ; 1 bytes @ 0x0
   544                           
   545  0070                     ?_estufaDois:	
   546                           ; 1 bytes @ 0x0
   547                           
   548  0070                     ?_estufaTres:	
   549                           ; 1 bytes @ 0x0
   550                           
   551  0070                     ?_estufaQuatro:	
   552                           ; 1 bytes @ 0x0
   553                           
   554  0070                     ?_Lcd_Port:	
   555                           ; 1 bytes @ 0x0
   556                           
   557  0070                     ?_Lcd_Cmd:	
   558                           ; 1 bytes @ 0x0
   559                           
   560  0070                     ?_Lcd_Clear:	
   561                           ; 1 bytes @ 0x0
   562                           
   563  0070                     ?_Lcd_Init:	
   564                           ; 1 bytes @ 0x0
   565                           
   566  0070                     ?_Lcd_Write_Char:	
   567                           ; 1 bytes @ 0x0
   568                           
   569  0070                     ?_Lcd_Write_String:	
   570                           ; 1 bytes @ 0x0
   571                           
   572  0070                     ?_TrataINT:	
   573                           ; 1 bytes @ 0x0
   574                           
   575  0070                     ?i1_Lcd_Port:	
   576                           ; 1 bytes @ 0x0
   577                           
   578  0070                     ??i1_Lcd_Port:	
   579                           ; 1 bytes @ 0x0
   580                           
   581  0070                     ?i1_Lcd_Cmd:	
   582                           ; 1 bytes @ 0x0
   583                           
   584  0070                     ?i1_recolheTela:	
   585                           ; 1 bytes @ 0x0
   586                           
   587  0070                     ??i1_recolheTela:	
   588                           ; 1 bytes @ 0x0
   589                           
   590  0070                     ?_main:	
   591                           ; 1 bytes @ 0x0
   592                           
   593  0070                     ?___lwdiv:	
   594                           ; 2 bytes @ 0x0
   595                           
   596  0070                     ?___fltol:	
   597                           ; 2 bytes @ 0x0
   598                           
   599  0070                     i1Lcd_Port@a:	
   600                           ; 4 bytes @ 0x0
   601                           
   602  0070                     ___lwdiv@divisor:	
   603                           ; 1 bytes @ 0x0
   604                           
   605  0070                     ___fltol@f1:	
   606                           ; 2 bytes @ 0x0
   607                           
   608                           
   609                           ; 4 bytes @ 0x0
   610  0070                     	ds	1
   611  0071                     ??_Lcd_Write_Char:
   612  0071                     ??i1_Lcd_Cmd:	
   613                           ; 1 bytes @ 0x1
   614                           
   615                           
   616                           ; 1 bytes @ 0x1
   617  0071                     	ds	1
   618  0072                     Lcd_Write_Char@temp:
   619  0072                     ___lwdiv@dividend:	
   620                           ; 1 bytes @ 0x2
   621                           
   622                           
   623                           ; 2 bytes @ 0x2
   624  0072                     	ds	1
   625  0073                     Lcd_Write_Char@y:
   626  0073                     i1Lcd_Cmd@a:	
   627                           ; 1 bytes @ 0x3
   628                           
   629                           
   630                           ; 1 bytes @ 0x3
   631  0073                     	ds	1
   632  0074                     ??_Lcd_Clear:
   633  0074                     ?_Lcd_Set_Cursor:	
   634                           ; 1 bytes @ 0x4
   635                           
   636  0074                     ??___fltol:	
   637                           ; 1 bytes @ 0x4
   638                           
   639  0074                     ??___lwdiv:	
   640                           ; 1 bytes @ 0x4
   641                           
   642  0074                     Lcd_Set_Cursor@b:	
   643                           ; 1 bytes @ 0x4
   644                           
   645  0074                     Lcd_Write_Char@a:	
   646                           ; 1 bytes @ 0x4
   647                           
   648                           
   649                           ; 1 bytes @ 0x4
   650  0074                     	ds	1
   651  0075                     ??_Lcd_Set_Cursor:
   652  0075                     ??_Lcd_Write_String:	
   653                           ; 1 bytes @ 0x5
   654                           
   655  0075                     ___lwdiv@quotient:	
   656                           ; 1 bytes @ 0x5
   657                           
   658                           
   659                           ; 2 bytes @ 0x5
   660  0075                     	ds	1
   661  0076                     Lcd_Write_String@i:
   662                           
   663                           ; 2 bytes @ 0x6
   664  0076                     	ds	1
   665  0077                     Lcd_Set_Cursor@a:
   666  0077                     ___lwdiv@counter:	
   667                           ; 1 bytes @ 0x7
   668                           
   669                           
   670                           ; 1 bytes @ 0x7
   671  0077                     	ds	1
   672  0078                     ?___lwmod:
   673  0078                     Lcd_Set_Cursor@z:	
   674                           ; 2 bytes @ 0x8
   675                           
   676  0078                     Lcd_Write_String@a:	
   677                           ; 1 bytes @ 0x8
   678                           
   679  0078                     ___lwmod@divisor:	
   680                           ; 1 bytes @ 0x8
   681                           
   682                           
   683                           ; 2 bytes @ 0x8
   684  0078                     	ds	1
   685  0079                     Lcd_Set_Cursor@y:
   686  0079                     ___fltol@sign1:	
   687                           ; 1 bytes @ 0x9
   688                           
   689                           
   690                           ; 1 bytes @ 0x9
   691  0079                     	ds	1
   692  007A                     Lcd_Set_Cursor@temp:
   693  007A                     ___fltol@exp1:	
   694                           ; 1 bytes @ 0xA
   695                           
   696  007A                     ___lwmod@dividend:	
   697                           ; 1 bytes @ 0xA
   698                           
   699                           
   700                           ; 2 bytes @ 0xA
   701  007A                     	ds	2
   702  007C                     ??___lwmod:
   703                           
   704                           ; 1 bytes @ 0xC
   705  007C                     	ds	1
   706  007D                     ___lwmod@counter:
   707                           
   708                           ; 1 bytes @ 0xD
   709  007D                     	ds	1
   710                           
   711                           	psect	cstackBANK0
   712  0020                     __pcstackBANK0:
   713  0020                     ?_sprintf:
   714  0020                     sprintf@f:	
   715                           ; 2 bytes @ 0x0
   716                           
   717                           
   718                           ; 1 bytes @ 0x0
   719  0020                     	ds	9
   720  0029                     ??_sprintf:
   721                           
   722                           ; 1 bytes @ 0x9
   723  0029                     	ds	3
   724  002C                     sprintf@ap:
   725                           
   726                           ; 1 bytes @ 0xC
   727  002C                     	ds	1
   728  002D                     sprintf@flag:
   729                           
   730                           ; 1 bytes @ 0xD
   731  002D                     	ds	1
   732  002E                     sprintf@prec:
   733                           
   734                           ; 1 bytes @ 0xE
   735  002E                     	ds	1
   736  002F                     sprintf@val:
   737                           
   738                           ; 2 bytes @ 0xF
   739  002F                     	ds	2
   740  0031                     sprintf@sp:
   741                           
   742                           ; 1 bytes @ 0x11
   743  0031                     	ds	1
   744  0032                     sprintf@c:
   745                           
   746                           ; 1 bytes @ 0x12
   747  0032                     	ds	1
   748  0033                     ??_atualizaLCD:
   749                           
   750                           ; 1 bytes @ 0x13
   751  0033                     	ds	2
   752  0035                     atualizaLCD@buffer0:
   753                           
   754                           ; 16 bytes @ 0x15
   755  0035                     	ds	16
   756  0045                     atualizaLCD@buffer1:
   757                           
   758                           ; 16 bytes @ 0x25
   759  0045                     	ds	16
   760  0055                     ??_TrataINT:
   761                           
   762                           ; 1 bytes @ 0x35
   763  0055                     	ds	4
   764                           
   765                           	psect	maintext
   766  066E                     __pmaintext:	
   767 ;;
   768 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   769 ;;
   770 ;; *************** function _main *****************
   771 ;; Defined at:
   772 ;;		line 43 in file "main.c"
   773 ;; Parameters:    Size  Location     Type
   774 ;;		None
   775 ;; Auto vars:     Size  Location     Type
   776 ;;		None
   777 ;; Return value:  Size  Location     Type
   778 ;;                  2  169[None  ] int 
   779 ;; Registers used:
   780 ;;		wreg, status,2, status,0, pclath, cstack
   781 ;; Tracked objects:
   782 ;;		On entry : B00/0
   783 ;;		On exit  : 0/0
   784 ;;		Unchanged: 0/0
   785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   786 ;;      Params:         0       0       0       0       0
   787 ;;      Locals:         0       0       0       0       0
   788 ;;      Temps:          0       0       3       0       0
   789 ;;      Totals:         0       0       3       0       0
   790 ;;Total ram usage:        3 bytes
   791 ;; Hardware stack levels required when called: 8
   792 ;; This function calls:
   793 ;;		_Lcd_Init
   794 ;;		___flge
   795 ;;		_controleEstufas
   796 ;;		_expandeTela
   797 ;;		_iniciaPinos
   798 ;;		_lerSensores
   799 ;;		_recolheTela
   800 ;; This function is called by:
   801 ;;		Startup code after reset
   802 ;; This function uses a non-reentrant model
   803 ;;
   804                           
   805                           
   806                           ;psect for function _main
   807  066E                     _main:
   808  066E                     l1990:	
   809                           ;incstack = 0
   810                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   811                           
   812                           
   813                           ;main.c: 45:     iniciaPinos();
   814  066E  120A  118A  2743  120A  118A  	fcall	_iniciaPinos
   815                           
   816                           ;main.c: 46:     Lcd_Init();
   817  0673  120A  118A  26E0  120A  118A  	fcall	_Lcd_Init
   818  0678                     l170:	
   819                           ;main.c: 47:     while(1)
   820                           
   821                           
   822                           ;main.c: 48:     {;main.c: 49:         lerSensores();
   823  0678  120A  118A  2037  120A  118A  	fcall	_lerSensores
   824                           
   825                           ;main.c: 51:         if(valor_entry0 > 192 && RA4 == 0)
   826  067D  3043               	movlw	67
   827  067E  1683               	bsf	3,5	;RP0=1, select bank1
   828  067F  1303               	bcf	3,6	;RP1=0, select bank1
   829  0680  00A3               	movwf	(___flge@ff1+3)^(0+128)
   830  0681  3040               	movlw	64
   831  0682  00A2               	movwf	(___flge@ff1+2)^(0+128)
   832  0683  3000               	movlw	0
   833  0684  00A1               	movwf	(___flge@ff1+1)^(0+128)
   834  0685  3000               	movlw	0
   835  0686  00A0               	movwf	___flge@ff1^(0+128)
   836  0687  083C               	movf	(_valor_entry0+3)^(0+128),w
   837  0688  00A7               	movwf	(___flge@ff2+3)^(0+128)
   838  0689  083B               	movf	(_valor_entry0+2)^(0+128),w
   839  068A  00A6               	movwf	(___flge@ff2+2)^(0+128)
   840  068B  083A               	movf	(_valor_entry0+1)^(0+128),w
   841  068C  00A5               	movwf	(___flge@ff2+1)^(0+128)
   842  068D  0839               	movf	_valor_entry0^(0+128),w
   843  068E  00A4               	movwf	___flge@ff2^(0+128)
   844  068F  120A  118A  2550  120A  118A  	fcall	___flge
   845  0694  1803               	btfsc	3,0
   846  0695  2E97               	goto	u1621
   847  0696  2E98               	goto	u1620
   848  0697                     u1621:
   849  0697  2EA3               	goto	l1996
   850  0698                     u1620:
   851  0698                     l1992:
   852  0698  1283               	bcf	3,5	;RP0=0, select bank0
   853  0699  1303               	bcf	3,6	;RP1=0, select bank0
   854  069A  1A05               	btfsc	5,4	;volatile
   855  069B  2E9D               	goto	u1631
   856  069C  2E9E               	goto	u1630
   857  069D                     u1631:
   858  069D  2EA3               	goto	l1996
   859  069E                     u1630:
   860  069E                     l1994:
   861                           
   862                           ;main.c: 52:         {;main.c: 53:             recolheTela();
   863  069E  120A  158A  258E  120A  118A  	fcall	_recolheTela
   864  06A3                     l1996:
   865                           
   866                           ;main.c: 56:         if(valor_entry2 > 125 && RB3 == 0)
   867  06A3  3042               	movlw	66
   868  06A4  1683               	bsf	3,5	;RP0=1, select bank1
   869  06A5  1303               	bcf	3,6	;RP1=0, select bank1
   870  06A6  00A3               	movwf	(___flge@ff1+3)^(0+128)
   871  06A7  30FA               	movlw	250
   872  06A8  00A2               	movwf	(___flge@ff1+2)^(0+128)
   873  06A9  3000               	movlw	0
   874  06AA  00A1               	movwf	(___flge@ff1+1)^(0+128)
   875  06AB  3000               	movlw	0
   876  06AC  00A0               	movwf	___flge@ff1^(0+128)
   877  06AD  0838               	movf	(_valor_entry2+3)^(0+128),w
   878  06AE  00A7               	movwf	(___flge@ff2+3)^(0+128)
   879  06AF  0837               	movf	(_valor_entry2+2)^(0+128),w
   880  06B0  00A6               	movwf	(___flge@ff2+2)^(0+128)
   881  06B1  0836               	movf	(_valor_entry2+1)^(0+128),w
   882  06B2  00A5               	movwf	(___flge@ff2+1)^(0+128)
   883  06B3  0835               	movf	_valor_entry2^(0+128),w
   884  06B4  00A4               	movwf	___flge@ff2^(0+128)
   885  06B5  120A  118A  2550  120A  118A  	fcall	___flge
   886  06BA  1803               	btfsc	3,0
   887  06BB  2EBD               	goto	u1641
   888  06BC  2EBE               	goto	u1640
   889  06BD                     u1641:
   890  06BD  2EC9               	goto	l2002
   891  06BE                     u1640:
   892  06BE                     l1998:
   893  06BE  1283               	bcf	3,5	;RP0=0, select bank0
   894  06BF  1303               	bcf	3,6	;RP1=0, select bank0
   895  06C0  1986               	btfsc	6,3	;volatile
   896  06C1  2EC3               	goto	u1651
   897  06C2  2EC4               	goto	u1650
   898  06C3                     u1651:
   899  06C3  2EC9               	goto	l2002
   900  06C4                     u1650:
   901  06C4                     l2000:
   902                           
   903                           ;main.c: 57:         {;main.c: 58:             expandeTela();
   904  06C4  120A  158A  2576  120A  118A  	fcall	_expandeTela
   905  06C9                     l2002:
   906                           
   907                           ;main.c: 61:         controleEstufas();
   908  06C9  120A  118A  219C  120A  118A  	fcall	_controleEstufas
   909                           
   910                           ;main.c: 63:         _delay((unsigned long)((500)*(4000000/4000.0)));
   911  06CE  3003               	movlw	3
   912  06CF  1683               	bsf	3,5	;RP0=1, select bank1
   913  06D0  1303               	bcf	3,6	;RP1=0, select bank1
   914  06D1  00B4               	movwf	(??_main^(0+128)+2)
   915  06D2  308A               	movlw	138
   916  06D3  00B3               	movwf	(??_main^(0+128)+1)
   917  06D4  3055               	movlw	85
   918  06D5  00B2               	movwf	??_main^(0+128)
   919  06D6                     u1687:
   920  06D6  0BB2               	decfsz	??_main^(0+128),f
   921  06D7  2ED6               	goto	u1687
   922  06D8  0BB3               	decfsz	(??_main^(0+128)+1),f
   923  06D9  2ED6               	goto	u1687
   924  06DA  0BB4               	decfsz	(??_main^(0+128)+2),f
   925  06DB  2ED6               	goto	u1687
   926  06DC  2E78               	goto	l170
   927  06DD  120A  118A  2812   	ljmp	start
   928  06E0                     __end_of_main:
   929                           
   930                           	psect	text1
   931  0D8E                     __ptext1:	
   932 ;; *************** function _recolheTela *****************
   933 ;; Defined at:
   934 ;;		line 157 in file "main.c"
   935 ;; Parameters:    Size  Location     Type
   936 ;;		None
   937 ;; Auto vars:     Size  Location     Type
   938 ;;		None
   939 ;; Return value:  Size  Location     Type
   940 ;;                  1    wreg      void 
   941 ;; Registers used:
   942 ;;		None
   943 ;; Tracked objects:
   944 ;;		On entry : 0/0
   945 ;;		On exit  : 0/0
   946 ;;		Unchanged: 0/0
   947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   948 ;;      Params:         0       0       0       0       0
   949 ;;      Locals:         0       0       0       0       0
   950 ;;      Temps:          0       0       0       0       0
   951 ;;      Totals:         0       0       0       0       0
   952 ;;Total ram usage:        0 bytes
   953 ;; Hardware stack levels used: 1
   954 ;; Hardware stack levels required when called: 5
   955 ;; This function calls:
   956 ;;		Nothing
   957 ;; This function is called by:
   958 ;;		_main
   959 ;; This function uses a non-reentrant model
   960 ;;
   961                           
   962                           
   963                           ;psect for function _recolheTela
   964  0D8E                     _recolheTela:
   965  0D8E                     l1940:	
   966                           ;incstack = 0
   967                           ; Regs used in _recolheTela: []
   968                           
   969                           
   970                           ;main.c: 159:     if(RA4 == 0)
   971  0D8E  1283               	bcf	3,5	;RP0=0, select bank0
   972  0D8F  1303               	bcf	3,6	;RP1=0, select bank0
   973  0D90  1A05               	btfsc	5,4	;volatile
   974  0D91  2D93               	goto	u1541
   975  0D92  2D94               	goto	u1540
   976  0D93                     u1541:
   977  0D93  2D9D               	goto	l189
   978  0D94                     u1540:
   979  0D94                     l1942:
   980                           
   981                           ;main.c: 160:     {;main.c: 162:         RD4 = 0;
   982  0D94  1208               	bcf	8,4	;volatile
   983                           
   984                           ;main.c: 163:         RC1 = 1;
   985  0D95  1487               	bsf	7,1	;volatile
   986                           
   987                           ;main.c: 164:         RD2 = 0;
   988  0D96  1108               	bcf	8,2	;volatile
   989                           
   990                           ;main.c: 165:         RD6 = 1;
   991  0D97  1708               	bsf	8,6	;volatile
   992                           
   993                           ;main.c: 167:         RD0 = 0;
   994  0D98  1008               	bcf	8,0	;volatile
   995                           
   996                           ;main.c: 168:         RC3 = 1;
   997  0D99  1587               	bsf	7,3	;volatile
   998                           
   999                           ;main.c: 169:         RC2 = 0;
  1000  0D9A  1107               	bcf	7,2	;volatile
  1001                           
  1002                           ;main.c: 170:         RD7 = 1;
  1003  0D9B  1788               	bsf	8,7	;volatile
  1004                           
  1005                           ;main.c: 171:     }
  1006  0D9C  2DA5               	goto	l191
  1007  0D9D                     l189:	
  1008                           ;main.c: 172:     else
  1009                           
  1010                           
  1011                           ;main.c: 173:     {;main.c: 175:         RD4 = 1;
  1012  0D9D  1608               	bsf	8,4	;volatile
  1013                           
  1014                           ;main.c: 176:         RC1 = 1;
  1015  0D9E  1487               	bsf	7,1	;volatile
  1016                           
  1017                           ;main.c: 177:         RD2 = 1;
  1018  0D9F  1508               	bsf	8,2	;volatile
  1019                           
  1020                           ;main.c: 178:         RD6 = 1;
  1021  0DA0  1708               	bsf	8,6	;volatile
  1022                           
  1023                           ;main.c: 180:         RD0 = 1;
  1024  0DA1  1408               	bsf	8,0	;volatile
  1025                           
  1026                           ;main.c: 181:         RC3 = 1;
  1027  0DA2  1587               	bsf	7,3	;volatile
  1028                           
  1029                           ;main.c: 182:         RC2 = 1;
  1030  0DA3  1507               	bsf	7,2	;volatile
  1031                           
  1032                           ;main.c: 183:         RD7 = 1;
  1033  0DA4  1788               	bsf	8,7	;volatile
  1034  0DA5                     l191:
  1035  0DA5  0008               	return
  1036  0DA6                     __end_of_recolheTela:
  1037                           
  1038                           	psect	text2
  1039  0037                     __ptext2:	
  1040 ;; *************** function _lerSensores *****************
  1041 ;; Defined at:
  1042 ;;		line 85 in file "main.c"
  1043 ;; Parameters:    Size  Location     Type
  1044 ;;		None
  1045 ;; Auto vars:     Size  Location     Type
  1046 ;;		None
  1047 ;; Return value:  Size  Location     Type
  1048 ;;                  1    wreg      void 
  1049 ;; Registers used:
  1050 ;;		wreg, status,2, status,0, pclath, cstack
  1051 ;; Tracked objects:
  1052 ;;		On entry : 0/0
  1053 ;;		On exit  : 0/0
  1054 ;;		Unchanged: 0/0
  1055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1056 ;;      Params:         0       0       0       0       0
  1057 ;;      Locals:         0       0       0       0       0
  1058 ;;      Temps:          0       0       4       0       0
  1059 ;;      Totals:         0       0       4       0       0
  1060 ;;Total ram usage:        4 bytes
  1061 ;; Hardware stack levels used: 1
  1062 ;; Hardware stack levels required when called: 6
  1063 ;; This function calls:
  1064 ;;		___xxtofl
  1065 ;; This function is called by:
  1066 ;;		_main
  1067 ;; This function uses a non-reentrant model
  1068 ;;
  1069                           
  1070                           
  1071                           ;psect for function _lerSensores
  1072  0037                     _lerSensores:
  1073  0037                     l1874:	
  1074                           ;incstack = 0
  1075                           ; Regs used in _lerSensores: [wreg+status,2+status,0+pclath+cstack]
  1076                           
  1077                           
  1078                           ;main.c: 89:     ADCON0bits.CHS0 = 0;
  1079  0037  1283               	bcf	3,5	;RP0=0, select bank0
  1080  0038  1303               	bcf	3,6	;RP1=0, select bank0
  1081  0039  119F               	bcf	31,3	;volatile
  1082                           
  1083                           ;main.c: 90:     ADCON0bits.CHS1 = 0;
  1084  003A  121F               	bcf	31,4	;volatile
  1085                           
  1086                           ;main.c: 91:     ADCON0bits.CHS2 = 0;
  1087  003B  129F               	bcf	31,5	;volatile
  1088                           
  1089                           ;main.c: 93:     ADCON0bits.GO = 1;
  1090  003C  151F               	bsf	31,2	;volatile
  1091                           
  1092                           ;main.c: 94:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  1093  003D  283E               	nop2	;2 cycle nop
  1094  003E  283F               	nop2	;2 cycle nop
  1095  003F  0000               	nop
  1096  0040                     l1876:
  1097                           
  1098                           ;main.c: 95:     valor_entry0 = ADRESH;
  1099  0040  1283               	bcf	3,5	;RP0=0, select bank0
  1100  0041  1303               	bcf	3,6	;RP1=0, select bank0
  1101  0042  081E               	movf	30,w	;volatile
  1102  0043  1683               	bsf	3,5	;RP0=1, select bank1
  1103  0044  1303               	bcf	3,6	;RP1=0, select bank1
  1104  0045  00AE               	movwf	??_lerSensores^(0+128)
  1105  0046  01AF               	clrf	(??_lerSensores^(0+128)+1)
  1106  0047  01B0               	clrf	(??_lerSensores^(0+128)+2)
  1107  0048  01B1               	clrf	(??_lerSensores^(0+128)+3)
  1108  0049  0831               	movf	(??_lerSensores+3)^(0+128),w
  1109  004A  00A3               	movwf	(___xxtofl@val+3)^(0+128)
  1110  004B  0830               	movf	(??_lerSensores+2)^(0+128),w
  1111  004C  00A2               	movwf	(___xxtofl@val+2)^(0+128)
  1112  004D  082F               	movf	(??_lerSensores+1)^(0+128),w
  1113  004E  00A1               	movwf	(___xxtofl@val+1)^(0+128)
  1114  004F  082E               	movf	??_lerSensores^(0+128),w
  1115  0050  00A0               	movwf	___xxtofl@val^(0+128)
  1116  0051  3000               	movlw	0
  1117  0052  120A  118A  2494  120A  118A  	fcall	___xxtofl
  1118  0057  1683               	bsf	3,5	;RP0=1, select bank1
  1119  0058  1303               	bcf	3,6	;RP1=0, select bank1
  1120  0059  0823               	movf	(?___xxtofl+3)^(0+128),w
  1121  005A  00BC               	movwf	(_valor_entry0+3)^(0+128)
  1122  005B  0822               	movf	(?___xxtofl+2)^(0+128),w
  1123  005C  00BB               	movwf	(_valor_entry0+2)^(0+128)
  1124  005D  0821               	movf	(?___xxtofl+1)^(0+128),w
  1125  005E  00BA               	movwf	(_valor_entry0+1)^(0+128)
  1126  005F  0820               	movf	?___xxtofl^(0+128),w
  1127  0060  00B9               	movwf	_valor_entry0^(0+128)
  1128  0061                     l1878:
  1129                           
  1130                           ;main.c: 99:     ADCON0bits.CHS0 = 1;
  1131  0061  1283               	bcf	3,5	;RP0=0, select bank0
  1132  0062  1303               	bcf	3,6	;RP1=0, select bank0
  1133  0063  159F               	bsf	31,3	;volatile
  1134  0064                     l1880:
  1135                           
  1136                           ;main.c: 100:     ADCON0bits.CHS1 = 0;
  1137  0064  121F               	bcf	31,4	;volatile
  1138  0065                     l1882:
  1139                           
  1140                           ;main.c: 101:     ADCON0bits.CHS2 = 0;
  1141  0065  129F               	bcf	31,5	;volatile
  1142  0066                     l1884:
  1143                           
  1144                           ;main.c: 103:     ADCON0bits.GO = 1;
  1145  0066  151F               	bsf	31,2	;volatile
  1146  0067                     l1886:
  1147                           
  1148                           ;main.c: 104:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  1149  0067  2868               	nop2	;2 cycle nop
  1150  0068  2869               	nop2	;2 cycle nop
  1151  0069  0000               	nop
  1152                           
  1153                           ;main.c: 105:     valor_entry1 = ADRESH;
  1154  006A  1283               	bcf	3,5	;RP0=0, select bank0
  1155  006B  1303               	bcf	3,6	;RP1=0, select bank0
  1156  006C  081E               	movf	30,w	;volatile
  1157  006D  1683               	bsf	3,5	;RP0=1, select bank1
  1158  006E  1303               	bcf	3,6	;RP1=0, select bank1
  1159  006F  00AE               	movwf	??_lerSensores^(0+128)
  1160  0070  01AF               	clrf	(??_lerSensores^(0+128)+1)
  1161  0071  01B0               	clrf	(??_lerSensores^(0+128)+2)
  1162  0072  01B1               	clrf	(??_lerSensores^(0+128)+3)
  1163  0073  0831               	movf	(??_lerSensores+3)^(0+128),w
  1164  0074  00A3               	movwf	(___xxtofl@val+3)^(0+128)
  1165  0075  0830               	movf	(??_lerSensores+2)^(0+128),w
  1166  0076  00A2               	movwf	(___xxtofl@val+2)^(0+128)
  1167  0077  082F               	movf	(??_lerSensores+1)^(0+128),w
  1168  0078  00A1               	movwf	(___xxtofl@val+1)^(0+128)
  1169  0079  082E               	movf	??_lerSensores^(0+128),w
  1170  007A  00A0               	movwf	___xxtofl@val^(0+128)
  1171  007B  3000               	movlw	0
  1172  007C  120A  118A  2494  120A  118A  	fcall	___xxtofl
  1173  0081  1683               	bsf	3,5	;RP0=1, select bank1
  1174  0082  1303               	bcf	3,6	;RP1=0, select bank1
  1175  0083  0823               	movf	(?___xxtofl+3)^(0+128),w
  1176  0084  1283               	bcf	3,5	;RP0=0, select bank0
  1177  0085  1303               	bcf	3,6	;RP1=0, select bank0
  1178  0086  00EC               	movwf	_valor_entry1+3
  1179  0087  1683               	bsf	3,5	;RP0=1, select bank1
  1180  0088  1303               	bcf	3,6	;RP1=0, select bank1
  1181  0089  0822               	movf	(?___xxtofl+2)^(0+128),w
  1182  008A  1283               	bcf	3,5	;RP0=0, select bank0
  1183  008B  1303               	bcf	3,6	;RP1=0, select bank0
  1184  008C  00EB               	movwf	_valor_entry1+2
  1185  008D  1683               	bsf	3,5	;RP0=1, select bank1
  1186  008E  1303               	bcf	3,6	;RP1=0, select bank1
  1187  008F  0821               	movf	(?___xxtofl+1)^(0+128),w
  1188  0090  1283               	bcf	3,5	;RP0=0, select bank0
  1189  0091  1303               	bcf	3,6	;RP1=0, select bank0
  1190  0092  00EA               	movwf	_valor_entry1+1
  1191  0093  1683               	bsf	3,5	;RP0=1, select bank1
  1192  0094  1303               	bcf	3,6	;RP1=0, select bank1
  1193  0095  0820               	movf	?___xxtofl^(0+128),w
  1194  0096  1283               	bcf	3,5	;RP0=0, select bank0
  1195  0097  1303               	bcf	3,6	;RP1=0, select bank0
  1196  0098  00E9               	movwf	_valor_entry1
  1197  0099                     l1888:
  1198                           
  1199                           ;main.c: 109:     ADCON0bits.CHS0 = 0;
  1200  0099  119F               	bcf	31,3	;volatile
  1201  009A                     l1890:
  1202                           
  1203                           ;main.c: 110:     ADCON0bits.CHS1 = 1;
  1204  009A  161F               	bsf	31,4	;volatile
  1205  009B                     l1892:
  1206                           
  1207                           ;main.c: 111:     ADCON0bits.CHS2 = 0;
  1208  009B  129F               	bcf	31,5	;volatile
  1209  009C                     l1894:
  1210                           
  1211                           ;main.c: 113:     ADCON0bits.GO = 1;
  1212  009C  151F               	bsf	31,2	;volatile
  1213  009D                     l1896:
  1214                           
  1215                           ;main.c: 114:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  1216  009D  289E               	nop2	;2 cycle nop
  1217  009E  289F               	nop2	;2 cycle nop
  1218  009F  0000               	nop
  1219                           
  1220                           ;main.c: 115:     valor_entry2 = ADRESH;
  1221  00A0  1283               	bcf	3,5	;RP0=0, select bank0
  1222  00A1  1303               	bcf	3,6	;RP1=0, select bank0
  1223  00A2  081E               	movf	30,w	;volatile
  1224  00A3  1683               	bsf	3,5	;RP0=1, select bank1
  1225  00A4  1303               	bcf	3,6	;RP1=0, select bank1
  1226  00A5  00AE               	movwf	??_lerSensores^(0+128)
  1227  00A6  01AF               	clrf	(??_lerSensores^(0+128)+1)
  1228  00A7  01B0               	clrf	(??_lerSensores^(0+128)+2)
  1229  00A8  01B1               	clrf	(??_lerSensores^(0+128)+3)
  1230  00A9  0831               	movf	(??_lerSensores+3)^(0+128),w
  1231  00AA  00A3               	movwf	(___xxtofl@val+3)^(0+128)
  1232  00AB  0830               	movf	(??_lerSensores+2)^(0+128),w
  1233  00AC  00A2               	movwf	(___xxtofl@val+2)^(0+128)
  1234  00AD  082F               	movf	(??_lerSensores+1)^(0+128),w
  1235  00AE  00A1               	movwf	(___xxtofl@val+1)^(0+128)
  1236  00AF  082E               	movf	??_lerSensores^(0+128),w
  1237  00B0  00A0               	movwf	___xxtofl@val^(0+128)
  1238  00B1  3000               	movlw	0
  1239  00B2  120A  118A  2494  120A  118A  	fcall	___xxtofl
  1240  00B7  1683               	bsf	3,5	;RP0=1, select bank1
  1241  00B8  1303               	bcf	3,6	;RP1=0, select bank1
  1242  00B9  0823               	movf	(?___xxtofl+3)^(0+128),w
  1243  00BA  00B8               	movwf	(_valor_entry2+3)^(0+128)
  1244  00BB  0822               	movf	(?___xxtofl+2)^(0+128),w
  1245  00BC  00B7               	movwf	(_valor_entry2+2)^(0+128)
  1246  00BD  0821               	movf	(?___xxtofl+1)^(0+128),w
  1247  00BE  00B6               	movwf	(_valor_entry2+1)^(0+128)
  1248  00BF  0820               	movf	?___xxtofl^(0+128),w
  1249  00C0  00B5               	movwf	_valor_entry2^(0+128)
  1250  00C1                     l1898:
  1251                           
  1252                           ;main.c: 118:     ADCON0bits.CHS0 = 1;
  1253  00C1  1283               	bcf	3,5	;RP0=0, select bank0
  1254  00C2  1303               	bcf	3,6	;RP1=0, select bank0
  1255  00C3  159F               	bsf	31,3	;volatile
  1256  00C4                     l1900:
  1257                           
  1258                           ;main.c: 119:     ADCON0bits.CHS1 = 1;
  1259  00C4  161F               	bsf	31,4	;volatile
  1260  00C5                     l1902:
  1261                           
  1262                           ;main.c: 120:     ADCON0bits.CHS2 = 0;
  1263  00C5  129F               	bcf	31,5	;volatile
  1264  00C6                     l1904:
  1265                           
  1266                           ;main.c: 122:     ADCON0bits.GO = 1;
  1267  00C6  151F               	bsf	31,2	;volatile
  1268  00C7                     l1906:
  1269                           
  1270                           ;main.c: 123:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  1271  00C7  28C8               	nop2	;2 cycle nop
  1272  00C8  28C9               	nop2	;2 cycle nop
  1273  00C9  0000               	nop
  1274                           
  1275                           ;main.c: 124:     valor_entry3 = ADRESH;
  1276  00CA  1283               	bcf	3,5	;RP0=0, select bank0
  1277  00CB  1303               	bcf	3,6	;RP1=0, select bank0
  1278  00CC  081E               	movf	30,w	;volatile
  1279  00CD  1683               	bsf	3,5	;RP0=1, select bank1
  1280  00CE  1303               	bcf	3,6	;RP1=0, select bank1
  1281  00CF  00AE               	movwf	??_lerSensores^(0+128)
  1282  00D0  01AF               	clrf	(??_lerSensores^(0+128)+1)
  1283  00D1  01B0               	clrf	(??_lerSensores^(0+128)+2)
  1284  00D2  01B1               	clrf	(??_lerSensores^(0+128)+3)
  1285  00D3  0831               	movf	(??_lerSensores+3)^(0+128),w
  1286  00D4  00A3               	movwf	(___xxtofl@val+3)^(0+128)
  1287  00D5  0830               	movf	(??_lerSensores+2)^(0+128),w
  1288  00D6  00A2               	movwf	(___xxtofl@val+2)^(0+128)
  1289  00D7  082F               	movf	(??_lerSensores+1)^(0+128),w
  1290  00D8  00A1               	movwf	(___xxtofl@val+1)^(0+128)
  1291  00D9  082E               	movf	??_lerSensores^(0+128),w
  1292  00DA  00A0               	movwf	___xxtofl@val^(0+128)
  1293  00DB  3000               	movlw	0
  1294  00DC  120A  118A  2494  120A  118A  	fcall	___xxtofl
  1295  00E1  1683               	bsf	3,5	;RP0=1, select bank1
  1296  00E2  1303               	bcf	3,6	;RP1=0, select bank1
  1297  00E3  0823               	movf	(?___xxtofl+3)^(0+128),w
  1298  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  1299  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  1300  00E6  00E8               	movwf	_valor_entry3+3
  1301  00E7  1683               	bsf	3,5	;RP0=1, select bank1
  1302  00E8  1303               	bcf	3,6	;RP1=0, select bank1
  1303  00E9  0822               	movf	(?___xxtofl+2)^(0+128),w
  1304  00EA  1283               	bcf	3,5	;RP0=0, select bank0
  1305  00EB  1303               	bcf	3,6	;RP1=0, select bank0
  1306  00EC  00E7               	movwf	_valor_entry3+2
  1307  00ED  1683               	bsf	3,5	;RP0=1, select bank1
  1308  00EE  1303               	bcf	3,6	;RP1=0, select bank1
  1309  00EF  0821               	movf	(?___xxtofl+1)^(0+128),w
  1310  00F0  1283               	bcf	3,5	;RP0=0, select bank0
  1311  00F1  1303               	bcf	3,6	;RP1=0, select bank0
  1312  00F2  00E6               	movwf	_valor_entry3+1
  1313  00F3  1683               	bsf	3,5	;RP0=1, select bank1
  1314  00F4  1303               	bcf	3,6	;RP1=0, select bank1
  1315  00F5  0820               	movf	?___xxtofl^(0+128),w
  1316  00F6  1283               	bcf	3,5	;RP0=0, select bank0
  1317  00F7  1303               	bcf	3,6	;RP1=0, select bank0
  1318  00F8  00E5               	movwf	_valor_entry3
  1319  00F9                     l1908:
  1320                           
  1321                           ;main.c: 127:     ADCON0bits.CHS0 = 0;
  1322  00F9  119F               	bcf	31,3	;volatile
  1323  00FA                     l1910:
  1324                           
  1325                           ;main.c: 128:     ADCON0bits.CHS1 = 0;
  1326  00FA  121F               	bcf	31,4	;volatile
  1327  00FB                     l1912:
  1328                           
  1329                           ;main.c: 129:     ADCON0bits.CHS2 = 1;
  1330  00FB  169F               	bsf	31,5	;volatile
  1331  00FC                     l1914:
  1332                           
  1333                           ;main.c: 131:     ADCON0bits.GO = 1;
  1334  00FC  151F               	bsf	31,2	;volatile
  1335  00FD                     l1916:
  1336                           
  1337                           ;main.c: 132:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  1338  00FD  28FE               	nop2	;2 cycle nop
  1339  00FE  28FF               	nop2	;2 cycle nop
  1340  00FF  0000               	nop
  1341                           
  1342                           ;main.c: 133:     valor_entry4 = ADRESH;
  1343  0100  1283               	bcf	3,5	;RP0=0, select bank0
  1344  0101  1303               	bcf	3,6	;RP1=0, select bank0
  1345  0102  081E               	movf	30,w	;volatile
  1346  0103  1683               	bsf	3,5	;RP0=1, select bank1
  1347  0104  1303               	bcf	3,6	;RP1=0, select bank1
  1348  0105  00AE               	movwf	??_lerSensores^(0+128)
  1349  0106  01AF               	clrf	(??_lerSensores^(0+128)+1)
  1350  0107  01B0               	clrf	(??_lerSensores^(0+128)+2)
  1351  0108  01B1               	clrf	(??_lerSensores^(0+128)+3)
  1352  0109  0831               	movf	(??_lerSensores+3)^(0+128),w
  1353  010A  00A3               	movwf	(___xxtofl@val+3)^(0+128)
  1354  010B  0830               	movf	(??_lerSensores+2)^(0+128),w
  1355  010C  00A2               	movwf	(___xxtofl@val+2)^(0+128)
  1356  010D  082F               	movf	(??_lerSensores+1)^(0+128),w
  1357  010E  00A1               	movwf	(___xxtofl@val+1)^(0+128)
  1358  010F  082E               	movf	??_lerSensores^(0+128),w
  1359  0110  00A0               	movwf	___xxtofl@val^(0+128)
  1360  0111  3000               	movlw	0
  1361  0112  120A  118A  2494  120A  118A  	fcall	___xxtofl
  1362  0117  1683               	bsf	3,5	;RP0=1, select bank1
  1363  0118  1303               	bcf	3,6	;RP1=0, select bank1
  1364  0119  0823               	movf	(?___xxtofl+3)^(0+128),w
  1365  011A  1283               	bcf	3,5	;RP0=0, select bank0
  1366  011B  1303               	bcf	3,6	;RP1=0, select bank0
  1367  011C  00E4               	movwf	_valor_entry4+3
  1368  011D  1683               	bsf	3,5	;RP0=1, select bank1
  1369  011E  1303               	bcf	3,6	;RP1=0, select bank1
  1370  011F  0822               	movf	(?___xxtofl+2)^(0+128),w
  1371  0120  1283               	bcf	3,5	;RP0=0, select bank0
  1372  0121  1303               	bcf	3,6	;RP1=0, select bank0
  1373  0122  00E3               	movwf	_valor_entry4+2
  1374  0123  1683               	bsf	3,5	;RP0=1, select bank1
  1375  0124  1303               	bcf	3,6	;RP1=0, select bank1
  1376  0125  0821               	movf	(?___xxtofl+1)^(0+128),w
  1377  0126  1283               	bcf	3,5	;RP0=0, select bank0
  1378  0127  1303               	bcf	3,6	;RP1=0, select bank0
  1379  0128  00E2               	movwf	_valor_entry4+1
  1380  0129  1683               	bsf	3,5	;RP0=1, select bank1
  1381  012A  1303               	bcf	3,6	;RP1=0, select bank1
  1382  012B  0820               	movf	?___xxtofl^(0+128),w
  1383  012C  1283               	bcf	3,5	;RP0=0, select bank0
  1384  012D  1303               	bcf	3,6	;RP1=0, select bank0
  1385  012E  00E1               	movwf	_valor_entry4
  1386  012F                     l1918:
  1387                           
  1388                           ;main.c: 137:     ADCON0bits.CHS0 = 1;
  1389  012F  159F               	bsf	31,3	;volatile
  1390  0130                     l1920:
  1391                           
  1392                           ;main.c: 138:     ADCON0bits.CHS1 = 0;
  1393  0130  121F               	bcf	31,4	;volatile
  1394  0131                     l1922:
  1395                           
  1396                           ;main.c: 139:     ADCON0bits.CHS2 = 1;
  1397  0131  169F               	bsf	31,5	;volatile
  1398  0132                     l1924:
  1399                           
  1400                           ;main.c: 141:     ADCON0bits.GO = 1;
  1401  0132  151F               	bsf	31,2	;volatile
  1402  0133                     l1926:
  1403                           
  1404                           ;main.c: 142:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  1405  0133  2934               	nop2	;2 cycle nop
  1406  0134  2935               	nop2	;2 cycle nop
  1407  0135  0000               	nop
  1408                           
  1409                           ;main.c: 143:     valor_entry5 = ADRESH;
  1410  0136  1283               	bcf	3,5	;RP0=0, select bank0
  1411  0137  1303               	bcf	3,6	;RP1=0, select bank0
  1412  0138  081E               	movf	30,w	;volatile
  1413  0139  1683               	bsf	3,5	;RP0=1, select bank1
  1414  013A  1303               	bcf	3,6	;RP1=0, select bank1
  1415  013B  00AE               	movwf	??_lerSensores^(0+128)
  1416  013C  01AF               	clrf	(??_lerSensores^(0+128)+1)
  1417  013D  01B0               	clrf	(??_lerSensores^(0+128)+2)
  1418  013E  01B1               	clrf	(??_lerSensores^(0+128)+3)
  1419  013F  0831               	movf	(??_lerSensores+3)^(0+128),w
  1420  0140  00A3               	movwf	(___xxtofl@val+3)^(0+128)
  1421  0141  0830               	movf	(??_lerSensores+2)^(0+128),w
  1422  0142  00A2               	movwf	(___xxtofl@val+2)^(0+128)
  1423  0143  082F               	movf	(??_lerSensores+1)^(0+128),w
  1424  0144  00A1               	movwf	(___xxtofl@val+1)^(0+128)
  1425  0145  082E               	movf	??_lerSensores^(0+128),w
  1426  0146  00A0               	movwf	___xxtofl@val^(0+128)
  1427  0147  3000               	movlw	0
  1428  0148  120A  118A  2494  120A  118A  	fcall	___xxtofl
  1429  014D  1683               	bsf	3,5	;RP0=1, select bank1
  1430  014E  1303               	bcf	3,6	;RP1=0, select bank1
  1431  014F  0823               	movf	(?___xxtofl+3)^(0+128),w
  1432  0150  1283               	bcf	3,5	;RP0=0, select bank0
  1433  0151  1303               	bcf	3,6	;RP1=0, select bank0
  1434  0152  00E0               	movwf	_valor_entry5+3
  1435  0153  1683               	bsf	3,5	;RP0=1, select bank1
  1436  0154  1303               	bcf	3,6	;RP1=0, select bank1
  1437  0155  0822               	movf	(?___xxtofl+2)^(0+128),w
  1438  0156  1283               	bcf	3,5	;RP0=0, select bank0
  1439  0157  1303               	bcf	3,6	;RP1=0, select bank0
  1440  0158  00DF               	movwf	_valor_entry5+2
  1441  0159  1683               	bsf	3,5	;RP0=1, select bank1
  1442  015A  1303               	bcf	3,6	;RP1=0, select bank1
  1443  015B  0821               	movf	(?___xxtofl+1)^(0+128),w
  1444  015C  1283               	bcf	3,5	;RP0=0, select bank0
  1445  015D  1303               	bcf	3,6	;RP1=0, select bank0
  1446  015E  00DE               	movwf	_valor_entry5+1
  1447  015F  1683               	bsf	3,5	;RP0=1, select bank1
  1448  0160  1303               	bcf	3,6	;RP1=0, select bank1
  1449  0161  0820               	movf	?___xxtofl^(0+128),w
  1450  0162  1283               	bcf	3,5	;RP0=0, select bank0
  1451  0163  1303               	bcf	3,6	;RP1=0, select bank0
  1452  0164  00DD               	movwf	_valor_entry5
  1453  0165                     l1928:
  1454                           
  1455                           ;main.c: 148:     ADCON0bits.CHS0 = 0;
  1456  0165  119F               	bcf	31,3	;volatile
  1457  0166                     l1930:
  1458                           
  1459                           ;main.c: 149:     ADCON0bits.CHS1 = 1;
  1460  0166  161F               	bsf	31,4	;volatile
  1461  0167                     l1932:
  1462                           
  1463                           ;main.c: 150:     ADCON0bits.CHS2 = 1;
  1464  0167  169F               	bsf	31,5	;volatile
  1465  0168                     l1934:
  1466                           
  1467                           ;main.c: 152:     ADCON0bits.GO = 1;
  1468  0168  151F               	bsf	31,2	;volatile
  1469  0169                     l1936:
  1470                           
  1471                           ;main.c: 153:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  1472  0169  296A               	nop2	;2 cycle nop
  1473  016A  296B               	nop2	;2 cycle nop
  1474  016B  0000               	nop
  1475                           
  1476                           ;main.c: 154:     valor_entry6 = ADRESH;
  1477  016C  1283               	bcf	3,5	;RP0=0, select bank0
  1478  016D  1303               	bcf	3,6	;RP1=0, select bank0
  1479  016E  081E               	movf	30,w	;volatile
  1480  016F  1683               	bsf	3,5	;RP0=1, select bank1
  1481  0170  1303               	bcf	3,6	;RP1=0, select bank1
  1482  0171  00AE               	movwf	??_lerSensores^(0+128)
  1483  0172  01AF               	clrf	(??_lerSensores^(0+128)+1)
  1484  0173  01B0               	clrf	(??_lerSensores^(0+128)+2)
  1485  0174  01B1               	clrf	(??_lerSensores^(0+128)+3)
  1486  0175  0831               	movf	(??_lerSensores+3)^(0+128),w
  1487  0176  00A3               	movwf	(___xxtofl@val+3)^(0+128)
  1488  0177  0830               	movf	(??_lerSensores+2)^(0+128),w
  1489  0178  00A2               	movwf	(___xxtofl@val+2)^(0+128)
  1490  0179  082F               	movf	(??_lerSensores+1)^(0+128),w
  1491  017A  00A1               	movwf	(___xxtofl@val+1)^(0+128)
  1492  017B  082E               	movf	??_lerSensores^(0+128),w
  1493  017C  00A0               	movwf	___xxtofl@val^(0+128)
  1494  017D  3000               	movlw	0
  1495  017E  120A  118A  2494  120A  118A  	fcall	___xxtofl
  1496  0183  1683               	bsf	3,5	;RP0=1, select bank1
  1497  0184  1303               	bcf	3,6	;RP1=0, select bank1
  1498  0185  0823               	movf	(?___xxtofl+3)^(0+128),w
  1499  0186  1283               	bcf	3,5	;RP0=0, select bank0
  1500  0187  1303               	bcf	3,6	;RP1=0, select bank0
  1501  0188  00DC               	movwf	_valor_entry6+3
  1502  0189  1683               	bsf	3,5	;RP0=1, select bank1
  1503  018A  1303               	bcf	3,6	;RP1=0, select bank1
  1504  018B  0822               	movf	(?___xxtofl+2)^(0+128),w
  1505  018C  1283               	bcf	3,5	;RP0=0, select bank0
  1506  018D  1303               	bcf	3,6	;RP1=0, select bank0
  1507  018E  00DB               	movwf	_valor_entry6+2
  1508  018F  1683               	bsf	3,5	;RP0=1, select bank1
  1509  0190  1303               	bcf	3,6	;RP1=0, select bank1
  1510  0191  0821               	movf	(?___xxtofl+1)^(0+128),w
  1511  0192  1283               	bcf	3,5	;RP0=0, select bank0
  1512  0193  1303               	bcf	3,6	;RP1=0, select bank0
  1513  0194  00DA               	movwf	_valor_entry6+1
  1514  0195  1683               	bsf	3,5	;RP0=1, select bank1
  1515  0196  1303               	bcf	3,6	;RP1=0, select bank1
  1516  0197  0820               	movf	?___xxtofl^(0+128),w
  1517  0198  1283               	bcf	3,5	;RP0=0, select bank0
  1518  0199  1303               	bcf	3,6	;RP1=0, select bank0
  1519  019A  00D9               	movwf	_valor_entry6
  1520  019B                     l186:
  1521  019B  0008               	return
  1522  019C                     __end_of_lerSensores:
  1523                           
  1524                           	psect	text3
  1525  0494                     __ptext3:	
  1526 ;; *************** function ___xxtofl *****************
  1527 ;; Defined at:
  1528 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\xxtofl.c"
  1529 ;; Parameters:    Size  Location     Type
  1530 ;;  sign            1    wreg     unsigned char 
  1531 ;;  val             4    0[BANK1 ] long 
  1532 ;; Auto vars:     Size  Location     Type
  1533 ;;  sign            1    8[BANK1 ] unsigned char 
  1534 ;;  arg             4   10[BANK1 ] unsigned long 
  1535 ;;  exp             1    9[BANK1 ] unsigned char 
  1536 ;; Return value:  Size  Location     Type
  1537 ;;                  4    0[BANK1 ] unsigned char 
  1538 ;; Registers used:
  1539 ;;		wreg, status,2, status,0
  1540 ;; Tracked objects:
  1541 ;;		On entry : 0/0
  1542 ;;		On exit  : 0/0
  1543 ;;		Unchanged: 0/0
  1544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1545 ;;      Params:         0       0       4       0       0
  1546 ;;      Locals:         0       0       6       0       0
  1547 ;;      Temps:          0       0       4       0       0
  1548 ;;      Totals:         0       0      14       0       0
  1549 ;;Total ram usage:       14 bytes
  1550 ;; Hardware stack levels used: 1
  1551 ;; Hardware stack levels required when called: 5
  1552 ;; This function calls:
  1553 ;;		Nothing
  1554 ;; This function is called by:
  1555 ;;		_lerSensores
  1556 ;; This function uses a non-reentrant model
  1557 ;;
  1558                           
  1559                           
  1560                           ;psect for function ___xxtofl
  1561  0494                     ___xxtofl:
  1562                           
  1563                           ;incstack = 0
  1564                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  1565                           ;___xxtofl@sign stored from wreg
  1566  0494  1683               	bsf	3,5	;RP0=1, select bank1
  1567  0495  1303               	bcf	3,6	;RP1=0, select bank1
  1568  0496  00A8               	movwf	___xxtofl@sign^(0+128)
  1569  0497                     l1730:
  1570  0497  0828               	movf	___xxtofl@sign^(0+128),w
  1571  0498  1903               	btfsc	3,2
  1572  0499  2C9B               	goto	u1401
  1573  049A  2C9C               	goto	u1400
  1574  049B                     u1401:
  1575  049B  2CB0               	goto	l1736
  1576  049C                     u1400:
  1577  049C                     l1732:
  1578  049C  1FA3               	btfss	(___xxtofl@val+3)^(0+128),7
  1579  049D  2C9F               	goto	u1411
  1580  049E  2CA0               	goto	u1410
  1581  049F                     u1411:
  1582  049F  2CB0               	goto	l1736
  1583  04A0                     u1410:
  1584  04A0                     l1734:
  1585  04A0  0920               	comf	___xxtofl@val^(0+128),w
  1586  04A1  00AA               	movwf	___xxtofl@arg^(0+128)
  1587  04A2  0921               	comf	(___xxtofl@val^(0+128)+1),w
  1588  04A3  00AB               	movwf	(___xxtofl@arg+1)^(0+128)
  1589  04A4  0922               	comf	(___xxtofl@val^(0+128)+2),w
  1590  04A5  00AC               	movwf	(___xxtofl@arg+2)^(0+128)
  1591  04A6  0923               	comf	(___xxtofl@val^(0+128)+3),w
  1592  04A7  00AD               	movwf	(___xxtofl@arg+3)^(0+128)
  1593  04A8  0AAA               	incf	___xxtofl@arg^(0+128),f
  1594  04A9  1903               	skipnz
  1595  04AA  0AAB               	incf	(___xxtofl@arg+1)^(0+128),f
  1596  04AB  1903               	skipnz
  1597  04AC  0AAC               	incf	(___xxtofl@arg+2)^(0+128),f
  1598  04AD  1903               	skipnz
  1599  04AE  0AAD               	incf	(___xxtofl@arg+3)^(0+128),f
  1600  04AF  2CB8               	goto	l779
  1601  04B0                     l1736:
  1602  04B0  0823               	movf	(___xxtofl@val+3)^(0+128),w
  1603  04B1  00AD               	movwf	(___xxtofl@arg+3)^(0+128)
  1604  04B2  0822               	movf	(___xxtofl@val+2)^(0+128),w
  1605  04B3  00AC               	movwf	(___xxtofl@arg+2)^(0+128)
  1606  04B4  0821               	movf	(___xxtofl@val+1)^(0+128),w
  1607  04B5  00AB               	movwf	(___xxtofl@arg+1)^(0+128)
  1608  04B6  0820               	movf	___xxtofl@val^(0+128),w
  1609  04B7  00AA               	movwf	___xxtofl@arg^(0+128)
  1610  04B8                     l779:
  1611  04B8  0823               	movf	(___xxtofl@val+3)^(0+128),w
  1612  04B9  0422               	iorwf	(___xxtofl@val+2)^(0+128),w
  1613  04BA  0421               	iorwf	(___xxtofl@val+1)^(0+128),w
  1614  04BB  0420               	iorwf	___xxtofl@val^(0+128),w
  1615  04BC  1D03               	skipz
  1616  04BD  2CBF               	goto	u1421
  1617  04BE  2CC0               	goto	u1420
  1618  04BF                     u1421:
  1619  04BF  2CC9               	goto	l1742
  1620  04C0                     u1420:
  1621  04C0                     l1738:
  1622  04C0  3000               	movlw	0
  1623  04C1  00A3               	movwf	(?___xxtofl+3)^(0+128)
  1624  04C2  3000               	movlw	0
  1625  04C3  00A2               	movwf	(?___xxtofl+2)^(0+128)
  1626  04C4  3000               	movlw	0
  1627  04C5  00A1               	movwf	(?___xxtofl+1)^(0+128)
  1628  04C6  3000               	movlw	0
  1629  04C7  00A0               	movwf	?___xxtofl^(0+128)
  1630  04C8  2D4F               	goto	l781
  1631  04C9                     l1742:
  1632  04C9  3096               	movlw	150
  1633  04CA  00A4               	movwf	??___xxtofl^(0+128)
  1634  04CB  0824               	movf	??___xxtofl^(0+128),w
  1635  04CC  00A9               	movwf	___xxtofl@exp^(0+128)
  1636  04CD  2CDB               	goto	l1746
  1637  04CE                     l1744:
  1638  04CE  3001               	movlw	1
  1639  04CF  00A4               	movwf	??___xxtofl^(0+128)
  1640  04D0  0824               	movf	??___xxtofl^(0+128),w
  1641  04D1  07A9               	addwf	___xxtofl@exp^(0+128),f
  1642  04D2  3001               	movlw	1
  1643  04D3                     u1435:
  1644  04D3  1003               	clrc
  1645  04D4  0CAD               	rrf	(___xxtofl@arg+3)^(0+128),f
  1646  04D5  0CAC               	rrf	(___xxtofl@arg+2)^(0+128),f
  1647  04D6  0CAB               	rrf	(___xxtofl@arg+1)^(0+128),f
  1648  04D7  0CAA               	rrf	___xxtofl@arg^(0+128),f
  1649  04D8  3EFF               	addlw	-1
  1650  04D9  1D03               	skipz
  1651  04DA  2CD3               	goto	u1435
  1652  04DB                     l1746:
  1653  04DB  30FE               	movlw	254
  1654  04DC  052D               	andwf	(___xxtofl@arg+3)^(0+128),w
  1655  04DD  1D03               	btfss	3,2
  1656  04DE  2CE0               	goto	u1441
  1657  04DF  2CE1               	goto	u1440
  1658  04E0                     u1441:
  1659  04E0  2CCE               	goto	l1744
  1660  04E1                     u1440:
  1661  04E1  2CFD               	goto	l785
  1662  04E2                     l1748:
  1663  04E2  3001               	movlw	1
  1664  04E3  00A4               	movwf	??___xxtofl^(0+128)
  1665  04E4  0824               	movf	??___xxtofl^(0+128),w
  1666  04E5  07A9               	addwf	___xxtofl@exp^(0+128),f
  1667  04E6                     l1750:
  1668  04E6  3001               	movlw	1
  1669  04E7  07AA               	addwf	___xxtofl@arg^(0+128),f
  1670  04E8  3000               	movlw	0
  1671  04E9  1803               	skipnc
  1672  04EA  3001               	movlw	1
  1673  04EB  07AB               	addwf	(___xxtofl@arg+1)^(0+128),f
  1674  04EC  3000               	movlw	0
  1675  04ED  1803               	skipnc
  1676  04EE  3001               	movlw	1
  1677  04EF  07AC               	addwf	(___xxtofl@arg+2)^(0+128),f
  1678  04F0  3000               	movlw	0
  1679  04F1  1803               	skipnc
  1680  04F2  3001               	movlw	1
  1681  04F3  07AD               	addwf	(___xxtofl@arg+3)^(0+128),f
  1682  04F4                     l1752:
  1683  04F4  3001               	movlw	1
  1684  04F5                     u1455:
  1685  04F5  1003               	clrc
  1686  04F6  0CAD               	rrf	(___xxtofl@arg+3)^(0+128),f
  1687  04F7  0CAC               	rrf	(___xxtofl@arg+2)^(0+128),f
  1688  04F8  0CAB               	rrf	(___xxtofl@arg+1)^(0+128),f
  1689  04F9  0CAA               	rrf	___xxtofl@arg^(0+128),f
  1690  04FA  3EFF               	addlw	-1
  1691  04FB  1D03               	skipz
  1692  04FC  2CF5               	goto	u1455
  1693  04FD                     l785:
  1694  04FD  30FF               	movlw	255
  1695  04FE  052D               	andwf	(___xxtofl@arg+3)^(0+128),w
  1696  04FF  1D03               	btfss	3,2
  1697  0500  2D02               	goto	u1461
  1698  0501  2D03               	goto	u1460
  1699  0502                     u1461:
  1700  0502  2CE2               	goto	l1748
  1701  0503                     u1460:
  1702  0503  2D0F               	goto	l1756
  1703  0504                     l1754:
  1704  0504  3001               	movlw	1
  1705  0505  02A9               	subwf	___xxtofl@exp^(0+128),f
  1706  0506  3001               	movlw	1
  1707  0507  00A4               	movwf	??___xxtofl^(0+128)
  1708  0508                     u1475:
  1709  0508  1003               	clrc
  1710  0509  0DAA               	rlf	___xxtofl@arg^(0+128),f
  1711  050A  0DAB               	rlf	(___xxtofl@arg+1)^(0+128),f
  1712  050B  0DAC               	rlf	(___xxtofl@arg+2)^(0+128),f
  1713  050C  0DAD               	rlf	(___xxtofl@arg+3)^(0+128),f
  1714  050D  0BA4               	decfsz	??___xxtofl^(0+128),f
  1715  050E  2D08               	goto	u1475
  1716  050F                     l1756:
  1717  050F  1BAC               	btfsc	(___xxtofl@arg+2)^(0+128),7
  1718  0510  2D12               	goto	u1481
  1719  0511  2D13               	goto	u1480
  1720  0512                     u1481:
  1721  0512  2D19               	goto	l792
  1722  0513                     u1480:
  1723  0513                     l1758:
  1724  0513  3002               	movlw	2
  1725  0514  0229               	subwf	___xxtofl@exp^(0+128),w
  1726  0515  1803               	skipnc
  1727  0516  2D18               	goto	u1491
  1728  0517  2D19               	goto	u1490
  1729  0518                     u1491:
  1730  0518  2D04               	goto	l1754
  1731  0519                     u1490:
  1732  0519                     l792:
  1733  0519  1829               	btfsc	___xxtofl@exp^(0+128),0
  1734  051A  2D1C               	goto	u1501
  1735  051B  2D1D               	goto	u1500
  1736  051C                     u1501:
  1737  051C  2D25               	goto	l793
  1738  051D                     u1500:
  1739  051D                     l1760:
  1740  051D  30FF               	movlw	255
  1741  051E  05AA               	andwf	___xxtofl@arg^(0+128),f
  1742  051F  30FF               	movlw	255
  1743  0520  05AB               	andwf	(___xxtofl@arg+1)^(0+128),f
  1744  0521  307F               	movlw	127
  1745  0522  05AC               	andwf	(___xxtofl@arg+2)^(0+128),f
  1746  0523  30FF               	movlw	255
  1747  0524  05AD               	andwf	(___xxtofl@arg+3)^(0+128),f
  1748  0525                     l793:
  1749  0525  1003               	clrc
  1750  0526  0CA9               	rrf	___xxtofl@exp^(0+128),f
  1751  0527                     l1762:
  1752  0527  0829               	movf	___xxtofl@exp^(0+128),w
  1753  0528  00A4               	movwf	??___xxtofl^(0+128)
  1754  0529  01A5               	clrf	(??___xxtofl^(0+128)+1)
  1755  052A  01A6               	clrf	(??___xxtofl^(0+128)+2)
  1756  052B  01A7               	clrf	(??___xxtofl^(0+128)+3)
  1757  052C  3018               	movlw	24
  1758  052D                     u1515:
  1759  052D  1003               	clrc
  1760  052E  0DA4               	rlf	??___xxtofl^(0+128),f
  1761  052F  0DA5               	rlf	(??___xxtofl^(0+128)+1),f
  1762  0530  0DA6               	rlf	(??___xxtofl^(0+128)+2),f
  1763  0531  0DA7               	rlf	(??___xxtofl^(0+128)+3),f
  1764  0532                     u1510:
  1765  0532  3EFF               	addlw	-1
  1766  0533  1D03               	skipz
  1767  0534  2D2D               	goto	u1515
  1768  0535  0824               	movf	??___xxtofl^(0+128),w
  1769  0536  04AA               	iorwf	___xxtofl@arg^(0+128),f
  1770  0537  0825               	movf	(??___xxtofl+1)^(0+128),w
  1771  0538  04AB               	iorwf	(___xxtofl@arg+1)^(0+128),f
  1772  0539  0826               	movf	(??___xxtofl+2)^(0+128),w
  1773  053A  04AC               	iorwf	(___xxtofl@arg+2)^(0+128),f
  1774  053B  0827               	movf	(??___xxtofl+3)^(0+128),w
  1775  053C  04AD               	iorwf	(___xxtofl@arg+3)^(0+128),f
  1776  053D                     l1764:
  1777  053D  0828               	movf	___xxtofl@sign^(0+128),w
  1778  053E  1903               	btfsc	3,2
  1779  053F  2D41               	goto	u1521
  1780  0540  2D42               	goto	u1520
  1781  0541                     u1521:
  1782  0541  2D47               	goto	l1770
  1783  0542                     u1520:
  1784  0542                     l1766:
  1785  0542  1FA3               	btfss	(___xxtofl@val+3)^(0+128),7
  1786  0543  2D45               	goto	u1531
  1787  0544  2D46               	goto	u1530
  1788  0545                     u1531:
  1789  0545  2D47               	goto	l1770
  1790  0546                     u1530:
  1791  0546                     l1768:
  1792  0546  17AD               	bsf	(___xxtofl@arg^(0+128)+3),7
  1793  0547                     l1770:
  1794  0547  082D               	movf	(___xxtofl@arg+3)^(0+128),w
  1795  0548  00A3               	movwf	(?___xxtofl+3)^(0+128)
  1796  0549  082C               	movf	(___xxtofl@arg+2)^(0+128),w
  1797  054A  00A2               	movwf	(?___xxtofl+2)^(0+128)
  1798  054B  082B               	movf	(___xxtofl@arg+1)^(0+128),w
  1799  054C  00A1               	movwf	(?___xxtofl+1)^(0+128)
  1800  054D  082A               	movf	___xxtofl@arg^(0+128),w
  1801  054E  00A0               	movwf	?___xxtofl^(0+128)
  1802  054F                     l781:
  1803  054F  0008               	return
  1804  0550                     __end_of___xxtofl:
  1805                           
  1806                           	psect	text4
  1807  0743                     __ptext4:	
  1808 ;; *************** function _iniciaPinos *****************
  1809 ;; Defined at:
  1810 ;;		line 233 in file "main.c"
  1811 ;; Parameters:    Size  Location     Type
  1812 ;;		None
  1813 ;; Auto vars:     Size  Location     Type
  1814 ;;		None
  1815 ;; Return value:  Size  Location     Type
  1816 ;;                  1    wreg      void 
  1817 ;; Registers used:
  1818 ;;		wreg, status,2
  1819 ;; Tracked objects:
  1820 ;;		On entry : 0/0
  1821 ;;		On exit  : 0/0
  1822 ;;		Unchanged: 0/0
  1823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1824 ;;      Params:         0       0       0       0       0
  1825 ;;      Locals:         0       0       0       0       0
  1826 ;;      Temps:          0       0       0       0       0
  1827 ;;      Totals:         0       0       0       0       0
  1828 ;;Total ram usage:        0 bytes
  1829 ;; Hardware stack levels used: 1
  1830 ;; Hardware stack levels required when called: 5
  1831 ;; This function calls:
  1832 ;;		Nothing
  1833 ;; This function is called by:
  1834 ;;		_main
  1835 ;; This function uses a non-reentrant model
  1836 ;;
  1837                           
  1838                           
  1839                           ;psect for function _iniciaPinos
  1840  0743                     _iniciaPinos:
  1841  0743                     l1784:	
  1842                           ;incstack = 0
  1843                           ; Regs used in _iniciaPinos: [wreg+status,2]
  1844                           
  1845                           
  1846                           ;main.c: 235:     OPTION_REGbits.nRBPU = 1;
  1847  0743  1683               	bsf	3,5	;RP0=1, select bank1
  1848  0744  1303               	bcf	3,6	;RP1=0, select bank1
  1849  0745  1781               	bsf	1,7	;volatile
  1850                           
  1851                           ;main.c: 237:     TRISBbits.TRISB0 = 1;
  1852  0746  1406               	bsf	6,0	;volatile
  1853                           
  1854                           ;main.c: 238:     TRISBbits.TRISB1 = 0;
  1855  0747  1086               	bcf	6,1	;volatile
  1856                           
  1857                           ;main.c: 239:     TRISBbits.TRISB2 = 0;
  1858  0748  1106               	bcf	6,2	;volatile
  1859                           
  1860                           ;main.c: 240:     TRISBbits.TRISB3 = 1;
  1861  0749  1586               	bsf	6,3	;volatile
  1862                           
  1863                           ;main.c: 241:     TRISBbits.TRISB4 = 0;
  1864  074A  1206               	bcf	6,4	;volatile
  1865                           
  1866                           ;main.c: 242:     TRISBbits.TRISB5 = 0;
  1867  074B  1286               	bcf	6,5	;volatile
  1868                           
  1869                           ;main.c: 243:     TRISBbits.TRISB6 = 0;
  1870  074C  1306               	bcf	6,6	;volatile
  1871                           
  1872                           ;main.c: 244:     TRISBbits.TRISB7 = 0;
  1873  074D  1386               	bcf	6,7	;volatile
  1874                           
  1875                           ;main.c: 246:     OPTION_REGbits.INTEDG = 1;
  1876  074E  1701               	bsf	1,6	;volatile
  1877                           
  1878                           ;main.c: 247:     INTCONbits.GIE = 1;
  1879  074F  178B               	bsf	11,7	;volatile
  1880                           
  1881                           ;main.c: 248:     INTCONbits.INTE = 1;
  1882  0750  160B               	bsf	11,4	;volatile
  1883                           
  1884                           ;main.c: 249:     INTCONbits.INTF = 0;
  1885  0751  108B               	bcf	11,1	;volatile
  1886                           
  1887                           ;main.c: 250:     INTCONbits.PEIE = 1;
  1888  0752  170B               	bsf	11,6	;volatile
  1889                           
  1890                           ;main.c: 252:     OPTION_REGbits.PS0 = 1;
  1891  0753  1401               	bsf	1,0	;volatile
  1892                           
  1893                           ;main.c: 253:     OPTION_REGbits.PS1 = 1;
  1894  0754  1481               	bsf	1,1	;volatile
  1895                           
  1896                           ;main.c: 254:     OPTION_REGbits.PS2 = 1;
  1897  0755  1501               	bsf	1,2	;volatile
  1898                           
  1899                           ;main.c: 255:     OPTION_REGbits.PSA = 1;
  1900  0756  1581               	bsf	1,3	;volatile
  1901                           
  1902                           ;main.c: 257:     T1CONbits.TMR1CS = 0;
  1903  0757  1283               	bcf	3,5	;RP0=0, select bank0
  1904  0758  1303               	bcf	3,6	;RP1=0, select bank0
  1905  0759  1090               	bcf	16,1	;volatile
  1906                           
  1907                           ;main.c: 258:     T1CONbits.T1CKPS0 = 1;
  1908  075A  1610               	bsf	16,4	;volatile
  1909                           
  1910                           ;main.c: 259:     T1CONbits.T1CKPS1 = 0;
  1911  075B  1290               	bcf	16,5	;volatile
  1912  075C                     l1786:
  1913                           
  1914                           ;main.c: 261:     TMR1L = 0xDC;
  1915  075C  30DC               	movlw	220
  1916  075D  008E               	movwf	14	;volatile
  1917                           
  1918                           ;main.c: 262:     TMR1H = 0x0B;
  1919  075E  300B               	movlw	11
  1920  075F  008F               	movwf	15	;volatile
  1921  0760                     l1788:
  1922                           
  1923                           ;main.c: 264:     PIE1bits.TMR1IE=1;
  1924  0760  1683               	bsf	3,5	;RP0=1, select bank1
  1925  0761  1303               	bcf	3,6	;RP1=0, select bank1
  1926  0762  140C               	bsf	12,0	;volatile
  1927  0763                     l1790:
  1928                           
  1929                           ;main.c: 266:     T1CONbits.TMR1ON = 1;
  1930  0763  1283               	bcf	3,5	;RP0=0, select bank0
  1931  0764  1303               	bcf	3,6	;RP1=0, select bank0
  1932  0765  1410               	bsf	16,0	;volatile
  1933                           
  1934                           ;main.c: 268:     TRISA = 0b11111111;
  1935  0766  30FF               	movlw	255
  1936  0767  1683               	bsf	3,5	;RP0=1, select bank1
  1937  0768  1303               	bcf	3,6	;RP1=0, select bank1
  1938  0769  0085               	movwf	5	;volatile
  1939  076A                     l1792:
  1940                           
  1941                           ;main.c: 269:     TRISC = 0b00000000;
  1942  076A  0187               	clrf	7	;volatile
  1943  076B                     l1794:
  1944                           
  1945                           ;main.c: 270:     TRISD = 0b00000000;
  1946  076B  0188               	clrf	8	;volatile
  1947  076C                     l1796:
  1948                           
  1949                           ;main.c: 273:     ADCON1bits.PCFG0 = 0;
  1950  076C  101F               	bcf	31,0	;volatile
  1951  076D                     l1798:
  1952                           
  1953                           ;main.c: 274:     ADCON1bits.PCFG1 = 0;
  1954  076D  109F               	bcf	31,1	;volatile
  1955  076E                     l1800:
  1956                           
  1957                           ;main.c: 275:     ADCON1bits.PCFG2 = 0;
  1958  076E  111F               	bcf	31,2	;volatile
  1959  076F                     l1802:
  1960                           
  1961                           ;main.c: 276:     ADCON1bits.PCFG3 = 0;
  1962  076F  119F               	bcf	31,3	;volatile
  1963  0770                     l1804:
  1964                           
  1965                           ;main.c: 279:     ADCON0bits.ADCS0 = 0 ;
  1966  0770  1283               	bcf	3,5	;RP0=0, select bank0
  1967  0771  1303               	bcf	3,6	;RP1=0, select bank0
  1968  0772  131F               	bcf	31,6	;volatile
  1969  0773                     l1806:
  1970                           
  1971                           ;main.c: 280:     ADCON0bits.ADCS1 = 0 ;
  1972  0773  139F               	bcf	31,7	;volatile
  1973  0774                     l1808:
  1974                           
  1975                           ;main.c: 282:     ADCON1bits.ADFM = 0 ;
  1976  0774  1683               	bsf	3,5	;RP0=1, select bank1
  1977  0775  1303               	bcf	3,6	;RP1=0, select bank1
  1978  0776  139F               	bcf	31,7	;volatile
  1979  0777                     l1810:
  1980                           
  1981                           ;main.c: 289:     ADRESL = 0x00;
  1982  0777  019E               	clrf	30	;volatile
  1983  0778                     l1812:
  1984                           
  1985                           ;main.c: 290:     ADRESH = 0x00;
  1986  0778  1283               	bcf	3,5	;RP0=0, select bank0
  1987  0779  1303               	bcf	3,6	;RP1=0, select bank0
  1988  077A  019E               	clrf	30	;volatile
  1989  077B                     l1814:
  1990                           
  1991                           ;main.c: 292:     ADCON0bits.ADON = 1;
  1992  077B  141F               	bsf	31,0	;volatile
  1993  077C                     l1816:
  1994                           
  1995                           ;main.c: 294:     PORTBbits.RB0 = 0;
  1996  077C  1006               	bcf	6,0	;volatile
  1997  077D                     l1818:
  1998                           
  1999                           ;main.c: 295:     PORTBbits.RB1 = 0;
  2000  077D  1086               	bcf	6,1	;volatile
  2001  077E                     l1820:
  2002                           
  2003                           ;main.c: 296:     PORTBbits.RB2 = 0;
  2004  077E  1106               	bcf	6,2	;volatile
  2005  077F                     l1822:
  2006                           
  2007                           ;main.c: 297:     PORTBbits.RB3 = 0;
  2008  077F  1186               	bcf	6,3	;volatile
  2009  0780                     l1824:
  2010                           
  2011                           ;main.c: 298:     PORTBbits.RB4 = 0;
  2012  0780  1206               	bcf	6,4	;volatile
  2013  0781                     l1826:
  2014                           
  2015                           ;main.c: 299:     PORTBbits.RB5 = 0;
  2016  0781  1286               	bcf	6,5	;volatile
  2017  0782                     l1828:
  2018                           
  2019                           ;main.c: 300:     PORTBbits.RB6 = 0;
  2020  0782  1306               	bcf	6,6	;volatile
  2021  0783                     l1830:
  2022                           
  2023                           ;main.c: 301:     PORTBbits.RB7 = 0;
  2024  0783  1386               	bcf	6,7	;volatile
  2025  0784                     l1832:
  2026                           
  2027                           ;main.c: 303:     PORTCbits.RC0 = 0;
  2028  0784  1007               	bcf	7,0	;volatile
  2029  0785                     l1834:
  2030                           
  2031                           ;main.c: 304:     PORTCbits.RC1 = 1;
  2032  0785  1487               	bsf	7,1	;volatile
  2033  0786                     l1836:
  2034                           
  2035                           ;main.c: 305:     PORTCbits.RC2 = 1;
  2036  0786  1507               	bsf	7,2	;volatile
  2037  0787                     l1838:
  2038                           
  2039                           ;main.c: 306:     PORTCbits.RC3 = 1;
  2040  0787  1587               	bsf	7,3	;volatile
  2041  0788                     l1840:
  2042                           
  2043                           ;main.c: 307:     PORTCbits.RC4 = 0;
  2044  0788  1207               	bcf	7,4	;volatile
  2045  0789                     l1842:
  2046                           
  2047                           ;main.c: 308:     PORTCbits.RC5 = 0;
  2048  0789  1287               	bcf	7,5	;volatile
  2049  078A                     l1844:
  2050                           
  2051                           ;main.c: 309:     PORTCbits.RC6 = 0;
  2052  078A  1307               	bcf	7,6	;volatile
  2053  078B                     l1846:
  2054                           
  2055                           ;main.c: 310:     PORTCbits.RC7 = 0;
  2056  078B  1387               	bcf	7,7	;volatile
  2057  078C                     l1848:
  2058                           
  2059                           ;main.c: 312:     PORTDbits.RD0 = 1;
  2060  078C  1408               	bsf	8,0	;volatile
  2061  078D                     l1850:
  2062                           
  2063                           ;main.c: 313:     PORTDbits.RD1 = 0;
  2064  078D  1088               	bcf	8,1	;volatile
  2065  078E                     l1852:
  2066                           
  2067                           ;main.c: 314:     PORTDbits.RD2 = 1;
  2068  078E  1508               	bsf	8,2	;volatile
  2069  078F                     l1854:
  2070                           
  2071                           ;main.c: 315:     PORTDbits.RD3 = 0;
  2072  078F  1188               	bcf	8,3	;volatile
  2073  0790                     l1856:
  2074                           
  2075                           ;main.c: 316:     PORTDbits.RD4 = 1;
  2076  0790  1608               	bsf	8,4	;volatile
  2077  0791                     l1858:
  2078                           
  2079                           ;main.c: 317:     PORTDbits.RD5 = 0;
  2080  0791  1288               	bcf	8,5	;volatile
  2081  0792                     l1860:
  2082                           
  2083                           ;main.c: 318:     PORTDbits.RD6 = 1;
  2084  0792  1708               	bsf	8,6	;volatile
  2085  0793                     l1862:
  2086                           
  2087                           ;main.c: 319:     PORTDbits.RD7 = 1;
  2088  0793  1788               	bsf	8,7	;volatile
  2089  0794                     l1864:
  2090                           
  2091                           ;main.c: 322:     RD5 = 1;
  2092  0794  1688               	bsf	8,5	;volatile
  2093  0795                     l1866:
  2094                           
  2095                           ;main.c: 323:     RD3 = 1;
  2096  0795  1588               	bsf	8,3	;volatile
  2097  0796                     l1868:
  2098                           
  2099                           ;main.c: 324:     RD1 = 1;
  2100  0796  1488               	bsf	8,1	;volatile
  2101  0797                     l1870:
  2102                           
  2103                           ;main.c: 325:     RC0 = 1;
  2104  0797  1407               	bsf	7,0	;volatile
  2105  0798                     l202:
  2106  0798  0008               	return
  2107  0799                     __end_of_iniciaPinos:
  2108                           
  2109                           	psect	text5
  2110  0D76                     __ptext5:	
  2111 ;; *************** function _expandeTela *****************
  2112 ;; Defined at:
  2113 ;;		line 187 in file "main.c"
  2114 ;; Parameters:    Size  Location     Type
  2115 ;;		None
  2116 ;; Auto vars:     Size  Location     Type
  2117 ;;		None
  2118 ;; Return value:  Size  Location     Type
  2119 ;;                  1    wreg      void 
  2120 ;; Registers used:
  2121 ;;		None
  2122 ;; Tracked objects:
  2123 ;;		On entry : 0/0
  2124 ;;		On exit  : 0/0
  2125 ;;		Unchanged: 0/0
  2126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2127 ;;      Params:         0       0       0       0       0
  2128 ;;      Locals:         0       0       0       0       0
  2129 ;;      Temps:          0       0       0       0       0
  2130 ;;      Totals:         0       0       0       0       0
  2131 ;;Total ram usage:        0 bytes
  2132 ;; Hardware stack levels used: 1
  2133 ;; Hardware stack levels required when called: 5
  2134 ;; This function calls:
  2135 ;;		Nothing
  2136 ;; This function is called by:
  2137 ;;		_main
  2138 ;; This function uses a non-reentrant model
  2139 ;;
  2140                           
  2141                           
  2142                           ;psect for function _expandeTela
  2143  0D76                     _expandeTela:
  2144  0D76                     l1944:	
  2145                           ;incstack = 0
  2146                           ; Regs used in _expandeTela: []
  2147                           
  2148                           
  2149                           ;main.c: 189:     if(RB3 == 0)
  2150  0D76  1283               	bcf	3,5	;RP0=0, select bank0
  2151  0D77  1303               	bcf	3,6	;RP1=0, select bank0
  2152  0D78  1986               	btfsc	6,3	;volatile
  2153  0D79  2D7B               	goto	u1551
  2154  0D7A  2D7C               	goto	u1550
  2155  0D7B                     u1551:
  2156  0D7B  2D85               	goto	l194
  2157  0D7C                     u1550:
  2158  0D7C                     l1946:
  2159                           
  2160                           ;main.c: 190:     {;main.c: 192:         RD4 = 1;
  2161  0D7C  1608               	bsf	8,4	;volatile
  2162                           
  2163                           ;main.c: 193:         RC1 = 0;
  2164  0D7D  1087               	bcf	7,1	;volatile
  2165                           
  2166                           ;main.c: 194:         RD2 = 1;
  2167  0D7E  1508               	bsf	8,2	;volatile
  2168                           
  2169                           ;main.c: 195:         RD6 = 0;
  2170  0D7F  1308               	bcf	8,6	;volatile
  2171                           
  2172                           ;main.c: 197:         RD0 = 1;
  2173  0D80  1408               	bsf	8,0	;volatile
  2174                           
  2175                           ;main.c: 198:         RC3 = 0;
  2176  0D81  1187               	bcf	7,3	;volatile
  2177                           
  2178                           ;main.c: 199:         RC2 = 1;
  2179  0D82  1507               	bsf	7,2	;volatile
  2180                           
  2181                           ;main.c: 200:         RD7 = 0;
  2182  0D83  1388               	bcf	8,7	;volatile
  2183                           
  2184                           ;main.c: 201:     }
  2185  0D84  2D8D               	goto	l196
  2186  0D85                     l194:	
  2187                           ;main.c: 202:     else
  2188                           
  2189                           
  2190                           ;main.c: 203:     {;main.c: 205:         RD4 = 1;
  2191  0D85  1608               	bsf	8,4	;volatile
  2192                           
  2193                           ;main.c: 206:         RC1 = 1;
  2194  0D86  1487               	bsf	7,1	;volatile
  2195                           
  2196                           ;main.c: 207:         RD2 = 1;
  2197  0D87  1508               	bsf	8,2	;volatile
  2198                           
  2199                           ;main.c: 208:         RD6 = 1;
  2200  0D88  1708               	bsf	8,6	;volatile
  2201                           
  2202                           ;main.c: 210:         RD0 = 1;
  2203  0D89  1408               	bsf	8,0	;volatile
  2204                           
  2205                           ;main.c: 211:         RC3 = 1;
  2206  0D8A  1587               	bsf	7,3	;volatile
  2207                           
  2208                           ;main.c: 212:         RC2 = 1;
  2209  0D8B  1507               	bsf	7,2	;volatile
  2210                           
  2211                           ;main.c: 213:         RD7 = 1;
  2212  0D8C  1788               	bsf	8,7	;volatile
  2213  0D8D                     l196:
  2214  0D8D  0008               	return
  2215  0D8E                     __end_of_expandeTela:
  2216                           
  2217                           	psect	text6
  2218  019C                     __ptext6:	
  2219 ;; *************** function _controleEstufas *****************
  2220 ;; Defined at:
  2221 ;;		line 329 in file "main.c"
  2222 ;; Parameters:    Size  Location     Type
  2223 ;;		None
  2224 ;; Auto vars:     Size  Location     Type
  2225 ;;		None
  2226 ;; Return value:  Size  Location     Type
  2227 ;;                  1    wreg      void 
  2228 ;; Registers used:
  2229 ;;		wreg, status,2, status,0, pclath, cstack
  2230 ;; Tracked objects:
  2231 ;;		On entry : 0/0
  2232 ;;		On exit  : 0/0
  2233 ;;		Unchanged: 0/0
  2234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2235 ;;      Params:         0       0       0       0       0
  2236 ;;      Locals:         0       0       0       0       0
  2237 ;;      Temps:          0       0       0       0       0
  2238 ;;      Totals:         0       0       0       0       0
  2239 ;;Total ram usage:        0 bytes
  2240 ;; Hardware stack levels used: 1
  2241 ;; Hardware stack levels required when called: 7
  2242 ;; This function calls:
  2243 ;;		___flge
  2244 ;;		_estufaDois
  2245 ;;		_estufaQuatro
  2246 ;;		_estufaTres
  2247 ;;		_estufaUm
  2248 ;; This function is called by:
  2249 ;;		_main
  2250 ;; This function uses a non-reentrant model
  2251 ;;
  2252                           
  2253                           
  2254                           ;psect for function _controleEstufas
  2255  019C                     _controleEstufas:
  2256  019C                     l1948:	
  2257                           ;incstack = 0
  2258                           ; Regs used in _controleEstufas: [wreg+status,2+status,0+pclath+cstack]
  2259                           
  2260                           
  2261                           ;main.c: 331:     if(valor_entry1 <= 64)
  2262  019C  3042               	movlw	66
  2263  019D  1683               	bsf	3,5	;RP0=1, select bank1
  2264  019E  1303               	bcf	3,6	;RP1=0, select bank1
  2265  019F  00A3               	movwf	(___flge@ff1+3)^(0+128)
  2266  01A0  3080               	movlw	128
  2267  01A1  00A2               	movwf	(___flge@ff1+2)^(0+128)
  2268  01A2  3000               	movlw	0
  2269  01A3  00A1               	movwf	(___flge@ff1+1)^(0+128)
  2270  01A4  3000               	movlw	0
  2271  01A5  00A0               	movwf	___flge@ff1^(0+128)
  2272  01A6  1283               	bcf	3,5	;RP0=0, select bank0
  2273  01A7  1303               	bcf	3,6	;RP1=0, select bank0
  2274  01A8  086C               	movf	_valor_entry1+3,w
  2275  01A9  1683               	bsf	3,5	;RP0=1, select bank1
  2276  01AA  1303               	bcf	3,6	;RP1=0, select bank1
  2277  01AB  00A7               	movwf	(___flge@ff2+3)^(0+128)
  2278  01AC  1283               	bcf	3,5	;RP0=0, select bank0
  2279  01AD  1303               	bcf	3,6	;RP1=0, select bank0
  2280  01AE  086B               	movf	_valor_entry1+2,w
  2281  01AF  1683               	bsf	3,5	;RP0=1, select bank1
  2282  01B0  1303               	bcf	3,6	;RP1=0, select bank1
  2283  01B1  00A6               	movwf	(___flge@ff2+2)^(0+128)
  2284  01B2  1283               	bcf	3,5	;RP0=0, select bank0
  2285  01B3  1303               	bcf	3,6	;RP1=0, select bank0
  2286  01B4  086A               	movf	_valor_entry1+1,w
  2287  01B5  1683               	bsf	3,5	;RP0=1, select bank1
  2288  01B6  1303               	bcf	3,6	;RP1=0, select bank1
  2289  01B7  00A5               	movwf	(___flge@ff2+1)^(0+128)
  2290  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  2291  01B9  1303               	bcf	3,6	;RP1=0, select bank0
  2292  01BA  0869               	movf	_valor_entry1,w
  2293  01BB  1683               	bsf	3,5	;RP0=1, select bank1
  2294  01BC  1303               	bcf	3,6	;RP1=0, select bank1
  2295  01BD  00A4               	movwf	___flge@ff2^(0+128)
  2296  01BE  120A  118A  2550  120A  118A  	fcall	___flge
  2297  01C3  1C03               	btfss	3,0
  2298  01C4  29C6               	goto	u1561
  2299  01C5  29C7               	goto	u1560
  2300  01C6                     u1561:
  2301  01C6  29CD               	goto	l1952
  2302  01C7                     u1560:
  2303  01C7                     l1950:
  2304                           
  2305                           ;main.c: 332:     {;main.c: 335:         estufaUm();
  2306  01C7  120A  158A  26E2  120A  118A  	fcall	_estufaUm
  2307                           
  2308                           ;main.c: 336:     }
  2309  01CC  2AD4               	goto	l212
  2310  01CD                     l1952:
  2311  01CD  3043               	movlw	67
  2312  01CE  1683               	bsf	3,5	;RP0=1, select bank1
  2313  01CF  1303               	bcf	3,6	;RP1=0, select bank1
  2314  01D0  00A3               	movwf	(___flge@ff1+3)^(0+128)
  2315  01D1  3000               	movlw	0
  2316  01D2  00A2               	movwf	(___flge@ff1+2)^(0+128)
  2317  01D3  3000               	movlw	0
  2318  01D4  00A1               	movwf	(___flge@ff1+1)^(0+128)
  2319  01D5  3000               	movlw	0
  2320  01D6  00A0               	movwf	___flge@ff1^(0+128)
  2321  01D7  1283               	bcf	3,5	;RP0=0, select bank0
  2322  01D8  1303               	bcf	3,6	;RP1=0, select bank0
  2323  01D9  086C               	movf	_valor_entry1+3,w
  2324  01DA  1683               	bsf	3,5	;RP0=1, select bank1
  2325  01DB  1303               	bcf	3,6	;RP1=0, select bank1
  2326  01DC  00A7               	movwf	(___flge@ff2+3)^(0+128)
  2327  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  2328  01DE  1303               	bcf	3,6	;RP1=0, select bank0
  2329  01DF  086B               	movf	_valor_entry1+2,w
  2330  01E0  1683               	bsf	3,5	;RP0=1, select bank1
  2331  01E1  1303               	bcf	3,6	;RP1=0, select bank1
  2332  01E2  00A6               	movwf	(___flge@ff2+2)^(0+128)
  2333  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  2334  01E4  1303               	bcf	3,6	;RP1=0, select bank0
  2335  01E5  086A               	movf	_valor_entry1+1,w
  2336  01E6  1683               	bsf	3,5	;RP0=1, select bank1
  2337  01E7  1303               	bcf	3,6	;RP1=0, select bank1
  2338  01E8  00A5               	movwf	(___flge@ff2+1)^(0+128)
  2339  01E9  1283               	bcf	3,5	;RP0=0, select bank0
  2340  01EA  1303               	bcf	3,6	;RP1=0, select bank0
  2341  01EB  0869               	movf	_valor_entry1,w
  2342  01EC  1683               	bsf	3,5	;RP0=1, select bank1
  2343  01ED  1303               	bcf	3,6	;RP1=0, select bank1
  2344  01EE  00A4               	movwf	___flge@ff2^(0+128)
  2345  01EF  120A  118A  2550  120A  118A  	fcall	___flge
  2346  01F4  1C03               	btfss	3,0
  2347  01F5  29F7               	goto	u1571
  2348  01F6  29F8               	goto	u1570
  2349  01F7                     u1571:
  2350  01F7  2A03               	goto	l1956
  2351  01F8                     u1570:
  2352  01F8                     l1954:
  2353                           
  2354                           ;main.c: 338:     {;main.c: 341:         estufaUm();
  2355  01F8  120A  158A  26E2  120A  118A  	fcall	_estufaUm
  2356                           
  2357                           ;main.c: 342:         estufaDois();
  2358  01FD  120A  158A  26AF  120A  118A  	fcall	_estufaDois
  2359                           
  2360                           ;main.c: 343:     }
  2361  0202  2AD4               	goto	l212
  2362  0203                     l1956:
  2363  0203  3042               	movlw	66
  2364  0204  1683               	bsf	3,5	;RP0=1, select bank1
  2365  0205  1303               	bcf	3,6	;RP1=0, select bank1
  2366  0206  00A3               	movwf	(___flge@ff1+3)^(0+128)
  2367  0207  3080               	movlw	128
  2368  0208  00A2               	movwf	(___flge@ff1+2)^(0+128)
  2369  0209  3000               	movlw	0
  2370  020A  00A1               	movwf	(___flge@ff1+1)^(0+128)
  2371  020B  3000               	movlw	0
  2372  020C  00A0               	movwf	___flge@ff1^(0+128)
  2373  020D  1283               	bcf	3,5	;RP0=0, select bank0
  2374  020E  1303               	bcf	3,6	;RP1=0, select bank0
  2375  020F  086C               	movf	_valor_entry1+3,w
  2376  0210  1683               	bsf	3,5	;RP0=1, select bank1
  2377  0211  1303               	bcf	3,6	;RP1=0, select bank1
  2378  0212  00A7               	movwf	(___flge@ff2+3)^(0+128)
  2379  0213  1283               	bcf	3,5	;RP0=0, select bank0
  2380  0214  1303               	bcf	3,6	;RP1=0, select bank0
  2381  0215  086B               	movf	_valor_entry1+2,w
  2382  0216  1683               	bsf	3,5	;RP0=1, select bank1
  2383  0217  1303               	bcf	3,6	;RP1=0, select bank1
  2384  0218  00A6               	movwf	(___flge@ff2+2)^(0+128)
  2385  0219  1283               	bcf	3,5	;RP0=0, select bank0
  2386  021A  1303               	bcf	3,6	;RP1=0, select bank0
  2387  021B  086A               	movf	_valor_entry1+1,w
  2388  021C  1683               	bsf	3,5	;RP0=1, select bank1
  2389  021D  1303               	bcf	3,6	;RP1=0, select bank1
  2390  021E  00A5               	movwf	(___flge@ff2+1)^(0+128)
  2391  021F  1283               	bcf	3,5	;RP0=0, select bank0
  2392  0220  1303               	bcf	3,6	;RP1=0, select bank0
  2393  0221  0869               	movf	_valor_entry1,w
  2394  0222  1683               	bsf	3,5	;RP0=1, select bank1
  2395  0223  1303               	bcf	3,6	;RP1=0, select bank1
  2396  0224  00A4               	movwf	___flge@ff2^(0+128)
  2397  0225  120A  118A  2550  120A  118A  	fcall	___flge
  2398  022A  1803               	btfsc	3,0
  2399  022B  2A2D               	goto	u1581
  2400  022C  2A2E               	goto	u1580
  2401  022D                     u1581:
  2402  022D  2A69               	goto	l1962
  2403  022E                     u1580:
  2404  022E                     l1958:
  2405  022E  3043               	movlw	67
  2406  022F  1683               	bsf	3,5	;RP0=1, select bank1
  2407  0230  1303               	bcf	3,6	;RP1=0, select bank1
  2408  0231  00A3               	movwf	(___flge@ff1+3)^(0+128)
  2409  0232  3040               	movlw	64
  2410  0233  00A2               	movwf	(___flge@ff1+2)^(0+128)
  2411  0234  3000               	movlw	0
  2412  0235  00A1               	movwf	(___flge@ff1+1)^(0+128)
  2413  0236  3000               	movlw	0
  2414  0237  00A0               	movwf	___flge@ff1^(0+128)
  2415  0238  1283               	bcf	3,5	;RP0=0, select bank0
  2416  0239  1303               	bcf	3,6	;RP1=0, select bank0
  2417  023A  086C               	movf	_valor_entry1+3,w
  2418  023B  1683               	bsf	3,5	;RP0=1, select bank1
  2419  023C  1303               	bcf	3,6	;RP1=0, select bank1
  2420  023D  00A7               	movwf	(___flge@ff2+3)^(0+128)
  2421  023E  1283               	bcf	3,5	;RP0=0, select bank0
  2422  023F  1303               	bcf	3,6	;RP1=0, select bank0
  2423  0240  086B               	movf	_valor_entry1+2,w
  2424  0241  1683               	bsf	3,5	;RP0=1, select bank1
  2425  0242  1303               	bcf	3,6	;RP1=0, select bank1
  2426  0243  00A6               	movwf	(___flge@ff2+2)^(0+128)
  2427  0244  1283               	bcf	3,5	;RP0=0, select bank0
  2428  0245  1303               	bcf	3,6	;RP1=0, select bank0
  2429  0246  086A               	movf	_valor_entry1+1,w
  2430  0247  1683               	bsf	3,5	;RP0=1, select bank1
  2431  0248  1303               	bcf	3,6	;RP1=0, select bank1
  2432  0249  00A5               	movwf	(___flge@ff2+1)^(0+128)
  2433  024A  1283               	bcf	3,5	;RP0=0, select bank0
  2434  024B  1303               	bcf	3,6	;RP1=0, select bank0
  2435  024C  0869               	movf	_valor_entry1,w
  2436  024D  1683               	bsf	3,5	;RP0=1, select bank1
  2437  024E  1303               	bcf	3,6	;RP1=0, select bank1
  2438  024F  00A4               	movwf	___flge@ff2^(0+128)
  2439  0250  120A  118A  2550  120A  118A  	fcall	___flge
  2440  0255  1C03               	btfss	3,0
  2441  0256  2A58               	goto	u1591
  2442  0257  2A59               	goto	u1590
  2443  0258                     u1591:
  2444  0258  2A69               	goto	l1962
  2445  0259                     u1590:
  2446  0259                     l1960:
  2447                           
  2448                           ;main.c: 345:     {;main.c: 348:         estufaUm();
  2449  0259  120A  158A  26E2  120A  118A  	fcall	_estufaUm
  2450                           
  2451                           ;main.c: 349:         estufaDois();
  2452  025E  120A  158A  26AF  120A  118A  	fcall	_estufaDois
  2453                           
  2454                           ;main.c: 350:         estufaTres();
  2455  0263  120A  158A  267E  120A  118A  	fcall	_estufaTres
  2456                           
  2457                           ;main.c: 351:     }
  2458  0268  2AD4               	goto	l212
  2459  0269                     l1962:
  2460  0269  3042               	movlw	66
  2461  026A  1683               	bsf	3,5	;RP0=1, select bank1
  2462  026B  1303               	bcf	3,6	;RP1=0, select bank1
  2463  026C  00A3               	movwf	(___flge@ff1+3)^(0+128)
  2464  026D  3080               	movlw	128
  2465  026E  00A2               	movwf	(___flge@ff1+2)^(0+128)
  2466  026F  3000               	movlw	0
  2467  0270  00A1               	movwf	(___flge@ff1+1)^(0+128)
  2468  0271  3000               	movlw	0
  2469  0272  00A0               	movwf	___flge@ff1^(0+128)
  2470  0273  1283               	bcf	3,5	;RP0=0, select bank0
  2471  0274  1303               	bcf	3,6	;RP1=0, select bank0
  2472  0275  086C               	movf	_valor_entry1+3,w
  2473  0276  1683               	bsf	3,5	;RP0=1, select bank1
  2474  0277  1303               	bcf	3,6	;RP1=0, select bank1
  2475  0278  00A7               	movwf	(___flge@ff2+3)^(0+128)
  2476  0279  1283               	bcf	3,5	;RP0=0, select bank0
  2477  027A  1303               	bcf	3,6	;RP1=0, select bank0
  2478  027B  086B               	movf	_valor_entry1+2,w
  2479  027C  1683               	bsf	3,5	;RP0=1, select bank1
  2480  027D  1303               	bcf	3,6	;RP1=0, select bank1
  2481  027E  00A6               	movwf	(___flge@ff2+2)^(0+128)
  2482  027F  1283               	bcf	3,5	;RP0=0, select bank0
  2483  0280  1303               	bcf	3,6	;RP1=0, select bank0
  2484  0281  086A               	movf	_valor_entry1+1,w
  2485  0282  1683               	bsf	3,5	;RP0=1, select bank1
  2486  0283  1303               	bcf	3,6	;RP1=0, select bank1
  2487  0284  00A5               	movwf	(___flge@ff2+1)^(0+128)
  2488  0285  1283               	bcf	3,5	;RP0=0, select bank0
  2489  0286  1303               	bcf	3,6	;RP1=0, select bank0
  2490  0287  0869               	movf	_valor_entry1,w
  2491  0288  1683               	bsf	3,5	;RP0=1, select bank1
  2492  0289  1303               	bcf	3,6	;RP1=0, select bank1
  2493  028A  00A4               	movwf	___flge@ff2^(0+128)
  2494  028B  120A  118A  2550  120A  118A  	fcall	___flge
  2495  0290  1803               	btfsc	3,0
  2496  0291  2A93               	goto	u1601
  2497  0292  2A94               	goto	u1600
  2498  0293                     u1601:
  2499  0293  2AD4               	goto	l206
  2500  0294                     u1600:
  2501  0294                     l1964:
  2502  0294  3043               	movlw	67
  2503  0295  1683               	bsf	3,5	;RP0=1, select bank1
  2504  0296  1303               	bcf	3,6	;RP1=0, select bank1
  2505  0297  00A3               	movwf	(___flge@ff1+3)^(0+128)
  2506  0298  3080               	movlw	128
  2507  0299  00A2               	movwf	(___flge@ff1+2)^(0+128)
  2508  029A  3000               	movlw	0
  2509  029B  00A1               	movwf	(___flge@ff1+1)^(0+128)
  2510  029C  3000               	movlw	0
  2511  029D  00A0               	movwf	___flge@ff1^(0+128)
  2512  029E  1283               	bcf	3,5	;RP0=0, select bank0
  2513  029F  1303               	bcf	3,6	;RP1=0, select bank0
  2514  02A0  086C               	movf	_valor_entry1+3,w
  2515  02A1  1683               	bsf	3,5	;RP0=1, select bank1
  2516  02A2  1303               	bcf	3,6	;RP1=0, select bank1
  2517  02A3  00A7               	movwf	(___flge@ff2+3)^(0+128)
  2518  02A4  1283               	bcf	3,5	;RP0=0, select bank0
  2519  02A5  1303               	bcf	3,6	;RP1=0, select bank0
  2520  02A6  086B               	movf	_valor_entry1+2,w
  2521  02A7  1683               	bsf	3,5	;RP0=1, select bank1
  2522  02A8  1303               	bcf	3,6	;RP1=0, select bank1
  2523  02A9  00A6               	movwf	(___flge@ff2+2)^(0+128)
  2524  02AA  1283               	bcf	3,5	;RP0=0, select bank0
  2525  02AB  1303               	bcf	3,6	;RP1=0, select bank0
  2526  02AC  086A               	movf	_valor_entry1+1,w
  2527  02AD  1683               	bsf	3,5	;RP0=1, select bank1
  2528  02AE  1303               	bcf	3,6	;RP1=0, select bank1
  2529  02AF  00A5               	movwf	(___flge@ff2+1)^(0+128)
  2530  02B0  1283               	bcf	3,5	;RP0=0, select bank0
  2531  02B1  1303               	bcf	3,6	;RP1=0, select bank0
  2532  02B2  0869               	movf	_valor_entry1,w
  2533  02B3  1683               	bsf	3,5	;RP0=1, select bank1
  2534  02B4  1303               	bcf	3,6	;RP1=0, select bank1
  2535  02B5  00A4               	movwf	___flge@ff2^(0+128)
  2536  02B6  120A  118A  2550  120A  118A  	fcall	___flge
  2537  02BB  1C03               	btfss	3,0
  2538  02BC  2ABE               	goto	u1611
  2539  02BD  2ABF               	goto	u1610
  2540  02BE                     u1611:
  2541  02BE  2AD4               	goto	l206
  2542  02BF                     u1610:
  2543  02BF                     l1966:
  2544                           
  2545                           ;main.c: 353:     {;main.c: 356:         estufaUm();
  2546  02BF  120A  158A  26E2  120A  118A  	fcall	_estufaUm
  2547                           
  2548                           ;main.c: 357:         estufaDois();
  2549  02C4  120A  158A  26AF  120A  118A  	fcall	_estufaDois
  2550                           
  2551                           ;main.c: 358:         estufaTres();
  2552  02C9  120A  158A  267E  120A  118A  	fcall	_estufaTres
  2553                           
  2554                           ;main.c: 359:         estufaQuatro();
  2555  02CE  120A  158A  264D  120A  118A  	fcall	_estufaQuatro
  2556  02D3  2AD4               	goto	l212
  2557  02D4                     l206:
  2558  02D4                     l212:
  2559  02D4  0008               	return
  2560  02D5                     __end_of_controleEstufas:
  2561                           
  2562                           	psect	text7
  2563  0EE2                     __ptext7:	
  2564 ;; *************** function _estufaUm *****************
  2565 ;; Defined at:
  2566 ;;		line 366 in file "main.c"
  2567 ;; Parameters:    Size  Location     Type
  2568 ;;		None
  2569 ;; Auto vars:     Size  Location     Type
  2570 ;;		None
  2571 ;; Return value:  Size  Location     Type
  2572 ;;                  1    wreg      void 
  2573 ;; Registers used:
  2574 ;;		wreg, status,2, status,0, pclath, cstack
  2575 ;; Tracked objects:
  2576 ;;		On entry : 0/0
  2577 ;;		On exit  : 0/0
  2578 ;;		Unchanged: 0/0
  2579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2580 ;;      Params:         0       0       0       0       0
  2581 ;;      Locals:         0       0       0       0       0
  2582 ;;      Temps:          0       0       0       0       0
  2583 ;;      Totals:         0       0       0       0       0
  2584 ;;Total ram usage:        0 bytes
  2585 ;; Hardware stack levels used: 1
  2586 ;; Hardware stack levels required when called: 6
  2587 ;; This function calls:
  2588 ;;		___flge
  2589 ;; This function is called by:
  2590 ;;		_controleEstufas
  2591 ;; This function uses a non-reentrant model
  2592 ;;
  2593                           
  2594                           
  2595                           ;psect for function _estufaUm
  2596  0EE2                     _estufaUm:
  2597  0EE2                     l1678:	
  2598                           ;incstack = 0
  2599                           ; Regs used in _estufaUm: [wreg+status,2+status,0+pclath+cstack]
  2600                           
  2601                           
  2602                           ;main.c: 368:     if(valor_entry3 <= 128)
  2603  0EE2  3043               	movlw	67
  2604  0EE3  1683               	bsf	3,5	;RP0=1, select bank1
  2605  0EE4  1303               	bcf	3,6	;RP1=0, select bank1
  2606  0EE5  00A3               	movwf	(___flge@ff1+3)^(0+128)
  2607  0EE6  3000               	movlw	0
  2608  0EE7  00A2               	movwf	(___flge@ff1+2)^(0+128)
  2609  0EE8  3000               	movlw	0
  2610  0EE9  00A1               	movwf	(___flge@ff1+1)^(0+128)
  2611  0EEA  3000               	movlw	0
  2612  0EEB  00A0               	movwf	___flge@ff1^(0+128)
  2613  0EEC  1283               	bcf	3,5	;RP0=0, select bank0
  2614  0EED  1303               	bcf	3,6	;RP1=0, select bank0
  2615  0EEE  0868               	movf	_valor_entry3+3,w
  2616  0EEF  1683               	bsf	3,5	;RP0=1, select bank1
  2617  0EF0  1303               	bcf	3,6	;RP1=0, select bank1
  2618  0EF1  00A7               	movwf	(___flge@ff2+3)^(0+128)
  2619  0EF2  1283               	bcf	3,5	;RP0=0, select bank0
  2620  0EF3  1303               	bcf	3,6	;RP1=0, select bank0
  2621  0EF4  0867               	movf	_valor_entry3+2,w
  2622  0EF5  1683               	bsf	3,5	;RP0=1, select bank1
  2623  0EF6  1303               	bcf	3,6	;RP1=0, select bank1
  2624  0EF7  00A6               	movwf	(___flge@ff2+2)^(0+128)
  2625  0EF8  1283               	bcf	3,5	;RP0=0, select bank0
  2626  0EF9  1303               	bcf	3,6	;RP1=0, select bank0
  2627  0EFA  0866               	movf	_valor_entry3+1,w
  2628  0EFB  1683               	bsf	3,5	;RP0=1, select bank1
  2629  0EFC  1303               	bcf	3,6	;RP1=0, select bank1
  2630  0EFD  00A5               	movwf	(___flge@ff2+1)^(0+128)
  2631  0EFE  1283               	bcf	3,5	;RP0=0, select bank0
  2632  0EFF  1303               	bcf	3,6	;RP1=0, select bank0
  2633  0F00  0865               	movf	_valor_entry3,w
  2634  0F01  1683               	bsf	3,5	;RP0=1, select bank1
  2635  0F02  1303               	bcf	3,6	;RP1=0, select bank1
  2636  0F03  00A4               	movwf	___flge@ff2^(0+128)
  2637  0F04  120A  118A  2550  120A  158A  	fcall	___flge
  2638  0F09  1C03               	btfss	3,0
  2639  0F0A  2F0C               	goto	u1261
  2640  0F0B  2F0D               	goto	u1260
  2641  0F0C                     u1261:
  2642  0F0C  2F11               	goto	l215
  2643  0F0D                     u1260:
  2644  0F0D                     l1680:
  2645                           
  2646                           ;main.c: 369:     {;main.c: 370:         RC7 = 1;
  2647  0F0D  1283               	bcf	3,5	;RP0=0, select bank0
  2648  0F0E  1303               	bcf	3,6	;RP1=0, select bank0
  2649  0F0F  1787               	bsf	7,7	;volatile
  2650                           
  2651                           ;main.c: 371:     }
  2652  0F10  2F14               	goto	l217
  2653  0F11                     l215:	
  2654                           ;main.c: 372:     else
  2655                           
  2656                           
  2657                           ;main.c: 373:     {;main.c: 374:         RC7 = 0;
  2658  0F11  1283               	bcf	3,5	;RP0=0, select bank0
  2659  0F12  1303               	bcf	3,6	;RP1=0, select bank0
  2660  0F13  1387               	bcf	7,7	;volatile
  2661  0F14                     l217:
  2662  0F14  0008               	return
  2663  0F15                     __end_of_estufaUm:
  2664                           
  2665                           	psect	text8
  2666  0E7E                     __ptext8:	
  2667 ;; *************** function _estufaTres *****************
  2668 ;; Defined at:
  2669 ;;		line 390 in file "main.c"
  2670 ;; Parameters:    Size  Location     Type
  2671 ;;		None
  2672 ;; Auto vars:     Size  Location     Type
  2673 ;;		None
  2674 ;; Return value:  Size  Location     Type
  2675 ;;                  1    wreg      void 
  2676 ;; Registers used:
  2677 ;;		wreg, status,2, status,0, pclath, cstack
  2678 ;; Tracked objects:
  2679 ;;		On entry : 0/0
  2680 ;;		On exit  : 0/0
  2681 ;;		Unchanged: 0/0
  2682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2683 ;;      Params:         0       0       0       0       0
  2684 ;;      Locals:         0       0       0       0       0
  2685 ;;      Temps:          0       0       0       0       0
  2686 ;;      Totals:         0       0       0       0       0
  2687 ;;Total ram usage:        0 bytes
  2688 ;; Hardware stack levels used: 1
  2689 ;; Hardware stack levels required when called: 6
  2690 ;; This function calls:
  2691 ;;		___flge
  2692 ;; This function is called by:
  2693 ;;		_controleEstufas
  2694 ;; This function uses a non-reentrant model
  2695 ;;
  2696                           
  2697                           
  2698                           ;psect for function _estufaTres
  2699  0E7E                     _estufaTres:
  2700  0E7E                     l1686:	
  2701                           ;incstack = 0
  2702                           ; Regs used in _estufaTres: [wreg+status,2+status,0+pclath+cstack]
  2703                           
  2704                           
  2705                           ;main.c: 392:     if(valor_entry5 < 128)
  2706  0E7E  1283               	bcf	3,5	;RP0=0, select bank0
  2707  0E7F  1303               	bcf	3,6	;RP1=0, select bank0
  2708  0E80  0860               	movf	_valor_entry5+3,w
  2709  0E81  1683               	bsf	3,5	;RP0=1, select bank1
  2710  0E82  1303               	bcf	3,6	;RP1=0, select bank1
  2711  0E83  00A3               	movwf	(___flge@ff1+3)^(0+128)
  2712  0E84  1283               	bcf	3,5	;RP0=0, select bank0
  2713  0E85  1303               	bcf	3,6	;RP1=0, select bank0
  2714  0E86  085F               	movf	_valor_entry5+2,w
  2715  0E87  1683               	bsf	3,5	;RP0=1, select bank1
  2716  0E88  1303               	bcf	3,6	;RP1=0, select bank1
  2717  0E89  00A2               	movwf	(___flge@ff1+2)^(0+128)
  2718  0E8A  1283               	bcf	3,5	;RP0=0, select bank0
  2719  0E8B  1303               	bcf	3,6	;RP1=0, select bank0
  2720  0E8C  085E               	movf	_valor_entry5+1,w
  2721  0E8D  1683               	bsf	3,5	;RP0=1, select bank1
  2722  0E8E  1303               	bcf	3,6	;RP1=0, select bank1
  2723  0E8F  00A1               	movwf	(___flge@ff1+1)^(0+128)
  2724  0E90  1283               	bcf	3,5	;RP0=0, select bank0
  2725  0E91  1303               	bcf	3,6	;RP1=0, select bank0
  2726  0E92  085D               	movf	_valor_entry5,w
  2727  0E93  1683               	bsf	3,5	;RP0=1, select bank1
  2728  0E94  1303               	bcf	3,6	;RP1=0, select bank1
  2729  0E95  00A0               	movwf	___flge@ff1^(0+128)
  2730  0E96  3043               	movlw	67
  2731  0E97  00A7               	movwf	(___flge@ff2+3)^(0+128)
  2732  0E98  3000               	movlw	0
  2733  0E99  00A6               	movwf	(___flge@ff2+2)^(0+128)
  2734  0E9A  3000               	movlw	0
  2735  0E9B  00A5               	movwf	(___flge@ff2+1)^(0+128)
  2736  0E9C  3000               	movlw	0
  2737  0E9D  00A4               	movwf	___flge@ff2^(0+128)
  2738  0E9E  120A  118A  2550  120A  158A  	fcall	___flge
  2739  0EA3  1803               	btfsc	3,0
  2740  0EA4  2EA6               	goto	u1281
  2741  0EA5  2EA7               	goto	u1280
  2742  0EA6                     u1281:
  2743  0EA6  2EAB               	goto	l225
  2744  0EA7                     u1280:
  2745  0EA7                     l1688:
  2746                           
  2747                           ;main.c: 393:     {;main.c: 394:        RC5 = 1;
  2748  0EA7  1283               	bcf	3,5	;RP0=0, select bank0
  2749  0EA8  1303               	bcf	3,6	;RP1=0, select bank0
  2750  0EA9  1687               	bsf	7,5	;volatile
  2751                           
  2752                           ;main.c: 395:     }
  2753  0EAA  2EAE               	goto	l227
  2754  0EAB                     l225:	
  2755                           ;main.c: 396:     else
  2756                           
  2757                           
  2758                           ;main.c: 397:     {;main.c: 398:         RC5 = 0;
  2759  0EAB  1283               	bcf	3,5	;RP0=0, select bank0
  2760  0EAC  1303               	bcf	3,6	;RP1=0, select bank0
  2761  0EAD  1287               	bcf	7,5	;volatile
  2762  0EAE                     l227:
  2763  0EAE  0008               	return
  2764  0EAF                     __end_of_estufaTres:
  2765                           
  2766                           	psect	text9
  2767  0E4D                     __ptext9:	
  2768 ;; *************** function _estufaQuatro *****************
  2769 ;; Defined at:
  2770 ;;		line 402 in file "main.c"
  2771 ;; Parameters:    Size  Location     Type
  2772 ;;		None
  2773 ;; Auto vars:     Size  Location     Type
  2774 ;;		None
  2775 ;; Return value:  Size  Location     Type
  2776 ;;                  1    wreg      void 
  2777 ;; Registers used:
  2778 ;;		wreg, status,2, status,0, pclath, cstack
  2779 ;; Tracked objects:
  2780 ;;		On entry : 0/0
  2781 ;;		On exit  : 0/0
  2782 ;;		Unchanged: 0/0
  2783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2784 ;;      Params:         0       0       0       0       0
  2785 ;;      Locals:         0       0       0       0       0
  2786 ;;      Temps:          0       0       0       0       0
  2787 ;;      Totals:         0       0       0       0       0
  2788 ;;Total ram usage:        0 bytes
  2789 ;; Hardware stack levels used: 1
  2790 ;; Hardware stack levels required when called: 6
  2791 ;; This function calls:
  2792 ;;		___flge
  2793 ;; This function is called by:
  2794 ;;		_controleEstufas
  2795 ;; This function uses a non-reentrant model
  2796 ;;
  2797                           
  2798                           
  2799                           ;psect for function _estufaQuatro
  2800  0E4D                     _estufaQuatro:
  2801  0E4D                     l1690:	
  2802                           ;incstack = 0
  2803                           ; Regs used in _estufaQuatro: [wreg+status,2+status,0+pclath+cstack]
  2804                           
  2805                           
  2806                           ;main.c: 404:     if(valor_entry6 < 128)
  2807  0E4D  1283               	bcf	3,5	;RP0=0, select bank0
  2808  0E4E  1303               	bcf	3,6	;RP1=0, select bank0
  2809  0E4F  085C               	movf	_valor_entry6+3,w
  2810  0E50  1683               	bsf	3,5	;RP0=1, select bank1
  2811  0E51  1303               	bcf	3,6	;RP1=0, select bank1
  2812  0E52  00A3               	movwf	(___flge@ff1+3)^(0+128)
  2813  0E53  1283               	bcf	3,5	;RP0=0, select bank0
  2814  0E54  1303               	bcf	3,6	;RP1=0, select bank0
  2815  0E55  085B               	movf	_valor_entry6+2,w
  2816  0E56  1683               	bsf	3,5	;RP0=1, select bank1
  2817  0E57  1303               	bcf	3,6	;RP1=0, select bank1
  2818  0E58  00A2               	movwf	(___flge@ff1+2)^(0+128)
  2819  0E59  1283               	bcf	3,5	;RP0=0, select bank0
  2820  0E5A  1303               	bcf	3,6	;RP1=0, select bank0
  2821  0E5B  085A               	movf	_valor_entry6+1,w
  2822  0E5C  1683               	bsf	3,5	;RP0=1, select bank1
  2823  0E5D  1303               	bcf	3,6	;RP1=0, select bank1
  2824  0E5E  00A1               	movwf	(___flge@ff1+1)^(0+128)
  2825  0E5F  1283               	bcf	3,5	;RP0=0, select bank0
  2826  0E60  1303               	bcf	3,6	;RP1=0, select bank0
  2827  0E61  0859               	movf	_valor_entry6,w
  2828  0E62  1683               	bsf	3,5	;RP0=1, select bank1
  2829  0E63  1303               	bcf	3,6	;RP1=0, select bank1
  2830  0E64  00A0               	movwf	___flge@ff1^(0+128)
  2831  0E65  3043               	movlw	67
  2832  0E66  00A7               	movwf	(___flge@ff2+3)^(0+128)
  2833  0E67  3000               	movlw	0
  2834  0E68  00A6               	movwf	(___flge@ff2+2)^(0+128)
  2835  0E69  3000               	movlw	0
  2836  0E6A  00A5               	movwf	(___flge@ff2+1)^(0+128)
  2837  0E6B  3000               	movlw	0
  2838  0E6C  00A4               	movwf	___flge@ff2^(0+128)
  2839  0E6D  120A  118A  2550  120A  158A  	fcall	___flge
  2840  0E72  1803               	btfsc	3,0
  2841  0E73  2E75               	goto	u1291
  2842  0E74  2E76               	goto	u1290
  2843  0E75                     u1291:
  2844  0E75  2E7A               	goto	l230
  2845  0E76                     u1290:
  2846  0E76                     l1692:
  2847                           
  2848                           ;main.c: 405:     {;main.c: 406:         RC4 = 1;
  2849  0E76  1283               	bcf	3,5	;RP0=0, select bank0
  2850  0E77  1303               	bcf	3,6	;RP1=0, select bank0
  2851  0E78  1607               	bsf	7,4	;volatile
  2852                           
  2853                           ;main.c: 407:     }
  2854  0E79  2E7D               	goto	l232
  2855  0E7A                     l230:	
  2856                           ;main.c: 408:     else
  2857                           
  2858                           
  2859                           ;main.c: 409:     {;main.c: 410:        RC4 = 0;
  2860  0E7A  1283               	bcf	3,5	;RP0=0, select bank0
  2861  0E7B  1303               	bcf	3,6	;RP1=0, select bank0
  2862  0E7C  1207               	bcf	7,4	;volatile
  2863  0E7D                     l232:
  2864  0E7D  0008               	return
  2865  0E7E                     __end_of_estufaQuatro:
  2866                           
  2867                           	psect	text10
  2868  0EAF                     __ptext10:	
  2869 ;; *************** function _estufaDois *****************
  2870 ;; Defined at:
  2871 ;;		line 378 in file "main.c"
  2872 ;; Parameters:    Size  Location     Type
  2873 ;;		None
  2874 ;; Auto vars:     Size  Location     Type
  2875 ;;		None
  2876 ;; Return value:  Size  Location     Type
  2877 ;;                  1    wreg      void 
  2878 ;; Registers used:
  2879 ;;		wreg, status,2, status,0, pclath, cstack
  2880 ;; Tracked objects:
  2881 ;;		On entry : 0/0
  2882 ;;		On exit  : 0/0
  2883 ;;		Unchanged: 0/0
  2884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2885 ;;      Params:         0       0       0       0       0
  2886 ;;      Locals:         0       0       0       0       0
  2887 ;;      Temps:          0       0       0       0       0
  2888 ;;      Totals:         0       0       0       0       0
  2889 ;;Total ram usage:        0 bytes
  2890 ;; Hardware stack levels used: 1
  2891 ;; Hardware stack levels required when called: 6
  2892 ;; This function calls:
  2893 ;;		___flge
  2894 ;; This function is called by:
  2895 ;;		_controleEstufas
  2896 ;; This function uses a non-reentrant model
  2897 ;;
  2898                           
  2899                           
  2900                           ;psect for function _estufaDois
  2901  0EAF                     _estufaDois:
  2902  0EAF                     l1682:	
  2903                           ;incstack = 0
  2904                           ; Regs used in _estufaDois: [wreg+status,2+status,0+pclath+cstack]
  2905                           
  2906                           
  2907                           ;main.c: 380:     if(valor_entry4 <= 128)
  2908  0EAF  3043               	movlw	67
  2909  0EB0  1683               	bsf	3,5	;RP0=1, select bank1
  2910  0EB1  1303               	bcf	3,6	;RP1=0, select bank1
  2911  0EB2  00A3               	movwf	(___flge@ff1+3)^(0+128)
  2912  0EB3  3000               	movlw	0
  2913  0EB4  00A2               	movwf	(___flge@ff1+2)^(0+128)
  2914  0EB5  3000               	movlw	0
  2915  0EB6  00A1               	movwf	(___flge@ff1+1)^(0+128)
  2916  0EB7  3000               	movlw	0
  2917  0EB8  00A0               	movwf	___flge@ff1^(0+128)
  2918  0EB9  1283               	bcf	3,5	;RP0=0, select bank0
  2919  0EBA  1303               	bcf	3,6	;RP1=0, select bank0
  2920  0EBB  0864               	movf	_valor_entry4+3,w
  2921  0EBC  1683               	bsf	3,5	;RP0=1, select bank1
  2922  0EBD  1303               	bcf	3,6	;RP1=0, select bank1
  2923  0EBE  00A7               	movwf	(___flge@ff2+3)^(0+128)
  2924  0EBF  1283               	bcf	3,5	;RP0=0, select bank0
  2925  0EC0  1303               	bcf	3,6	;RP1=0, select bank0
  2926  0EC1  0863               	movf	_valor_entry4+2,w
  2927  0EC2  1683               	bsf	3,5	;RP0=1, select bank1
  2928  0EC3  1303               	bcf	3,6	;RP1=0, select bank1
  2929  0EC4  00A6               	movwf	(___flge@ff2+2)^(0+128)
  2930  0EC5  1283               	bcf	3,5	;RP0=0, select bank0
  2931  0EC6  1303               	bcf	3,6	;RP1=0, select bank0
  2932  0EC7  0862               	movf	_valor_entry4+1,w
  2933  0EC8  1683               	bsf	3,5	;RP0=1, select bank1
  2934  0EC9  1303               	bcf	3,6	;RP1=0, select bank1
  2935  0ECA  00A5               	movwf	(___flge@ff2+1)^(0+128)
  2936  0ECB  1283               	bcf	3,5	;RP0=0, select bank0
  2937  0ECC  1303               	bcf	3,6	;RP1=0, select bank0
  2938  0ECD  0861               	movf	_valor_entry4,w
  2939  0ECE  1683               	bsf	3,5	;RP0=1, select bank1
  2940  0ECF  1303               	bcf	3,6	;RP1=0, select bank1
  2941  0ED0  00A4               	movwf	___flge@ff2^(0+128)
  2942  0ED1  120A  118A  2550  120A  158A  	fcall	___flge
  2943  0ED6  1C03               	btfss	3,0
  2944  0ED7  2ED9               	goto	u1271
  2945  0ED8  2EDA               	goto	u1270
  2946  0ED9                     u1271:
  2947  0ED9  2EDE               	goto	l220
  2948  0EDA                     u1270:
  2949  0EDA                     l1684:
  2950                           
  2951                           ;main.c: 381:     {;main.c: 382:         RC6 = 1;
  2952  0EDA  1283               	bcf	3,5	;RP0=0, select bank0
  2953  0EDB  1303               	bcf	3,6	;RP1=0, select bank0
  2954  0EDC  1707               	bsf	7,6	;volatile
  2955                           
  2956                           ;main.c: 383:     }
  2957  0EDD  2EE1               	goto	l222
  2958  0EDE                     l220:	
  2959                           ;main.c: 384:     else
  2960                           
  2961                           
  2962                           ;main.c: 385:     {;main.c: 386:         RC6 = 0;
  2963  0EDE  1283               	bcf	3,5	;RP0=0, select bank0
  2964  0EDF  1303               	bcf	3,6	;RP1=0, select bank0
  2965  0EE0  1307               	bcf	7,6	;volatile
  2966  0EE1                     l222:
  2967  0EE1  0008               	return
  2968  0EE2                     __end_of_estufaDois:
  2969                           
  2970                           	psect	text11
  2971  0550                     __ptext11:	
  2972 ;; *************** function ___flge *****************
  2973 ;; Defined at:
  2974 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\flge.c"
  2975 ;; Parameters:    Size  Location     Type
  2976 ;;  ff1             4    0[BANK1 ] void 
  2977 ;;  ff2             4    4[BANK1 ] void 
  2978 ;; Auto vars:     Size  Location     Type
  2979 ;;		None
  2980 ;; Return value:  Size  Location     Type
  2981 ;;		None               void
  2982 ;; Registers used:
  2983 ;;		wreg, status,2, status,0
  2984 ;; Tracked objects:
  2985 ;;		On entry : 0/0
  2986 ;;		On exit  : 0/0
  2987 ;;		Unchanged: 0/0
  2988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2989 ;;      Params:         0       0       8       0       0
  2990 ;;      Locals:         0       0       0       0       0
  2991 ;;      Temps:          0       0       4       0       0
  2992 ;;      Totals:         0       0      12       0       0
  2993 ;;Total ram usage:       12 bytes
  2994 ;; Hardware stack levels used: 1
  2995 ;; Hardware stack levels required when called: 5
  2996 ;; This function calls:
  2997 ;;		Nothing
  2998 ;; This function is called by:
  2999 ;;		_main
  3000 ;;		_controleEstufas
  3001 ;;		_estufaUm
  3002 ;;		_estufaDois
  3003 ;;		_estufaTres
  3004 ;;		_estufaQuatro
  3005 ;; This function uses a non-reentrant model
  3006 ;;
  3007                           
  3008                           
  3009                           ;psect for function ___flge
  3010  0550                     ___flge:
  3011  0550                     l1498:	
  3012                           ;incstack = 0
  3013                           ; Regs used in ___flge: [wreg+status,2+status,0]
  3014                           
  3015  0550  3000               	movlw	0
  3016  0551  1683               	bsf	3,5	;RP0=1, select bank1
  3017  0552  1303               	bcf	3,6	;RP1=0, select bank1
  3018  0553  0520               	andwf	___flge@ff1^(0+128),w
  3019  0554  00A8               	movwf	??___flge^(0+128)
  3020  0555  3000               	movlw	0
  3021  0556  0521               	andwf	(___flge@ff1+1)^(0+128),w
  3022  0557  00A9               	movwf	(??___flge^(0+128)+1)
  3023  0558  3080               	movlw	128
  3024  0559  0522               	andwf	(___flge@ff1+2)^(0+128),w
  3025  055A  00AA               	movwf	(??___flge^(0+128)+2)
  3026  055B  307F               	movlw	127
  3027  055C  0523               	andwf	(___flge@ff1+3)^(0+128),w
  3028  055D  00AB               	movwf	(??___flge^(0+128)+3)
  3029  055E  082B               	movf	(??___flge+3)^(0+128),w
  3030  055F  042A               	iorwf	(??___flge+2)^(0+128),w
  3031  0560  0429               	iorwf	(??___flge+1)^(0+128),w
  3032  0561  0428               	iorwf	??___flge^(0+128),w
  3033  0562  1D03               	skipz
  3034  0563  2D65               	goto	u941
  3035  0564  2D66               	goto	u940
  3036  0565                     u941:
  3037  0565  2D6E               	goto	l520
  3038  0566                     u940:
  3039  0566                     l1500:
  3040  0566  3000               	movlw	0
  3041  0567  00A3               	movwf	(___flge@ff1+3)^(0+128)
  3042  0568  3000               	movlw	0
  3043  0569  00A2               	movwf	(___flge@ff1+2)^(0+128)
  3044  056A  3000               	movlw	0
  3045  056B  00A1               	movwf	(___flge@ff1+1)^(0+128)
  3046  056C  3000               	movlw	0
  3047  056D  00A0               	movwf	___flge@ff1^(0+128)
  3048  056E                     l520:
  3049  056E  3000               	movlw	0
  3050  056F  0524               	andwf	___flge@ff2^(0+128),w
  3051  0570  00A8               	movwf	??___flge^(0+128)
  3052  0571  3000               	movlw	0
  3053  0572  0525               	andwf	(___flge@ff2+1)^(0+128),w
  3054  0573  00A9               	movwf	(??___flge^(0+128)+1)
  3055  0574  3080               	movlw	128
  3056  0575  0526               	andwf	(___flge@ff2+2)^(0+128),w
  3057  0576  00AA               	movwf	(??___flge^(0+128)+2)
  3058  0577  307F               	movlw	127
  3059  0578  0527               	andwf	(___flge@ff2+3)^(0+128),w
  3060  0579  00AB               	movwf	(??___flge^(0+128)+3)
  3061  057A  082B               	movf	(??___flge+3)^(0+128),w
  3062  057B  042A               	iorwf	(??___flge+2)^(0+128),w
  3063  057C  0429               	iorwf	(??___flge+1)^(0+128),w
  3064  057D  0428               	iorwf	??___flge^(0+128),w
  3065  057E  1D03               	skipz
  3066  057F  2D81               	goto	u951
  3067  0580  2D82               	goto	u950
  3068  0581                     u951:
  3069  0581  2D8A               	goto	l1504
  3070  0582                     u950:
  3071  0582                     l1502:
  3072  0582  3000               	movlw	0
  3073  0583  00A7               	movwf	(___flge@ff2+3)^(0+128)
  3074  0584  3000               	movlw	0
  3075  0585  00A6               	movwf	(___flge@ff2+2)^(0+128)
  3076  0586  3000               	movlw	0
  3077  0587  00A5               	movwf	(___flge@ff2+1)^(0+128)
  3078  0588  3000               	movlw	0
  3079  0589  00A4               	movwf	___flge@ff2^(0+128)
  3080  058A                     l1504:
  3081  058A  1FA3               	btfss	(___flge@ff1+3)^(0+128),7
  3082  058B  2D8D               	goto	u961
  3083  058C  2D8E               	goto	u960
  3084  058D                     u961:
  3085  058D  2DB2               	goto	l1508
  3086  058E                     u960:
  3087  058E                     l1506:
  3088  058E  3000               	movlw	0
  3089  058F  00A8               	movwf	??___flge^(0+128)
  3090  0590  3000               	movlw	0
  3091  0591  00A9               	movwf	(??___flge^(0+128)+1)
  3092  0592  3000               	movlw	0
  3093  0593  00AA               	movwf	(??___flge^(0+128)+2)
  3094  0594  3080               	movlw	128
  3095  0595  00AB               	movwf	(??___flge^(0+128)+3)
  3096  0596  0820               	movf	___flge@ff1^(0+128),w
  3097  0597  02A8               	subwf	??___flge^(0+128),f
  3098  0598  0821               	movf	(___flge@ff1+1)^(0+128),w
  3099  0599  1C03               	skipc
  3100  059A  0F21               	incfsz	(___flge@ff1+1)^(0+128),w
  3101  059B  2D9D               	goto	u971
  3102  059C  2D9E               	goto	u972
  3103  059D                     u971:
  3104  059D  02A9               	subwf	(??___flge^(0+128)+1),f
  3105  059E                     u972:
  3106  059E  0822               	movf	(___flge@ff1+2)^(0+128),w
  3107  059F  1C03               	skipc
  3108  05A0  0F22               	incfsz	(___flge@ff1+2)^(0+128),w
  3109  05A1  2DA3               	goto	u973
  3110  05A2  2DA4               	goto	u974
  3111  05A3                     u973:
  3112  05A3  02AA               	subwf	(??___flge^(0+128)+2),f
  3113  05A4                     u974:
  3114  05A4  0823               	movf	(___flge@ff1+3)^(0+128),w
  3115  05A5  1C03               	skipc
  3116  05A6  0F23               	incfsz	(___flge@ff1+3)^(0+128),w
  3117  05A7  2DA9               	goto	u975
  3118  05A8  2DAA               	goto	u976
  3119  05A9                     u975:
  3120  05A9  02AB               	subwf	(??___flge^(0+128)+3),f
  3121  05AA                     u976:
  3122  05AA  082B               	movf	(??___flge+3)^(0+128),w
  3123  05AB  00A3               	movwf	(___flge@ff1+3)^(0+128)
  3124  05AC  082A               	movf	(??___flge+2)^(0+128),w
  3125  05AD  00A2               	movwf	(___flge@ff1+2)^(0+128)
  3126  05AE  0829               	movf	(??___flge+1)^(0+128),w
  3127  05AF  00A1               	movwf	(___flge@ff1+1)^(0+128)
  3128  05B0  0828               	movf	??___flge^(0+128),w
  3129  05B1  00A0               	movwf	___flge@ff1^(0+128)
  3130  05B2                     l1508:
  3131  05B2  1FA7               	btfss	(___flge@ff2+3)^(0+128),7
  3132  05B3  2DB5               	goto	u981
  3133  05B4  2DB6               	goto	u980
  3134  05B5                     u981:
  3135  05B5  2DDA               	goto	l523
  3136  05B6                     u980:
  3137  05B6                     l1510:
  3138  05B6  3000               	movlw	0
  3139  05B7  00A8               	movwf	??___flge^(0+128)
  3140  05B8  3000               	movlw	0
  3141  05B9  00A9               	movwf	(??___flge^(0+128)+1)
  3142  05BA  3000               	movlw	0
  3143  05BB  00AA               	movwf	(??___flge^(0+128)+2)
  3144  05BC  3080               	movlw	128
  3145  05BD  00AB               	movwf	(??___flge^(0+128)+3)
  3146  05BE  0824               	movf	___flge@ff2^(0+128),w
  3147  05BF  02A8               	subwf	??___flge^(0+128),f
  3148  05C0  0825               	movf	(___flge@ff2+1)^(0+128),w
  3149  05C1  1C03               	skipc
  3150  05C2  0F25               	incfsz	(___flge@ff2+1)^(0+128),w
  3151  05C3  2DC5               	goto	u991
  3152  05C4  2DC6               	goto	u992
  3153  05C5                     u991:
  3154  05C5  02A9               	subwf	(??___flge^(0+128)+1),f
  3155  05C6                     u992:
  3156  05C6  0826               	movf	(___flge@ff2+2)^(0+128),w
  3157  05C7  1C03               	skipc
  3158  05C8  0F26               	incfsz	(___flge@ff2+2)^(0+128),w
  3159  05C9  2DCB               	goto	u993
  3160  05CA  2DCC               	goto	u994
  3161  05CB                     u993:
  3162  05CB  02AA               	subwf	(??___flge^(0+128)+2),f
  3163  05CC                     u994:
  3164  05CC  0827               	movf	(___flge@ff2+3)^(0+128),w
  3165  05CD  1C03               	skipc
  3166  05CE  0F27               	incfsz	(___flge@ff2+3)^(0+128),w
  3167  05CF  2DD1               	goto	u995
  3168  05D0  2DD2               	goto	u996
  3169  05D1                     u995:
  3170  05D1  02AB               	subwf	(??___flge^(0+128)+3),f
  3171  05D2                     u996:
  3172  05D2  082B               	movf	(??___flge+3)^(0+128),w
  3173  05D3  00A7               	movwf	(___flge@ff2+3)^(0+128)
  3174  05D4  082A               	movf	(??___flge+2)^(0+128),w
  3175  05D5  00A6               	movwf	(___flge@ff2+2)^(0+128)
  3176  05D6  0829               	movf	(??___flge+1)^(0+128),w
  3177  05D7  00A5               	movwf	(___flge@ff2+1)^(0+128)
  3178  05D8  0828               	movf	??___flge^(0+128),w
  3179  05D9  00A4               	movwf	___flge@ff2^(0+128)
  3180  05DA                     l523:
  3181  05DA  3080               	movlw	128
  3182  05DB  06A3               	xorwf	(___flge@ff1+3)^(0+128),f
  3183  05DC  3080               	movlw	128
  3184  05DD  06A7               	xorwf	(___flge@ff2+3)^(0+128),f
  3185  05DE  0827               	movf	(___flge@ff2+3)^(0+128),w
  3186  05DF  0223               	subwf	(___flge@ff1+3)^(0+128),w
  3187  05E0  1D03               	skipz
  3188  05E1  2DEC               	goto	u1005
  3189  05E2  0826               	movf	(___flge@ff2+2)^(0+128),w
  3190  05E3  0222               	subwf	(___flge@ff1+2)^(0+128),w
  3191  05E4  1D03               	skipz
  3192  05E5  2DEC               	goto	u1005
  3193  05E6  0825               	movf	(___flge@ff2+1)^(0+128),w
  3194  05E7  0221               	subwf	(___flge@ff1+1)^(0+128),w
  3195  05E8  1D03               	skipz
  3196  05E9  2DEC               	goto	u1005
  3197  05EA  0824               	movf	___flge@ff2^(0+128),w
  3198  05EB  0220               	subwf	___flge@ff1^(0+128),w
  3199  05EC                     u1005:
  3200  05EC  1803               	skipnc
  3201  05ED  2DEF               	goto	u1001
  3202  05EE  2DF0               	goto	u1000
  3203  05EF                     u1001:
  3204  05EF  2DF2               	goto	l1514
  3205  05F0                     u1000:
  3206  05F0                     l1512:
  3207  05F0  1003               	clrc
  3208  05F1  2DF3               	goto	l524
  3209  05F2                     l1514:
  3210  05F2  1403               	setc
  3211  05F3                     l524:
  3212  05F3  0008               	return
  3213  05F4                     __end_of___flge:
  3214                           
  3215                           	psect	text12
  3216  06E0                     __ptext12:	
  3217 ;; *************** function _Lcd_Init *****************
  3218 ;; Defined at:
  3219 ;;		line 62 in file "./lcd.h"
  3220 ;; Parameters:    Size  Location     Type
  3221 ;;		None
  3222 ;; Auto vars:     Size  Location     Type
  3223 ;;		None
  3224 ;; Return value:  Size  Location     Type
  3225 ;;                  1    wreg      void 
  3226 ;; Registers used:
  3227 ;;		wreg, status,2, status,0, pclath, cstack
  3228 ;; Tracked objects:
  3229 ;;		On entry : 0/0
  3230 ;;		On exit  : 0/0
  3231 ;;		Unchanged: 0/0
  3232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3233 ;;      Params:         0       0       0       0       0
  3234 ;;      Locals:         0       0       0       0       0
  3235 ;;      Temps:          0       0       2       0       0
  3236 ;;      Totals:         0       0       2       0       0
  3237 ;;Total ram usage:        2 bytes
  3238 ;; Hardware stack levels used: 1
  3239 ;; Hardware stack levels required when called: 7
  3240 ;; This function calls:
  3241 ;;		_Lcd_Cmd
  3242 ;;		_Lcd_Port
  3243 ;; This function is called by:
  3244 ;;		_main
  3245 ;; This function uses a non-reentrant model
  3246 ;;
  3247                           
  3248                           
  3249                           ;psect for function _Lcd_Init
  3250  06E0                     _Lcd_Init:
  3251  06E0                     l1774:	
  3252                           ;incstack = 0
  3253                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3254                           
  3255                           
  3256                           ;./lcd.h: 64:   Lcd_Port(0x00);
  3257  06E0  3000               	movlw	0
  3258  06E1  120A  158A  2715  120A  118A  	fcall	_Lcd_Port
  3259  06E6                     l1776:
  3260                           
  3261                           ;./lcd.h: 65:    _delay((unsigned long)((20)*(4000000/4000.0)));
  3262  06E6  301A               	movlw	26
  3263  06E7  1683               	bsf	3,5	;RP0=1, select bank1
  3264  06E8  1303               	bcf	3,6	;RP1=0, select bank1
  3265  06E9  00A5               	movwf	(??_Lcd_Init^(0+128)+1)
  3266  06EA  30F7               	movlw	247
  3267  06EB  00A4               	movwf	??_Lcd_Init^(0+128)
  3268  06EC                     u1697:
  3269  06EC  0BA4               	decfsz	??_Lcd_Init^(0+128),f
  3270  06ED  2EEC               	goto	u1697
  3271  06EE  0BA5               	decfsz	(??_Lcd_Init^(0+128)+1),f
  3272  06EF  2EEC               	goto	u1697
  3273  06F0  2EF1               	nop2
  3274  06F1                     l1778:
  3275                           
  3276                           ;./lcd.h: 66:   Lcd_Cmd(0x03);
  3277  06F1  3003               	movlw	3
  3278  06F2  120A  158A  25C0  120A  118A  	fcall	_Lcd_Cmd
  3279                           
  3280                           ;./lcd.h: 67:  _delay((unsigned long)((5)*(4000000/4000.0)));
  3281  06F7  3007               	movlw	7
  3282  06F8  1683               	bsf	3,5	;RP0=1, select bank1
  3283  06F9  1303               	bcf	3,6	;RP1=0, select bank1
  3284  06FA  00A5               	movwf	(??_Lcd_Init^(0+128)+1)
  3285  06FB  307C               	movlw	124
  3286  06FC  00A4               	movwf	??_Lcd_Init^(0+128)
  3287  06FD                     u1707:
  3288  06FD  0BA4               	decfsz	??_Lcd_Init^(0+128),f
  3289  06FE  2EFD               	goto	u1707
  3290  06FF  0BA5               	decfsz	(??_Lcd_Init^(0+128)+1),f
  3291  0700  2EFD               	goto	u1707
  3292  0701  0000               	nop
  3293  0702                     l1780:
  3294                           
  3295                           ;./lcd.h: 68:   Lcd_Cmd(0x03);
  3296  0702  3003               	movlw	3
  3297  0703  120A  158A  25C0  120A  118A  	fcall	_Lcd_Cmd
  3298  0708                     l1782:
  3299                           
  3300                           ;./lcd.h: 69:  _delay((unsigned long)((11)*(4000000/4000.0)));
  3301  0708  300F               	movlw	15
  3302  0709  1683               	bsf	3,5	;RP0=1, select bank1
  3303  070A  1303               	bcf	3,6	;RP1=0, select bank1
  3304  070B  00A5               	movwf	(??_Lcd_Init^(0+128)+1)
  3305  070C  3047               	movlw	71
  3306  070D  00A4               	movwf	??_Lcd_Init^(0+128)
  3307  070E                     u1717:
  3308  070E  0BA4               	decfsz	??_Lcd_Init^(0+128),f
  3309  070F  2F0E               	goto	u1717
  3310  0710  0BA5               	decfsz	(??_Lcd_Init^(0+128)+1),f
  3311  0711  2F0E               	goto	u1717
  3312                           
  3313                           ;./lcd.h: 70:   Lcd_Cmd(0x03);
  3314  0712  3003               	movlw	3
  3315  0713  120A  158A  25C0  120A  118A  	fcall	_Lcd_Cmd
  3316                           
  3317                           ;./lcd.h: 72:   Lcd_Cmd(0x02);
  3318  0718  3002               	movlw	2
  3319  0719  120A  158A  25C0  120A  118A  	fcall	_Lcd_Cmd
  3320                           
  3321                           ;./lcd.h: 73:   Lcd_Cmd(0x02);
  3322  071E  3002               	movlw	2
  3323  071F  120A  158A  25C0  120A  118A  	fcall	_Lcd_Cmd
  3324                           
  3325                           ;./lcd.h: 74:   Lcd_Cmd(0x08);
  3326  0724  3008               	movlw	8
  3327  0725  120A  158A  25C0  120A  118A  	fcall	_Lcd_Cmd
  3328                           
  3329                           ;./lcd.h: 75:   Lcd_Cmd(0x00);
  3330  072A  3000               	movlw	0
  3331  072B  120A  158A  25C0  120A  118A  	fcall	_Lcd_Cmd
  3332                           
  3333                           ;./lcd.h: 76:   Lcd_Cmd(0x0C);
  3334  0730  300C               	movlw	12
  3335  0731  120A  158A  25C0  120A  118A  	fcall	_Lcd_Cmd
  3336                           
  3337                           ;./lcd.h: 77:   Lcd_Cmd(0x00);
  3338  0736  3000               	movlw	0
  3339  0737  120A  158A  25C0  120A  118A  	fcall	_Lcd_Cmd
  3340                           
  3341                           ;./lcd.h: 78:   Lcd_Cmd(0x06);
  3342  073C  3006               	movlw	6
  3343  073D  120A  158A  25C0  120A  118A  	fcall	_Lcd_Cmd
  3344  0742                     l136:
  3345  0742  0008               	return
  3346  0743                     __end_of_Lcd_Init:
  3347                           
  3348                           	psect	text13
  3349  0DC0                     __ptext13:	
  3350 ;; *************** function _Lcd_Cmd *****************
  3351 ;; Defined at:
  3352 ;;		line 26 in file "./lcd.h"
  3353 ;; Parameters:    Size  Location     Type
  3354 ;;  a               1    wreg     unsigned char 
  3355 ;; Auto vars:     Size  Location     Type
  3356 ;;  a               1    3[BANK1 ] unsigned char 
  3357 ;; Return value:  Size  Location     Type
  3358 ;;                  1    wreg      void 
  3359 ;; Registers used:
  3360 ;;		wreg, status,2, status,0, pclath, cstack
  3361 ;; Tracked objects:
  3362 ;;		On entry : 0/0
  3363 ;;		On exit  : 0/0
  3364 ;;		Unchanged: 0/0
  3365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3366 ;;      Params:         0       0       0       0       0
  3367 ;;      Locals:         0       0       1       0       0
  3368 ;;      Temps:          0       0       2       0       0
  3369 ;;      Totals:         0       0       3       0       0
  3370 ;;Total ram usage:        3 bytes
  3371 ;; Hardware stack levels used: 1
  3372 ;; Hardware stack levels required when called: 6
  3373 ;; This function calls:
  3374 ;;		_Lcd_Port
  3375 ;; This function is called by:
  3376 ;;		_Lcd_Init
  3377 ;;		_Lcd_Shift_Right
  3378 ;;		_Lcd_Shift_Left
  3379 ;; This function uses a non-reentrant model
  3380 ;;
  3381                           
  3382                           
  3383                           ;psect for function _Lcd_Cmd
  3384  0DC0                     _Lcd_Cmd:
  3385                           
  3386                           ;incstack = 0
  3387                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3388                           ;Lcd_Cmd@a stored from wreg
  3389  0DC0  1683               	bsf	3,5	;RP0=1, select bank1
  3390  0DC1  1303               	bcf	3,6	;RP1=0, select bank1
  3391  0DC2  00A3               	movwf	Lcd_Cmd@a^(0+128)
  3392  0DC3                     l1576:
  3393                           
  3394                           ;./lcd.h: 26: void Lcd_Cmd(char a);./lcd.h: 27: {;./lcd.h: 28:  RB2 = 0;
  3395  0DC3  1283               	bcf	3,5	;RP0=0, select bank0
  3396  0DC4  1303               	bcf	3,6	;RP1=0, select bank0
  3397  0DC5  1106               	bcf	6,2	;volatile
  3398  0DC6                     l1578:
  3399                           
  3400                           ;./lcd.h: 29:  Lcd_Port(a);
  3401  0DC6  1683               	bsf	3,5	;RP0=1, select bank1
  3402  0DC7  1303               	bcf	3,6	;RP1=0, select bank1
  3403  0DC8  0823               	movf	Lcd_Cmd@a^(0+128),w
  3404  0DC9  120A  158A  2715  120A  158A  	fcall	_Lcd_Port
  3405  0DCE                     l1580:
  3406                           
  3407                           ;./lcd.h: 30:  RB1 = 1;
  3408  0DCE  1283               	bcf	3,5	;RP0=0, select bank0
  3409  0DCF  1303               	bcf	3,6	;RP1=0, select bank0
  3410  0DD0  1486               	bsf	6,1	;volatile
  3411  0DD1                     l1582:
  3412                           
  3413                           ;./lcd.h: 31:         _delay((unsigned long)((4)*(4000000/4000.0)));
  3414  0DD1  3006               	movlw	6
  3415  0DD2  1683               	bsf	3,5	;RP0=1, select bank1
  3416  0DD3  1303               	bcf	3,6	;RP1=0, select bank1
  3417  0DD4  00A2               	movwf	(??_Lcd_Cmd^(0+128)+1)
  3418  0DD5  302F               	movlw	47
  3419  0DD6  00A1               	movwf	??_Lcd_Cmd^(0+128)
  3420  0DD7                     u1727:
  3421  0DD7  0BA1               	decfsz	??_Lcd_Cmd^(0+128),f
  3422  0DD8  2DD7               	goto	u1727
  3423  0DD9  0BA2               	decfsz	(??_Lcd_Cmd^(0+128)+1),f
  3424  0DDA  2DD7               	goto	u1727
  3425  0DDB  2DDC               	nop2
  3426  0DDC                     l1584:
  3427                           
  3428                           ;./lcd.h: 32:         RB1 = 0;
  3429  0DDC  1283               	bcf	3,5	;RP0=0, select bank0
  3430  0DDD  1303               	bcf	3,6	;RP1=0, select bank0
  3431  0DDE  1086               	bcf	6,1	;volatile
  3432  0DDF                     l124:
  3433  0DDF  0008               	return
  3434  0DE0                     __end_of_Lcd_Cmd:
  3435                           
  3436                           	psect	text14
  3437  0F15                     __ptext14:	
  3438 ;; *************** function _Lcd_Port *****************
  3439 ;; Defined at:
  3440 ;;		line 4 in file "./lcd.h"
  3441 ;; Parameters:    Size  Location     Type
  3442 ;;  a               1    wreg     unsigned char 
  3443 ;; Auto vars:     Size  Location     Type
  3444 ;;  a               1    0[BANK1 ] unsigned char 
  3445 ;; Return value:  Size  Location     Type
  3446 ;;                  1    wreg      void 
  3447 ;; Registers used:
  3448 ;;		wreg
  3449 ;; Tracked objects:
  3450 ;;		On entry : 0/0
  3451 ;;		On exit  : 0/0
  3452 ;;		Unchanged: 0/0
  3453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3454 ;;      Params:         0       0       0       0       0
  3455 ;;      Locals:         0       0       1       0       0
  3456 ;;      Temps:          0       0       0       0       0
  3457 ;;      Totals:         0       0       1       0       0
  3458 ;;Total ram usage:        1 bytes
  3459 ;; Hardware stack levels used: 1
  3460 ;; Hardware stack levels required when called: 5
  3461 ;; This function calls:
  3462 ;;		Nothing
  3463 ;; This function is called by:
  3464 ;;		_Lcd_Cmd
  3465 ;;		_Lcd_Init
  3466 ;; This function uses a non-reentrant model
  3467 ;;
  3468                           
  3469                           
  3470                           ;psect for function _Lcd_Port
  3471  0F15                     _Lcd_Port:
  3472                           
  3473                           ;incstack = 0
  3474                           ; Regs used in _Lcd_Port: [wreg]
  3475                           ;Lcd_Port@a stored from wreg
  3476  0F15  1683               	bsf	3,5	;RP0=1, select bank1
  3477  0F16  1303               	bcf	3,6	;RP1=0, select bank1
  3478  0F17  00A0               	movwf	Lcd_Port@a^(0+128)
  3479  0F18                     l1468:
  3480                           
  3481                           ;./lcd.h: 4: void Lcd_Port(char a);./lcd.h: 5: {;./lcd.h: 6:  if(a & 1)
  3482  0F18  1C20               	btfss	Lcd_Port@a^(0+128),0
  3483  0F19  2F1B               	goto	u891
  3484  0F1A  2F1C               	goto	u890
  3485  0F1B                     u891:
  3486  0F1B  2F20               	goto	l113
  3487  0F1C                     u890:
  3488  0F1C                     l1470:
  3489                           
  3490                           ;./lcd.h: 7:   RB4 = 1;
  3491  0F1C  1283               	bcf	3,5	;RP0=0, select bank0
  3492  0F1D  1303               	bcf	3,6	;RP1=0, select bank0
  3493  0F1E  1606               	bsf	6,4	;volatile
  3494  0F1F  2F23               	goto	l114
  3495  0F20                     l113:	
  3496                           ;./lcd.h: 8:  else
  3497                           
  3498                           
  3499                           ;./lcd.h: 9:   RB4 = 0;
  3500  0F20  1283               	bcf	3,5	;RP0=0, select bank0
  3501  0F21  1303               	bcf	3,6	;RP1=0, select bank0
  3502  0F22  1206               	bcf	6,4	;volatile
  3503  0F23                     l114:
  3504                           
  3505                           ;./lcd.h: 11:  if(a & 2)
  3506  0F23  1683               	bsf	3,5	;RP0=1, select bank1
  3507  0F24  1303               	bcf	3,6	;RP1=0, select bank1
  3508  0F25  1CA0               	btfss	Lcd_Port@a^(0+128),1
  3509  0F26  2F28               	goto	u901
  3510  0F27  2F29               	goto	u900
  3511  0F28                     u901:
  3512  0F28  2F2D               	goto	l115
  3513  0F29                     u900:
  3514  0F29                     l1472:
  3515                           
  3516                           ;./lcd.h: 12:   RB5 = 1;
  3517  0F29  1283               	bcf	3,5	;RP0=0, select bank0
  3518  0F2A  1303               	bcf	3,6	;RP1=0, select bank0
  3519  0F2B  1686               	bsf	6,5	;volatile
  3520  0F2C  2F30               	goto	l116
  3521  0F2D                     l115:	
  3522                           ;./lcd.h: 13:  else
  3523                           
  3524                           
  3525                           ;./lcd.h: 14:   RB5 = 0;
  3526  0F2D  1283               	bcf	3,5	;RP0=0, select bank0
  3527  0F2E  1303               	bcf	3,6	;RP1=0, select bank0
  3528  0F2F  1286               	bcf	6,5	;volatile
  3529  0F30                     l116:
  3530                           
  3531                           ;./lcd.h: 16:  if(a & 4)
  3532  0F30  1683               	bsf	3,5	;RP0=1, select bank1
  3533  0F31  1303               	bcf	3,6	;RP1=0, select bank1
  3534  0F32  1D20               	btfss	Lcd_Port@a^(0+128),2
  3535  0F33  2F35               	goto	u911
  3536  0F34  2F36               	goto	u910
  3537  0F35                     u911:
  3538  0F35  2F3A               	goto	l117
  3539  0F36                     u910:
  3540  0F36                     l1474:
  3541                           
  3542                           ;./lcd.h: 17:   RB6 = 1;
  3543  0F36  1283               	bcf	3,5	;RP0=0, select bank0
  3544  0F37  1303               	bcf	3,6	;RP1=0, select bank0
  3545  0F38  1706               	bsf	6,6	;volatile
  3546  0F39  2F3D               	goto	l118
  3547  0F3A                     l117:	
  3548                           ;./lcd.h: 18:  else
  3549                           
  3550                           
  3551                           ;./lcd.h: 19:   RB6 = 0;
  3552  0F3A  1283               	bcf	3,5	;RP0=0, select bank0
  3553  0F3B  1303               	bcf	3,6	;RP1=0, select bank0
  3554  0F3C  1306               	bcf	6,6	;volatile
  3555  0F3D                     l118:
  3556                           
  3557                           ;./lcd.h: 21:  if(a & 8)
  3558  0F3D  1683               	bsf	3,5	;RP0=1, select bank1
  3559  0F3E  1303               	bcf	3,6	;RP1=0, select bank1
  3560  0F3F  1DA0               	btfss	Lcd_Port@a^(0+128),3
  3561  0F40  2F42               	goto	u921
  3562  0F41  2F43               	goto	u920
  3563  0F42                     u921:
  3564  0F42  2F47               	goto	l119
  3565  0F43                     u920:
  3566  0F43                     l1476:
  3567                           
  3568                           ;./lcd.h: 22:   RB7 = 1;
  3569  0F43  1283               	bcf	3,5	;RP0=0, select bank0
  3570  0F44  1303               	bcf	3,6	;RP1=0, select bank0
  3571  0F45  1786               	bsf	6,7	;volatile
  3572  0F46  2F4A               	goto	l121
  3573  0F47                     l119:	
  3574                           ;./lcd.h: 23:  else
  3575                           
  3576                           
  3577                           ;./lcd.h: 24:   RB7 = 0;
  3578  0F47  1283               	bcf	3,5	;RP0=0, select bank0
  3579  0F48  1303               	bcf	3,6	;RP1=0, select bank0
  3580  0F49  1386               	bcf	6,7	;volatile
  3581  0F4A                     l121:
  3582  0F4A  0008               	return
  3583  0F4B                     __end_of_Lcd_Port:
  3584                           
  3585                           	psect	text15
  3586  0E23                     __ptext15:	
  3587 ;; *************** function _TrataINT *****************
  3588 ;; Defined at:
  3589 ;;		line 67 in file "main.c"
  3590 ;; Parameters:    Size  Location     Type
  3591 ;;		None
  3592 ;; Auto vars:     Size  Location     Type
  3593 ;;		None
  3594 ;; Return value:  Size  Location     Type
  3595 ;;                  1    wreg      void 
  3596 ;; Registers used:
  3597 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3598 ;; Tracked objects:
  3599 ;;		On entry : 0/0
  3600 ;;		On exit  : 0/0
  3601 ;;		Unchanged: 0/0
  3602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3603 ;;      Params:         0       0       0       0       0
  3604 ;;      Locals:         0       0       0       0       0
  3605 ;;      Temps:          0       4       0       0       0
  3606 ;;      Totals:         0       4       0       0       0
  3607 ;;Total ram usage:        4 bytes
  3608 ;; Hardware stack levels used: 1
  3609 ;; Hardware stack levels required when called: 4
  3610 ;; This function calls:
  3611 ;;		_atualizaLCD
  3612 ;;		i1_recolheTela
  3613 ;; This function is called by:
  3614 ;;		Interrupt level 1
  3615 ;; This function uses a non-reentrant model
  3616 ;;
  3617                           
  3618                           
  3619                           ;psect for function _TrataINT
  3620  0E23                     _TrataINT:
  3621  0E23                     i1l2004:
  3622                           
  3623                           ;main.c: 69:     if(INTF == 1)
  3624  0E23  1C8B               	btfss	11,1	;volatile
  3625  0E24  2E26               	goto	u166_21
  3626  0E25  2E27               	goto	u166_20
  3627  0E26                     u166_21:
  3628  0E26  2E2E               	goto	i1l180
  3629  0E27                     u166_20:
  3630  0E27                     i1l2006:
  3631  0E27  0064               	clrwdt	;# 
  3632  0E28                     i1l2008:
  3633                           
  3634                           ;main.c: 72:         recolheTela();
  3635  0E28  120A  158A  255E  120A  158A  	fcall	i1_recolheTela
  3636                           
  3637                           ;main.c: 73:     }
  3638  0E2D  2E3F               	goto	i1l2020
  3639  0E2E                     i1l180:	
  3640                           ;main.c: 74:     else if (TMR1IF == 1)
  3641                           
  3642  0E2E  1C0C               	btfss	12,0	;volatile
  3643  0E2F  2E31               	goto	u167_21
  3644  0E30  2E32               	goto	u167_20
  3645  0E31                     u167_21:
  3646  0E31  2E3F               	goto	i1l2020
  3647  0E32                     u167_20:
  3648  0E32                     i1l2010:
  3649  0E32  0064               	clrwdt	;# 
  3650  0E33                     i1l2012:
  3651                           
  3652                           ;main.c: 77:         atualizaLCD();
  3653  0E33  120A  118A  23BD  120A  158A  	fcall	_atualizaLCD
  3654  0E38                     i1l2014:
  3655                           
  3656                           ;main.c: 78:         TMR1IF = 0;
  3657  0E38  1283               	bcf	3,5	;RP0=0, select bank0
  3658  0E39  1303               	bcf	3,6	;RP1=0, select bank0
  3659  0E3A  100C               	bcf	12,0	;volatile
  3660  0E3B                     i1l2016:
  3661                           
  3662                           ;main.c: 79:         TMR1L = 0xDC;
  3663  0E3B  30DC               	movlw	220
  3664  0E3C  008E               	movwf	14	;volatile
  3665  0E3D                     i1l2018:
  3666                           
  3667                           ;main.c: 80:         TMR1H = 0x0B;
  3668  0E3D  300B               	movlw	11
  3669  0E3E  008F               	movwf	15	;volatile
  3670  0E3F                     i1l2020:
  3671                           
  3672                           ;main.c: 82:     INTF = 0;
  3673  0E3F  108B               	bcf	11,1	;volatile
  3674  0E40                     i1l183:
  3675  0E40  1283               	bcf	3,5	;RP0=0, select bank0
  3676  0E41  1303               	bcf	3,6	;RP1=0, select bank0
  3677  0E42  0858               	movf	??_TrataINT+3,w
  3678  0E43  00FF               	movwf	btemp+1
  3679  0E44  0857               	movf	??_TrataINT+2,w
  3680  0E45  008A               	movwf	10
  3681  0E46  0856               	movf	??_TrataINT+1,w
  3682  0E47  0084               	movwf	4
  3683  0E48  0E55               	swapf	??_TrataINT,w
  3684  0E49  0083               	movwf	3
  3685  0E4A  0EFE               	swapf	btemp,f
  3686  0E4B  0E7E               	swapf	btemp,w
  3687  0E4C  0009               	retfie
  3688  0E4D                     __end_of_TrataINT:
  3689                           
  3690                           	psect	intentry
  3691  0004                     __pintentry:	
  3692                           ;incstack = 0
  3693                           ; Regs used in _TrataINT: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3694                           
  3695  0004                     interrupt_function:
  3696  007E                     saved_w	set	btemp
  3697  0004  00FE               	movwf	btemp
  3698  0005  0E03               	swapf	3,w
  3699  0006  1283               	bcf	3,5	;RP0=0, select bank0
  3700  0007  1303               	bcf	3,6	;RP1=0, select bank0
  3701  0008  00D5               	movwf	??_TrataINT
  3702  0009  0804               	movf	4,w
  3703  000A  00D6               	movwf	??_TrataINT+1
  3704  000B  080A               	movf	10,w
  3705  000C  00D7               	movwf	??_TrataINT+2
  3706  000D  087F               	movf	btemp+1,w
  3707  000E  00D8               	movwf	??_TrataINT+3
  3708  000F  120A  158A  2E23   	ljmp	_TrataINT
  3709                           
  3710                           	psect	text16
  3711  0D5E                     __ptext16:	
  3712 ;; *************** function i1_recolheTela *****************
  3713 ;; Defined at:
  3714 ;;		line 157 in file "main.c"
  3715 ;; Parameters:    Size  Location     Type
  3716 ;;		None
  3717 ;; Auto vars:     Size  Location     Type
  3718 ;;		None
  3719 ;; Return value:  Size  Location     Type
  3720 ;;                  1    wreg      void 
  3721 ;; Registers used:
  3722 ;;		None
  3723 ;; Tracked objects:
  3724 ;;		On entry : 0/0
  3725 ;;		On exit  : 0/0
  3726 ;;		Unchanged: 0/0
  3727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3728 ;;      Params:         0       0       0       0       0
  3729 ;;      Locals:         0       0       0       0       0
  3730 ;;      Temps:          0       0       0       0       0
  3731 ;;      Totals:         0       0       0       0       0
  3732 ;;Total ram usage:        0 bytes
  3733 ;; Hardware stack levels used: 1
  3734 ;; This function calls:
  3735 ;;		Nothing
  3736 ;; This function is called by:
  3737 ;;		_TrataINT
  3738 ;; This function uses a non-reentrant model
  3739 ;;
  3740                           
  3741                           
  3742                           ;psect for function i1_recolheTela
  3743  0D5E                     i1_recolheTela:
  3744  0D5E                     i1l1392:	
  3745                           ;incstack = 0
  3746                           ; Regs used in i1_recolheTela: []
  3747                           
  3748                           
  3749                           ;main.c: 159:     if(RA4 == 0)
  3750  0D5E  1283               	bcf	3,5	;RP0=0, select bank0
  3751  0D5F  1303               	bcf	3,6	;RP1=0, select bank0
  3752  0D60  1A05               	btfsc	5,4	;volatile
  3753  0D61  2D63               	goto	u78_21
  3754  0D62  2D64               	goto	u78_20
  3755  0D63                     u78_21:
  3756  0D63  2D6D               	goto	i1l189
  3757  0D64                     u78_20:
  3758  0D64                     i1l1394:
  3759                           
  3760                           ;main.c: 160:     {;main.c: 162:         RD4 = 0;
  3761  0D64  1208               	bcf	8,4	;volatile
  3762                           
  3763                           ;main.c: 163:         RC1 = 1;
  3764  0D65  1487               	bsf	7,1	;volatile
  3765                           
  3766                           ;main.c: 164:         RD2 = 0;
  3767  0D66  1108               	bcf	8,2	;volatile
  3768                           
  3769                           ;main.c: 165:         RD6 = 1;
  3770  0D67  1708               	bsf	8,6	;volatile
  3771                           
  3772                           ;main.c: 167:         RD0 = 0;
  3773  0D68  1008               	bcf	8,0	;volatile
  3774                           
  3775                           ;main.c: 168:         RC3 = 1;
  3776  0D69  1587               	bsf	7,3	;volatile
  3777                           
  3778                           ;main.c: 169:         RC2 = 0;
  3779  0D6A  1107               	bcf	7,2	;volatile
  3780                           
  3781                           ;main.c: 170:         RD7 = 1;
  3782  0D6B  1788               	bsf	8,7	;volatile
  3783                           
  3784                           ;main.c: 171:     }
  3785  0D6C  2D75               	goto	i1l191
  3786  0D6D                     i1l189:	
  3787                           ;main.c: 172:     else
  3788                           
  3789                           
  3790                           ;main.c: 173:     {;main.c: 175:         RD4 = 1;
  3791  0D6D  1608               	bsf	8,4	;volatile
  3792                           
  3793                           ;main.c: 176:         RC1 = 1;
  3794  0D6E  1487               	bsf	7,1	;volatile
  3795                           
  3796                           ;main.c: 177:         RD2 = 1;
  3797  0D6F  1508               	bsf	8,2	;volatile
  3798                           
  3799                           ;main.c: 178:         RD6 = 1;
  3800  0D70  1708               	bsf	8,6	;volatile
  3801                           
  3802                           ;main.c: 180:         RD0 = 1;
  3803  0D71  1408               	bsf	8,0	;volatile
  3804                           
  3805                           ;main.c: 181:         RC3 = 1;
  3806  0D72  1587               	bsf	7,3	;volatile
  3807                           
  3808                           ;main.c: 182:         RC2 = 1;
  3809  0D73  1507               	bsf	7,2	;volatile
  3810                           
  3811                           ;main.c: 183:         RD7 = 1;
  3812  0D74  1788               	bsf	8,7	;volatile
  3813  0D75                     i1l191:
  3814  0D75  0008               	return
  3815  0D76                     __end_ofi1_recolheTela:
  3816                           
  3817                           	psect	text17
  3818  03BD                     __ptext17:	
  3819 ;; *************** function _atualizaLCD *****************
  3820 ;; Defined at:
  3821 ;;		line 217 in file "main.c"
  3822 ;; Parameters:    Size  Location     Type
  3823 ;;		None
  3824 ;; Auto vars:     Size  Location     Type
  3825 ;;  buffer1        16   37[BANK0 ] unsigned char [16]
  3826 ;;  buffer0        16   21[BANK0 ] unsigned char [16]
  3827 ;; Return value:  Size  Location     Type
  3828 ;;                  1    wreg      void 
  3829 ;; Registers used:
  3830 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3831 ;; Tracked objects:
  3832 ;;		On entry : 0/0
  3833 ;;		On exit  : 0/0
  3834 ;;		Unchanged: 0/0
  3835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3836 ;;      Params:         0       0       0       0       0
  3837 ;;      Locals:         0      32       0       0       0
  3838 ;;      Temps:          0       2       0       0       0
  3839 ;;      Totals:         0      34       0       0       0
  3840 ;;Total ram usage:       34 bytes
  3841 ;; Hardware stack levels used: 1
  3842 ;; Hardware stack levels required when called: 3
  3843 ;; This function calls:
  3844 ;;		_Lcd_Clear
  3845 ;;		_Lcd_Set_Cursor
  3846 ;;		_Lcd_Write_String
  3847 ;;		___fltol
  3848 ;;		_sprintf
  3849 ;; This function is called by:
  3850 ;;		_TrataINT
  3851 ;; This function uses a non-reentrant model
  3852 ;;
  3853                           
  3854                           
  3855                           ;psect for function _atualizaLCD
  3856  03BD                     _atualizaLCD:
  3857  03BD                     i1l1970:	
  3858                           ;incstack = 0
  3859                           ; Regs used in _atualizaLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3860                           
  3861                           
  3862                           ;main.c: 220:     char buffer0[16],buffer1[16];;main.c: 222:     Lcd_Clear();
  3863  03BD  120A  158A  2541  120A  118A  	fcall	_Lcd_Clear
  3864                           
  3865                           ;main.c: 223:     Lcd_Set_Cursor(1,1);
  3866  03C2  01F4               	clrf	Lcd_Set_Cursor@b
  3867  03C3  0AF4               	incf	Lcd_Set_Cursor@b,f
  3868  03C4  3001               	movlw	1
  3869  03C5  120A  118A  2799  120A  118A  	fcall	_Lcd_Set_Cursor
  3870  03CA                     i1l1972:
  3871                           
  3872                           ;main.c: 224:     sprintf(buffer0, "Q:%i C:%i L:%i S1:%i",(int)valor_entry1, (int)valor_
      +                          entry0, (int)valor_entry2, (int)valor_entry3);
  3873  03CA  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  3874  03CB  1283               	bcf	3,5	;RP0=0, select bank0
  3875  03CC  1303               	bcf	3,6	;RP1=0, select bank0
  3876  03CD  00B3               	movwf	??_atualizaLCD
  3877  03CE  0833               	movf	??_atualizaLCD,w
  3878  03CF  00A0               	movwf	sprintf@f
  3879  03D0  086C               	movf	_valor_entry1+3,w
  3880  03D1  00F3               	movwf	___fltol@f1+3
  3881  03D2  086B               	movf	_valor_entry1+2,w
  3882  03D3  00F2               	movwf	___fltol@f1+2
  3883  03D4  086A               	movf	_valor_entry1+1,w
  3884  03D5  00F1               	movwf	___fltol@f1+1
  3885  03D6  0869               	movf	_valor_entry1,w
  3886  03D7  00F0               	movwf	___fltol@f1
  3887  03D8  120A  118A  25F4  120A  118A  	fcall	___fltol
  3888  03DD  0871               	movf	?___fltol+1,w
  3889  03DE  1283               	bcf	3,5	;RP0=0, select bank0
  3890  03DF  1303               	bcf	3,6	;RP1=0, select bank0
  3891  03E0  00A2               	movwf	?_sprintf+2
  3892  03E1  0870               	movf	?___fltol,w
  3893  03E2  00A1               	movwf	?_sprintf+1
  3894  03E3  1683               	bsf	3,5	;RP0=1, select bank1
  3895  03E4  1303               	bcf	3,6	;RP1=0, select bank1
  3896  03E5  083C               	movf	(_valor_entry0+3)^(0+128),w
  3897  03E6  00F3               	movwf	___fltol@f1+3
  3898  03E7  083B               	movf	(_valor_entry0+2)^(0+128),w
  3899  03E8  00F2               	movwf	___fltol@f1+2
  3900  03E9  083A               	movf	(_valor_entry0+1)^(0+128),w
  3901  03EA  00F1               	movwf	___fltol@f1+1
  3902  03EB  0839               	movf	_valor_entry0^(0+128),w
  3903  03EC  00F0               	movwf	___fltol@f1
  3904  03ED  120A  118A  25F4  120A  118A  	fcall	___fltol
  3905  03F2  0871               	movf	?___fltol+1,w
  3906  03F3  1283               	bcf	3,5	;RP0=0, select bank0
  3907  03F4  1303               	bcf	3,6	;RP1=0, select bank0
  3908  03F5  00A4               	movwf	?_sprintf+4
  3909  03F6  0870               	movf	?___fltol,w
  3910  03F7  00A3               	movwf	?_sprintf+3
  3911  03F8  1683               	bsf	3,5	;RP0=1, select bank1
  3912  03F9  1303               	bcf	3,6	;RP1=0, select bank1
  3913  03FA  0838               	movf	(_valor_entry2+3)^(0+128),w
  3914  03FB  00F3               	movwf	___fltol@f1+3
  3915  03FC  0837               	movf	(_valor_entry2+2)^(0+128),w
  3916  03FD  00F2               	movwf	___fltol@f1+2
  3917  03FE  0836               	movf	(_valor_entry2+1)^(0+128),w
  3918  03FF  00F1               	movwf	___fltol@f1+1
  3919  0400  0835               	movf	_valor_entry2^(0+128),w
  3920  0401  00F0               	movwf	___fltol@f1
  3921  0402  120A  118A  25F4  120A  118A  	fcall	___fltol
  3922  0407  0871               	movf	?___fltol+1,w
  3923  0408  1283               	bcf	3,5	;RP0=0, select bank0
  3924  0409  1303               	bcf	3,6	;RP1=0, select bank0
  3925  040A  00A6               	movwf	?_sprintf+6
  3926  040B  0870               	movf	?___fltol,w
  3927  040C  00A5               	movwf	?_sprintf+5
  3928  040D  0868               	movf	_valor_entry3+3,w
  3929  040E  00F3               	movwf	___fltol@f1+3
  3930  040F  0867               	movf	_valor_entry3+2,w
  3931  0410  00F2               	movwf	___fltol@f1+2
  3932  0411  0866               	movf	_valor_entry3+1,w
  3933  0412  00F1               	movwf	___fltol@f1+1
  3934  0413  0865               	movf	_valor_entry3,w
  3935  0414  00F0               	movwf	___fltol@f1
  3936  0415  120A  118A  25F4  120A  118A  	fcall	___fltol
  3937  041A  0871               	movf	?___fltol+1,w
  3938  041B  1283               	bcf	3,5	;RP0=0, select bank0
  3939  041C  1303               	bcf	3,6	;RP1=0, select bank0
  3940  041D  00A8               	movwf	?_sprintf+8
  3941  041E  0870               	movf	?___fltol,w
  3942  041F  00A7               	movwf	?_sprintf+7
  3943  0420  3035               	movlw	(low (atualizaLCD@buffer0| 0))& (0+255)
  3944  0421  120A  118A  22D5  120A  118A  	fcall	_sprintf
  3945  0426                     i1l1974:
  3946                           
  3947                           ;main.c: 225:     Lcd_Write_String(buffer0);
  3948  0426  3035               	movlw	(low (atualizaLCD@buffer0| 0))& (0+255)
  3949  0427  120A  158A  25E0  120A  118A  	fcall	_Lcd_Write_String
  3950  042C                     i1l1976:
  3951                           
  3952                           ;main.c: 226:     _delay((unsigned long)((10)*(4000000/4000.0)));
  3953  042C  300D               	movlw	13
  3954  042D  1283               	bcf	3,5	;RP0=0, select bank0
  3955  042E  1303               	bcf	3,6	;RP1=0, select bank0
  3956  042F  00B4               	movwf	??_atualizaLCD+1
  3957  0430  30FB               	movlw	251
  3958  0431  00B3               	movwf	??_atualizaLCD
  3959  0432                     u173_27:
  3960  0432  0BB3               	decfsz	??_atualizaLCD,f
  3961  0433  2C32               	goto	u173_27
  3962  0434  0BB4               	decfsz	??_atualizaLCD+1,f
  3963  0435  2C32               	goto	u173_27
  3964  0436                     i1l1978:
  3965                           
  3966                           ;main.c: 227:     Lcd_Set_Cursor(2,1);
  3967  0436  01F4               	clrf	Lcd_Set_Cursor@b
  3968  0437  0AF4               	incf	Lcd_Set_Cursor@b,f
  3969  0438  3002               	movlw	2
  3970  0439  120A  118A  2799  120A  118A  	fcall	_Lcd_Set_Cursor
  3971  043E                     i1l1980:
  3972                           
  3973                           ;main.c: 228:     sprintf(buffer1, "S2:%i S3:%i S4:%i ", (int)valor_entry4, (int)valor_e
      +                          ntry5, (int)valor_entry6);
  3974  043E  3020               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  3975  043F  1283               	bcf	3,5	;RP0=0, select bank0
  3976  0440  1303               	bcf	3,6	;RP1=0, select bank0
  3977  0441  00B3               	movwf	??_atualizaLCD
  3978  0442  0833               	movf	??_atualizaLCD,w
  3979  0443  00A0               	movwf	sprintf@f
  3980  0444  0864               	movf	_valor_entry4+3,w
  3981  0445  00F3               	movwf	___fltol@f1+3
  3982  0446  0863               	movf	_valor_entry4+2,w
  3983  0447  00F2               	movwf	___fltol@f1+2
  3984  0448  0862               	movf	_valor_entry4+1,w
  3985  0449  00F1               	movwf	___fltol@f1+1
  3986  044A  0861               	movf	_valor_entry4,w
  3987  044B  00F0               	movwf	___fltol@f1
  3988  044C  120A  118A  25F4  120A  118A  	fcall	___fltol
  3989  0451  0871               	movf	?___fltol+1,w
  3990  0452  1283               	bcf	3,5	;RP0=0, select bank0
  3991  0453  1303               	bcf	3,6	;RP1=0, select bank0
  3992  0454  00A2               	movwf	?_sprintf+2
  3993  0455  0870               	movf	?___fltol,w
  3994  0456  00A1               	movwf	?_sprintf+1
  3995  0457  0860               	movf	_valor_entry5+3,w
  3996  0458  00F3               	movwf	___fltol@f1+3
  3997  0459  085F               	movf	_valor_entry5+2,w
  3998  045A  00F2               	movwf	___fltol@f1+2
  3999  045B  085E               	movf	_valor_entry5+1,w
  4000  045C  00F1               	movwf	___fltol@f1+1
  4001  045D  085D               	movf	_valor_entry5,w
  4002  045E  00F0               	movwf	___fltol@f1
  4003  045F  120A  118A  25F4  120A  118A  	fcall	___fltol
  4004  0464  0871               	movf	?___fltol+1,w
  4005  0465  1283               	bcf	3,5	;RP0=0, select bank0
  4006  0466  1303               	bcf	3,6	;RP1=0, select bank0
  4007  0467  00A4               	movwf	?_sprintf+4
  4008  0468  0870               	movf	?___fltol,w
  4009  0469  00A3               	movwf	?_sprintf+3
  4010  046A  085C               	movf	_valor_entry6+3,w
  4011  046B  00F3               	movwf	___fltol@f1+3
  4012  046C  085B               	movf	_valor_entry6+2,w
  4013  046D  00F2               	movwf	___fltol@f1+2
  4014  046E  085A               	movf	_valor_entry6+1,w
  4015  046F  00F1               	movwf	___fltol@f1+1
  4016  0470  0859               	movf	_valor_entry6,w
  4017  0471  00F0               	movwf	___fltol@f1
  4018  0472  120A  118A  25F4  120A  118A  	fcall	___fltol
  4019  0477  0871               	movf	?___fltol+1,w
  4020  0478  1283               	bcf	3,5	;RP0=0, select bank0
  4021  0479  1303               	bcf	3,6	;RP1=0, select bank0
  4022  047A  00A6               	movwf	?_sprintf+6
  4023  047B  0870               	movf	?___fltol,w
  4024  047C  00A5               	movwf	?_sprintf+5
  4025  047D  3045               	movlw	(low (atualizaLCD@buffer1| 0))& (0+255)
  4026  047E  120A  118A  22D5  120A  118A  	fcall	_sprintf
  4027  0483                     i1l1982:
  4028                           
  4029                           ;main.c: 229:     Lcd_Write_String(buffer1);
  4030  0483  3045               	movlw	(low (atualizaLCD@buffer1| 0))& (0+255)
  4031  0484  120A  158A  25E0  120A  118A  	fcall	_Lcd_Write_String
  4032                           
  4033                           ;main.c: 230:     _delay((unsigned long)((10)*(4000000/4000.0)));
  4034  0489  300D               	movlw	13
  4035  048A  1283               	bcf	3,5	;RP0=0, select bank0
  4036  048B  1303               	bcf	3,6	;RP1=0, select bank0
  4037  048C  00B4               	movwf	??_atualizaLCD+1
  4038  048D  30FB               	movlw	251
  4039  048E  00B3               	movwf	??_atualizaLCD
  4040  048F                     u174_27:
  4041  048F  0BB3               	decfsz	??_atualizaLCD,f
  4042  0490  2C8F               	goto	u174_27
  4043  0491  0BB4               	decfsz	??_atualizaLCD+1,f
  4044  0492  2C8F               	goto	u174_27
  4045  0493                     i1l199:
  4046  0493  0008               	return
  4047  0494                     __end_of_atualizaLCD:
  4048                           
  4049                           	psect	text18
  4050  02D5                     __ptext18:	
  4051 ;; *************** function _sprintf *****************
  4052 ;; Defined at:
  4053 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  4054 ;; Parameters:    Size  Location     Type
  4055 ;;  sp              1    wreg     PTR unsigned char 
  4056 ;;		 -> atualizaLCD@buffer1(16), atualizaLCD@buffer0(16), 
  4057 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  4058 ;;		 -> STR_2(19), STR_1(21), 
  4059 ;; Auto vars:     Size  Location     Type
  4060 ;;  sp              1   17[BANK0 ] PTR unsigned char 
  4061 ;;		 -> atualizaLCD@buffer1(16), atualizaLCD@buffer0(16), 
  4062 ;;  tmpval          4    0        struct .
  4063 ;;  val             2   15[BANK0 ] unsigned int 
  4064 ;;  cp              2    0        PTR const unsigned char 
  4065 ;;  len             2    0        unsigned int 
  4066 ;;  c               1   18[BANK0 ] unsigned char 
  4067 ;;  prec            1   14[BANK0 ] char 
  4068 ;;  flag            1   13[BANK0 ] unsigned char 
  4069 ;;  ap              1   12[BANK0 ] PTR void [1]
  4070 ;;		 -> ?_sprintf(2), 
  4071 ;; Return value:  Size  Location     Type
  4072 ;;                  2    0[BANK0 ] int 
  4073 ;; Registers used:
  4074 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4075 ;; Tracked objects:
  4076 ;;		On entry : 0/0
  4077 ;;		On exit  : 0/0
  4078 ;;		Unchanged: 0/0
  4079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4080 ;;      Params:         0       9       0       0       0
  4081 ;;      Locals:         0       7       0       0       0
  4082 ;;      Temps:          0       3       0       0       0
  4083 ;;      Totals:         0      19       0       0       0
  4084 ;;Total ram usage:       19 bytes
  4085 ;; Hardware stack levels used: 1
  4086 ;; Hardware stack levels required when called: 1
  4087 ;; This function calls:
  4088 ;;		___lwdiv
  4089 ;;		___lwmod
  4090 ;; This function is called by:
  4091 ;;		_atualizaLCD
  4092 ;; This function uses a non-reentrant model
  4093 ;;
  4094                           
  4095                           
  4096                           ;psect for function _sprintf
  4097  02D5                     _sprintf:
  4098                           
  4099                           ;incstack = 0
  4100                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4101                           ;sprintf@sp stored from wreg
  4102  02D5  1283               	bcf	3,5	;RP0=0, select bank0
  4103  02D6  1303               	bcf	3,6	;RP1=0, select bank0
  4104  02D7  00B1               	movwf	sprintf@sp
  4105  02D8                     i1l1616:
  4106                           
  4107                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  4108  02D8  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  4109  02D9  00A9               	movwf	??_sprintf
  4110  02DA  0829               	movf	??_sprintf,w
  4111  02DB  00AC               	movwf	sprintf@ap
  4112                           
  4113                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  4114  02DC  2BA6               	goto	i1l1668
  4115  02DD                     i1l1618:
  4116                           
  4117                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  4118  02DD  3025               	movlw	37
  4119  02DE  0632               	xorwf	sprintf@c,w
  4120  02DF  1903               	btfsc	3,2
  4121  02E0  2AE2               	goto	u119_21
  4122  02E1  2AE3               	goto	u119_20
  4123  02E2                     u119_21:
  4124  02E2  2AEF               	goto	i1l1624
  4125  02E3                     u119_20:
  4126  02E3                     i1l1620:
  4127                           
  4128                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  4129  02E3  0832               	movf	sprintf@c,w
  4130  02E4  00A9               	movwf	??_sprintf
  4131  02E5  0831               	movf	sprintf@sp,w
  4132  02E6  0084               	movwf	4
  4133  02E7  0829               	movf	??_sprintf,w
  4134  02E8  1383               	bcf	3,7	;select IRP bank0
  4135  02E9  0080               	movwf	0
  4136  02EA                     i1l1622:
  4137  02EA  3001               	movlw	1
  4138  02EB  00A9               	movwf	??_sprintf
  4139  02EC  0829               	movf	??_sprintf,w
  4140  02ED  07B1               	addwf	sprintf@sp,f
  4141                           
  4142                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 559:    continue;
  4143  02EE  2BA6               	goto	i1l1668
  4144  02EF                     i1l1624:
  4145                           
  4146                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  4147  02EF  01AD               	clrf	sprintf@flag
  4148  02F0                     i1l1628:	
  4149                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  4150                           
  4151  02F0  3001               	movlw	1
  4152  02F1  07A0               	addwf	sprintf@f,f
  4153  02F2  30FF               	movlw	-1
  4154  02F3  0720               	addwf	sprintf@f,w
  4155  02F4  0084               	movwf	4
  4156  02F5  120A  158A  2000  120A  118A  	fcall	stringdir
  4157  02FA  00B2               	movwf	sprintf@c
  4158  02FB  00A9               	movwf	??_sprintf
  4159  02FC  01AA               	clrf	??_sprintf+1
  4160                           
  4161                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4162                           ; Switch size 1, requested type "simple"
  4163                           ; Number of cases is 1, Range of values is 0 to 0
  4164                           ; switch strategies available:
  4165                           ; Name         Instructions Cycles
  4166                           ; simple_byte            4     3 (average)
  4167                           ; direct_byte           11     8 (fixed)
  4168                           ; jumptable            260     6 (fixed)
  4169                           ;	Chosen strategy is simple_byte
  4170  02FD  082A               	movf	??_sprintf+1,w
  4171  02FE  3A00               	xorlw	0	; case 0
  4172  02FF  1903               	skipnz
  4173  0300  2B02               	goto	i1l2044
  4174  0301  2BA6               	goto	i1l1668
  4175  0302                     i1l2044:
  4176                           
  4177                           ; Switch size 1, requested type "simple"
  4178                           ; Number of cases is 3, Range of values is 0 to 105
  4179                           ; switch strategies available:
  4180                           ; Name         Instructions Cycles
  4181                           ; simple_byte           10     6 (average)
  4182                           ; jumptable            260     6 (fixed)
  4183                           ;	Chosen strategy is simple_byte
  4184  0302  0829               	movf	??_sprintf,w
  4185  0303  3A00               	xorlw	0	; case 0
  4186  0304  1903               	skipnz
  4187  0305  2BB8               	goto	i1l1670
  4188  0306  3A64               	xorlw	100	; case 100
  4189  0307  1903               	skipnz
  4190  0308  2B0D               	goto	i1l1630
  4191  0309  3A0D               	xorlw	13	; case 105
  4192  030A  1903               	skipnz
  4193  030B  2B0D               	goto	i1l1630
  4194  030C  2BA6               	goto	i1l1668
  4195  030D                     i1l1630:
  4196                           
  4197                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4198  030D  082C               	movf	sprintf@ap,w
  4199  030E  0084               	movwf	4
  4200  030F  1383               	bcf	3,7	;select IRP bank0
  4201  0310  0800               	movf	0,w
  4202  0311  00AF               	movwf	sprintf@val
  4203  0312  0A84               	incf	4,f
  4204  0313  0800               	movf	0,w
  4205  0314  00B0               	movwf	sprintf@val+1
  4206  0315                     i1l1632:
  4207  0315  3002               	movlw	2
  4208  0316  00A9               	movwf	??_sprintf
  4209  0317  0829               	movf	??_sprintf,w
  4210  0318  07AC               	addwf	sprintf@ap,f
  4211  0319                     i1l1634:
  4212                           
  4213                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  4214  0319  1FB0               	btfss	sprintf@val+1,7
  4215  031A  2B1C               	goto	u120_21
  4216  031B  2B1D               	goto	u120_20
  4217  031C                     u120_21:
  4218  031C  2B26               	goto	i1l1640
  4219  031D                     u120_20:
  4220  031D                     i1l1636:
  4221                           
  4222                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  4223  031D  3003               	movlw	3
  4224  031E  00A9               	movwf	??_sprintf
  4225  031F  0829               	movf	??_sprintf,w
  4226  0320  04AD               	iorwf	sprintf@flag,f
  4227  0321                     i1l1638:
  4228                           
  4229                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  4230  0321  09AF               	comf	sprintf@val,f
  4231  0322  09B0               	comf	sprintf@val+1,f
  4232  0323  0AAF               	incf	sprintf@val,f
  4233  0324  1903               	skipnz
  4234  0325  0AB0               	incf	sprintf@val+1,f
  4235  0326                     i1l1640:
  4236                           
  4237                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  4238  0326  01B2               	clrf	sprintf@c
  4239  0327  0AB2               	incf	sprintf@c,f
  4240  0328                     i1l1646:
  4241                           
  4242                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  4243  0328  0832               	movf	sprintf@c,w
  4244  0329  00A9               	movwf	??_sprintf
  4245  032A  0729               	addwf	??_sprintf,w
  4246  032B  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4247  032C  0084               	movwf	4
  4248  032D  120A  158A  2000  120A  118A  	fcall	stringdir
  4249  0332  00AA               	movwf	??_sprintf+1
  4250  0333  120A  158A  2000  120A  118A  	fcall	stringdir
  4251  0338  00AB               	movwf	??_sprintf+2
  4252  0339  082B               	movf	??_sprintf+2,w
  4253  033A  0230               	subwf	sprintf@val+1,w
  4254  033B  1D03               	skipz
  4255  033C  2B3F               	goto	u121_25
  4256  033D  082A               	movf	??_sprintf+1,w
  4257  033E  022F               	subwf	sprintf@val,w
  4258  033F                     u121_25:
  4259  033F  1803               	skipnc
  4260  0340  2B42               	goto	u121_21
  4261  0341  2B43               	goto	u121_20
  4262  0342                     u121_21:
  4263  0342  2B44               	goto	i1l1650
  4264  0343                     u121_20:
  4265  0343  2B4E               	goto	i1l1652
  4266  0344                     i1l1650:
  4267  0344  3001               	movlw	1
  4268  0345  00A9               	movwf	??_sprintf
  4269  0346  0829               	movf	??_sprintf,w
  4270  0347  07B2               	addwf	sprintf@c,f
  4271  0348  3005               	movlw	5
  4272  0349  0632               	xorwf	sprintf@c,w
  4273  034A  1D03               	btfss	3,2
  4274  034B  2B4D               	goto	u122_21
  4275  034C  2B4E               	goto	u122_20
  4276  034D                     u122_21:
  4277  034D  2B28               	goto	i1l1646
  4278  034E                     u122_20:
  4279  034E                     i1l1652:
  4280                           
  4281                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  4282  034E  082D               	movf	sprintf@flag,w
  4283  034F  3903               	andlw	3
  4284  0350  1903               	btfsc	3,2
  4285  0351  2B53               	goto	u123_21
  4286  0352  2B54               	goto	u123_20
  4287  0353                     u123_21:
  4288  0353  2B5F               	goto	i1l1658
  4289  0354                     u123_20:
  4290  0354                     i1l1654:
  4291                           
  4292                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  4293  0354  302D               	movlw	45
  4294  0355  00A9               	movwf	??_sprintf
  4295  0356  0831               	movf	sprintf@sp,w
  4296  0357  0084               	movwf	4
  4297  0358  0829               	movf	??_sprintf,w
  4298  0359  1383               	bcf	3,7	;select IRP bank0
  4299  035A  0080               	movwf	0
  4300  035B                     i1l1656:
  4301  035B  3001               	movlw	1
  4302  035C  00A9               	movwf	??_sprintf
  4303  035D  0829               	movf	??_sprintf,w
  4304  035E  07B1               	addwf	sprintf@sp,f
  4305  035F                     i1l1658:
  4306                           
  4307                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  4308  035F  0832               	movf	sprintf@c,w
  4309  0360  00A9               	movwf	??_sprintf
  4310  0361  0829               	movf	??_sprintf,w
  4311  0362  00AE               	movwf	sprintf@prec
  4312                           
  4313                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  4314  0363  2B9D               	goto	i1l1666
  4315  0364                     i1l1660:
  4316                           
  4317                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  4318  0364  300A               	movlw	10
  4319  0365  00F8               	movwf	___lwmod@divisor
  4320  0366  3000               	movlw	0
  4321  0367  00F9               	movwf	___lwmod@divisor+1
  4322  0368  082E               	movf	sprintf@prec,w
  4323  0369  00A9               	movwf	??_sprintf
  4324  036A  0729               	addwf	??_sprintf,w
  4325  036B  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4326  036C  0084               	movwf	4
  4327  036D  120A  158A  2000  120A  118A  	fcall	stringdir
  4328  0372  00F0               	movwf	___lwdiv@divisor
  4329  0373  120A  158A  2000  120A  118A  	fcall	stringdir
  4330  0378  00F1               	movwf	___lwdiv@divisor+1
  4331  0379  0830               	movf	sprintf@val+1,w
  4332  037A  00F3               	movwf	___lwdiv@dividend+1
  4333  037B  082F               	movf	sprintf@val,w
  4334  037C  00F2               	movwf	___lwdiv@dividend
  4335  037D  120A  158A  27BC  120A  118A  	fcall	___lwdiv
  4336  0382  0871               	movf	?___lwdiv+1,w
  4337  0383  00FB               	movwf	___lwmod@dividend+1
  4338  0384  0870               	movf	?___lwdiv,w
  4339  0385  00FA               	movwf	___lwmod@dividend
  4340  0386  120A  158A  2782  120A  118A  	fcall	___lwmod
  4341  038B  0878               	movf	?___lwmod,w
  4342  038C  3E30               	addlw	48
  4343  038D  1283               	bcf	3,5	;RP0=0, select bank0
  4344  038E  1303               	bcf	3,6	;RP1=0, select bank0
  4345  038F  00AA               	movwf	??_sprintf+1
  4346  0390  082A               	movf	??_sprintf+1,w
  4347  0391  00B2               	movwf	sprintf@c
  4348  0392                     i1l1662:
  4349                           
  4350                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  4351  0392  0832               	movf	sprintf@c,w
  4352  0393  00A9               	movwf	??_sprintf
  4353  0394  0831               	movf	sprintf@sp,w
  4354  0395  0084               	movwf	4
  4355  0396  0829               	movf	??_sprintf,w
  4356  0397  1383               	bcf	3,7	;select IRP bank0
  4357  0398  0080               	movwf	0
  4358  0399                     i1l1664:
  4359  0399  3001               	movlw	1
  4360  039A  00A9               	movwf	??_sprintf
  4361  039B  0829               	movf	??_sprintf,w
  4362  039C  07B1               	addwf	sprintf@sp,f
  4363  039D                     i1l1666:
  4364                           
  4365                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  4366  039D  30FF               	movlw	255
  4367  039E  00A9               	movwf	??_sprintf
  4368  039F  0829               	movf	??_sprintf,w
  4369  03A0  07AE               	addwf	sprintf@prec,f
  4370  03A1  0A2E               	incf	sprintf@prec,w
  4371  03A2  1D03               	btfss	3,2
  4372  03A3  2BA5               	goto	u124_21
  4373  03A4  2BA6               	goto	u124_20
  4374  03A5                     u124_21:
  4375  03A5  2B64               	goto	i1l1660
  4376  03A6                     u124_20:
  4377  03A6                     i1l1668:
  4378                           
  4379                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  4380  03A6  3001               	movlw	1
  4381  03A7  07A0               	addwf	sprintf@f,f
  4382  03A8  30FF               	movlw	-1
  4383  03A9  0720               	addwf	sprintf@f,w
  4384  03AA  0084               	movwf	4
  4385  03AB  120A  158A  2000  120A  118A  	fcall	stringdir
  4386  03B0  00A9               	movwf	??_sprintf
  4387  03B1  0829               	movf	??_sprintf,w
  4388  03B2  00B2               	movwf	sprintf@c
  4389  03B3  0832               	movf	sprintf@c,w
  4390  03B4  1D03               	btfss	3,2
  4391  03B5  2BB7               	goto	u125_21
  4392  03B6  2BB8               	goto	u125_20
  4393  03B7                     u125_21:
  4394  03B7  2ADD               	goto	i1l1618
  4395  03B8                     u125_20:
  4396  03B8                     i1l1670:
  4397                           
  4398                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  4399  03B8  0831               	movf	sprintf@sp,w
  4400  03B9  0084               	movwf	4
  4401  03BA  1383               	bcf	3,7	;select IRP bank0
  4402  03BB  0180               	clrf	0
  4403  03BC                     i1l342:
  4404  03BC  0008               	return
  4405  03BD                     __end_of_sprintf:
  4406                           
  4407                           	psect	text19
  4408  0F82                     __ptext19:	
  4409 ;; *************** function ___lwmod *****************
  4410 ;; Defined at:
  4411 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  4412 ;; Parameters:    Size  Location     Type
  4413 ;;  divisor         2    8[COMMON] unsigned int 
  4414 ;;  dividend        2   10[COMMON] unsigned int 
  4415 ;; Auto vars:     Size  Location     Type
  4416 ;;  counter         1   13[COMMON] unsigned char 
  4417 ;; Return value:  Size  Location     Type
  4418 ;;                  2    8[COMMON] unsigned int 
  4419 ;; Registers used:
  4420 ;;		wreg, status,2, status,0
  4421 ;; Tracked objects:
  4422 ;;		On entry : 0/0
  4423 ;;		On exit  : 0/0
  4424 ;;		Unchanged: 0/0
  4425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4426 ;;      Params:         4       0       0       0       0
  4427 ;;      Locals:         1       0       0       0       0
  4428 ;;      Temps:          1       0       0       0       0
  4429 ;;      Totals:         6       0       0       0       0
  4430 ;;Total ram usage:        6 bytes
  4431 ;; Hardware stack levels used: 1
  4432 ;; This function calls:
  4433 ;;		Nothing
  4434 ;; This function is called by:
  4435 ;;		_sprintf
  4436 ;; This function uses a non-reentrant model
  4437 ;;
  4438                           
  4439                           
  4440                           ;psect for function ___lwmod
  4441  0F82                     ___lwmod:
  4442  0F82                     i1l1544:	
  4443                           ;incstack = 0
  4444                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4445                           
  4446  0F82  0878               	movf	___lwmod@divisor,w
  4447  0F83  0479               	iorwf	___lwmod@divisor+1,w
  4448  0F84  1903               	btfsc	3,2
  4449  0F85  2F87               	goto	u108_21
  4450  0F86  2F88               	goto	u108_20
  4451  0F87                     u108_21:
  4452  0F87  2FB7               	goto	i1l1562
  4453  0F88                     u108_20:
  4454  0F88                     i1l1546:
  4455  0F88  01FD               	clrf	___lwmod@counter
  4456  0F89  0AFD               	incf	___lwmod@counter,f
  4457  0F8A  2F96               	goto	i1l1552
  4458  0F8B                     i1l1548:
  4459  0F8B  3001               	movlw	1
  4460  0F8C                     u109_25:
  4461  0F8C  1003               	clrc
  4462  0F8D  0DF8               	rlf	___lwmod@divisor,f
  4463  0F8E  0DF9               	rlf	___lwmod@divisor+1,f
  4464  0F8F  3EFF               	addlw	-1
  4465  0F90  1D03               	skipz
  4466  0F91  2F8C               	goto	u109_25
  4467  0F92                     i1l1550:
  4468  0F92  3001               	movlw	1
  4469  0F93  00FC               	movwf	??___lwmod
  4470  0F94  087C               	movf	??___lwmod,w
  4471  0F95  07FD               	addwf	___lwmod@counter,f
  4472  0F96                     i1l1552:
  4473  0F96  1FF9               	btfss	___lwmod@divisor+1,7
  4474  0F97  2F99               	goto	u110_21
  4475  0F98  2F9A               	goto	u110_20
  4476  0F99                     u110_21:
  4477  0F99  2F8B               	goto	i1l1548
  4478  0F9A                     u110_20:
  4479  0F9A                     i1l1554:
  4480  0F9A  0879               	movf	___lwmod@divisor+1,w
  4481  0F9B  027B               	subwf	___lwmod@dividend+1,w
  4482  0F9C  1D03               	skipz
  4483  0F9D  2FA0               	goto	u111_25
  4484  0F9E  0878               	movf	___lwmod@divisor,w
  4485  0F9F  027A               	subwf	___lwmod@dividend,w
  4486  0FA0                     u111_25:
  4487  0FA0  1C03               	skipc
  4488  0FA1  2FA3               	goto	u111_21
  4489  0FA2  2FA4               	goto	u111_20
  4490  0FA3                     u111_21:
  4491  0FA3  2FAA               	goto	i1l1558
  4492  0FA4                     u111_20:
  4493  0FA4                     i1l1556:
  4494  0FA4  0878               	movf	___lwmod@divisor,w
  4495  0FA5  02FA               	subwf	___lwmod@dividend,f
  4496  0FA6  0879               	movf	___lwmod@divisor+1,w
  4497  0FA7  1C03               	skipc
  4498  0FA8  03FB               	decf	___lwmod@dividend+1,f
  4499  0FA9  02FB               	subwf	___lwmod@dividend+1,f
  4500  0FAA                     i1l1558:
  4501  0FAA  3001               	movlw	1
  4502  0FAB                     u112_25:
  4503  0FAB  1003               	clrc
  4504  0FAC  0CF9               	rrf	___lwmod@divisor+1,f
  4505  0FAD  0CF8               	rrf	___lwmod@divisor,f
  4506  0FAE  3EFF               	addlw	-1
  4507  0FAF  1D03               	skipz
  4508  0FB0  2FAB               	goto	u112_25
  4509  0FB1                     i1l1560:
  4510  0FB1  3001               	movlw	1
  4511  0FB2  02FD               	subwf	___lwmod@counter,f
  4512  0FB3  1D03               	btfss	3,2
  4513  0FB4  2FB6               	goto	u113_21
  4514  0FB5  2FB7               	goto	u113_20
  4515  0FB6                     u113_21:
  4516  0FB6  2F9A               	goto	i1l1554
  4517  0FB7                     u113_20:
  4518  0FB7                     i1l1562:
  4519  0FB7  087B               	movf	___lwmod@dividend+1,w
  4520  0FB8  00F9               	movwf	?___lwmod+1
  4521  0FB9  087A               	movf	___lwmod@dividend,w
  4522  0FBA  00F8               	movwf	?___lwmod
  4523  0FBB                     i1l628:
  4524  0FBB  0008               	return
  4525  0FBC                     __end_of___lwmod:
  4526                           
  4527                           	psect	text20
  4528  0FBC                     __ptext20:	
  4529 ;; *************** function ___lwdiv *****************
  4530 ;; Defined at:
  4531 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  4532 ;; Parameters:    Size  Location     Type
  4533 ;;  divisor         2    0[COMMON] unsigned int 
  4534 ;;  dividend        2    2[COMMON] unsigned int 
  4535 ;; Auto vars:     Size  Location     Type
  4536 ;;  quotient        2    5[COMMON] unsigned int 
  4537 ;;  counter         1    7[COMMON] unsigned char 
  4538 ;; Return value:  Size  Location     Type
  4539 ;;                  2    0[COMMON] unsigned int 
  4540 ;; Registers used:
  4541 ;;		wreg, status,2, status,0
  4542 ;; Tracked objects:
  4543 ;;		On entry : 0/0
  4544 ;;		On exit  : 0/0
  4545 ;;		Unchanged: 0/0
  4546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4547 ;;      Params:         4       0       0       0       0
  4548 ;;      Locals:         3       0       0       0       0
  4549 ;;      Temps:          1       0       0       0       0
  4550 ;;      Totals:         8       0       0       0       0
  4551 ;;Total ram usage:        8 bytes
  4552 ;; Hardware stack levels used: 1
  4553 ;; This function calls:
  4554 ;;		Nothing
  4555 ;; This function is called by:
  4556 ;;		_sprintf
  4557 ;; This function uses a non-reentrant model
  4558 ;;
  4559                           
  4560                           
  4561                           ;psect for function ___lwdiv
  4562  0FBC                     ___lwdiv:
  4563  0FBC                     i1l1518:	
  4564                           ;incstack = 0
  4565                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4566                           
  4567  0FBC  01F5               	clrf	___lwdiv@quotient
  4568  0FBD  01F6               	clrf	___lwdiv@quotient+1
  4569  0FBE                     i1l1520:
  4570  0FBE  0870               	movf	___lwdiv@divisor,w
  4571  0FBF  0471               	iorwf	___lwdiv@divisor+1,w
  4572  0FC0  1903               	btfsc	3,2
  4573  0FC1  2FC3               	goto	u101_21
  4574  0FC2  2FC4               	goto	u101_20
  4575  0FC3                     u101_21:
  4576  0FC3  2FFB               	goto	i1l1540
  4577  0FC4                     u101_20:
  4578  0FC4                     i1l1522:
  4579  0FC4  01F7               	clrf	___lwdiv@counter
  4580  0FC5  0AF7               	incf	___lwdiv@counter,f
  4581  0FC6  2FD2               	goto	i1l1528
  4582  0FC7                     i1l1524:
  4583  0FC7  3001               	movlw	1
  4584  0FC8                     u102_25:
  4585  0FC8  1003               	clrc
  4586  0FC9  0DF0               	rlf	___lwdiv@divisor,f
  4587  0FCA  0DF1               	rlf	___lwdiv@divisor+1,f
  4588  0FCB  3EFF               	addlw	-1
  4589  0FCC  1D03               	skipz
  4590  0FCD  2FC8               	goto	u102_25
  4591  0FCE                     i1l1526:
  4592  0FCE  3001               	movlw	1
  4593  0FCF  00F4               	movwf	??___lwdiv
  4594  0FD0  0874               	movf	??___lwdiv,w
  4595  0FD1  07F7               	addwf	___lwdiv@counter,f
  4596  0FD2                     i1l1528:
  4597  0FD2  1FF1               	btfss	___lwdiv@divisor+1,7
  4598  0FD3  2FD5               	goto	u103_21
  4599  0FD4  2FD6               	goto	u103_20
  4600  0FD5                     u103_21:
  4601  0FD5  2FC7               	goto	i1l1524
  4602  0FD6                     u103_20:
  4603  0FD6                     i1l1530:
  4604  0FD6  3001               	movlw	1
  4605  0FD7                     u104_25:
  4606  0FD7  1003               	clrc
  4607  0FD8  0DF5               	rlf	___lwdiv@quotient,f
  4608  0FD9  0DF6               	rlf	___lwdiv@quotient+1,f
  4609  0FDA  3EFF               	addlw	-1
  4610  0FDB  1D03               	skipz
  4611  0FDC  2FD7               	goto	u104_25
  4612  0FDD  0871               	movf	___lwdiv@divisor+1,w
  4613  0FDE  0273               	subwf	___lwdiv@dividend+1,w
  4614  0FDF  1D03               	skipz
  4615  0FE0  2FE3               	goto	u105_25
  4616  0FE1  0870               	movf	___lwdiv@divisor,w
  4617  0FE2  0272               	subwf	___lwdiv@dividend,w
  4618  0FE3                     u105_25:
  4619  0FE3  1C03               	skipc
  4620  0FE4  2FE6               	goto	u105_21
  4621  0FE5  2FE7               	goto	u105_20
  4622  0FE6                     u105_21:
  4623  0FE6  2FEE               	goto	i1l1536
  4624  0FE7                     u105_20:
  4625  0FE7                     i1l1532:
  4626  0FE7  0870               	movf	___lwdiv@divisor,w
  4627  0FE8  02F2               	subwf	___lwdiv@dividend,f
  4628  0FE9  0871               	movf	___lwdiv@divisor+1,w
  4629  0FEA  1C03               	skipc
  4630  0FEB  03F3               	decf	___lwdiv@dividend+1,f
  4631  0FEC  02F3               	subwf	___lwdiv@dividend+1,f
  4632  0FED                     i1l1534:
  4633  0FED  1475               	bsf	___lwdiv@quotient,0
  4634  0FEE                     i1l1536:
  4635  0FEE  3001               	movlw	1
  4636  0FEF                     u106_25:
  4637  0FEF  1003               	clrc
  4638  0FF0  0CF1               	rrf	___lwdiv@divisor+1,f
  4639  0FF1  0CF0               	rrf	___lwdiv@divisor,f
  4640  0FF2  3EFF               	addlw	-1
  4641  0FF3  1D03               	skipz
  4642  0FF4  2FEF               	goto	u106_25
  4643  0FF5                     i1l1538:
  4644  0FF5  3001               	movlw	1
  4645  0FF6  02F7               	subwf	___lwdiv@counter,f
  4646  0FF7  1D03               	btfss	3,2
  4647  0FF8  2FFA               	goto	u107_21
  4648  0FF9  2FFB               	goto	u107_20
  4649  0FFA                     u107_21:
  4650  0FFA  2FD6               	goto	i1l1530
  4651  0FFB                     u107_20:
  4652  0FFB                     i1l1540:
  4653  0FFB  0876               	movf	___lwdiv@quotient+1,w
  4654  0FFC  00F1               	movwf	?___lwdiv+1
  4655  0FFD  0875               	movf	___lwdiv@quotient,w
  4656  0FFE  00F0               	movwf	?___lwdiv
  4657  0FFF                     i1l618:
  4658  0FFF  0008               	return
  4659  1000                     __end_of___lwdiv:
  4660                           
  4661                           	psect	text21
  4662  05F4                     __ptext21:	
  4663 ;; *************** function ___fltol *****************
  4664 ;; Defined at:
  4665 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fltol.c"
  4666 ;; Parameters:    Size  Location     Type
  4667 ;;  f1              4    0[COMMON] unsigned int 
  4668 ;; Auto vars:     Size  Location     Type
  4669 ;;  exp1            1   10[COMMON] unsigned char 
  4670 ;;  sign1           1    9[COMMON] unsigned char 
  4671 ;; Return value:  Size  Location     Type
  4672 ;;                  4    0[COMMON] long 
  4673 ;; Registers used:
  4674 ;;		wreg, status,2, status,0
  4675 ;; Tracked objects:
  4676 ;;		On entry : 0/0
  4677 ;;		On exit  : 0/0
  4678 ;;		Unchanged: 0/0
  4679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4680 ;;      Params:         4       0       0       0       0
  4681 ;;      Locals:         2       0       0       0       0
  4682 ;;      Temps:          5       0       0       0       0
  4683 ;;      Totals:        11       0       0       0       0
  4684 ;;Total ram usage:       11 bytes
  4685 ;; Hardware stack levels used: 1
  4686 ;; This function calls:
  4687 ;;		Nothing
  4688 ;; This function is called by:
  4689 ;;		_atualizaLCD
  4690 ;; This function uses a non-reentrant model
  4691 ;;
  4692                           
  4693                           
  4694                           ;psect for function ___fltol
  4695  05F4                     ___fltol:
  4696  05F4                     i1l1694:	
  4697                           ;incstack = 0
  4698                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  4699                           
  4700  05F4  1003               	clrc
  4701  05F5  0D72               	rlf	___fltol@f1+2,w
  4702  05F6  0D73               	rlf	___fltol@f1+3,w
  4703  05F7  00F4               	movwf	??___fltol
  4704  05F8  0874               	movf	??___fltol,w
  4705  05F9  00FA               	movwf	___fltol@exp1
  4706  05FA  087A               	movf	___fltol@exp1,w
  4707  05FB  1D03               	btfss	3,2
  4708  05FC  2DFE               	goto	u130_21
  4709  05FD  2DFF               	goto	u130_20
  4710  05FE                     u130_21:
  4711  05FE  2E08               	goto	i1l1700
  4712  05FF                     u130_20:
  4713  05FF                     i1l1696:
  4714  05FF  3000               	movlw	0
  4715  0600  00F3               	movwf	?___fltol+3
  4716  0601  3000               	movlw	0
  4717  0602  00F2               	movwf	?___fltol+2
  4718  0603  3000               	movlw	0
  4719  0604  00F1               	movwf	?___fltol+1
  4720  0605  3000               	movlw	0
  4721  0606  00F0               	movwf	?___fltol
  4722  0607  2E6D               	goto	i1l532
  4723  0608                     i1l1700:
  4724  0608  0870               	movf	___fltol@f1,w
  4725  0609  00F4               	movwf	??___fltol
  4726  060A  0871               	movf	___fltol@f1+1,w
  4727  060B  00F5               	movwf	??___fltol+1
  4728  060C  0872               	movf	___fltol@f1+2,w
  4729  060D  00F6               	movwf	??___fltol+2
  4730  060E  0873               	movf	___fltol@f1+3,w
  4731  060F  00F7               	movwf	??___fltol+3
  4732  0610  301F               	movlw	31
  4733  0611                     u131_25:
  4734  0611  1003               	clrc
  4735  0612  0CF7               	rrf	??___fltol+3,f
  4736  0613  0CF6               	rrf	??___fltol+2,f
  4737  0614  0CF5               	rrf	??___fltol+1,f
  4738  0615  0CF4               	rrf	??___fltol,f
  4739  0616                     u131_20:
  4740  0616  3EFF               	addlw	-1
  4741  0617  1D03               	skipz
  4742  0618  2E11               	goto	u131_25
  4743  0619  0874               	movf	??___fltol,w
  4744  061A  00F8               	movwf	??___fltol+4
  4745  061B  0878               	movf	??___fltol+4,w
  4746  061C  00F9               	movwf	___fltol@sign1
  4747  061D                     i1l1702:
  4748  061D  17F2               	bsf	___fltol@f1+2,7
  4749  061E                     i1l1704:
  4750  061E  30FF               	movlw	255
  4751  061F  05F0               	andwf	___fltol@f1,f
  4752  0620  30FF               	movlw	255
  4753  0621  05F1               	andwf	___fltol@f1+1,f
  4754  0622  30FF               	movlw	255
  4755  0623  05F2               	andwf	___fltol@f1+2,f
  4756  0624  3000               	movlw	0
  4757  0625  05F3               	andwf	___fltol@f1+3,f
  4758  0626                     i1l1706:
  4759  0626  3096               	movlw	150
  4760  0627  02FA               	subwf	___fltol@exp1,f
  4761  0628                     i1l1708:
  4762  0628  1FFA               	btfss	___fltol@exp1,7
  4763  0629  2E2B               	goto	u132_21
  4764  062A  2E2C               	goto	u132_20
  4765  062B                     u132_21:
  4766  062B  2E46               	goto	i1l1718
  4767  062C                     u132_20:
  4768  062C                     i1l1710:
  4769  062C  087A               	movf	___fltol@exp1,w
  4770  062D  3A80               	xorlw	128
  4771  062E  3E97               	addlw	151
  4772  062F  1803               	skipnc
  4773  0630  2E32               	goto	u133_21
  4774  0631  2E33               	goto	u133_20
  4775  0632                     u133_21:
  4776  0632  2E34               	goto	i1l1716
  4777  0633                     u133_20:
  4778  0633  2DFF               	goto	i1l1696
  4779  0634                     i1l1716:
  4780  0634  3001               	movlw	1
  4781  0635                     u134_25:
  4782  0635  1003               	clrc
  4783  0636  0CF3               	rrf	___fltol@f1+3,f
  4784  0637  0CF2               	rrf	___fltol@f1+2,f
  4785  0638  0CF1               	rrf	___fltol@f1+1,f
  4786  0639  0CF0               	rrf	___fltol@f1,f
  4787  063A  3EFF               	addlw	-1
  4788  063B  1D03               	skipz
  4789  063C  2E35               	goto	u134_25
  4790  063D  3001               	movlw	1
  4791  063E  00F4               	movwf	??___fltol
  4792  063F  0874               	movf	??___fltol,w
  4793  0640  07FA               	addwf	___fltol@exp1,f
  4794  0641  1D03               	btfss	3,2
  4795  0642  2E44               	goto	u135_21
  4796  0643  2E45               	goto	u135_20
  4797  0644                     u135_21:
  4798  0644  2E34               	goto	i1l1716
  4799  0645                     u135_20:
  4800  0645  2E5D               	goto	i1l1726
  4801  0646                     i1l1718:
  4802  0646  3020               	movlw	32
  4803  0647  027A               	subwf	___fltol@exp1,w
  4804  0648  1C03               	skipc
  4805  0649  2E4B               	goto	u136_21
  4806  064A  2E4C               	goto	u136_20
  4807  064B                     u136_21:
  4808  064B  2E58               	goto	i1l539
  4809  064C                     u136_20:
  4810  064C  2DFF               	goto	i1l1696
  4811  064D                     i1l1724:
  4812  064D  3001               	movlw	1
  4813  064E  00F4               	movwf	??___fltol
  4814  064F                     u137_25:
  4815  064F  1003               	clrc
  4816  0650  0DF0               	rlf	___fltol@f1,f
  4817  0651  0DF1               	rlf	___fltol@f1+1,f
  4818  0652  0DF2               	rlf	___fltol@f1+2,f
  4819  0653  0DF3               	rlf	___fltol@f1+3,f
  4820  0654  0BF4               	decfsz	??___fltol,f
  4821  0655  2E4F               	goto	u137_25
  4822  0656  3001               	movlw	1
  4823  0657  02FA               	subwf	___fltol@exp1,f
  4824  0658                     i1l539:
  4825  0658  087A               	movf	___fltol@exp1,w
  4826  0659  1D03               	btfss	3,2
  4827  065A  2E5C               	goto	u138_21
  4828  065B  2E5D               	goto	u138_20
  4829  065C                     u138_21:
  4830  065C  2E4D               	goto	i1l1724
  4831  065D                     u138_20:
  4832  065D                     i1l1726:
  4833  065D  0879               	movf	___fltol@sign1,w
  4834  065E  1903               	btfsc	3,2
  4835  065F  2E61               	goto	u139_21
  4836  0660  2E62               	goto	u139_20
  4837  0661                     u139_21:
  4838  0661  2E6D               	goto	i1l542
  4839  0662                     u139_20:
  4840  0662                     i1l1728:
  4841  0662  09F0               	comf	___fltol@f1,f
  4842  0663  09F1               	comf	___fltol@f1+1,f
  4843  0664  09F2               	comf	___fltol@f1+2,f
  4844  0665  09F3               	comf	___fltol@f1+3,f
  4845  0666  0AF0               	incf	___fltol@f1,f
  4846  0667  1903               	skipnz
  4847  0668  0AF1               	incf	___fltol@f1+1,f
  4848  0669  1903               	skipnz
  4849  066A  0AF2               	incf	___fltol@f1+2,f
  4850  066B  1903               	skipnz
  4851  066C  0AF3               	incf	___fltol@f1+3,f
  4852  066D                     i1l542:
  4853  066D                     i1l532:
  4854  066D  0008               	return
  4855  066E                     __end_of___fltol:
  4856                           
  4857                           	psect	text22
  4858  0DE0                     __ptext22:	
  4859 ;; *************** function _Lcd_Write_String *****************
  4860 ;; Defined at:
  4861 ;;		line 97 in file "./lcd.h"
  4862 ;; Parameters:    Size  Location     Type
  4863 ;;  a               1    wreg     PTR unsigned char 
  4864 ;;		 -> atualizaLCD@buffer1(16), atualizaLCD@buffer0(16), 
  4865 ;; Auto vars:     Size  Location     Type
  4866 ;;  a               1    8[COMMON] PTR unsigned char 
  4867 ;;		 -> atualizaLCD@buffer1(16), atualizaLCD@buffer0(16), 
  4868 ;;  i               2    6[COMMON] int 
  4869 ;; Return value:  Size  Location     Type
  4870 ;;                  1    wreg      void 
  4871 ;; Registers used:
  4872 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4873 ;; Tracked objects:
  4874 ;;		On entry : 0/0
  4875 ;;		On exit  : 0/0
  4876 ;;		Unchanged: 0/0
  4877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4878 ;;      Params:         0       0       0       0       0
  4879 ;;      Locals:         3       0       0       0       0
  4880 ;;      Temps:          1       0       0       0       0
  4881 ;;      Totals:         4       0       0       0       0
  4882 ;;Total ram usage:        4 bytes
  4883 ;; Hardware stack levels used: 1
  4884 ;; Hardware stack levels required when called: 2
  4885 ;; This function calls:
  4886 ;;		_Lcd_Write_Char
  4887 ;; This function is called by:
  4888 ;;		_atualizaLCD
  4889 ;; This function uses a non-reentrant model
  4890 ;;
  4891                           
  4892                           
  4893                           ;psect for function _Lcd_Write_String
  4894  0DE0                     _Lcd_Write_String:
  4895                           
  4896                           ;incstack = 0
  4897                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4898                           ;Lcd_Write_String@a stored from wreg
  4899  0DE0  00F8               	movwf	Lcd_Write_String@a
  4900  0DE1                     i1l1608:
  4901                           
  4902                           ;./lcd.h: 97: void Lcd_Write_String(char *a);./lcd.h: 98: {;./lcd.h: 99:  int i;;./lcd.h
      +                          : 100:  for(i=0;a[i]!='\0';i++)
  4903  0DE1  01F6               	clrf	Lcd_Write_String@i
  4904  0DE2  01F7               	clrf	Lcd_Write_String@i+1
  4905  0DE3  2DF5               	goto	i1l1614
  4906  0DE4                     i1l1610:
  4907                           
  4908                           ;./lcd.h: 101:     Lcd_Write_Char(a[i]);
  4909  0DE4  0876               	movf	Lcd_Write_String@i,w
  4910  0DE5  0778               	addwf	Lcd_Write_String@a,w
  4911  0DE6  00F5               	movwf	??_Lcd_Write_String
  4912  0DE7  0875               	movf	??_Lcd_Write_String,w
  4913  0DE8  0084               	movwf	4
  4914  0DE9  0800               	movf	0,w
  4915  0DEA  120A  158A  274B  120A  158A  	fcall	_Lcd_Write_Char
  4916  0DEF                     i1l1612:
  4917  0DEF  3001               	movlw	1
  4918  0DF0  07F6               	addwf	Lcd_Write_String@i,f
  4919  0DF1  1803               	skipnc
  4920  0DF2  0AF7               	incf	Lcd_Write_String@i+1,f
  4921  0DF3  3000               	movlw	0
  4922  0DF4  07F7               	addwf	Lcd_Write_String@i+1,f
  4923  0DF5                     i1l1614:
  4924  0DF5  0876               	movf	Lcd_Write_String@i,w
  4925  0DF6  0778               	addwf	Lcd_Write_String@a,w
  4926  0DF7  00F5               	movwf	??_Lcd_Write_String
  4927  0DF8  0875               	movf	??_Lcd_Write_String,w
  4928  0DF9  0084               	movwf	4
  4929  0DFA  1383               	bcf	3,7	;select IRP bank0
  4930  0DFB  0800               	movf	0,w
  4931  0DFC  1D03               	btfss	3,2
  4932  0DFD  2DFF               	goto	u118_21
  4933  0DFE  2E00               	goto	u118_20
  4934  0DFF                     u118_21:
  4935  0DFF  2DE4               	goto	i1l1610
  4936  0E00                     u118_20:
  4937  0E00                     i1l145:
  4938  0E00  0008               	return
  4939  0E01                     __end_of_Lcd_Write_String:
  4940                           
  4941                           	psect	text23
  4942  0F4B                     __ptext23:	
  4943 ;; *************** function _Lcd_Write_Char *****************
  4944 ;; Defined at:
  4945 ;;		line 81 in file "./lcd.h"
  4946 ;; Parameters:    Size  Location     Type
  4947 ;;  a               1    wreg     unsigned char 
  4948 ;; Auto vars:     Size  Location     Type
  4949 ;;  a               1    4[COMMON] unsigned char 
  4950 ;;  y               1    3[COMMON] unsigned char 
  4951 ;;  temp            1    2[COMMON] unsigned char 
  4952 ;; Return value:  Size  Location     Type
  4953 ;;                  1    wreg      void 
  4954 ;; Registers used:
  4955 ;;		wreg, status,2, status,0, pclath, cstack
  4956 ;; Tracked objects:
  4957 ;;		On entry : 0/0
  4958 ;;		On exit  : 0/0
  4959 ;;		Unchanged: 0/0
  4960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4961 ;;      Params:         0       0       0       0       0
  4962 ;;      Locals:         3       0       0       0       0
  4963 ;;      Temps:          1       0       0       0       0
  4964 ;;      Totals:         4       0       0       0       0
  4965 ;;Total ram usage:        4 bytes
  4966 ;; Hardware stack levels used: 1
  4967 ;; Hardware stack levels required when called: 1
  4968 ;; This function calls:
  4969 ;;		i1_Lcd_Port
  4970 ;; This function is called by:
  4971 ;;		_Lcd_Write_String
  4972 ;; This function uses a non-reentrant model
  4973 ;;
  4974                           
  4975                           
  4976                           ;psect for function _Lcd_Write_Char
  4977  0F4B                     _Lcd_Write_Char:
  4978                           
  4979                           ;incstack = 0
  4980                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  4981                           ;Lcd_Write_Char@a stored from wreg
  4982  0F4B  00F4               	movwf	Lcd_Write_Char@a
  4983  0F4C                     i1l1478:
  4984                           
  4985                           ;./lcd.h: 81: void Lcd_Write_Char(char a);./lcd.h: 82: {;./lcd.h: 83:    char temp,y;;./
      +                          lcd.h: 84:    temp = a&0x0F;
  4986  0F4C  0874               	movf	Lcd_Write_Char@a,w
  4987  0F4D  390F               	andlw	15
  4988  0F4E  00F1               	movwf	??_Lcd_Write_Char
  4989  0F4F  0871               	movf	??_Lcd_Write_Char,w
  4990  0F50  00F2               	movwf	Lcd_Write_Char@temp
  4991                           
  4992                           ;./lcd.h: 85:    y = a&0xF0;
  4993  0F51  0874               	movf	Lcd_Write_Char@a,w
  4994  0F52  39F0               	andlw	240
  4995  0F53  00F1               	movwf	??_Lcd_Write_Char
  4996  0F54  0871               	movf	??_Lcd_Write_Char,w
  4997  0F55  00F3               	movwf	Lcd_Write_Char@y
  4998  0F56                     i1l1480:
  4999                           
  5000                           ;./lcd.h: 86:    RB2 = 1;
  5001  0F56  1283               	bcf	3,5	;RP0=0, select bank0
  5002  0F57  1303               	bcf	3,6	;RP1=0, select bank0
  5003  0F58  1506               	bsf	6,2	;volatile
  5004  0F59                     i1l1482:
  5005                           
  5006                           ;./lcd.h: 87:    Lcd_Port(y>>4);
  5007  0F59  0873               	movf	Lcd_Write_Char@y,w
  5008  0F5A  00F1               	movwf	??_Lcd_Write_Char
  5009  0F5B  3004               	movlw	4
  5010  0F5C                     u93_25:
  5011  0F5C  1003               	clrc
  5012  0F5D  0CF1               	rrf	??_Lcd_Write_Char,f
  5013  0F5E  3EFF               	addlw	-1
  5014  0F5F  1D03               	skipz
  5015  0F60  2F5C               	goto	u93_25
  5016  0F61  0871               	movf	??_Lcd_Write_Char,w
  5017  0F62  120A  158A  2601  120A  158A  	fcall	i1_Lcd_Port
  5018  0F67                     i1l1484:
  5019                           
  5020                           ;./lcd.h: 88:    RB1 = 1;
  5021  0F67  1283               	bcf	3,5	;RP0=0, select bank0
  5022  0F68  1303               	bcf	3,6	;RP1=0, select bank0
  5023  0F69  1486               	bsf	6,1	;volatile
  5024  0F6A                     i1l1486:
  5025                           
  5026                           ;./lcd.h: 89:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  5027  0F6A  300D               	movlw	13
  5028  0F6B  00F1               	movwf	??_Lcd_Write_Char
  5029  0F6C                     u175_27:
  5030  0F6C  0BF1               	decfsz	??_Lcd_Write_Char,f
  5031  0F6D  2F6C               	goto	u175_27
  5032  0F6E                     i1l1488:
  5033                           
  5034                           ;./lcd.h: 90:    RB1 = 0;
  5035  0F6E  1283               	bcf	3,5	;RP0=0, select bank0
  5036  0F6F  1303               	bcf	3,6	;RP1=0, select bank0
  5037  0F70  1086               	bcf	6,1	;volatile
  5038  0F71                     i1l1490:
  5039                           
  5040                           ;./lcd.h: 91:    Lcd_Port(temp);
  5041  0F71  0872               	movf	Lcd_Write_Char@temp,w
  5042  0F72  120A  158A  2601  120A  158A  	fcall	i1_Lcd_Port
  5043  0F77                     i1l1492:
  5044                           
  5045                           ;./lcd.h: 92:    RB1 = 1;
  5046  0F77  1283               	bcf	3,5	;RP0=0, select bank0
  5047  0F78  1303               	bcf	3,6	;RP1=0, select bank0
  5048  0F79  1486               	bsf	6,1	;volatile
  5049  0F7A                     i1l1494:
  5050                           
  5051                           ;./lcd.h: 93:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  5052  0F7A  300D               	movlw	13
  5053  0F7B  00F1               	movwf	??_Lcd_Write_Char
  5054  0F7C                     u176_27:
  5055  0F7C  0BF1               	decfsz	??_Lcd_Write_Char,f
  5056  0F7D  2F7C               	goto	u176_27
  5057  0F7E                     i1l1496:
  5058                           
  5059                           ;./lcd.h: 94:    RB1 = 0;
  5060  0F7E  1283               	bcf	3,5	;RP0=0, select bank0
  5061  0F7F  1303               	bcf	3,6	;RP1=0, select bank0
  5062  0F80  1086               	bcf	6,1	;volatile
  5063  0F81                     i1l139:
  5064  0F81  0008               	return
  5065  0F82                     __end_of_Lcd_Write_Char:
  5066                           
  5067                           	psect	text24
  5068  0799                     __ptext24:	
  5069 ;; *************** function _Lcd_Set_Cursor *****************
  5070 ;; Defined at:
  5071 ;;		line 41 in file "./lcd.h"
  5072 ;; Parameters:    Size  Location     Type
  5073 ;;  a               1    wreg     unsigned char 
  5074 ;;  b               1    4[COMMON] unsigned char 
  5075 ;; Auto vars:     Size  Location     Type
  5076 ;;  a               1    7[COMMON] unsigned char 
  5077 ;;  temp            1   10[COMMON] unsigned char 
  5078 ;;  y               1    9[COMMON] unsigned char 
  5079 ;;  z               1    8[COMMON] unsigned char 
  5080 ;; Return value:  Size  Location     Type
  5081 ;;                  1    wreg      void 
  5082 ;; Registers used:
  5083 ;;		wreg, status,2, status,0, pclath, cstack
  5084 ;; Tracked objects:
  5085 ;;		On entry : 0/0
  5086 ;;		On exit  : 0/0
  5087 ;;		Unchanged: 0/0
  5088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5089 ;;      Params:         1       0       0       0       0
  5090 ;;      Locals:         4       0       0       0       0
  5091 ;;      Temps:          2       0       0       0       0
  5092 ;;      Totals:         7       0       0       0       0
  5093 ;;Total ram usage:        7 bytes
  5094 ;; Hardware stack levels used: 1
  5095 ;; Hardware stack levels required when called: 2
  5096 ;; This function calls:
  5097 ;;		i1_Lcd_Cmd
  5098 ;; This function is called by:
  5099 ;;		_atualizaLCD
  5100 ;; This function uses a non-reentrant model
  5101 ;;
  5102                           
  5103                           
  5104                           ;psect for function _Lcd_Set_Cursor
  5105  0799                     _Lcd_Set_Cursor:
  5106                           
  5107                           ;incstack = 0
  5108                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  5109                           ;Lcd_Set_Cursor@a stored from wreg
  5110  0799  00F7               	movwf	Lcd_Set_Cursor@a
  5111  079A                     i1l1588:
  5112                           
  5113                           ;./lcd.h: 41: void Lcd_Set_Cursor(char a, char b);./lcd.h: 42: {;./lcd.h: 43:  char temp
      +                          ,z,y;;./lcd.h: 44:  if(a == 1)
  5114  079A  0377               	decf	Lcd_Set_Cursor@a,w
  5115  079B  1D03               	btfss	3,2
  5116  079C  2F9E               	goto	u114_21
  5117  079D  2F9F               	goto	u114_20
  5118  079E                     u114_21:
  5119  079E  2FC2               	goto	i1l1598
  5120  079F                     u114_20:
  5121  079F                     i1l1590:
  5122                           
  5123                           ;./lcd.h: 45:  {;./lcd.h: 46:    temp = 0x80 + b - 1;
  5124  079F  0874               	movf	Lcd_Set_Cursor@b,w
  5125  07A0  3E7F               	addlw	127
  5126  07A1  00F5               	movwf	??_Lcd_Set_Cursor
  5127  07A2  0875               	movf	??_Lcd_Set_Cursor,w
  5128  07A3  00FA               	movwf	Lcd_Set_Cursor@temp
  5129                           
  5130                           ;./lcd.h: 47:   z = temp>>4;
  5131  07A4  087A               	movf	Lcd_Set_Cursor@temp,w
  5132  07A5  00F5               	movwf	??_Lcd_Set_Cursor
  5133  07A6  3004               	movlw	4
  5134  07A7                     u115_25:
  5135  07A7  1003               	clrc
  5136  07A8  0CF5               	rrf	??_Lcd_Set_Cursor,f
  5137  07A9  3EFF               	addlw	-1
  5138  07AA  1D03               	skipz
  5139  07AB  2FA7               	goto	u115_25
  5140  07AC  0875               	movf	??_Lcd_Set_Cursor,w
  5141  07AD  00F6               	movwf	??_Lcd_Set_Cursor+1
  5142  07AE  0876               	movf	??_Lcd_Set_Cursor+1,w
  5143  07AF  00F8               	movwf	Lcd_Set_Cursor@z
  5144  07B0                     i1l1592:
  5145                           
  5146                           ;./lcd.h: 48:   y = temp & 0x0F;
  5147  07B0  087A               	movf	Lcd_Set_Cursor@temp,w
  5148  07B1  390F               	andlw	15
  5149  07B2  00F5               	movwf	??_Lcd_Set_Cursor
  5150  07B3  0875               	movf	??_Lcd_Set_Cursor,w
  5151  07B4  00F9               	movwf	Lcd_Set_Cursor@y
  5152  07B5                     i1l1594:
  5153                           
  5154                           ;./lcd.h: 49:   Lcd_Cmd(z);
  5155  07B5  0878               	movf	Lcd_Set_Cursor@z,w
  5156  07B6  120A  158A  25A6  120A  118A  	fcall	i1_Lcd_Cmd
  5157  07BB                     i1l1596:
  5158                           
  5159                           ;./lcd.h: 50:   Lcd_Cmd(y);
  5160  07BB  0879               	movf	Lcd_Set_Cursor@y,w
  5161  07BC  120A  158A  25A6  120A  118A  	fcall	i1_Lcd_Cmd
  5162                           
  5163                           ;./lcd.h: 51:  }
  5164  07C1  2FEA               	goto	i1l133
  5165  07C2                     i1l1598:
  5166  07C2  3002               	movlw	2
  5167  07C3  0677               	xorwf	Lcd_Set_Cursor@a,w
  5168  07C4  1D03               	btfss	3,2
  5169  07C5  2FC7               	goto	u116_21
  5170  07C6  2FC8               	goto	u116_20
  5171  07C7                     u116_21:
  5172  07C7  2FEA               	goto	i1l133
  5173  07C8                     u116_20:
  5174  07C8                     i1l1600:
  5175                           
  5176                           ;./lcd.h: 53:  {;./lcd.h: 54:   temp = 0xC0 + b - 1;
  5177  07C8  0874               	movf	Lcd_Set_Cursor@b,w
  5178  07C9  3EBF               	addlw	191
  5179  07CA  00F5               	movwf	??_Lcd_Set_Cursor
  5180  07CB  0875               	movf	??_Lcd_Set_Cursor,w
  5181  07CC  00FA               	movwf	Lcd_Set_Cursor@temp
  5182                           
  5183                           ;./lcd.h: 55:   z = temp>>4;
  5184  07CD  087A               	movf	Lcd_Set_Cursor@temp,w
  5185  07CE  00F5               	movwf	??_Lcd_Set_Cursor
  5186  07CF  3004               	movlw	4
  5187  07D0                     u117_25:
  5188  07D0  1003               	clrc
  5189  07D1  0CF5               	rrf	??_Lcd_Set_Cursor,f
  5190  07D2  3EFF               	addlw	-1
  5191  07D3  1D03               	skipz
  5192  07D4  2FD0               	goto	u117_25
  5193  07D5  0875               	movf	??_Lcd_Set_Cursor,w
  5194  07D6  00F6               	movwf	??_Lcd_Set_Cursor+1
  5195  07D7  0876               	movf	??_Lcd_Set_Cursor+1,w
  5196  07D8  00F8               	movwf	Lcd_Set_Cursor@z
  5197  07D9                     i1l1602:
  5198                           
  5199                           ;./lcd.h: 56:   y = temp & 0x0F;
  5200  07D9  087A               	movf	Lcd_Set_Cursor@temp,w
  5201  07DA  390F               	andlw	15
  5202  07DB  00F5               	movwf	??_Lcd_Set_Cursor
  5203  07DC  0875               	movf	??_Lcd_Set_Cursor,w
  5204  07DD  00F9               	movwf	Lcd_Set_Cursor@y
  5205  07DE                     i1l1604:
  5206                           
  5207                           ;./lcd.h: 57:   Lcd_Cmd(z);
  5208  07DE  0878               	movf	Lcd_Set_Cursor@z,w
  5209  07DF  120A  158A  25A6  120A  118A  	fcall	i1_Lcd_Cmd
  5210  07E4                     i1l1606:
  5211                           
  5212                           ;./lcd.h: 58:   Lcd_Cmd(y);
  5213  07E4  0879               	movf	Lcd_Set_Cursor@y,w
  5214  07E5  120A  158A  25A6  120A  118A  	fcall	i1_Lcd_Cmd
  5215  07EA                     i1l133:
  5216  07EA  0008               	return
  5217  07EB                     __end_of_Lcd_Set_Cursor:
  5218                           
  5219                           	psect	text25
  5220  0D41                     __ptext25:	
  5221 ;; *************** function _Lcd_Clear *****************
  5222 ;; Defined at:
  5223 ;;		line 35 in file "./lcd.h"
  5224 ;; Parameters:    Size  Location     Type
  5225 ;;		None
  5226 ;; Auto vars:     Size  Location     Type
  5227 ;;		None
  5228 ;; Return value:  Size  Location     Type
  5229 ;;                  1    wreg      void 
  5230 ;; Registers used:
  5231 ;;		wreg, status,2, status,0, pclath, cstack
  5232 ;; Tracked objects:
  5233 ;;		On entry : 0/0
  5234 ;;		On exit  : 0/0
  5235 ;;		Unchanged: 0/0
  5236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5237 ;;      Params:         0       0       0       0       0
  5238 ;;      Locals:         0       0       0       0       0
  5239 ;;      Temps:          0       0       0       0       0
  5240 ;;      Totals:         0       0       0       0       0
  5241 ;;Total ram usage:        0 bytes
  5242 ;; Hardware stack levels used: 1
  5243 ;; Hardware stack levels required when called: 2
  5244 ;; This function calls:
  5245 ;;		i1_Lcd_Cmd
  5246 ;; This function is called by:
  5247 ;;		_atualizaLCD
  5248 ;; This function uses a non-reentrant model
  5249 ;;
  5250                           
  5251                           
  5252                           ;psect for function _Lcd_Clear
  5253  0D41                     _Lcd_Clear:
  5254  0D41                     i1l1586:	
  5255                           ;incstack = 0
  5256                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  5257                           
  5258                           
  5259                           ;./lcd.h: 37:  Lcd_Cmd(0);
  5260  0D41  3000               	movlw	0
  5261  0D42  120A  158A  25A6  120A  158A  	fcall	i1_Lcd_Cmd
  5262                           
  5263                           ;./lcd.h: 38:  Lcd_Cmd(1);
  5264  0D47  3001               	movlw	1
  5265  0D48  120A  158A  25A6  120A  158A  	fcall	i1_Lcd_Cmd
  5266  0D4D                     i1l127:
  5267  0D4D  0008               	return
  5268  0D4E                     __end_of_Lcd_Clear:
  5269                           
  5270                           	psect	text26
  5271  0DA6                     __ptext26:	
  5272 ;; *************** function i1_Lcd_Cmd *****************
  5273 ;; Defined at:
  5274 ;;		line 26 in file "./lcd.h"
  5275 ;; Parameters:    Size  Location     Type
  5276 ;;  a               1    wreg     unsigned char 
  5277 ;; Auto vars:     Size  Location     Type
  5278 ;;  a               1    3[COMMON] unsigned char 
  5279 ;; Return value:  Size  Location     Type
  5280 ;;                  1    wreg      void 
  5281 ;; Registers used:
  5282 ;;		wreg, status,2, status,0, pclath, cstack
  5283 ;; Tracked objects:
  5284 ;;		On entry : 0/0
  5285 ;;		On exit  : 0/0
  5286 ;;		Unchanged: 0/0
  5287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5288 ;;      Params:         0       0       0       0       0
  5289 ;;      Locals:         1       0       0       0       0
  5290 ;;      Temps:          2       0       0       0       0
  5291 ;;      Totals:         3       0       0       0       0
  5292 ;;Total ram usage:        3 bytes
  5293 ;; Hardware stack levels used: 1
  5294 ;; Hardware stack levels required when called: 1
  5295 ;; This function calls:
  5296 ;;		i1_Lcd_Port
  5297 ;; This function is called by:
  5298 ;;		_Lcd_Clear
  5299 ;;		_Lcd_Set_Cursor
  5300 ;; This function uses a non-reentrant model
  5301 ;;
  5302                           
  5303                           
  5304                           ;psect for function i1_Lcd_Cmd
  5305  0DA6                     i1_Lcd_Cmd:
  5306                           
  5307                           ;incstack = 0
  5308                           ; Regs used in i1_Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  5309                           ;i1Lcd_Cmd@a stored from wreg
  5310  0DA6  00F3               	movwf	i1Lcd_Cmd@a
  5311  0DA7                     i1l1566:
  5312                           
  5313                           ;./lcd.h: 26: void Lcd_Cmd(char a);./lcd.h: 27: {;./lcd.h: 28:  RB2 = 0;
  5314  0DA7  1283               	bcf	3,5	;RP0=0, select bank0
  5315  0DA8  1303               	bcf	3,6	;RP1=0, select bank0
  5316  0DA9  1106               	bcf	6,2	;volatile
  5317  0DAA                     i1l1568:
  5318                           
  5319                           ;./lcd.h: 29:  Lcd_Port(a);
  5320  0DAA  0873               	movf	i1Lcd_Cmd@a,w
  5321  0DAB  120A  158A  2601  120A  158A  	fcall	i1_Lcd_Port
  5322  0DB0                     i1l1570:
  5323                           
  5324                           ;./lcd.h: 30:  RB1 = 1;
  5325  0DB0  1283               	bcf	3,5	;RP0=0, select bank0
  5326  0DB1  1303               	bcf	3,6	;RP1=0, select bank0
  5327  0DB2  1486               	bsf	6,1	;volatile
  5328  0DB3                     i1l1572:
  5329                           
  5330                           ;./lcd.h: 31:         _delay((unsigned long)((4)*(4000000/4000.0)));
  5331  0DB3  3006               	movlw	6
  5332  0DB4  00F2               	movwf	??i1_Lcd_Cmd+1
  5333  0DB5  3030               	movlw	48
  5334  0DB6  00F1               	movwf	??i1_Lcd_Cmd
  5335  0DB7                     u177_27:
  5336  0DB7  0BF1               	decfsz	??i1_Lcd_Cmd,f
  5337  0DB8  2DB7               	goto	u177_27
  5338  0DB9  0BF2               	decfsz	??i1_Lcd_Cmd+1,f
  5339  0DBA  2DB7               	goto	u177_27
  5340  0DBB  0000               	nop
  5341  0DBC                     i1l1574:
  5342                           
  5343                           ;./lcd.h: 32:         RB1 = 0;
  5344  0DBC  1283               	bcf	3,5	;RP0=0, select bank0
  5345  0DBD  1303               	bcf	3,6	;RP1=0, select bank0
  5346  0DBE  1086               	bcf	6,1	;volatile
  5347  0DBF                     i1l124:
  5348  0DBF  0008               	return
  5349  0DC0                     __end_ofi1_Lcd_Cmd:
  5350                           
  5351                           	psect	text27
  5352  0E01                     __ptext27:	
  5353 ;; *************** function i1_Lcd_Port *****************
  5354 ;; Defined at:
  5355 ;;		line 4 in file "./lcd.h"
  5356 ;; Parameters:    Size  Location     Type
  5357 ;;  a               1    wreg     unsigned char 
  5358 ;; Auto vars:     Size  Location     Type
  5359 ;;  a               1    0[COMMON] unsigned char 
  5360 ;; Return value:  Size  Location     Type
  5361 ;;                  1    wreg      void 
  5362 ;; Registers used:
  5363 ;;		wreg
  5364 ;; Tracked objects:
  5365 ;;		On entry : 0/0
  5366 ;;		On exit  : 0/0
  5367 ;;		Unchanged: 0/0
  5368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5369 ;;      Params:         0       0       0       0       0
  5370 ;;      Locals:         1       0       0       0       0
  5371 ;;      Temps:          0       0       0       0       0
  5372 ;;      Totals:         1       0       0       0       0
  5373 ;;Total ram usage:        1 bytes
  5374 ;; Hardware stack levels used: 1
  5375 ;; This function calls:
  5376 ;;		Nothing
  5377 ;; This function is called by:
  5378 ;;		_Lcd_Write_Char
  5379 ;;		i1_Lcd_Cmd
  5380 ;; This function uses a non-reentrant model
  5381 ;;
  5382                           
  5383                           
  5384                           ;psect for function i1_Lcd_Port
  5385  0E01                     i1_Lcd_Port:
  5386                           
  5387                           ;incstack = 0
  5388                           ; Regs used in i1_Lcd_Port: [wreg]
  5389                           ;i1Lcd_Port@a stored from wreg
  5390  0E01  00F0               	movwf	i1Lcd_Port@a
  5391  0E02                     i1l1458:
  5392                           
  5393                           ;./lcd.h: 4: void Lcd_Port(char a);./lcd.h: 5: {;./lcd.h: 6:  if(a & 1)
  5394  0E02  1C70               	btfss	i1Lcd_Port@a,0
  5395  0E03  2E05               	goto	u85_21
  5396  0E04  2E06               	goto	u85_20
  5397  0E05                     u85_21:
  5398  0E05  2E0A               	goto	i1l113
  5399  0E06                     u85_20:
  5400  0E06                     i1l1460:
  5401                           
  5402                           ;./lcd.h: 7:   RB4 = 1;
  5403  0E06  1283               	bcf	3,5	;RP0=0, select bank0
  5404  0E07  1303               	bcf	3,6	;RP1=0, select bank0
  5405  0E08  1606               	bsf	6,4	;volatile
  5406  0E09  2E0D               	goto	i1l114
  5407  0E0A                     i1l113:	
  5408                           ;./lcd.h: 8:  else
  5409                           
  5410                           
  5411                           ;./lcd.h: 9:   RB4 = 0;
  5412  0E0A  1283               	bcf	3,5	;RP0=0, select bank0
  5413  0E0B  1303               	bcf	3,6	;RP1=0, select bank0
  5414  0E0C  1206               	bcf	6,4	;volatile
  5415  0E0D                     i1l114:
  5416                           
  5417                           ;./lcd.h: 11:  if(a & 2)
  5418  0E0D  1CF0               	btfss	i1Lcd_Port@a,1
  5419  0E0E  2E10               	goto	u86_21
  5420  0E0F  2E11               	goto	u86_20
  5421  0E10                     u86_21:
  5422  0E10  2E13               	goto	i1l115
  5423  0E11                     u86_20:
  5424  0E11                     i1l1462:
  5425                           
  5426                           ;./lcd.h: 12:   RB5 = 1;
  5427  0E11  1686               	bsf	6,5	;volatile
  5428  0E12  2E14               	goto	i1l116
  5429  0E13                     i1l115:	
  5430                           ;./lcd.h: 13:  else
  5431                           
  5432                           
  5433                           ;./lcd.h: 14:   RB5 = 0;
  5434  0E13  1286               	bcf	6,5	;volatile
  5435  0E14                     i1l116:
  5436                           
  5437                           ;./lcd.h: 16:  if(a & 4)
  5438  0E14  1D70               	btfss	i1Lcd_Port@a,2
  5439  0E15  2E17               	goto	u87_21
  5440  0E16  2E18               	goto	u87_20
  5441  0E17                     u87_21:
  5442  0E17  2E1A               	goto	i1l117
  5443  0E18                     u87_20:
  5444  0E18                     i1l1464:
  5445                           
  5446                           ;./lcd.h: 17:   RB6 = 1;
  5447  0E18  1706               	bsf	6,6	;volatile
  5448  0E19  2E1B               	goto	i1l118
  5449  0E1A                     i1l117:	
  5450                           ;./lcd.h: 18:  else
  5451                           
  5452                           
  5453                           ;./lcd.h: 19:   RB6 = 0;
  5454  0E1A  1306               	bcf	6,6	;volatile
  5455  0E1B                     i1l118:
  5456                           
  5457                           ;./lcd.h: 21:  if(a & 8)
  5458  0E1B  1DF0               	btfss	i1Lcd_Port@a,3
  5459  0E1C  2E1E               	goto	u88_21
  5460  0E1D  2E1F               	goto	u88_20
  5461  0E1E                     u88_21:
  5462  0E1E  2E21               	goto	i1l119
  5463  0E1F                     u88_20:
  5464  0E1F                     i1l1466:
  5465                           
  5466                           ;./lcd.h: 22:   RB7 = 1;
  5467  0E1F  1786               	bsf	6,7	;volatile
  5468  0E20  2E22               	goto	i1l121
  5469  0E21                     i1l119:	
  5470                           ;./lcd.h: 23:  else
  5471                           
  5472                           
  5473                           ;./lcd.h: 24:   RB7 = 0;
  5474  0E21  1386               	bcf	6,7	;volatile
  5475  0E22                     i1l121:
  5476  0E22  0008               	return
  5477  0E23                     __end_ofi1_Lcd_Port:
  5478  007E                     btemp	set	126	;btemp
  5479  007E                     wtemp0	set	126
  5480                           
  5481                           	psect	config
  5482                           
  5483                           ;Config register CONFIG @ 0x2007
  5484                           ;	Oscillator Selection bits
  5485                           ;	FOSC = HS, HS oscillator
  5486                           ;	Watchdog Timer Enable bit
  5487                           ;	WDTE = ON, WDT enabled
  5488                           ;	Power-up Timer Enable bit
  5489                           ;	PWRTE = ON, PWRT enabled
  5490                           ;	Brown-out Reset Enable bit
  5491                           ;	BOREN = ON, BOR enabled
  5492                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  5493                           ;	LVP = 0x1, unprogrammed default
  5494                           ;	Data EEPROM Memory Code Protection bit
  5495                           ;	CPD = 0x1, unprogrammed default
  5496                           ;	Flash Program Memory Write Enable bits
  5497                           ;	WRT = 0x3, unprogrammed default
  5498                           ;	In-Circuit Debugger Mode bit
  5499                           ;	DEBUG = 0x1, unprogrammed default
  5500                           ;	Flash Program Memory Code Protection bit
  5501                           ;	CP = 0x1, unprogrammed default
  5502  2007                     	org	8199
  5503  2007  3FF6               	dw	16374

Data Sizes:
    Strings     40
    Constant    10
    Data        16
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     57      77
    BANK1            80     21      29
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_2(CODE[19]), STR_1(CODE[21]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> atualizaLCD@buffer1(BANK0[16]), atualizaLCD@buffer0(BANK0[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 16
		 -> atualizaLCD@buffer1(BANK0[16]), atualizaLCD@buffer0(BANK0[16]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _TrataINT in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->i1_Lcd_Port
    _Lcd_Set_Cursor->i1_Lcd_Cmd
    _Lcd_Clear->i1_Lcd_Cmd
    i1_Lcd_Cmd->i1_Lcd_Port

Critical Paths under _main in BANK0

    None.

Critical Paths under _TrataINT in BANK0

    _TrataINT->_atualizaLCD
    _atualizaLCD->_sprintf

Critical Paths under _main in BANK1

    _main->_lerSensores
    _lerSensores->___xxtofl
    _controleEstufas->___flge
    _estufaUm->___flge
    _estufaTres->___flge
    _estufaQuatro->___flge
    _estufaDois->___flge
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _TrataINT in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TrataINT in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TrataINT in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   13088
                                             18 BANK1      3     3      0
                           _Lcd_Init
                             ___flge
                    _controleEstufas
                        _expandeTela
                        _iniciaPinos
                        _lerSensores
                        _recolheTela
 ---------------------------------------------------------------------------------
 (1) _recolheTela                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lerSensores                                          4     4      0     854
                                             14 BANK1      4     4      0
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     854
                                              0 BANK1     14    10      4
 ---------------------------------------------------------------------------------
 (1) _iniciaPinos                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _expandeTela                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _controleEstufas                                      0     0      0   10030
                             ___flge
                         _estufaDois
                       _estufaQuatro
                         _estufaTres
                           _estufaUm
 ---------------------------------------------------------------------------------
 (2) _estufaUm                                             0     0      0    2006
                             ___flge
 ---------------------------------------------------------------------------------
 (2) _estufaTres                                           0     0      0    2006
                             ___flge
 ---------------------------------------------------------------------------------
 (2) _estufaQuatro                                         0     0      0    2006
                             ___flge
 ---------------------------------------------------------------------------------
 (2) _estufaDois                                           0     0      0    2006
                             ___flge
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8    2006
                                              0 BANK1     12     4      8
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 BANK1      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 BANK1      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Port                                             1     1      0      88
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _TrataINT                                             4     4      0    3165
                                             53 BANK0      4     4      0
                        _atualizaLCD
                      i1_recolheTela
 ---------------------------------------------------------------------------------
 (5) i1_recolheTela                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _atualizaLCD                                         34    34      0    3165
                                             19 BANK0     34    34      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___fltol
                            _sprintf
 ---------------------------------------------------------------------------------
 (6) _sprintf                                             27    18      9    1320
                                              0 BANK0     19    10      9
                            ___fltol (ARG)
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             11     7      4     761
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (6) _Lcd_Write_String                                     4     4      0     334
                                              5 COMMON     4     4      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (7) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                         i1_Lcd_Port
 ---------------------------------------------------------------------------------
 (6) _Lcd_Set_Cursor                                       7     6      1     532
                                              4 COMMON     7     6      1
                          i1_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (6) _Lcd_Clear                                            0     0      0     110
                          i1_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (7) i1_Lcd_Cmd                                            3     3      0     110
                                              1 COMMON     3     3      0
                         i1_Lcd_Port
 ---------------------------------------------------------------------------------
 (8) i1_Lcd_Port                                           1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   ___flge
   _controleEstufas
     ___flge
     _estufaDois
       ___flge
     _estufaQuatro
       ___flge
     _estufaTres
       ___flge
     _estufaUm
       ___flge
   _expandeTela
   _iniciaPinos
   _lerSensores
     ___xxtofl
   _recolheTela

 _TrataINT (ROOT)
   _atualizaLCD
     _Lcd_Clear
       i1_Lcd_Cmd
         i1_Lcd_Port
     _Lcd_Set_Cursor
       i1_Lcd_Cmd
     _Lcd_Write_String
       _Lcd_Write_Char
         i1_Lcd_Port
     ___fltol
     _sprintf
       ___fltol (ARG)
       ___lwdiv (ARG)
       ___lwmod (ARG)
         ___lwdiv (ARG)
   i1_recolheTela

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     15      1D       7       36.2%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     39      4D       5       96.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      78      12        0.0%
ABS                  0      0      78       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat May 08 00:23:14 2021

                        pc 0002                         fsr 0004   __size_of_controleEstufas 0139  
                      l121 0F4A                        l113 0F20                        l114 0F23  
                      l202 0798                        l115 0F2D                        l116 0F30  
                      l124 0DDF                        l220 0EDE                        l212 02D4  
                      l117 0F3A                        l118 0F3D                        l222 0EE1  
                      l230 0E7A                        l206 02D4                        l119 0F47  
                      l215 0F11                        l136 0742                        l232 0E7D  
                      l225 0EAB                        l217 0F14                        l170 0678  
                      l227 0EAE                        l191 0DA5                        l520 056E  
                      l194 0D85                        l186 019B                        l523 05DA  
                      l524 05F3                        l196 0D8D                        l189 0D9D  
                      l781 054F                        l792 0519                        l793 0525  
                      l785 04FD                        l779 04B8                        _RB1 0031  
                      _RB2 0032                        _RA4 002C                        _RC0 0038  
                      _RB3 0033                        _RC1 0039                        _RB4 0034  
                      _RD0 0040                        _RC2 003A                        _RB5 0035  
                      _RC3 003B                        _RD1 0041                        _RB6 0036  
                      _RD2 0042                        _RC4 003C                        _RB7 0037  
                      _RD3 0043                        _RC5 003D                        _RD4 0044  
                      _RC6 003E                        _RD5 0045                        _RC7 003F  
                      _RD6 0046                        _RD7 0047                        u900 0F29  
                      u901 0F28                        u910 0F36                        u911 0F35  
                      u920 0F43                        u921 0F42                        u940 0566  
                      u941 0565                        u950 0582                        u951 0581  
                      u960 058E                        u961 058D                        u890 0F1C  
                      u891 0F1B                        u971 059D                        u980 05B6  
                      u972 059E                        u981 05B5                        u973 05A3  
                      u974 05A4                        u991 05C5                        u975 05A9  
                      u992 05C6                        u976 05AA                        u993 05CB  
                      u994 05CC                        u995 05D1                        u996 05D2  
                      fsr0 0004                        indf 0000               ?_atualizaLCD 0070  
             ___fltol@exp1 007A                       l2000 06C4                       l2002 06C9  
                     l1500 0566                       l1510 05B6                       l1502 0582  
                     l1512 05F0                       l1504 058A                       l1514 05F2  
                     l1506 058E                       l1508 05B2                       l1470 0F1C  
                     l1472 0F29                       l1800 076E                       l1474 0F36  
                     l1810 0777                       l1802 076F                       l1730 0497  
                     l1476 0F43                       l1468 0F18                       l1580 0DCE  
                     l1820 077E                       l1812 0778                       l1804 0770  
                     l1732 049C                       l1900 00C4                       l1582 0DD1  
                     l1830 0783                       l1822 077F                       l1814 077B  
                     l1806 0773                       l1750 04E6                       l1742 04C9  
                     l1734 04A0                       l1910 00FA                       l1902 00C5  
                     l1584 0DDC                       l1576 0DC3                       l1680 0F0D  
                     l1840 0788                       l1832 0784                       l1824 0780  
                     l1816 077C                       l1808 0774                       l1760 051D  
                     l1752 04F4                       l1744 04CE                       l1736 04B0  
                     l1920 0130                       l1912 00FB                       l1904 00C6  
                     l1578 0DC6                       l1498 0550                       l1682 0EAF  
                     l1690 0E4D                       l1850 078D                       l1842 0789  
                     l1834 0785                       l1826 0781                       l1818 077D  
                     l1770 0547                       l1762 0527                       l1754 0504  
                     l1746 04DB                       l1738 04C0                       l1930 0166  
                     l1922 0131                       l1914 00FC                       l1906 00C7  
                     l1780 0702                       l1684 0EDA                       l1692 0E76  
                     l1860 0792                       l1852 078E                       l1844 078A  
                     l1836 0786                       l1828 0782                       l1764 053D  
                     l1756 050F                       l1748 04E2                       l1932 0167  
                     l1924 0132                       l1916 00FD                       l1908 00F9  
                     l1940 0D8E                       l1782 0708                       l1774 06E0  
                     l1686 0E7E                       l1678 0EE2                       l1950 01C7  
                     l1870 0797                       l1862 0793                       l1854 078F  
                     l1846 078B                       l1838 0787                       l1790 0763  
                     l1766 0542                       l1758 0513                       l1934 0168  
                     l1926 0133                       l1918 012F                       l1942 0D94  
                     l1776 06E6                       l1688 0EA7                       l1960 0259  
                     l1952 01CD                       l1944 0D76                       l1864 0794  
                     l1856 0790                       l1848 078C                       l1792 076A  
                     l1784 0743                       l1768 0546                       l1936 0169  
                     l1928 0165                       l1880 0064                       l1778 06F1  
                     l1962 0269                       l1954 01F8                       l1946 0D7C  
                     l1866 0795                       l1858 0791                       l1794 076B  
                     l1786 075C                       l1890 009A                       l1882 0065  
                     l1874 0037                       l1964 0294                       l1956 0203  
                     l1948 019C                       l1868 0796                       l1796 076C  
                     l1788 0760                       l1892 009B                       l1884 0066  
                     l1876 0040                       l1966 02BF                       l1958 022E  
                     l1798 076D                       l1894 009C                       l1886 0067  
                     l1878 0061                       l1990 066E                       l1896 009D  
                     l1888 0099                       l1992 0698                       l1898 00C1  
                     l1994 069E                       l1996 06A3                       l1998 06BE  
                     STR_1 0810                       STR_2 0825                       u1000 05F0  
                     u1001 05EF                       u1005 05EC                       u1400 049C  
                     u1401 049B                       u1410 04A0                       u1411 049F  
                     u1260 0F0D                       u1500 051D                       u1420 04C0  
                     u1261 0F0C                       u1501 051C                       u1421 04BF  
                     u1270 0EDA                       u1510 0532                       u1271 0ED9  
                     u1280 0EA7                       u1600 0294                       u1520 0542  
                     u1440 04E1                       u1281 0EA6                       u1601 0293  
                     u1521 0541                       u1441 04E0                       u1290 0E76  
                     u1610 02BF                       u1530 0546                       u1291 0E75  
                     u1611 02BE                       u1531 0545                       u1515 052D  
                     u1435 04D3                       u1460 0503                       u1540 0D94  
                     u1620 0698                       u1461 0502                       u1541 0D93  
                     u1621 0697                       u1550 0D7C                       u1630 069E  
                     u1551 0D7B                       u1455 04F5                       u1631 069D  
                     u1560 01C7                       u1480 0513                       u1640 06BE  
                     u1561 01C6                       u1481 0512                       u1641 06BD  
                     u1570 01F8                       u1490 0519                       u1650 06C4  
                     u1707 06FD                       u1571 01F7                       u1491 0518  
                     u1475 0508                       u1651 06C3                       u1580 022E  
                     u1717 070E                       u1581 022D                       u1590 0259  
                     u1727 0DD7                       u1591 0258                       u1687 06D6  
                     u1697 06EC                       _INTF 0059               ?_lerSensores 0070  
        ?_Lcd_Write_String 0070                       _main 066E                       btemp 007E  
             ?_iniciaPinos 0070                       start 0012         ??_Lcd_Write_String 0075  
          __end_of_Lcd_Cmd 0DE0              ___fltol@sign1 0079                      ?_main 0070  
          __end_of___fltol 066E            __end_of___lwdiv 1000                      i1l121 0E22  
                    i1l113 0E0A                      i1l114 0E0D                      i1l115 0E13  
                    i1l116 0E14                      i1l124 0DBF                      i1l117 0E1A  
                    i1l133 07EA                      i1l118 0E1B                      i1l119 0E21  
                    i1l127 0D4D                      i1l145 0E00                      i1l139 0F81  
                    i1l180 0E2E                      i1l342 03BC                      i1l191 0D75  
                    i1l183 0E40            __end_of___lwmod 0FBC                      i1l532 066D  
                    i1l189 0D6D                      i1l542 066D                      i1l199 0493  
                    i1l618 0FFF                      i1l539 0658                      i1l628 0FBB  
                    _TMR1H 000F                      _TMR1L 000E    __size_of_Lcd_Set_Cursor 0052  
                    _TRISA 0085                      _TRISC 0087                      _TRISD 0088  
                    u85_20 0E06                      u85_21 0E05                      u93_25 0F5C  
                    u86_20 0E11                      u78_20 0D64                      u86_21 0E10  
                    u78_21 0D63                      u87_20 0E18                      u87_21 0E17  
                    u88_20 0E1F                      u88_21 0E1E                ?i1_Lcd_Port 0070  
       __size_ofi1_Lcd_Cmd 001A            __end_of_dpowers 0810               ?_expandeTela 0070  
                    pclath 000A                      status 0003                      wtemp0 007E  
          __end_of_sprintf 03BD           __end_of_Lcd_Init 0743           __end_of_Lcd_Port 0F4B  
          __initialization 0015               __end_of_main 06E0               ?_recolheTela 0070  
                   ??_main 00B2         __size_of_Lcd_Clear 000D           __end_of_TrataINT 0E4D  
        ??_controleEstufas 00AC                     _ADRESH 001E                     _ADRESL 009E  
                   u101_20 0FC4                     u101_21 0FC3                     u110_20 0F9A  
                   u110_21 0F99                     i1l2010 0E32                     i1l2012 0E33  
                   i1l2020 0E3F                     i1l2004 0E23                     u102_25 0FC8  
                   i1l2014 0E38                     i1l2006 0E27                     u103_20 0FD6  
                   u111_20 0FA4                     i1l2016 0E3B                     i1l2008 0E28  
                   u103_21 0FD5                     u111_21 0FA3                     i1l2018 0E3D  
                   i1l2044 0302                     u111_25 0FA0                     i1l1600 07C8  
                   i1l1520 0FBE                     u120_20 031D                     u120_21 031C  
                   i1l1602 07D9                     i1l1610 0DE4                     i1l1530 0FD6  
                   i1l1522 0FC4                     i1l1460 0E06                     i1l1604 07DE  
                   i1l1612 0DEF                     i1l1700 0608                     i1l1532 0FE7  
                   i1l1524 0FC7                     i1l1540 0FFB                     i1l1620 02E3  
                   u104_25 0FD7                     u112_25 0FAB                     i1l1462 0E11  
                   i1l1606 07E4                     i1l1614 0DF5                     i1l1710 062C  
                   i1l1702 061D                     i1l1534 0FED                     i1l1526 0FCE  
                   i1l1518 0FBC                     i1l1550 0F92                     i1l1630 030D  
                   i1l1622 02EA                     i1l1464 0E18                     i1l1480 0F56  
                   i1l1608 0DE1                     i1l1704 061E                     i1l1536 0FEE  
                   u105_20 0FE7                     i1l1528 0FD2                     u113_20 0FB7  
                   i1l1560 0FB1                     i1l1552 0F96                     i1l1544 0F82  
                   u121_20 0343                     i1l1640 0326                     i1l1632 0315  
                   i1l1624 02EF                     i1l1616 02D8                     i1l1392 0D5E  
                   u105_21 0FE6                     u113_21 0FB6                     u121_21 0342  
                   i1l1466 0E1F                     i1l1458 0E02                     i1l1570 0DB0  
                   i1l1490 0F71                     i1l1482 0F59                     i1l1706 0626  
                   i1l1538 0FF5                     i1l1554 0F9A                     i1l1546 0F88  
                   i1l1562 0FB7                     i1l1650 0344                     i1l1634 0319  
                   i1l1618 02DD                     i1l1394 0D64                     i1l1572 0DB3  
                   i1l1492 0F77                     i1l1484 0F67                     i1l1724 064D  
                   i1l1716 0634                     i1l1708 0628                     i1l1556 0FA4  
                   i1l1548 0F8B                     i1l1660 0364                     i1l1652 034E  
                   i1l1636 031D                     i1l1628 02F0                     u105_25 0FE3  
                   u121_25 033F                     i1l1574 0DBC                     i1l1566 0DA7  
                   i1l1590 079F                     i1l1494 0F7A                     i1l1486 0F6A  
                   i1l1478 0F4C                     i1l1726 065D                     i1l1718 0646  
                   i1l1558 0FAA                     i1l1662 0392                     i1l1654 0354  
                   i1l1646 0328                     i1l1638 0321                     i1l1670 03B8  
                   i1l1568 0DAA                     i1l1592 07B0                     u114_20 079F  
                   i1l1496 0F7E                     i1l1488 0F6E                     i1l1728 0662  
                   u130_20 05FF                     i1l1664 0399                     i1l1656 035B  
                   u122_20 034E                     u114_21 079E                     u130_21 05FE  
                   u122_21 034D                     i1l1586 0D41                     i1l1594 07B5  
                   i1l1666 039D                     i1l1658 035F                     i1l1596 07BB  
                   i1l1588 079A                     i1l1668 03A6                     u106_25 0FEF  
                   i1l1598 07C2                     i1l1694 05F4                     u131_20 0616  
                   i1l1696 05FF                     u107_20 0FFB                     u123_20 0354  
                   u107_21 0FFA                     u123_21 0353                     i1l1970 03BD  
                   i1l1980 043E                     i1l1972 03CA                     u115_25 07A7  
                   u131_25 0611                     i1l1982 0483                     i1l1974 0426  
                   u116_20 07C8                     u132_20 062C                     u108_20 0F88  
                   u124_20 03A6                     i1l1976 042C                     u116_21 07C7  
                   u132_21 062B                     u108_21 0F87                     u124_21 03A5  
                   i1l1978 0436                     u133_20 0633                     u125_20 03B8  
                   u133_21 0632                     u125_21 03B7                     u117_25 07D0  
                   u109_25 0F8C                     u118_20 0E00                     u118_21 0DFF  
                   u134_25 0635                     u135_20 0645                     u119_20 02E3  
                   u135_21 0644                     u119_21 02E2                     u136_20 064C  
                   u136_21 064B                     u137_25 064F                     u138_20 065D  
                   u138_21 065C                     u139_20 0662                     u139_21 0661  
                   u173_27 0432                     u166_20 0E27                     u166_21 0E26  
                   u174_27 048F                     u167_20 0E32                     u167_21 0E31  
                   u175_27 0F6C                     u176_27 0F7C                     u177_27 0DB7  
                ??_Lcd_Cmd 00A1                     _TMR1IF 0060    __size_of_Lcd_Write_Char 0037  
         __end_of___xxtofl 0550        __size_ofi1_Lcd_Port 0022          __end_ofi1_Lcd_Cmd 0DC0  
                   ___flge 0550                  ??___fltol 0074                  ??___lwdiv 0074  
                ??___lwmod 007C           __end_of_estufaUm 0F15              ?_estufaQuatro 0070  
                   saved_w 007E                  ??_sprintf 0029       __size_of_atualizaLCD 00D7  
          Lcd_Set_Cursor@a 0077            Lcd_Set_Cursor@b 0074            Lcd_Set_Cursor@y 0079  
          Lcd_Set_Cursor@z 0078                 ___flge@ff1 00A0                 ___flge@ff2 00A4  
             ___xxtofl@arg 00AA               ___xxtofl@exp 00A9               ___xxtofl@val 00A0  
  __end_of__initialization 0033          __end_of_Lcd_Clear 0D4E       __size_of_lerSensores 0165  
               ___fltol@f1 0070       __size_of_iniciaPinos 0056             __pcstackCOMMON 0070  
             __pidataBANK0 0D4E             ??_estufaQuatro 00AC             _Lcd_Set_Cursor 0799  
           _OPTION_REGbits 0081                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
               __pbssBANK0 0069                 __pbssBANK1 00B5     __size_ofi1_recolheTela 0018  
     __size_of_expandeTela 0018                 __pmaintext 066E                    ?___flge 00A0  
                ?_TrataINT 0070                 __pintentry 0004  __size_of_Lcd_Write_String 0021  
   __end_of_Lcd_Set_Cursor 07EB       __size_of_recolheTela 0018                  ?___xxtofl 00A0  
             ??i1_Lcd_Port 0070                 ??_Lcd_Init 00A4                 ??_Lcd_Port 00A0  
               __stringtab 0800             _Lcd_Write_Char 0F4B                    _Lcd_Cmd 0DC0  
                ?_estufaUm 0070         __end_ofi1_Lcd_Port 0E23                 ??_TrataINT 0055  
          __size_of___flge 00A4                    ___fltol 05F4                    ___lwdiv 0FBC  
                  ___lwmod 0F82              i1_recolheTela 0D5E            _controleEstufas 019C  
          ?_Lcd_Set_Cursor 0074                    __ptext1 0D8E                    __ptext2 0037  
                  __ptext3 0494                    __ptext4 0743                    __ptext5 0D76  
                  __ptext6 019C                    __ptext7 0EE2                    __ptext8 0E7E  
                  __ptext9 0E4D                 _estufaDois 0EAF                  _T1CONbits 0010  
               _estufaTres 0E7E                    _dpowers 0806                 ??___xxtofl 00A4  
                  _sprintf 02D5     __end_of_Lcd_Write_Char 0F82       end_of_initialization 0033  
               ??_estufaUm 00AC       __end_of_estufaQuatro 0E7E                  Lcd_Port@a 00A0  
           ?i1_recolheTela 0070                  i1_Lcd_Cmd 0DA6                  _PORTBbits 0006  
                _PORTCbits 0007                  _PORTDbits 0008         atualizaLCD@buffer0 0035  
       atualizaLCD@buffer1 0045              ___xxtofl@sign 00A8                  _TRISBbits 0086  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0078          Lcd_Write_String@i 0076  
  __end_of_controleEstufas 02D5                  _Lcd_Clear 0D41             __end_of___flge 05F4  
               ?i1_Lcd_Cmd 0070           _Lcd_Write_String 0DE0                ?_estufaDois 0070  
              ?_estufaTres 0070              ??_atualizaLCD 0033        start_initialization 0015  
        __size_of_Lcd_Init 0063              ??_lerSensores 00AE          __size_of_Lcd_Port 0036  
            ??_iniciaPinos 00A0            ??i1_recolheTela 0070                 ?_Lcd_Clear 0070  
                 ??___flge 00A8                 init_fetch0 07EB                __pdataBANK0 0059  
          Lcd_Write_Char@a 0074            Lcd_Write_Char@y 0073          __size_of_TrataINT 002A  
                ___latbits 0002              __pcstackBANK0 0020              __pcstackBANK1 00A0  
        __size_of___xxtofl 00BC              ??_expandeTela 00A0      __size_of_estufaQuatro 0031  
      __end_of_atualizaLCD 0494                   ?_Lcd_Cmd 0070                sprintf@flag 002D  
              sprintf@prec 002E        __size_of_estufaDois 0033        __size_of_estufaTres 0031  
      __end_of_lerSensores 019C           ___lwdiv@dividend 0072          __size_of_estufaUm 0033  
         ?_controleEstufas 0070           ??_Lcd_Set_Cursor 0075              ??_recolheTela 00A0  
      __end_of_iniciaPinos 0799                   ?___fltol 0070                   ?___lwdiv 0070  
                 ?___lwmod 0078                ??i1_Lcd_Cmd 0071                  __pstrings 0800  
             _estufaQuatro 0E4D           ___lwdiv@quotient 0075                   ?_sprintf 0020  
        interrupt_function 0004        __end_of_expandeTela 0D8E                   _PIE1bits 008C  
                 Lcd_Cmd@a 00A3                ??_Lcd_Clear 0074                 _ADCON0bits 001F  
              __stringbase 0805                 _ADCON1bits 009F        __end_of_recolheTela 0DA6  
         ??_Lcd_Write_Char 0071                _atualizaLCD 03BD                   _Lcd_Init 06E0  
                 _Lcd_Port 0F15                _lerSensores 0037   __end_of_Lcd_Write_String 0E01  
         __size_of_Lcd_Cmd 0020                _iniciaPinos 0743                   _TrataINT 0E23  
         __size_of___fltol 007A           __size_of___lwdiv 0044           __size_of___lwmod 003A  
       __end_of__stringtab 0806               ??_estufaDois 00AC               ??_estufaTres 00AC  
               sprintf@val 002F                   ___xxtofl 0494            ___lwdiv@divisor 0070  
          ___lwdiv@counter 0077                   __ptext10 0EAF                   __ptext11 0550  
                 __ptext20 0FBC                   __ptext12 06E0                   __ptext21 05F4  
                 __ptext13 0DC0                   __ptext22 0DE0                   __ptext14 0F15  
                 __ptext23 0F4B                   __ptext15 0E23                   __ptext24 0799  
                 __ptext16 0D5E                   __ptext25 0D41                   __ptext17 03BD  
                 __ptext26 0DA6                   __ptext18 02D5                   __ptext27 0E01  
                 __ptext19 0F82                _expandeTela 0D76           __size_of_sprintf 00E8  
            __size_of_main 0072                   _estufaUm 0EE2                i1Lcd_Port@a 0070  
       __end_of_estufaDois 0EE2         __end_of_estufaTres 0EAF                _recolheTela 0D8E  
               _INTCONbits 000B                   init_ram0 07EF               _valor_entry0 00B9  
             _valor_entry1 0069               _valor_entry2 00B5               _valor_entry3 0065  
             _valor_entry4 0061               _valor_entry5 005D               _valor_entry6 0059  
       Lcd_Write_Char@temp 0072                   intlevel1 0000                  sprintf@ap 002C  
                sprintf@sp 0031           ___lwmod@dividend 007A                 i1Lcd_Cmd@a 0073  
                stringcode 0800      __end_ofi1_recolheTela 0D76         Lcd_Set_Cursor@temp 007A  
                 sprintf@c 0032                   sprintf@f 0020            ___lwmod@divisor 0078  
          ___lwmod@counter 007D                 i1_Lcd_Port 0E01                   stringdir 0800  
                 stringtab 0800  
