

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat May 08 20:16:40 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	intentry,global,class=CODE,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    46                           	dabs	1,0x7E,2
    47  0000                     
    48                           ; Version 2.20
    49                           ; Generated 12/02/2020 GMT
    50                           ; 
    51                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC16F877A Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     	;# 
    83  0001                     	;# 
    84  0002                     	;# 
    85  0003                     	;# 
    86  0004                     	;# 
    87  0005                     	;# 
    88  0006                     	;# 
    89  0007                     	;# 
    90  0008                     	;# 
    91  0009                     	;# 
    92  000A                     	;# 
    93  000B                     	;# 
    94  000C                     	;# 
    95  000D                     	;# 
    96  000E                     	;# 
    97  000E                     	;# 
    98  000F                     	;# 
    99  0010                     	;# 
   100  0011                     	;# 
   101  0012                     	;# 
   102  0013                     	;# 
   103  0014                     	;# 
   104  0015                     	;# 
   105  0015                     	;# 
   106  0016                     	;# 
   107  0017                     	;# 
   108  0018                     	;# 
   109  0019                     	;# 
   110  001A                     	;# 
   111  001B                     	;# 
   112  001B                     	;# 
   113  001C                     	;# 
   114  001D                     	;# 
   115  001E                     	;# 
   116  001F                     	;# 
   117  0081                     	;# 
   118  0085                     	;# 
   119  0086                     	;# 
   120  0087                     	;# 
   121  0088                     	;# 
   122  0089                     	;# 
   123  008C                     	;# 
   124  008D                     	;# 
   125  008E                     	;# 
   126  0091                     	;# 
   127  0092                     	;# 
   128  0093                     	;# 
   129  0094                     	;# 
   130  0098                     	;# 
   131  0099                     	;# 
   132  009C                     	;# 
   133  009D                     	;# 
   134  009E                     	;# 
   135  009F                     	;# 
   136  010C                     	;# 
   137  010D                     	;# 
   138  010E                     	;# 
   139  010F                     	;# 
   140  018C                     	;# 
   141  018D                     	;# 
   142  0000                     	;# 
   143  0001                     	;# 
   144  0002                     	;# 
   145  0003                     	;# 
   146  0004                     	;# 
   147  0005                     	;# 
   148  0006                     	;# 
   149  0007                     	;# 
   150  0008                     	;# 
   151  0009                     	;# 
   152  000A                     	;# 
   153  000B                     	;# 
   154  000C                     	;# 
   155  000D                     	;# 
   156  000E                     	;# 
   157  000E                     	;# 
   158  000F                     	;# 
   159  0010                     	;# 
   160  0011                     	;# 
   161  0012                     	;# 
   162  0013                     	;# 
   163  0014                     	;# 
   164  0015                     	;# 
   165  0015                     	;# 
   166  0016                     	;# 
   167  0017                     	;# 
   168  0018                     	;# 
   169  0019                     	;# 
   170  001A                     	;# 
   171  001B                     	;# 
   172  001B                     	;# 
   173  001C                     	;# 
   174  001D                     	;# 
   175  001E                     	;# 
   176  001F                     	;# 
   177  0081                     	;# 
   178  0085                     	;# 
   179  0086                     	;# 
   180  0087                     	;# 
   181  0088                     	;# 
   182  0089                     	;# 
   183  008C                     	;# 
   184  008D                     	;# 
   185  008E                     	;# 
   186  0091                     	;# 
   187  0092                     	;# 
   188  0093                     	;# 
   189  0094                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  018C                     	;# 
   201  018D                     	;# 
   202                           
   203                           	psect	idataBANK0
   204  0DF5                     __pidataBANK0:
   205                           
   206                           ;initializer for _valor_entry5
   207  0DF5  3400               	retlw	0
   208  0DF6  3480               	retlw	128
   209  0DF7  3480               	retlw	128
   210  0DF8  3443               	retlw	67
   211                           
   212                           ;initializer for _valor_entry4
   213  0DF9  3400               	retlw	0
   214  0DFA  3480               	retlw	128
   215  0DFB  3480               	retlw	128
   216  0DFC  3443               	retlw	67
   217                           
   218                           ;initializer for _valor_entry3
   219  0DFD  3400               	retlw	0
   220  0DFE  3480               	retlw	128
   221  0DFF  3480               	retlw	128
   222  0E00  3443               	retlw	67
   223                           
   224                           	psect	idataBANK1
   225  07FC                     __pidataBANK1:	
   226                           ;initializer for _valor_entry6
   227                           
   228  07FC  3400               	retlw	0
   229  07FD  3480               	retlw	128
   230  07FE  3480               	retlw	128
   231  07FF  3443               	retlw	67
   232                           
   233                           	psect	strings
   234  0800                     __pstrings:
   235  0800                     stringtab:
   236  0800                     __stringtab:
   237  0800                     stringcode:	
   238                           ;	String table - string pointers are 1 byte each
   239                           
   240  0800                     stringdir:
   241  0800  3008               	movlw	high stringdir
   242  0801  008A               	movwf	10
   243  0802  0804               	movf	4,w
   244  0803  0A84               	incf	4,f
   245  0804  0782               	addwf	2,f
   246  0805                     __stringbase:
   247  0805  3400               	retlw	0
   248  0806                     __end_of__stringtab:
   249  0806                     _dpowers:
   250  0806  3401               	retlw	1
   251  0807  3400               	retlw	0
   252  0808  340A               	retlw	10
   253  0809  3400               	retlw	0
   254  080A  3464               	retlw	100
   255  080B  3400               	retlw	0
   256  080C  34E8               	retlw	232
   257  080D  3403               	retlw	3
   258  080E  3410               	retlw	16
   259  080F  3427               	retlw	39
   260  0810                     __end_of_dpowers:
   261  0008                     _PORTDbits	set	8
   262  0007                     _PORTCbits	set	7
   263  0006                     _PORTBbits	set	6
   264  0010                     _T1CONbits	set	16
   265  000B                     _INTCONbits	set	11
   266  001E                     _ADRESH	set	30
   267  001F                     _ADCON0bits	set	31
   268  000F                     _TMR1H	set	15
   269  000E                     _TMR1L	set	14
   270  003F                     _RC7	set	63
   271  003C                     _RC4	set	60
   272  003D                     _RC5	set	61
   273  003E                     _RC6	set	62
   274  0047                     _RD7	set	71
   275  003A                     _RC2	set	58
   276  003B                     _RC3	set	59
   277  0040                     _RD0	set	64
   278  0046                     _RD6	set	70
   279  0042                     _RD2	set	66
   280  0039                     _RC1	set	57
   281  0044                     _RD4	set	68
   282  0060                     _TMR1IF	set	96
   283  0030                     _RB0	set	48
   284  0059                     _INTF	set	89
   285  002C                     _RA4	set	44
   286  0033                     _RB3	set	51
   287  0038                     _RC0	set	56
   288  0041                     _RD1	set	65
   289  0043                     _RD3	set	67
   290  0045                     _RD5	set	69
   291  0031                     _RB1	set	49
   292  0032                     _RB2	set	50
   293  0037                     _RB7	set	55
   294  0036                     _RB6	set	54
   295  0035                     _RB5	set	53
   296  0034                     _RB4	set	52
   297  009E                     _ADRESL	set	158
   298  009F                     _ADCON1bits	set	159
   299  0088                     _TRISD	set	136
   300  0087                     _TRISC	set	135
   301  0085                     _TRISA	set	133
   302  008C                     _PIE1bits	set	140
   303  0086                     _TRISBbits	set	134
   304  0081                     _OPTION_REGbits	set	129
   305  0810                     STR_1:
   306  0810  3451               	retlw	81	;'Q'
   307  0811  343A               	retlw	58	;':'
   308  0812  3425               	retlw	37	;'%'
   309  0813  3469               	retlw	105	;'i'
   310  0814  3420               	retlw	32	;' '
   311  0815  3443               	retlw	67	;'C'
   312  0816  343A               	retlw	58	;':'
   313  0817  3425               	retlw	37	;'%'
   314  0818  3469               	retlw	105	;'i'
   315  0819  3420               	retlw	32	;' '
   316  081A  344C               	retlw	76	;'L'
   317  081B  343A               	retlw	58	;':'
   318  081C  3425               	retlw	37	;'%'
   319  081D  3469               	retlw	105	;'i'
   320  081E  3420               	retlw	32	;' '
   321  081F  3453               	retlw	83	;'S'
   322  0820  3431               	retlw	49	;'1'
   323  0821  343A               	retlw	58	;':'
   324  0822  3425               	retlw	37	;'%'
   325  0823  3469               	retlw	105	;'i'
   326  0824  3400               	retlw	0
   327  0825                     STR_2:
   328  0825  3453               	retlw	83	;'S'
   329  0826  3432               	retlw	50	;'2'
   330  0827  343A               	retlw	58	;':'
   331  0828  3425               	retlw	37	;'%'
   332  0829  3469               	retlw	105	;'i'
   333  082A  3420               	retlw	32	;' '
   334  082B  3453               	retlw	83	;'S'
   335  082C  3433               	retlw	51	;'3'
   336  082D  343A               	retlw	58	;':'
   337  082E  3425               	retlw	37	;'%'
   338  082F  3469               	retlw	105	;'i'
   339  0830  3420               	retlw	32	;' '
   340  0831  3453               	retlw	83	;'S'
   341  0832  3434               	retlw	52	;'4'
   342  0833  343A               	retlw	58	;':'
   343  0834  3425               	retlw	37	;'%'
   344  0835  3469               	retlw	105	;'i'
   345  0836  3420               	retlw	32	;' '
   346  0837  3400               	retlw	0
   347                           
   348                           	psect	cinit
   349  000F                     start_initialization:	
   350                           ; #config settings
   351                           
   352  000F                     __initialization:
   353                           
   354                           ; Initialize objects allocated to BANK1
   355  000F  1383               	bcf	3,7	;select IRP bank0
   356  0010  30CA               	movlw	low (__pdataBANK1+4)
   357  0011  00FD               	movwf	btemp+-1
   358  0012  3007               	movlw	high __pidataBANK1
   359  0013  00FE               	movwf	btemp
   360  0014  30FC               	movlw	low __pidataBANK1
   361  0015  00FF               	movwf	btemp+1
   362  0016  30C6               	movlw	low __pdataBANK1
   363  0017  0084               	movwf	4
   364  0018  120A  158A  2612  120A  118A  	fcall	init_ram0
   365                           
   366                           ; Initialize objects allocated to BANK0
   367  001D  3050               	movlw	low (__pdataBANK0+12)
   368  001E  00FD               	movwf	btemp+-1
   369  001F  300D               	movlw	high __pidataBANK0
   370  0020  00FE               	movwf	btemp
   371  0021  30F5               	movlw	low __pidataBANK0
   372  0022  00FF               	movwf	btemp+1
   373  0023  3044               	movlw	low __pdataBANK0
   374  0024  0084               	movwf	4
   375  0025  120A  158A  2612  120A  118A  	fcall	init_ram0
   376                           
   377                           ; Clear objects allocated to BANK1
   378  002A  1683               	bsf	3,5	;RP0=1, select bank1
   379  002B  1303               	bcf	3,6	;RP1=0, select bank1
   380  002C  01C0               	clrf	__pbssBANK1& (0+127)
   381  002D  01C1               	clrf	(__pbssBANK1+1)& (0+127)
   382  002E  01C2               	clrf	(__pbssBANK1+2)& (0+127)
   383  002F  01C3               	clrf	(__pbssBANK1+3)& (0+127)
   384  0030  01C4               	clrf	(__pbssBANK1+4)& (0+127)
   385  0031  01C5               	clrf	(__pbssBANK1+5)& (0+127)
   386                           
   387                           ; Clear objects allocated to BANK0
   388  0032  1283               	bcf	3,5	;RP0=0, select bank0
   389  0033  1303               	bcf	3,6	;RP1=0, select bank0
   390  0034  01D0               	clrf	__pbssBANK0& (0+127)
   391  0035  01D1               	clrf	(__pbssBANK0+1)& (0+127)
   392  0036  01D2               	clrf	(__pbssBANK0+2)& (0+127)
   393  0037  01D3               	clrf	(__pbssBANK0+3)& (0+127)
   394                           
   395                           ; Clear objects allocated to COMMON
   396  0038  01F6               	clrf	__pbssCOMMON& (0+127)
   397  0039  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   398  003A  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   399  003B  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   400  003C                     end_of_initialization:	
   401                           ;End of C runtime variable initialization code
   402                           
   403  003C                     __end_of__initialization:
   404  003C  0183               	clrf	3
   405  003D  120A  118A  2E26   	ljmp	_main	;jump to C main() function
   406                           
   407                           	psect	bssCOMMON
   408  0076                     __pbssCOMMON:
   409  0076                     _valor_entry0:
   410  0076                     	ds	4
   411                           
   412                           	psect	bssBANK0
   413  0050                     __pbssBANK0:
   414  0050                     _valor_entry1:
   415  0050                     	ds	4
   416                           
   417                           	psect	dataBANK0
   418  0044                     __pdataBANK0:
   419  0044                     _valor_entry5:
   420  0044                     	ds	4
   421  0048                     _valor_entry4:
   422  0048                     	ds	4
   423  004C                     _valor_entry3:
   424  004C                     	ds	4
   425                           
   426                           	psect	bssBANK1
   427  00C0                     __pbssBANK1:
   428  00C0                     _valor_entry2:
   429  00C0                     	ds	4
   430  00C4                     _sentido:
   431  00C4                     	ds	2
   432                           
   433                           	psect	dataBANK1
   434  00C6                     __pdataBANK1:
   435  00C6                     _valor_entry6:
   436  00C6                     	ds	4
   437                           
   438                           	psect	inittext
   439  0E0E                     init_fetch0:	
   440                           ;	Called with low address in FSR and high address in W
   441                           
   442  0E0E  087E               	movf	btemp,w
   443  0E0F  008A               	movwf	10
   444  0E10  087F               	movf	btemp+1,w
   445  0E11  0082               	movwf	2
   446  0E12                     init_ram0:	
   447                           ;Called with:
   448                           ;	high address of idata address in btemp 
   449                           ;	low address of idata address in btemp+1 
   450                           ;	low address of data in FSR
   451                           ;	high address + 1 of data in btemp-1
   452                           
   453  0E12  120A  158A  260E  120A  158A  	fcall	init_fetch0
   454  0E17  0080               	movwf	0
   455  0E18  0A84               	incf	4,f
   456  0E19  0804               	movf	4,w
   457  0E1A  067D               	xorwf	btemp+-1,w
   458  0E1B  1903               	btfsc	3,2
   459  0E1C  3400               	retlw	0
   460  0E1D  0AFF               	incf	btemp+1,f
   461  0E1E  1903               	btfsc	3,2
   462  0E1F  0AFE               	incf	btemp,f
   463  0E20  2E12               	goto	init_ram0
   464                           
   465                           	psect	cstackBANK1
   466  00A0                     __pcstackBANK1:
   467  00A0                     atualizaLCD@buffer0:
   468                           
   469                           ; 16 bytes @ 0x0
   470  00A0                     	ds	16
   471  00B0                     atualizaLCD@buffer1:
   472                           
   473                           ; 16 bytes @ 0x10
   474  00B0                     	ds	16
   475                           
   476                           	psect	cstackCOMMON
   477  0070                     __pcstackCOMMON:
   478  0070                     ?_iniciaPinos:
   479  0070                     ?_lerSensores:	
   480                           ; 1 bytes @ 0x0
   481                           
   482  0070                     ?_atualizaLCD:	
   483                           ; 1 bytes @ 0x0
   484                           
   485  0070                     ?_recolheTela:	
   486                           ; 1 bytes @ 0x0
   487                           
   488  0070                     ?_expandeTela:	
   489                           ; 1 bytes @ 0x0
   490                           
   491  0070                     ?_paraTela:	
   492                           ; 1 bytes @ 0x0
   493                           
   494  0070                     ?_controleEstufas:	
   495                           ; 1 bytes @ 0x0
   496                           
   497  0070                     ?_estufaUm:	
   498                           ; 1 bytes @ 0x0
   499                           
   500  0070                     ?_estufaDois:	
   501                           ; 1 bytes @ 0x0
   502                           
   503  0070                     ?_estufaTres:	
   504                           ; 1 bytes @ 0x0
   505                           
   506  0070                     ?_estufaQuatro:	
   507                           ; 1 bytes @ 0x0
   508                           
   509  0070                     ?_Lcd_Port:	
   510                           ; 1 bytes @ 0x0
   511                           
   512  0070                     ?_Lcd_Cmd:	
   513                           ; 1 bytes @ 0x0
   514                           
   515  0070                     ?_Lcd_Clear:	
   516                           ; 1 bytes @ 0x0
   517                           
   518  0070                     ?_Lcd_Init:	
   519                           ; 1 bytes @ 0x0
   520                           
   521  0070                     ?_Lcd_Write_Char:	
   522                           ; 1 bytes @ 0x0
   523                           
   524  0070                     ?_Lcd_Write_String:	
   525                           ; 1 bytes @ 0x0
   526                           
   527  0070                     ?_TrataINT:	
   528                           ; 1 bytes @ 0x0
   529                           
   530  0070                     ?i1_recolheTela:	
   531                           ; 1 bytes @ 0x0
   532                           
   533  0070                     ??i1_recolheTela:	
   534                           ; 1 bytes @ 0x0
   535                           
   536  0070                     ?_main:	
   537                           ; 1 bytes @ 0x0
   538                           
   539                           
   540                           ; 2 bytes @ 0x0
   541  0070                     	ds	2
   542  0072                     ??_TrataINT:
   543                           
   544                           ; 1 bytes @ 0x2
   545  0072                     	ds	2
   546  0074                     ??_iniciaPinos:
   547  0074                     ??_recolheTela:	
   548                           ; 1 bytes @ 0x4
   549                           
   550  0074                     ??_expandeTela:	
   551                           ; 1 bytes @ 0x4
   552                           
   553  0074                     ??_paraTela:	
   554                           ; 1 bytes @ 0x4
   555                           
   556  0074                     ??_controleEstufas:	
   557                           ; 1 bytes @ 0x4
   558                           
   559  0074                     ??_estufaUm:	
   560                           ; 1 bytes @ 0x4
   561                           
   562  0074                     ??_estufaDois:	
   563                           ; 1 bytes @ 0x4
   564                           
   565  0074                     ??_estufaTres:	
   566                           ; 1 bytes @ 0x4
   567                           
   568  0074                     ??_estufaQuatro:	
   569                           ; 1 bytes @ 0x4
   570                           
   571  0074                     ??_Lcd_Port:	
   572                           ; 1 bytes @ 0x4
   573                           
   574  0074                     ??___lwdiv:	
   575                           ; 1 bytes @ 0x4
   576                           
   577  0074                     Lcd_Port@a:	
   578                           ; 1 bytes @ 0x4
   579                           
   580  0074                     ___fltol@sign1:	
   581                           ; 1 bytes @ 0x4
   582                           
   583                           
   584                           ; 1 bytes @ 0x4
   585  0074                     	ds	1
   586  0075                     ??_Lcd_Write_Char:
   587  0075                     ??___lwmod:	
   588                           ; 1 bytes @ 0x5
   589                           
   590  0075                     Lcd_Cmd@a:	
   591                           ; 1 bytes @ 0x5
   592                           
   593  0075                     ___fltol@exp1:	
   594                           ; 1 bytes @ 0x5
   595                           
   596                           
   597                           ; 1 bytes @ 0x5
   598  0075                     	ds	1
   599  0076                     ??_Lcd_Clear:
   600                           
   601                           	psect	cstackBANK0
   602  0020                     __pcstackBANK0:	
   603                           ; 1 bytes @ 0x6
   604                           
   605  0020                     ?___flge:
   606  0020                     ??_Lcd_Cmd:	
   607                           ; 1 bit 
   608                           
   609  0020                     ?___lwdiv:	
   610                           ; 1 bytes @ 0x0
   611                           
   612  0020                     ?___fltol:	
   613                           ; 2 bytes @ 0x0
   614                           
   615  0020                     ?___xxtofl:	
   616                           ; 4 bytes @ 0x0
   617                           
   618  0020                     Lcd_Write_Char@temp:	
   619                           ; 4 bytes @ 0x0
   620                           
   621  0020                     ___lwdiv@divisor:	
   622                           ; 1 bytes @ 0x0
   623                           
   624  0020                     ___flge@ff1:	
   625                           ; 2 bytes @ 0x0
   626                           
   627  0020                     ___fltol@f1:	
   628                           ; 4 bytes @ 0x0
   629                           
   630  0020                     ___xxtofl@val:	
   631                           ; 4 bytes @ 0x0
   632                           
   633                           
   634                           ; 4 bytes @ 0x0
   635  0020                     	ds	1
   636  0021                     Lcd_Write_Char@y:
   637                           
   638                           ; 1 bytes @ 0x1
   639  0021                     	ds	1
   640  0022                     ?_Lcd_Set_Cursor:
   641  0022                     ??_Lcd_Init:	
   642                           ; 1 bytes @ 0x2
   643                           
   644  0022                     Lcd_Set_Cursor@b:	
   645                           ; 1 bytes @ 0x2
   646                           
   647  0022                     Lcd_Write_Char@a:	
   648                           ; 1 bytes @ 0x2
   649                           
   650  0022                     ___lwdiv@dividend:	
   651                           ; 1 bytes @ 0x2
   652                           
   653                           
   654                           ; 2 bytes @ 0x2
   655  0022                     	ds	1
   656  0023                     ??_Lcd_Set_Cursor:
   657  0023                     ??_Lcd_Write_String:	
   658                           ; 1 bytes @ 0x3
   659                           
   660                           
   661                           ; 1 bytes @ 0x3
   662  0023                     	ds	1
   663  0024                     ??___fltol:
   664  0024                     ??___xxtofl:	
   665                           ; 1 bytes @ 0x4
   666                           
   667  0024                     ___lwdiv@counter:	
   668                           ; 1 bytes @ 0x4
   669                           
   670  0024                     Lcd_Write_String@i:	
   671                           ; 1 bytes @ 0x4
   672                           
   673  0024                     ___flge@ff2:	
   674                           ; 2 bytes @ 0x4
   675                           
   676                           
   677                           ; 4 bytes @ 0x4
   678  0024                     	ds	1
   679  0025                     Lcd_Set_Cursor@a:
   680  0025                     ___lwdiv@quotient:	
   681                           ; 1 bytes @ 0x5
   682                           
   683                           
   684                           ; 2 bytes @ 0x5
   685  0025                     	ds	1
   686  0026                     Lcd_Set_Cursor@z:
   687  0026                     Lcd_Write_String@a:	
   688                           ; 1 bytes @ 0x6
   689                           
   690                           
   691                           ; 1 bytes @ 0x6
   692  0026                     	ds	1
   693  0027                     ?___lwmod:
   694  0027                     Lcd_Set_Cursor@y:	
   695                           ; 2 bytes @ 0x7
   696                           
   697  0027                     ___lwmod@divisor:	
   698                           ; 1 bytes @ 0x7
   699                           
   700                           
   701                           ; 2 bytes @ 0x7
   702  0027                     	ds	1
   703  0028                     ??___flge:
   704  0028                     Lcd_Set_Cursor@temp:	
   705                           ; 1 bytes @ 0x8
   706                           
   707  0028                     ___xxtofl@sign:	
   708                           ; 1 bytes @ 0x8
   709                           
   710                           
   711                           ; 1 bytes @ 0x8
   712  0028                     	ds	1
   713  0029                     ___xxtofl@exp:
   714  0029                     ___lwmod@dividend:	
   715                           ; 1 bytes @ 0x9
   716                           
   717                           
   718                           ; 2 bytes @ 0x9
   719  0029                     	ds	1
   720  002A                     ___xxtofl@arg:
   721                           
   722                           ; 4 bytes @ 0xA
   723  002A                     	ds	1
   724  002B                     ___lwmod@counter:
   725                           
   726                           ; 1 bytes @ 0xB
   727  002B                     	ds	1
   728  002C                     ?_sprintf:
   729  002C                     sprintf@f:	
   730                           ; 2 bytes @ 0xC
   731                           
   732                           
   733                           ; 1 bytes @ 0xC
   734  002C                     	ds	2
   735  002E                     ??_lerSensores:
   736                           
   737                           ; 1 bytes @ 0xE
   738  002E                     	ds	7
   739  0035                     ??_sprintf:
   740                           
   741                           ; 1 bytes @ 0x15
   742  0035                     	ds	3
   743  0038                     sprintf@ap:
   744                           
   745                           ; 1 bytes @ 0x18
   746  0038                     	ds	1
   747  0039                     sprintf@flag:
   748                           
   749                           ; 1 bytes @ 0x19
   750  0039                     	ds	1
   751  003A                     sprintf@prec:
   752                           
   753                           ; 1 bytes @ 0x1A
   754  003A                     	ds	1
   755  003B                     sprintf@val:
   756                           
   757                           ; 2 bytes @ 0x1B
   758  003B                     	ds	2
   759  003D                     sprintf@sp:
   760                           
   761                           ; 1 bytes @ 0x1D
   762  003D                     	ds	1
   763  003E                     sprintf@c:
   764                           
   765                           ; 1 bytes @ 0x1E
   766  003E                     	ds	1
   767  003F                     ??_atualizaLCD:
   768                           
   769                           ; 1 bytes @ 0x1F
   770  003F                     	ds	2
   771  0041                     ??_main:
   772                           
   773                           ; 1 bytes @ 0x21
   774  0041                     	ds	3
   775                           
   776                           	psect	maintext
   777  0626                     __pmaintext:	
   778 ;;
   779 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   780 ;;
   781 ;; *************** function _main *****************
   782 ;; Defined at:
   783 ;;		line 44 in file "main.c"
   784 ;; Parameters:    Size  Location     Type
   785 ;;		None
   786 ;; Auto vars:     Size  Location     Type
   787 ;;		None
   788 ;; Return value:  Size  Location     Type
   789 ;;                  2  175[None  ] int 
   790 ;; Registers used:
   791 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   792 ;; Tracked objects:
   793 ;;		On entry : B00/0
   794 ;;		On exit  : 0/0
   795 ;;		Unchanged: 0/0
   796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   797 ;;      Params:         0       0       0       0       0
   798 ;;      Locals:         0       0       0       0       0
   799 ;;      Temps:          0       3       0       0       0
   800 ;;      Totals:         0       3       0       0       0
   801 ;;Total ram usage:        3 bytes
   802 ;; Hardware stack levels required when called: 6
   803 ;; This function calls:
   804 ;;		_Lcd_Init
   805 ;;		___fltol
   806 ;;		_atualizaLCD
   807 ;;		_controleEstufas
   808 ;;		_expandeTela
   809 ;;		_iniciaPinos
   810 ;;		_lerSensores
   811 ;;		_paraTela
   812 ;;		_recolheTela
   813 ;; This function is called by:
   814 ;;		Startup code after reset
   815 ;; This function uses a non-reentrant model
   816 ;;
   817                           
   818                           
   819                           ;psect for function _main
   820  0626                     _main:
   821  0626                     l2391:	
   822                           ;incstack = 0
   823                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   824                           
   825                           
   826                           ;main.c: 46:     iniciaPinos();
   827  0626  120A  118A  2748  120A  118A  	fcall	_iniciaPinos
   828                           
   829                           ;main.c: 47:     Lcd_Init();
   830  062B  120A  118A  268D  120A  118A  	fcall	_Lcd_Init
   831  0630                     l176:	
   832                           ;main.c: 48:     while(1)
   833                           
   834                           
   835                           ;main.c: 49:     {;main.c: 50:         lerSensores();
   836  0630  120A  118A  2040  120A  118A  	fcall	_lerSensores
   837  0635                     l2393:
   838                           
   839                           ;main.c: 51:         atualizaLCD();
   840  0635  120A  118A  2187  120A  118A  	fcall	_atualizaLCD
   841  063A                     l2395:
   842                           
   843                           ;main.c: 53:         RD5 = 1;
   844  063A  1283               	bcf	3,5	;RP0=0, select bank0
   845  063B  1303               	bcf	3,6	;RP1=0, select bank0
   846  063C  1688               	bsf	8,5	;volatile
   847  063D                     l2397:
   848                           
   849                           ;main.c: 54:         RD3 = 1;
   850  063D  1588               	bsf	8,3	;volatile
   851  063E                     l2399:
   852                           
   853                           ;main.c: 55:         RD1 = 1;
   854  063E  1488               	bsf	8,1	;volatile
   855  063F                     l2401:
   856                           
   857                           ;main.c: 56:         RC0 = 1;
   858  063F  1407               	bsf	7,0	;volatile
   859  0640                     l2403:
   860                           
   861                           ;main.c: 58:         if((int)valor_entry0 >= 192)
   862  0640  0879               	movf	_valor_entry0+3,w
   863  0641  00A3               	movwf	___fltol@f1+3
   864  0642  0878               	movf	_valor_entry0+2,w
   865  0643  00A2               	movwf	___fltol@f1+2
   866  0644  0877               	movf	_valor_entry0+1,w
   867  0645  00A1               	movwf	___fltol@f1+1
   868  0646  0876               	movf	_valor_entry0,w
   869  0647  00A0               	movwf	___fltol@f1
   870  0648  120A  118A  25AA  120A  118A  	fcall	___fltol
   871  064D  1283               	bcf	3,5	;RP0=0, select bank0
   872  064E  1303               	bcf	3,6	;RP1=0, select bank0
   873  064F  0821               	movf	?___fltol+1,w
   874  0650  3A80               	xorlw	128
   875  0651  00FF               	movwf	btemp+1
   876  0652  3080               	movlw	128
   877  0653  027F               	subwf	btemp+1,w
   878  0654  1D03               	skipz
   879  0655  2E58               	goto	u2265
   880  0656  30C0               	movlw	192
   881  0657  0220               	subwf	?___fltol,w
   882  0658                     u2265:
   883  0658  1C03               	skipc
   884  0659  2E5B               	goto	u2261
   885  065A  2E5C               	goto	u2260
   886  065B                     u2261:
   887  065B  2E62               	goto	l2407
   888  065C                     u2260:
   889  065C                     l2405:
   890                           
   891                           ;main.c: 59:         {;main.c: 61:             recolheTela();
   892  065C  120A  158A  2663  120A  118A  	fcall	_recolheTela
   893                           
   894                           ;main.c: 62:         }
   895  0661  2E67               	goto	l2409
   896  0662                     l2407:
   897                           
   898                           ;main.c: 64:         {;main.c: 66:             expandeTela();
   899  0662  120A  158A  2642  120A  118A  	fcall	_expandeTela
   900  0667                     l2409:
   901                           
   902                           ;main.c: 69:         if((RB3 == 1)|| (RA4 == 1))
   903  0667  1283               	bcf	3,5	;RP0=0, select bank0
   904  0668  1303               	bcf	3,6	;RP1=0, select bank0
   905  0669  1986               	btfsc	6,3	;volatile
   906  066A  2E6C               	goto	u2271
   907  066B  2E6D               	goto	u2270
   908  066C                     u2271:
   909  066C  2E71               	goto	l2413
   910  066D                     u2270:
   911  066D                     l2411:
   912  066D  1E05               	btfss	5,4	;volatile
   913  066E  2E70               	goto	u2281
   914  066F  2E71               	goto	u2280
   915  0670                     u2281:
   916  0670  2E76               	goto	l2415
   917  0671                     u2280:
   918  0671                     l2413:
   919                           
   920                           ;main.c: 70:         {;main.c: 71:             paraTela();
   921  0671  120A  158A  25EA  120A  118A  	fcall	_paraTela
   922  0676                     l2415:
   923                           
   924                           ;main.c: 76:         controleEstufas();
   925  0676  120A  118A  2368  120A  118A  	fcall	_controleEstufas
   926                           
   927                           ;main.c: 78:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   928  067B  3006               	movlw	6
   929  067C  1283               	bcf	3,5	;RP0=0, select bank0
   930  067D  1303               	bcf	3,6	;RP1=0, select bank0
   931  067E  00C3               	movwf	??_main+2
   932  067F  3013               	movlw	19
   933  0680  00C2               	movwf	??_main+1
   934  0681  30AD               	movlw	173
   935  0682  00C1               	movwf	??_main
   936  0683                     u2297:
   937  0683  0BC1               	decfsz	??_main,f
   938  0684  2E83               	goto	u2297
   939  0685  0BC2               	decfsz	??_main+1,f
   940  0686  2E83               	goto	u2297
   941  0687  0BC3               	decfsz	??_main+2,f
   942  0688  2E83               	goto	u2297
   943  0689  2E30               	goto	l176
   944  068A  120A  118A  280C   	ljmp	start
   945  068D                     __end_of_main:
   946                           
   947                           	psect	text1
   948  0E63                     __ptext1:	
   949 ;; *************** function _recolheTela *****************
   950 ;; Defined at:
   951 ;;		line 186 in file "main.c"
   952 ;; Parameters:    Size  Location     Type
   953 ;;		None
   954 ;; Auto vars:     Size  Location     Type
   955 ;;		None
   956 ;; Return value:  Size  Location     Type
   957 ;;                  1    wreg      void 
   958 ;; Registers used:
   959 ;;		wreg
   960 ;; Tracked objects:
   961 ;;		On entry : 0/0
   962 ;;		On exit  : 0/0
   963 ;;		Unchanged: 0/0
   964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   965 ;;      Params:         0       0       0       0       0
   966 ;;      Locals:         0       0       0       0       0
   967 ;;      Temps:          2       0       0       0       0
   968 ;;      Totals:         2       0       0       0       0
   969 ;;Total ram usage:        2 bytes
   970 ;; Hardware stack levels used: 1
   971 ;; Hardware stack levels required when called: 2
   972 ;; This function calls:
   973 ;;		Nothing
   974 ;; This function is called by:
   975 ;;		_main
   976 ;; This function uses a non-reentrant model
   977 ;;
   978                           
   979                           
   980                           ;psect for function _recolheTela
   981  0E63                     _recolheTela:
   982  0E63                     l1355:	
   983                           ;incstack = 0
   984                           ; Regs used in _recolheTela: [wreg]
   985                           
   986                           
   987                           ;main.c: 188:     if(RA4 == 0)
   988  0E63  1283               	bcf	3,5	;RP0=0, select bank0
   989  0E64  1303               	bcf	3,6	;RP1=0, select bank0
   990  0E65  1A05               	btfsc	5,4	;volatile
   991  0E66  2E68               	goto	u661
   992  0E67  2E69               	goto	u660
   993  0E68                     u661:
   994  0E68  2E7B               	goto	l204
   995  0E69                     u660:
   996  0E69                     l1357:
   997                           
   998                           ;main.c: 189:     {;main.c: 191:         RD4 = 0;
   999  0E69  1208               	bcf	8,4	;volatile
  1000                           
  1001                           ;main.c: 192:         RC1 = 1;
  1002  0E6A  1487               	bsf	7,1	;volatile
  1003                           
  1004                           ;main.c: 193:         RD2 = 0;
  1005  0E6B  1108               	bcf	8,2	;volatile
  1006                           
  1007                           ;main.c: 194:         RD6 = 1;
  1008  0E6C  1708               	bsf	8,6	;volatile
  1009                           
  1010                           ;main.c: 196:         RD0 = 0;
  1011  0E6D  1008               	bcf	8,0	;volatile
  1012                           
  1013                           ;main.c: 197:         RC3 = 1;
  1014  0E6E  1587               	bsf	7,3	;volatile
  1015                           
  1016                           ;main.c: 198:         RC2 = 0;
  1017  0E6F  1107               	bcf	7,2	;volatile
  1018                           
  1019                           ;main.c: 199:         RD7 = 1;
  1020  0E70  1788               	bsf	8,7	;volatile
  1021  0E71                     l1359:
  1022                           
  1023                           ;main.c: 201:         _delay((unsigned long)((15)*(4000000/4000.0)));
  1024  0E71  3014               	movlw	20
  1025  0E72  00F5               	movwf	??_recolheTela+1
  1026  0E73  3079               	movlw	121
  1027  0E74  00F4               	movwf	??_recolheTela
  1028  0E75                     u2307:
  1029  0E75  0BF4               	decfsz	??_recolheTela,f
  1030  0E76  2E75               	goto	u2307
  1031  0E77  0BF5               	decfsz	??_recolheTela+1,f
  1032  0E78  2E75               	goto	u2307
  1033  0E79  2E7A               	nop2
  1034                           
  1035                           ;main.c: 202:     }
  1036  0E7A  2E83               	goto	l206
  1037  0E7B                     l204:	
  1038                           ;main.c: 203:     else
  1039                           
  1040                           
  1041                           ;main.c: 204:     {;main.c: 206:         RD4 = 1;
  1042  0E7B  1608               	bsf	8,4	;volatile
  1043                           
  1044                           ;main.c: 207:         RC1 = 1;
  1045  0E7C  1487               	bsf	7,1	;volatile
  1046                           
  1047                           ;main.c: 208:         RD2 = 1;
  1048  0E7D  1508               	bsf	8,2	;volatile
  1049                           
  1050                           ;main.c: 209:         RD6 = 1;
  1051  0E7E  1708               	bsf	8,6	;volatile
  1052                           
  1053                           ;main.c: 211:         RD0 = 1;
  1054  0E7F  1408               	bsf	8,0	;volatile
  1055                           
  1056                           ;main.c: 212:         RC3 = 1;
  1057  0E80  1587               	bsf	7,3	;volatile
  1058                           
  1059                           ;main.c: 213:         RC2 = 1;
  1060  0E81  1507               	bsf	7,2	;volatile
  1061                           
  1062                           ;main.c: 214:         RD7 = 1;
  1063  0E82  1788               	bsf	8,7	;volatile
  1064  0E83                     l206:
  1065  0E83  0008               	return
  1066  0E84                     __end_of_recolheTela:
  1067                           
  1068                           	psect	text2
  1069  0DEA                     __ptext2:	
  1070 ;; *************** function _paraTela *****************
  1071 ;; Defined at:
  1072 ;;		line 102 in file "main.c"
  1073 ;; Parameters:    Size  Location     Type
  1074 ;;		None
  1075 ;; Auto vars:     Size  Location     Type
  1076 ;;		None
  1077 ;; Return value:  Size  Location     Type
  1078 ;;                  1    wreg      void 
  1079 ;; Registers used:
  1080 ;;		None
  1081 ;; Tracked objects:
  1082 ;;		On entry : 0/0
  1083 ;;		On exit  : 0/0
  1084 ;;		Unchanged: 0/0
  1085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1086 ;;      Params:         0       0       0       0       0
  1087 ;;      Locals:         0       0       0       0       0
  1088 ;;      Temps:          0       0       0       0       0
  1089 ;;      Totals:         0       0       0       0       0
  1090 ;;Total ram usage:        0 bytes
  1091 ;; Hardware stack levels used: 1
  1092 ;; Hardware stack levels required when called: 2
  1093 ;; This function calls:
  1094 ;;		Nothing
  1095 ;; This function is called by:
  1096 ;;		_main
  1097 ;; This function uses a non-reentrant model
  1098 ;;
  1099                           
  1100                           
  1101                           ;psect for function _paraTela
  1102  0DEA                     _paraTela:
  1103  0DEA                     l1367:	
  1104                           ;incstack = 0
  1105                           ; Regs used in _paraTela: []
  1106                           
  1107                           
  1108                           ;main.c: 104:     RD4 = 1;
  1109  0DEA  1283               	bcf	3,5	;RP0=0, select bank0
  1110  0DEB  1303               	bcf	3,6	;RP1=0, select bank0
  1111  0DEC  1608               	bsf	8,4	;volatile
  1112                           
  1113                           ;main.c: 105:     RC1 = 1;
  1114  0DED  1487               	bsf	7,1	;volatile
  1115                           
  1116                           ;main.c: 106:     RD2 = 1;
  1117  0DEE  1508               	bsf	8,2	;volatile
  1118                           
  1119                           ;main.c: 107:     RD6 = 1;
  1120  0DEF  1708               	bsf	8,6	;volatile
  1121                           
  1122                           ;main.c: 109:     RD0 = 1;
  1123  0DF0  1408               	bsf	8,0	;volatile
  1124                           
  1125                           ;main.c: 110:     RC3 = 1;
  1126  0DF1  1587               	bsf	7,3	;volatile
  1127                           
  1128                           ;main.c: 111:     RC2 = 1;
  1129  0DF2  1507               	bsf	7,2	;volatile
  1130                           
  1131                           ;main.c: 112:     RD7 = 1;
  1132  0DF3  1788               	bsf	8,7	;volatile
  1133  0DF4                     l198:
  1134  0DF4  0008               	return
  1135  0DF5                     __end_of_paraTela:
  1136                           
  1137                           	psect	text3
  1138  0040                     __ptext3:	
  1139 ;; *************** function _lerSensores *****************
  1140 ;; Defined at:
  1141 ;;		line 114 in file "main.c"
  1142 ;; Parameters:    Size  Location     Type
  1143 ;;		None
  1144 ;; Auto vars:     Size  Location     Type
  1145 ;;		None
  1146 ;; Return value:  Size  Location     Type
  1147 ;;                  1    wreg      void 
  1148 ;; Registers used:
  1149 ;;		wreg, status,2, status,0, pclath, cstack
  1150 ;; Tracked objects:
  1151 ;;		On entry : 0/0
  1152 ;;		On exit  : 0/0
  1153 ;;		Unchanged: 0/0
  1154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1155 ;;      Params:         0       0       0       0       0
  1156 ;;      Locals:         0       0       0       0       0
  1157 ;;      Temps:          0       4       0       0       0
  1158 ;;      Totals:         0       4       0       0       0
  1159 ;;Total ram usage:        4 bytes
  1160 ;; Hardware stack levels used: 1
  1161 ;; Hardware stack levels required when called: 3
  1162 ;; This function calls:
  1163 ;;		___xxtofl
  1164 ;; This function is called by:
  1165 ;;		_main
  1166 ;; This function uses a non-reentrant model
  1167 ;;
  1168                           
  1169                           
  1170                           ;psect for function _lerSensores
  1171  0040                     _lerSensores:
  1172  0040                     l2265:	
  1173                           ;incstack = 0
  1174                           ; Regs used in _lerSensores: [wreg+status,2+status,0+pclath+cstack]
  1175                           
  1176                           
  1177                           ;main.c: 118:     ADCON0bits.CHS0 = 0;
  1178  0040  1283               	bcf	3,5	;RP0=0, select bank0
  1179  0041  1303               	bcf	3,6	;RP1=0, select bank0
  1180  0042  119F               	bcf	31,3	;volatile
  1181                           
  1182                           ;main.c: 119:     ADCON0bits.CHS1 = 0;
  1183  0043  121F               	bcf	31,4	;volatile
  1184                           
  1185                           ;main.c: 120:     ADCON0bits.CHS2 = 0;
  1186  0044  129F               	bcf	31,5	;volatile
  1187                           
  1188                           ;main.c: 122:     ADCON0bits.GO = 1;
  1189  0045  151F               	bsf	31,2	;volatile
  1190  0046                     l2267:
  1191                           
  1192                           ;main.c: 123:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  1193  0046  300F               	movlw	15
  1194  0047  1283               	bcf	3,5	;RP0=0, select bank0
  1195  0048  1303               	bcf	3,6	;RP1=0, select bank0
  1196  0049  00AE               	movwf	??_lerSensores
  1197  004A                     u2317:
  1198  004A  0BAE               	decfsz	??_lerSensores,f
  1199  004B  284A               	goto	u2317
  1200  004C  284D               	nop2
  1201  004D                     l2269:
  1202                           
  1203                           ;main.c: 124:     valor_entry0 = ADRESH;
  1204  004D  1283               	bcf	3,5	;RP0=0, select bank0
  1205  004E  1303               	bcf	3,6	;RP1=0, select bank0
  1206  004F  081E               	movf	30,w	;volatile
  1207  0050  00AE               	movwf	??_lerSensores
  1208  0051  01AF               	clrf	??_lerSensores+1
  1209  0052  01B0               	clrf	??_lerSensores+2
  1210  0053  01B1               	clrf	??_lerSensores+3
  1211  0054  0831               	movf	??_lerSensores+3,w
  1212  0055  00A3               	movwf	___xxtofl@val+3
  1213  0056  0830               	movf	??_lerSensores+2,w
  1214  0057  00A2               	movwf	___xxtofl@val+2
  1215  0058  082F               	movf	??_lerSensores+1,w
  1216  0059  00A1               	movwf	___xxtofl@val+1
  1217  005A  082E               	movf	??_lerSensores,w
  1218  005B  00A0               	movwf	___xxtofl@val
  1219  005C  3000               	movlw	0
  1220  005D  120A  118A  244A  120A  118A  	fcall	___xxtofl
  1221  0062  1283               	bcf	3,5	;RP0=0, select bank0
  1222  0063  1303               	bcf	3,6	;RP1=0, select bank0
  1223  0064  0823               	movf	?___xxtofl+3,w
  1224  0065  00F9               	movwf	_valor_entry0+3
  1225  0066  0822               	movf	?___xxtofl+2,w
  1226  0067  00F8               	movwf	_valor_entry0+2
  1227  0068  0821               	movf	?___xxtofl+1,w
  1228  0069  00F7               	movwf	_valor_entry0+1
  1229  006A  0820               	movf	?___xxtofl,w
  1230  006B  00F6               	movwf	_valor_entry0
  1231  006C                     l2271:
  1232                           
  1233                           ;main.c: 128:     ADCON0bits.CHS0 = 1;
  1234  006C  159F               	bsf	31,3	;volatile
  1235  006D                     l2273:
  1236                           
  1237                           ;main.c: 129:     ADCON0bits.CHS1 = 0;
  1238  006D  121F               	bcf	31,4	;volatile
  1239  006E                     l2275:
  1240                           
  1241                           ;main.c: 130:     ADCON0bits.CHS2 = 0;
  1242  006E  129F               	bcf	31,5	;volatile
  1243  006F                     l2277:
  1244                           
  1245                           ;main.c: 132:     ADCON0bits.GO = 1;
  1246  006F  151F               	bsf	31,2	;volatile
  1247  0070                     l2279:
  1248                           
  1249                           ;main.c: 133:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  1250  0070  300F               	movlw	15
  1251  0071  1283               	bcf	3,5	;RP0=0, select bank0
  1252  0072  1303               	bcf	3,6	;RP1=0, select bank0
  1253  0073  00AE               	movwf	??_lerSensores
  1254  0074                     u2327:
  1255  0074  0BAE               	decfsz	??_lerSensores,f
  1256  0075  2874               	goto	u2327
  1257  0076  2877               	nop2
  1258                           
  1259                           ;main.c: 134:     valor_entry1 = ADRESH;
  1260  0077  1283               	bcf	3,5	;RP0=0, select bank0
  1261  0078  1303               	bcf	3,6	;RP1=0, select bank0
  1262  0079  081E               	movf	30,w	;volatile
  1263  007A  00AE               	movwf	??_lerSensores
  1264  007B  01AF               	clrf	??_lerSensores+1
  1265  007C  01B0               	clrf	??_lerSensores+2
  1266  007D  01B1               	clrf	??_lerSensores+3
  1267  007E  0831               	movf	??_lerSensores+3,w
  1268  007F  00A3               	movwf	___xxtofl@val+3
  1269  0080  0830               	movf	??_lerSensores+2,w
  1270  0081  00A2               	movwf	___xxtofl@val+2
  1271  0082  082F               	movf	??_lerSensores+1,w
  1272  0083  00A1               	movwf	___xxtofl@val+1
  1273  0084  082E               	movf	??_lerSensores,w
  1274  0085  00A0               	movwf	___xxtofl@val
  1275  0086  3000               	movlw	0
  1276  0087  120A  118A  244A  120A  118A  	fcall	___xxtofl
  1277  008C  1283               	bcf	3,5	;RP0=0, select bank0
  1278  008D  1303               	bcf	3,6	;RP1=0, select bank0
  1279  008E  0823               	movf	?___xxtofl+3,w
  1280  008F  00D3               	movwf	_valor_entry1+3
  1281  0090  0822               	movf	?___xxtofl+2,w
  1282  0091  00D2               	movwf	_valor_entry1+2
  1283  0092  0821               	movf	?___xxtofl+1,w
  1284  0093  00D1               	movwf	_valor_entry1+1
  1285  0094  0820               	movf	?___xxtofl,w
  1286  0095  00D0               	movwf	_valor_entry1
  1287  0096                     l2281:
  1288                           
  1289                           ;main.c: 138:     ADCON0bits.CHS0 = 0;
  1290  0096  119F               	bcf	31,3	;volatile
  1291  0097                     l2283:
  1292                           
  1293                           ;main.c: 139:     ADCON0bits.CHS1 = 1;
  1294  0097  161F               	bsf	31,4	;volatile
  1295  0098                     l2285:
  1296                           
  1297                           ;main.c: 140:     ADCON0bits.CHS2 = 0;
  1298  0098  129F               	bcf	31,5	;volatile
  1299  0099                     l2287:
  1300                           
  1301                           ;main.c: 142:     ADCON0bits.GO = 1;
  1302  0099  151F               	bsf	31,2	;volatile
  1303  009A                     l2289:
  1304                           
  1305                           ;main.c: 143:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  1306  009A  300F               	movlw	15
  1307  009B  1283               	bcf	3,5	;RP0=0, select bank0
  1308  009C  1303               	bcf	3,6	;RP1=0, select bank0
  1309  009D  00AE               	movwf	??_lerSensores
  1310  009E                     u2337:
  1311  009E  0BAE               	decfsz	??_lerSensores,f
  1312  009F  289E               	goto	u2337
  1313  00A0  28A1               	nop2
  1314  00A1                     l2291:
  1315                           
  1316                           ;main.c: 144:     valor_entry2 = ADRESH;
  1317  00A1  1283               	bcf	3,5	;RP0=0, select bank0
  1318  00A2  1303               	bcf	3,6	;RP1=0, select bank0
  1319  00A3  081E               	movf	30,w	;volatile
  1320  00A4  00AE               	movwf	??_lerSensores
  1321  00A5  01AF               	clrf	??_lerSensores+1
  1322  00A6  01B0               	clrf	??_lerSensores+2
  1323  00A7  01B1               	clrf	??_lerSensores+3
  1324  00A8  0831               	movf	??_lerSensores+3,w
  1325  00A9  00A3               	movwf	___xxtofl@val+3
  1326  00AA  0830               	movf	??_lerSensores+2,w
  1327  00AB  00A2               	movwf	___xxtofl@val+2
  1328  00AC  082F               	movf	??_lerSensores+1,w
  1329  00AD  00A1               	movwf	___xxtofl@val+1
  1330  00AE  082E               	movf	??_lerSensores,w
  1331  00AF  00A0               	movwf	___xxtofl@val
  1332  00B0  3000               	movlw	0
  1333  00B1  120A  118A  244A  120A  118A  	fcall	___xxtofl
  1334  00B6  1283               	bcf	3,5	;RP0=0, select bank0
  1335  00B7  1303               	bcf	3,6	;RP1=0, select bank0
  1336  00B8  0823               	movf	?___xxtofl+3,w
  1337  00B9  1683               	bsf	3,5	;RP0=1, select bank1
  1338  00BA  1303               	bcf	3,6	;RP1=0, select bank1
  1339  00BB  00C3               	movwf	(_valor_entry2+3)^(0+128)
  1340  00BC  1283               	bcf	3,5	;RP0=0, select bank0
  1341  00BD  1303               	bcf	3,6	;RP1=0, select bank0
  1342  00BE  0822               	movf	?___xxtofl+2,w
  1343  00BF  1683               	bsf	3,5	;RP0=1, select bank1
  1344  00C0  1303               	bcf	3,6	;RP1=0, select bank1
  1345  00C1  00C2               	movwf	(_valor_entry2+2)^(0+128)
  1346  00C2  1283               	bcf	3,5	;RP0=0, select bank0
  1347  00C3  1303               	bcf	3,6	;RP1=0, select bank0
  1348  00C4  0821               	movf	?___xxtofl+1,w
  1349  00C5  1683               	bsf	3,5	;RP0=1, select bank1
  1350  00C6  1303               	bcf	3,6	;RP1=0, select bank1
  1351  00C7  00C1               	movwf	(_valor_entry2+1)^(0+128)
  1352  00C8  1283               	bcf	3,5	;RP0=0, select bank0
  1353  00C9  1303               	bcf	3,6	;RP1=0, select bank0
  1354  00CA  0820               	movf	?___xxtofl,w
  1355  00CB  1683               	bsf	3,5	;RP0=1, select bank1
  1356  00CC  1303               	bcf	3,6	;RP1=0, select bank1
  1357  00CD  00C0               	movwf	_valor_entry2^(0+128)
  1358  00CE                     l2293:
  1359                           
  1360                           ;main.c: 147:     ADCON0bits.CHS0 = 1;
  1361  00CE  1283               	bcf	3,5	;RP0=0, select bank0
  1362  00CF  1303               	bcf	3,6	;RP1=0, select bank0
  1363  00D0  159F               	bsf	31,3	;volatile
  1364  00D1                     l2295:
  1365                           
  1366                           ;main.c: 148:     ADCON0bits.CHS1 = 1;
  1367  00D1  161F               	bsf	31,4	;volatile
  1368  00D2                     l2297:
  1369                           
  1370                           ;main.c: 149:     ADCON0bits.CHS2 = 0;
  1371  00D2  129F               	bcf	31,5	;volatile
  1372  00D3                     l2299:
  1373                           
  1374                           ;main.c: 151:     ADCON0bits.GO = 1;
  1375  00D3  151F               	bsf	31,2	;volatile
  1376                           
  1377                           ;main.c: 152:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  1378  00D4  300F               	movlw	15
  1379  00D5  1283               	bcf	3,5	;RP0=0, select bank0
  1380  00D6  1303               	bcf	3,6	;RP1=0, select bank0
  1381  00D7  00AE               	movwf	??_lerSensores
  1382  00D8                     u2347:
  1383  00D8  0BAE               	decfsz	??_lerSensores,f
  1384  00D9  28D8               	goto	u2347
  1385  00DA  28DB               	nop2
  1386  00DB                     l2301:
  1387                           
  1388                           ;main.c: 153:     valor_entry3 = ADRESH;
  1389  00DB  1283               	bcf	3,5	;RP0=0, select bank0
  1390  00DC  1303               	bcf	3,6	;RP1=0, select bank0
  1391  00DD  081E               	movf	30,w	;volatile
  1392  00DE  00AE               	movwf	??_lerSensores
  1393  00DF  01AF               	clrf	??_lerSensores+1
  1394  00E0  01B0               	clrf	??_lerSensores+2
  1395  00E1  01B1               	clrf	??_lerSensores+3
  1396  00E2  0831               	movf	??_lerSensores+3,w
  1397  00E3  00A3               	movwf	___xxtofl@val+3
  1398  00E4  0830               	movf	??_lerSensores+2,w
  1399  00E5  00A2               	movwf	___xxtofl@val+2
  1400  00E6  082F               	movf	??_lerSensores+1,w
  1401  00E7  00A1               	movwf	___xxtofl@val+1
  1402  00E8  082E               	movf	??_lerSensores,w
  1403  00E9  00A0               	movwf	___xxtofl@val
  1404  00EA  3000               	movlw	0
  1405  00EB  120A  118A  244A  120A  118A  	fcall	___xxtofl
  1406  00F0  1283               	bcf	3,5	;RP0=0, select bank0
  1407  00F1  1303               	bcf	3,6	;RP1=0, select bank0
  1408  00F2  0823               	movf	?___xxtofl+3,w
  1409  00F3  00CF               	movwf	_valor_entry3+3
  1410  00F4  0822               	movf	?___xxtofl+2,w
  1411  00F5  00CE               	movwf	_valor_entry3+2
  1412  00F6  0821               	movf	?___xxtofl+1,w
  1413  00F7  00CD               	movwf	_valor_entry3+1
  1414  00F8  0820               	movf	?___xxtofl,w
  1415  00F9  00CC               	movwf	_valor_entry3
  1416  00FA                     l2303:
  1417                           
  1418                           ;main.c: 156:     ADCON0bits.CHS0 = 0;
  1419  00FA  119F               	bcf	31,3	;volatile
  1420  00FB                     l2305:
  1421                           
  1422                           ;main.c: 157:     ADCON0bits.CHS1 = 0;
  1423  00FB  121F               	bcf	31,4	;volatile
  1424  00FC                     l2307:
  1425                           
  1426                           ;main.c: 158:     ADCON0bits.CHS2 = 1;
  1427  00FC  169F               	bsf	31,5	;volatile
  1428  00FD                     l2309:
  1429                           
  1430                           ;main.c: 160:     ADCON0bits.GO = 1;
  1431  00FD  151F               	bsf	31,2	;volatile
  1432  00FE                     l2311:
  1433                           
  1434                           ;main.c: 161:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  1435  00FE  300F               	movlw	15
  1436  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  1437  0100  1303               	bcf	3,6	;RP1=0, select bank0
  1438  0101  00AE               	movwf	??_lerSensores
  1439  0102                     u2357:
  1440  0102  0BAE               	decfsz	??_lerSensores,f
  1441  0103  2902               	goto	u2357
  1442  0104  2905               	nop2
  1443                           
  1444                           ;main.c: 162:     valor_entry4 = ADRESH;
  1445  0105  1283               	bcf	3,5	;RP0=0, select bank0
  1446  0106  1303               	bcf	3,6	;RP1=0, select bank0
  1447  0107  081E               	movf	30,w	;volatile
  1448  0108  00AE               	movwf	??_lerSensores
  1449  0109  01AF               	clrf	??_lerSensores+1
  1450  010A  01B0               	clrf	??_lerSensores+2
  1451  010B  01B1               	clrf	??_lerSensores+3
  1452  010C  0831               	movf	??_lerSensores+3,w
  1453  010D  00A3               	movwf	___xxtofl@val+3
  1454  010E  0830               	movf	??_lerSensores+2,w
  1455  010F  00A2               	movwf	___xxtofl@val+2
  1456  0110  082F               	movf	??_lerSensores+1,w
  1457  0111  00A1               	movwf	___xxtofl@val+1
  1458  0112  082E               	movf	??_lerSensores,w
  1459  0113  00A0               	movwf	___xxtofl@val
  1460  0114  3000               	movlw	0
  1461  0115  120A  118A  244A  120A  118A  	fcall	___xxtofl
  1462  011A  1283               	bcf	3,5	;RP0=0, select bank0
  1463  011B  1303               	bcf	3,6	;RP1=0, select bank0
  1464  011C  0823               	movf	?___xxtofl+3,w
  1465  011D  00CB               	movwf	_valor_entry4+3
  1466  011E  0822               	movf	?___xxtofl+2,w
  1467  011F  00CA               	movwf	_valor_entry4+2
  1468  0120  0821               	movf	?___xxtofl+1,w
  1469  0121  00C9               	movwf	_valor_entry4+1
  1470  0122  0820               	movf	?___xxtofl,w
  1471  0123  00C8               	movwf	_valor_entry4
  1472  0124                     l2313:
  1473                           
  1474                           ;main.c: 166:     ADCON0bits.CHS0 = 1;
  1475  0124  159F               	bsf	31,3	;volatile
  1476  0125                     l2315:
  1477                           
  1478                           ;main.c: 167:     ADCON0bits.CHS1 = 0;
  1479  0125  121F               	bcf	31,4	;volatile
  1480  0126                     l2317:
  1481                           
  1482                           ;main.c: 168:     ADCON0bits.CHS2 = 1;
  1483  0126  169F               	bsf	31,5	;volatile
  1484  0127                     l2319:
  1485                           
  1486                           ;main.c: 170:     ADCON0bits.GO = 1;
  1487  0127  151F               	bsf	31,2	;volatile
  1488  0128                     l2321:
  1489                           
  1490                           ;main.c: 171:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  1491  0128  300F               	movlw	15
  1492  0129  1283               	bcf	3,5	;RP0=0, select bank0
  1493  012A  1303               	bcf	3,6	;RP1=0, select bank0
  1494  012B  00AE               	movwf	??_lerSensores
  1495  012C                     u2367:
  1496  012C  0BAE               	decfsz	??_lerSensores,f
  1497  012D  292C               	goto	u2367
  1498  012E  292F               	nop2
  1499  012F                     l2323:
  1500                           
  1501                           ;main.c: 172:     valor_entry5 = ADRESH;
  1502  012F  1283               	bcf	3,5	;RP0=0, select bank0
  1503  0130  1303               	bcf	3,6	;RP1=0, select bank0
  1504  0131  081E               	movf	30,w	;volatile
  1505  0132  00AE               	movwf	??_lerSensores
  1506  0133  01AF               	clrf	??_lerSensores+1
  1507  0134  01B0               	clrf	??_lerSensores+2
  1508  0135  01B1               	clrf	??_lerSensores+3
  1509  0136  0831               	movf	??_lerSensores+3,w
  1510  0137  00A3               	movwf	___xxtofl@val+3
  1511  0138  0830               	movf	??_lerSensores+2,w
  1512  0139  00A2               	movwf	___xxtofl@val+2
  1513  013A  082F               	movf	??_lerSensores+1,w
  1514  013B  00A1               	movwf	___xxtofl@val+1
  1515  013C  082E               	movf	??_lerSensores,w
  1516  013D  00A0               	movwf	___xxtofl@val
  1517  013E  3000               	movlw	0
  1518  013F  120A  118A  244A  120A  118A  	fcall	___xxtofl
  1519  0144  1283               	bcf	3,5	;RP0=0, select bank0
  1520  0145  1303               	bcf	3,6	;RP1=0, select bank0
  1521  0146  0823               	movf	?___xxtofl+3,w
  1522  0147  00C7               	movwf	_valor_entry5+3
  1523  0148  0822               	movf	?___xxtofl+2,w
  1524  0149  00C6               	movwf	_valor_entry5+2
  1525  014A  0821               	movf	?___xxtofl+1,w
  1526  014B  00C5               	movwf	_valor_entry5+1
  1527  014C  0820               	movf	?___xxtofl,w
  1528  014D  00C4               	movwf	_valor_entry5
  1529  014E                     l2325:
  1530                           
  1531                           ;main.c: 177:     ADCON0bits.CHS0 = 0;
  1532  014E  119F               	bcf	31,3	;volatile
  1533  014F                     l2327:
  1534                           
  1535                           ;main.c: 178:     ADCON0bits.CHS1 = 1;
  1536  014F  161F               	bsf	31,4	;volatile
  1537  0150                     l2329:
  1538                           
  1539                           ;main.c: 179:     ADCON0bits.CHS2 = 1;
  1540  0150  169F               	bsf	31,5	;volatile
  1541  0151                     l2331:
  1542                           
  1543                           ;main.c: 181:     ADCON0bits.GO = 1;
  1544  0151  151F               	bsf	31,2	;volatile
  1545                           
  1546                           ;main.c: 182:     _delay((unsigned long)((10)*(4000000/4000000.0)));
  1547  0152  3002               	movlw	2
  1548  0153  1283               	bcf	3,5	;RP0=0, select bank0
  1549  0154  1303               	bcf	3,6	;RP1=0, select bank0
  1550  0155  00AE               	movwf	??_lerSensores
  1551  0156                     u2377:
  1552  0156  0BAE               	decfsz	??_lerSensores,f
  1553  0157  2956               	goto	u2377
  1554  0158  0000               	nop
  1555  0159                     l2333:
  1556                           
  1557                           ;main.c: 183:     valor_entry6 = ADRESH;
  1558  0159  1283               	bcf	3,5	;RP0=0, select bank0
  1559  015A  1303               	bcf	3,6	;RP1=0, select bank0
  1560  015B  081E               	movf	30,w	;volatile
  1561  015C  00AE               	movwf	??_lerSensores
  1562  015D  01AF               	clrf	??_lerSensores+1
  1563  015E  01B0               	clrf	??_lerSensores+2
  1564  015F  01B1               	clrf	??_lerSensores+3
  1565  0160  0831               	movf	??_lerSensores+3,w
  1566  0161  00A3               	movwf	___xxtofl@val+3
  1567  0162  0830               	movf	??_lerSensores+2,w
  1568  0163  00A2               	movwf	___xxtofl@val+2
  1569  0164  082F               	movf	??_lerSensores+1,w
  1570  0165  00A1               	movwf	___xxtofl@val+1
  1571  0166  082E               	movf	??_lerSensores,w
  1572  0167  00A0               	movwf	___xxtofl@val
  1573  0168  3000               	movlw	0
  1574  0169  120A  118A  244A  120A  118A  	fcall	___xxtofl
  1575  016E  1283               	bcf	3,5	;RP0=0, select bank0
  1576  016F  1303               	bcf	3,6	;RP1=0, select bank0
  1577  0170  0823               	movf	?___xxtofl+3,w
  1578  0171  1683               	bsf	3,5	;RP0=1, select bank1
  1579  0172  1303               	bcf	3,6	;RP1=0, select bank1
  1580  0173  00C9               	movwf	(_valor_entry6+3)^(0+128)
  1581  0174  1283               	bcf	3,5	;RP0=0, select bank0
  1582  0175  1303               	bcf	3,6	;RP1=0, select bank0
  1583  0176  0822               	movf	?___xxtofl+2,w
  1584  0177  1683               	bsf	3,5	;RP0=1, select bank1
  1585  0178  1303               	bcf	3,6	;RP1=0, select bank1
  1586  0179  00C8               	movwf	(_valor_entry6+2)^(0+128)
  1587  017A  1283               	bcf	3,5	;RP0=0, select bank0
  1588  017B  1303               	bcf	3,6	;RP1=0, select bank0
  1589  017C  0821               	movf	?___xxtofl+1,w
  1590  017D  1683               	bsf	3,5	;RP0=1, select bank1
  1591  017E  1303               	bcf	3,6	;RP1=0, select bank1
  1592  017F  00C7               	movwf	(_valor_entry6+1)^(0+128)
  1593  0180  1283               	bcf	3,5	;RP0=0, select bank0
  1594  0181  1303               	bcf	3,6	;RP1=0, select bank0
  1595  0182  0820               	movf	?___xxtofl,w
  1596  0183  1683               	bsf	3,5	;RP0=1, select bank1
  1597  0184  1303               	bcf	3,6	;RP1=0, select bank1
  1598  0185  00C6               	movwf	_valor_entry6^(0+128)
  1599  0186                     l201:
  1600  0186  0008               	return
  1601  0187                     __end_of_lerSensores:
  1602                           
  1603                           	psect	text4
  1604  044A                     __ptext4:	
  1605 ;; *************** function ___xxtofl *****************
  1606 ;; Defined at:
  1607 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\xxtofl.c"
  1608 ;; Parameters:    Size  Location     Type
  1609 ;;  sign            1    wreg     unsigned char 
  1610 ;;  val             4    0[BANK0 ] long 
  1611 ;; Auto vars:     Size  Location     Type
  1612 ;;  sign            1    8[BANK0 ] unsigned char 
  1613 ;;  arg             4   10[BANK0 ] unsigned long 
  1614 ;;  exp             1    9[BANK0 ] unsigned char 
  1615 ;; Return value:  Size  Location     Type
  1616 ;;                  4    0[BANK0 ] unsigned char 
  1617 ;; Registers used:
  1618 ;;		wreg, status,2, status,0
  1619 ;; Tracked objects:
  1620 ;;		On entry : 0/0
  1621 ;;		On exit  : 0/0
  1622 ;;		Unchanged: 0/0
  1623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1624 ;;      Params:         0       4       0       0       0
  1625 ;;      Locals:         0       6       0       0       0
  1626 ;;      Temps:          0       4       0       0       0
  1627 ;;      Totals:         0      14       0       0       0
  1628 ;;Total ram usage:       14 bytes
  1629 ;; Hardware stack levels used: 1
  1630 ;; Hardware stack levels required when called: 2
  1631 ;; This function calls:
  1632 ;;		Nothing
  1633 ;; This function is called by:
  1634 ;;		_lerSensores
  1635 ;; This function uses a non-reentrant model
  1636 ;;
  1637                           
  1638                           
  1639                           ;psect for function ___xxtofl
  1640  044A                     ___xxtofl:
  1641                           
  1642                           ;incstack = 0
  1643                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  1644                           ;___xxtofl@sign stored from wreg
  1645  044A  1283               	bcf	3,5	;RP0=0, select bank0
  1646  044B  1303               	bcf	3,6	;RP1=0, select bank0
  1647  044C  00A8               	movwf	___xxtofl@sign
  1648  044D                     l2211:
  1649  044D  0828               	movf	___xxtofl@sign,w
  1650  044E  1903               	btfsc	3,2
  1651  044F  2C51               	goto	u2061
  1652  0450  2C52               	goto	u2060
  1653  0451                     u2061:
  1654  0451  2C66               	goto	l2217
  1655  0452                     u2060:
  1656  0452                     l2213:
  1657  0452  1FA3               	btfss	___xxtofl@val+3,7
  1658  0453  2C55               	goto	u2071
  1659  0454  2C56               	goto	u2070
  1660  0455                     u2071:
  1661  0455  2C66               	goto	l2217
  1662  0456                     u2070:
  1663  0456                     l2215:
  1664  0456  0920               	comf	___xxtofl@val,w
  1665  0457  00AA               	movwf	___xxtofl@arg
  1666  0458  0921               	comf	___xxtofl@val+1,w
  1667  0459  00AB               	movwf	___xxtofl@arg+1
  1668  045A  0922               	comf	___xxtofl@val+2,w
  1669  045B  00AC               	movwf	___xxtofl@arg+2
  1670  045C  0923               	comf	___xxtofl@val+3,w
  1671  045D  00AD               	movwf	___xxtofl@arg+3
  1672  045E  0AAA               	incf	___xxtofl@arg,f
  1673  045F  1903               	skipnz
  1674  0460  0AAB               	incf	___xxtofl@arg+1,f
  1675  0461  1903               	skipnz
  1676  0462  0AAC               	incf	___xxtofl@arg+2,f
  1677  0463  1903               	skipnz
  1678  0464  0AAD               	incf	___xxtofl@arg+3,f
  1679  0465  2C6E               	goto	l794
  1680  0466                     l2217:
  1681  0466  0823               	movf	___xxtofl@val+3,w
  1682  0467  00AD               	movwf	___xxtofl@arg+3
  1683  0468  0822               	movf	___xxtofl@val+2,w
  1684  0469  00AC               	movwf	___xxtofl@arg+2
  1685  046A  0821               	movf	___xxtofl@val+1,w
  1686  046B  00AB               	movwf	___xxtofl@arg+1
  1687  046C  0820               	movf	___xxtofl@val,w
  1688  046D  00AA               	movwf	___xxtofl@arg
  1689  046E                     l794:
  1690  046E  0823               	movf	___xxtofl@val+3,w
  1691  046F  0422               	iorwf	___xxtofl@val+2,w
  1692  0470  0421               	iorwf	___xxtofl@val+1,w
  1693  0471  0420               	iorwf	___xxtofl@val,w
  1694  0472  1D03               	skipz
  1695  0473  2C75               	goto	u2081
  1696  0474  2C76               	goto	u2080
  1697  0475                     u2081:
  1698  0475  2C7F               	goto	l2223
  1699  0476                     u2080:
  1700  0476                     l2219:
  1701  0476  3000               	movlw	0
  1702  0477  00A3               	movwf	?___xxtofl+3
  1703  0478  3000               	movlw	0
  1704  0479  00A2               	movwf	?___xxtofl+2
  1705  047A  3000               	movlw	0
  1706  047B  00A1               	movwf	?___xxtofl+1
  1707  047C  3000               	movlw	0
  1708  047D  00A0               	movwf	?___xxtofl
  1709  047E  2D05               	goto	l796
  1710  047F                     l2223:
  1711  047F  3096               	movlw	150
  1712  0480  00A4               	movwf	??___xxtofl
  1713  0481  0824               	movf	??___xxtofl,w
  1714  0482  00A9               	movwf	___xxtofl@exp
  1715  0483  2C91               	goto	l2227
  1716  0484                     l2225:
  1717  0484  3001               	movlw	1
  1718  0485  00A4               	movwf	??___xxtofl
  1719  0486  0824               	movf	??___xxtofl,w
  1720  0487  07A9               	addwf	___xxtofl@exp,f
  1721  0488  3001               	movlw	1
  1722  0489                     u2095:
  1723  0489  1003               	clrc
  1724  048A  0CAD               	rrf	___xxtofl@arg+3,f
  1725  048B  0CAC               	rrf	___xxtofl@arg+2,f
  1726  048C  0CAB               	rrf	___xxtofl@arg+1,f
  1727  048D  0CAA               	rrf	___xxtofl@arg,f
  1728  048E  3EFF               	addlw	-1
  1729  048F  1D03               	skipz
  1730  0490  2C89               	goto	u2095
  1731  0491                     l2227:
  1732  0491  30FE               	movlw	254
  1733  0492  052D               	andwf	___xxtofl@arg+3,w
  1734  0493  1D03               	btfss	3,2
  1735  0494  2C96               	goto	u2101
  1736  0495  2C97               	goto	u2100
  1737  0496                     u2101:
  1738  0496  2C84               	goto	l2225
  1739  0497                     u2100:
  1740  0497  2CB3               	goto	l800
  1741  0498                     l2229:
  1742  0498  3001               	movlw	1
  1743  0499  00A4               	movwf	??___xxtofl
  1744  049A  0824               	movf	??___xxtofl,w
  1745  049B  07A9               	addwf	___xxtofl@exp,f
  1746  049C                     l2231:
  1747  049C  3001               	movlw	1
  1748  049D  07AA               	addwf	___xxtofl@arg,f
  1749  049E  3000               	movlw	0
  1750  049F  1803               	skipnc
  1751  04A0  3001               	movlw	1
  1752  04A1  07AB               	addwf	___xxtofl@arg+1,f
  1753  04A2  3000               	movlw	0
  1754  04A3  1803               	skipnc
  1755  04A4  3001               	movlw	1
  1756  04A5  07AC               	addwf	___xxtofl@arg+2,f
  1757  04A6  3000               	movlw	0
  1758  04A7  1803               	skipnc
  1759  04A8  3001               	movlw	1
  1760  04A9  07AD               	addwf	___xxtofl@arg+3,f
  1761  04AA                     l2233:
  1762  04AA  3001               	movlw	1
  1763  04AB                     u2115:
  1764  04AB  1003               	clrc
  1765  04AC  0CAD               	rrf	___xxtofl@arg+3,f
  1766  04AD  0CAC               	rrf	___xxtofl@arg+2,f
  1767  04AE  0CAB               	rrf	___xxtofl@arg+1,f
  1768  04AF  0CAA               	rrf	___xxtofl@arg,f
  1769  04B0  3EFF               	addlw	-1
  1770  04B1  1D03               	skipz
  1771  04B2  2CAB               	goto	u2115
  1772  04B3                     l800:
  1773  04B3  30FF               	movlw	255
  1774  04B4  052D               	andwf	___xxtofl@arg+3,w
  1775  04B5  1D03               	btfss	3,2
  1776  04B6  2CB8               	goto	u2121
  1777  04B7  2CB9               	goto	u2120
  1778  04B8                     u2121:
  1779  04B8  2C98               	goto	l2229
  1780  04B9                     u2120:
  1781  04B9  2CC5               	goto	l2237
  1782  04BA                     l2235:
  1783  04BA  3001               	movlw	1
  1784  04BB  02A9               	subwf	___xxtofl@exp,f
  1785  04BC  3001               	movlw	1
  1786  04BD  00A4               	movwf	??___xxtofl
  1787  04BE                     u2135:
  1788  04BE  1003               	clrc
  1789  04BF  0DAA               	rlf	___xxtofl@arg,f
  1790  04C0  0DAB               	rlf	___xxtofl@arg+1,f
  1791  04C1  0DAC               	rlf	___xxtofl@arg+2,f
  1792  04C2  0DAD               	rlf	___xxtofl@arg+3,f
  1793  04C3  0BA4               	decfsz	??___xxtofl,f
  1794  04C4  2CBE               	goto	u2135
  1795  04C5                     l2237:
  1796  04C5  1BAC               	btfsc	___xxtofl@arg+2,7
  1797  04C6  2CC8               	goto	u2141
  1798  04C7  2CC9               	goto	u2140
  1799  04C8                     u2141:
  1800  04C8  2CCF               	goto	l807
  1801  04C9                     u2140:
  1802  04C9                     l2239:
  1803  04C9  3002               	movlw	2
  1804  04CA  0229               	subwf	___xxtofl@exp,w
  1805  04CB  1803               	skipnc
  1806  04CC  2CCE               	goto	u2151
  1807  04CD  2CCF               	goto	u2150
  1808  04CE                     u2151:
  1809  04CE  2CBA               	goto	l2235
  1810  04CF                     u2150:
  1811  04CF                     l807:
  1812  04CF  1829               	btfsc	___xxtofl@exp,0
  1813  04D0  2CD2               	goto	u2161
  1814  04D1  2CD3               	goto	u2160
  1815  04D2                     u2161:
  1816  04D2  2CDB               	goto	l808
  1817  04D3                     u2160:
  1818  04D3                     l2241:
  1819  04D3  30FF               	movlw	255
  1820  04D4  05AA               	andwf	___xxtofl@arg,f
  1821  04D5  30FF               	movlw	255
  1822  04D6  05AB               	andwf	___xxtofl@arg+1,f
  1823  04D7  307F               	movlw	127
  1824  04D8  05AC               	andwf	___xxtofl@arg+2,f
  1825  04D9  30FF               	movlw	255
  1826  04DA  05AD               	andwf	___xxtofl@arg+3,f
  1827  04DB                     l808:
  1828  04DB  1003               	clrc
  1829  04DC  0CA9               	rrf	___xxtofl@exp,f
  1830  04DD                     l2243:
  1831  04DD  0829               	movf	___xxtofl@exp,w
  1832  04DE  00A4               	movwf	??___xxtofl
  1833  04DF  01A5               	clrf	??___xxtofl+1
  1834  04E0  01A6               	clrf	??___xxtofl+2
  1835  04E1  01A7               	clrf	??___xxtofl+3
  1836  04E2  3018               	movlw	24
  1837  04E3                     u2175:
  1838  04E3  1003               	clrc
  1839  04E4  0DA4               	rlf	??___xxtofl,f
  1840  04E5  0DA5               	rlf	??___xxtofl+1,f
  1841  04E6  0DA6               	rlf	??___xxtofl+2,f
  1842  04E7  0DA7               	rlf	??___xxtofl+3,f
  1843  04E8                     u2170:
  1844  04E8  3EFF               	addlw	-1
  1845  04E9  1D03               	skipz
  1846  04EA  2CE3               	goto	u2175
  1847  04EB  0824               	movf	??___xxtofl,w
  1848  04EC  04AA               	iorwf	___xxtofl@arg,f
  1849  04ED  0825               	movf	??___xxtofl+1,w
  1850  04EE  04AB               	iorwf	___xxtofl@arg+1,f
  1851  04EF  0826               	movf	??___xxtofl+2,w
  1852  04F0  04AC               	iorwf	___xxtofl@arg+2,f
  1853  04F1  0827               	movf	??___xxtofl+3,w
  1854  04F2  04AD               	iorwf	___xxtofl@arg+3,f
  1855  04F3                     l2245:
  1856  04F3  0828               	movf	___xxtofl@sign,w
  1857  04F4  1903               	btfsc	3,2
  1858  04F5  2CF7               	goto	u2181
  1859  04F6  2CF8               	goto	u2180
  1860  04F7                     u2181:
  1861  04F7  2CFD               	goto	l2251
  1862  04F8                     u2180:
  1863  04F8                     l2247:
  1864  04F8  1FA3               	btfss	___xxtofl@val+3,7
  1865  04F9  2CFB               	goto	u2191
  1866  04FA  2CFC               	goto	u2190
  1867  04FB                     u2191:
  1868  04FB  2CFD               	goto	l2251
  1869  04FC                     u2190:
  1870  04FC                     l2249:
  1871  04FC  17AD               	bsf	___xxtofl@arg+3,7
  1872  04FD                     l2251:
  1873  04FD  082D               	movf	___xxtofl@arg+3,w
  1874  04FE  00A3               	movwf	?___xxtofl+3
  1875  04FF  082C               	movf	___xxtofl@arg+2,w
  1876  0500  00A2               	movwf	?___xxtofl+2
  1877  0501  082B               	movf	___xxtofl@arg+1,w
  1878  0502  00A1               	movwf	?___xxtofl+1
  1879  0503  082A               	movf	___xxtofl@arg,w
  1880  0504  00A0               	movwf	?___xxtofl
  1881  0505                     l796:
  1882  0505  0008               	return
  1883  0506                     __end_of___xxtofl:
  1884                           
  1885                           	psect	text5
  1886  0748                     __ptext5:	
  1887 ;; *************** function _iniciaPinos *****************
  1888 ;; Defined at:
  1889 ;;		line 267 in file "main.c"
  1890 ;; Parameters:    Size  Location     Type
  1891 ;;		None
  1892 ;; Auto vars:     Size  Location     Type
  1893 ;;		None
  1894 ;; Return value:  Size  Location     Type
  1895 ;;                  1    wreg      void 
  1896 ;; Registers used:
  1897 ;;		wreg, status,2
  1898 ;; Tracked objects:
  1899 ;;		On entry : 0/0
  1900 ;;		On exit  : 0/0
  1901 ;;		Unchanged: 0/0
  1902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1903 ;;      Params:         0       0       0       0       0
  1904 ;;      Locals:         0       0       0       0       0
  1905 ;;      Temps:          0       0       0       0       0
  1906 ;;      Totals:         0       0       0       0       0
  1907 ;;Total ram usage:        0 bytes
  1908 ;; Hardware stack levels used: 1
  1909 ;; Hardware stack levels required when called: 2
  1910 ;; This function calls:
  1911 ;;		Nothing
  1912 ;; This function is called by:
  1913 ;;		_main
  1914 ;; This function uses a non-reentrant model
  1915 ;;
  1916                           
  1917                           
  1918                           ;psect for function _iniciaPinos
  1919  0748                     _iniciaPinos:
  1920  0748                     l1185:	
  1921                           ;incstack = 0
  1922                           ; Regs used in _iniciaPinos: [wreg+status,2]
  1923                           
  1924                           
  1925                           ;main.c: 269:     OPTION_REGbits.nRBPU = 1;
  1926  0748  1683               	bsf	3,5	;RP0=1, select bank1
  1927  0749  1303               	bcf	3,6	;RP1=0, select bank1
  1928  074A  1781               	bsf	1,7	;volatile
  1929                           
  1930                           ;main.c: 271:     TRISBbits.TRISB0 = 1;
  1931  074B  1406               	bsf	6,0	;volatile
  1932                           
  1933                           ;main.c: 272:     TRISBbits.TRISB1 = 0;
  1934  074C  1086               	bcf	6,1	;volatile
  1935                           
  1936                           ;main.c: 273:     TRISBbits.TRISB2 = 0;
  1937  074D  1106               	bcf	6,2	;volatile
  1938                           
  1939                           ;main.c: 274:     TRISBbits.TRISB3 = 1;
  1940  074E  1586               	bsf	6,3	;volatile
  1941                           
  1942                           ;main.c: 275:     TRISBbits.TRISB4 = 0;
  1943  074F  1206               	bcf	6,4	;volatile
  1944                           
  1945                           ;main.c: 276:     TRISBbits.TRISB5 = 0;
  1946  0750  1286               	bcf	6,5	;volatile
  1947                           
  1948                           ;main.c: 277:     TRISBbits.TRISB6 = 0;
  1949  0751  1306               	bcf	6,6	;volatile
  1950                           
  1951                           ;main.c: 278:     TRISBbits.TRISB7 = 0;
  1952  0752  1386               	bcf	6,7	;volatile
  1953                           
  1954                           ;main.c: 280:     OPTION_REGbits.INTEDG = 1;
  1955  0753  1701               	bsf	1,6	;volatile
  1956                           
  1957                           ;main.c: 281:     INTCONbits.GIE = 1;
  1958  0754  178B               	bsf	11,7	;volatile
  1959                           
  1960                           ;main.c: 282:     INTCONbits.INTE = 1;
  1961  0755  160B               	bsf	11,4	;volatile
  1962                           
  1963                           ;main.c: 283:     INTCONbits.INTF = 0;
  1964  0756  108B               	bcf	11,1	;volatile
  1965                           
  1966                           ;main.c: 284:     INTCONbits.PEIE = 1;
  1967  0757  170B               	bsf	11,6	;volatile
  1968                           
  1969                           ;main.c: 286:     OPTION_REGbits.PS0 = 1;
  1970  0758  1401               	bsf	1,0	;volatile
  1971                           
  1972                           ;main.c: 287:     OPTION_REGbits.PS1 = 1;
  1973  0759  1481               	bsf	1,1	;volatile
  1974                           
  1975                           ;main.c: 288:     OPTION_REGbits.PS2 = 1;
  1976  075A  1501               	bsf	1,2	;volatile
  1977                           
  1978                           ;main.c: 289:     OPTION_REGbits.PSA = 1;
  1979  075B  1581               	bsf	1,3	;volatile
  1980                           
  1981                           ;main.c: 291:     T1CONbits.TMR1CS = 0;
  1982  075C  1283               	bcf	3,5	;RP0=0, select bank0
  1983  075D  1303               	bcf	3,6	;RP1=0, select bank0
  1984  075E  1090               	bcf	16,1	;volatile
  1985                           
  1986                           ;main.c: 292:     T1CONbits.T1CKPS0 = 1;
  1987  075F  1610               	bsf	16,4	;volatile
  1988                           
  1989                           ;main.c: 293:     T1CONbits.T1CKPS1 = 0;
  1990  0760  1290               	bcf	16,5	;volatile
  1991  0761                     l1187:
  1992                           
  1993                           ;main.c: 295:     TMR1L = 0xDC;
  1994  0761  30DC               	movlw	220
  1995  0762  008E               	movwf	14	;volatile
  1996                           
  1997                           ;main.c: 296:     TMR1H = 0x0B;
  1998  0763  300B               	movlw	11
  1999  0764  008F               	movwf	15	;volatile
  2000  0765                     l1189:
  2001                           
  2002                           ;main.c: 298:     PIE1bits.TMR1IE=1;
  2003  0765  1683               	bsf	3,5	;RP0=1, select bank1
  2004  0766  1303               	bcf	3,6	;RP1=0, select bank1
  2005  0767  140C               	bsf	12,0	;volatile
  2006  0768                     l1191:
  2007                           
  2008                           ;main.c: 300:     T1CONbits.TMR1ON = 1;
  2009  0768  1283               	bcf	3,5	;RP0=0, select bank0
  2010  0769  1303               	bcf	3,6	;RP1=0, select bank0
  2011  076A  1410               	bsf	16,0	;volatile
  2012                           
  2013                           ;main.c: 302:     TRISA = 0b11111111;
  2014  076B  30FF               	movlw	255
  2015  076C  1683               	bsf	3,5	;RP0=1, select bank1
  2016  076D  1303               	bcf	3,6	;RP1=0, select bank1
  2017  076E  0085               	movwf	5	;volatile
  2018  076F                     l1193:
  2019                           
  2020                           ;main.c: 303:     TRISC = 0b00000000;
  2021  076F  0187               	clrf	7	;volatile
  2022  0770                     l1195:
  2023                           
  2024                           ;main.c: 304:     TRISD = 0b00000000;
  2025  0770  0188               	clrf	8	;volatile
  2026  0771                     l1197:
  2027                           
  2028                           ;main.c: 307:     ADCON1bits.PCFG0 = 0;
  2029  0771  101F               	bcf	31,0	;volatile
  2030  0772                     l1199:
  2031                           
  2032                           ;main.c: 308:     ADCON1bits.PCFG1 = 0;
  2033  0772  109F               	bcf	31,1	;volatile
  2034  0773                     l1201:
  2035                           
  2036                           ;main.c: 309:     ADCON1bits.PCFG2 = 0;
  2037  0773  111F               	bcf	31,2	;volatile
  2038  0774                     l1203:
  2039                           
  2040                           ;main.c: 310:     ADCON1bits.PCFG3 = 0;
  2041  0774  119F               	bcf	31,3	;volatile
  2042  0775                     l1205:
  2043                           
  2044                           ;main.c: 313:     ADCON0bits.ADCS0 = 0 ;
  2045  0775  1283               	bcf	3,5	;RP0=0, select bank0
  2046  0776  1303               	bcf	3,6	;RP1=0, select bank0
  2047  0777  131F               	bcf	31,6	;volatile
  2048  0778                     l1207:
  2049                           
  2050                           ;main.c: 314:     ADCON0bits.ADCS1 = 0 ;
  2051  0778  139F               	bcf	31,7	;volatile
  2052  0779                     l1209:
  2053                           
  2054                           ;main.c: 316:     ADCON1bits.ADFM = 0 ;
  2055  0779  1683               	bsf	3,5	;RP0=1, select bank1
  2056  077A  1303               	bcf	3,6	;RP1=0, select bank1
  2057  077B  139F               	bcf	31,7	;volatile
  2058  077C                     l1211:
  2059                           
  2060                           ;main.c: 323:     ADRESL = 0x00;
  2061  077C  019E               	clrf	30	;volatile
  2062  077D                     l1213:
  2063                           
  2064                           ;main.c: 324:     ADRESH = 0x00;
  2065  077D  1283               	bcf	3,5	;RP0=0, select bank0
  2066  077E  1303               	bcf	3,6	;RP1=0, select bank0
  2067  077F  019E               	clrf	30	;volatile
  2068  0780                     l1215:
  2069                           
  2070                           ;main.c: 326:     ADCON0bits.ADON = 1;
  2071  0780  141F               	bsf	31,0	;volatile
  2072  0781                     l1217:
  2073                           
  2074                           ;main.c: 328:     PORTBbits.RB0 = 0;
  2075  0781  1006               	bcf	6,0	;volatile
  2076  0782                     l1219:
  2077                           
  2078                           ;main.c: 329:     PORTBbits.RB1 = 0;
  2079  0782  1086               	bcf	6,1	;volatile
  2080  0783                     l1221:
  2081                           
  2082                           ;main.c: 330:     PORTBbits.RB2 = 0;
  2083  0783  1106               	bcf	6,2	;volatile
  2084  0784                     l1223:
  2085                           
  2086                           ;main.c: 331:     PORTBbits.RB3 = 0;
  2087  0784  1186               	bcf	6,3	;volatile
  2088  0785                     l1225:
  2089                           
  2090                           ;main.c: 332:     PORTBbits.RB4 = 0;
  2091  0785  1206               	bcf	6,4	;volatile
  2092  0786                     l1227:
  2093                           
  2094                           ;main.c: 333:     PORTBbits.RB5 = 0;
  2095  0786  1286               	bcf	6,5	;volatile
  2096  0787                     l1229:
  2097                           
  2098                           ;main.c: 334:     PORTBbits.RB6 = 0;
  2099  0787  1306               	bcf	6,6	;volatile
  2100  0788                     l1231:
  2101                           
  2102                           ;main.c: 335:     PORTBbits.RB7 = 0;
  2103  0788  1386               	bcf	6,7	;volatile
  2104  0789                     l1233:
  2105                           
  2106                           ;main.c: 337:     PORTCbits.RC0 = 0;
  2107  0789  1007               	bcf	7,0	;volatile
  2108  078A                     l1235:
  2109                           
  2110                           ;main.c: 338:     PORTCbits.RC1 = 0;
  2111  078A  1087               	bcf	7,1	;volatile
  2112  078B                     l1237:
  2113                           
  2114                           ;main.c: 339:     PORTCbits.RC2 = 0;
  2115  078B  1107               	bcf	7,2	;volatile
  2116  078C                     l1239:
  2117                           
  2118                           ;main.c: 340:     PORTCbits.RC3 = 0;
  2119  078C  1187               	bcf	7,3	;volatile
  2120  078D                     l1241:
  2121                           
  2122                           ;main.c: 341:     PORTCbits.RC4 = 0;
  2123  078D  1207               	bcf	7,4	;volatile
  2124  078E                     l1243:
  2125                           
  2126                           ;main.c: 342:     PORTCbits.RC5 = 0;
  2127  078E  1287               	bcf	7,5	;volatile
  2128  078F                     l1245:
  2129                           
  2130                           ;main.c: 343:     PORTCbits.RC6 = 0;
  2131  078F  1307               	bcf	7,6	;volatile
  2132  0790                     l1247:
  2133                           
  2134                           ;main.c: 344:     PORTCbits.RC7 = 0;
  2135  0790  1387               	bcf	7,7	;volatile
  2136  0791                     l1249:
  2137                           
  2138                           ;main.c: 346:     PORTDbits.RD0 = 0;
  2139  0791  1008               	bcf	8,0	;volatile
  2140  0792                     l1251:
  2141                           
  2142                           ;main.c: 347:     PORTDbits.RD1 = 0;
  2143  0792  1088               	bcf	8,1	;volatile
  2144  0793                     l1253:
  2145                           
  2146                           ;main.c: 348:     PORTDbits.RD2 = 0;
  2147  0793  1108               	bcf	8,2	;volatile
  2148  0794                     l1255:
  2149                           
  2150                           ;main.c: 349:     PORTDbits.RD3 = 0;
  2151  0794  1188               	bcf	8,3	;volatile
  2152  0795                     l1257:
  2153                           
  2154                           ;main.c: 350:     PORTDbits.RD4 = 0;
  2155  0795  1208               	bcf	8,4	;volatile
  2156  0796                     l1259:
  2157                           
  2158                           ;main.c: 351:     PORTDbits.RD5 = 0;
  2159  0796  1288               	bcf	8,5	;volatile
  2160  0797                     l1261:
  2161                           
  2162                           ;main.c: 352:     PORTDbits.RD6 = 0;
  2163  0797  1308               	bcf	8,6	;volatile
  2164  0798                     l1263:
  2165                           
  2166                           ;main.c: 353:     PORTDbits.RD7 = 0;
  2167  0798  1388               	bcf	8,7	;volatile
  2168  0799                     l217:
  2169  0799  0008               	return
  2170  079A                     __end_of_iniciaPinos:
  2171                           
  2172                           	psect	text6
  2173  0E42                     __ptext6:	
  2174 ;; *************** function _expandeTela *****************
  2175 ;; Defined at:
  2176 ;;		line 218 in file "main.c"
  2177 ;; Parameters:    Size  Location     Type
  2178 ;;		None
  2179 ;; Auto vars:     Size  Location     Type
  2180 ;;		None
  2181 ;; Return value:  Size  Location     Type
  2182 ;;                  1    wreg      void 
  2183 ;; Registers used:
  2184 ;;		wreg
  2185 ;; Tracked objects:
  2186 ;;		On entry : 0/0
  2187 ;;		On exit  : 0/0
  2188 ;;		Unchanged: 0/0
  2189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2190 ;;      Params:         0       0       0       0       0
  2191 ;;      Locals:         0       0       0       0       0
  2192 ;;      Temps:          2       0       0       0       0
  2193 ;;      Totals:         2       0       0       0       0
  2194 ;;Total ram usage:        2 bytes
  2195 ;; Hardware stack levels used: 1
  2196 ;; Hardware stack levels required when called: 2
  2197 ;; This function calls:
  2198 ;;		Nothing
  2199 ;; This function is called by:
  2200 ;;		_main
  2201 ;; This function uses a non-reentrant model
  2202 ;;
  2203                           
  2204                           
  2205                           ;psect for function _expandeTela
  2206  0E42                     _expandeTela:
  2207  0E42                     l1361:	
  2208                           ;incstack = 0
  2209                           ; Regs used in _expandeTela: [wreg]
  2210                           
  2211                           
  2212                           ;main.c: 220:     if(RB3 == 0)
  2213  0E42  1283               	bcf	3,5	;RP0=0, select bank0
  2214  0E43  1303               	bcf	3,6	;RP1=0, select bank0
  2215  0E44  1986               	btfsc	6,3	;volatile
  2216  0E45  2E47               	goto	u671
  2217  0E46  2E48               	goto	u670
  2218  0E47                     u671:
  2219  0E47  2E5A               	goto	l209
  2220  0E48                     u670:
  2221  0E48                     l1363:
  2222                           
  2223                           ;main.c: 221:     {;main.c: 223:         RD4 = 1;
  2224  0E48  1608               	bsf	8,4	;volatile
  2225                           
  2226                           ;main.c: 224:         RC1 = 0;
  2227  0E49  1087               	bcf	7,1	;volatile
  2228                           
  2229                           ;main.c: 225:         RD2 = 1;
  2230  0E4A  1508               	bsf	8,2	;volatile
  2231                           
  2232                           ;main.c: 226:         RD6 = 0;
  2233  0E4B  1308               	bcf	8,6	;volatile
  2234                           
  2235                           ;main.c: 228:         RD0 = 1;
  2236  0E4C  1408               	bsf	8,0	;volatile
  2237                           
  2238                           ;main.c: 229:         RC3 = 0;
  2239  0E4D  1187               	bcf	7,3	;volatile
  2240                           
  2241                           ;main.c: 230:         RC2 = 1;
  2242  0E4E  1507               	bsf	7,2	;volatile
  2243                           
  2244                           ;main.c: 231:         RD7 = 0;
  2245  0E4F  1388               	bcf	8,7	;volatile
  2246  0E50                     l1365:
  2247                           
  2248                           ;main.c: 233:         _delay((unsigned long)((15)*(4000000/4000.0)));
  2249  0E50  3014               	movlw	20
  2250  0E51  00F5               	movwf	??_expandeTela+1
  2251  0E52  3079               	movlw	121
  2252  0E53  00F4               	movwf	??_expandeTela
  2253  0E54                     u2387:
  2254  0E54  0BF4               	decfsz	??_expandeTela,f
  2255  0E55  2E54               	goto	u2387
  2256  0E56  0BF5               	decfsz	??_expandeTela+1,f
  2257  0E57  2E54               	goto	u2387
  2258  0E58  2E59               	nop2
  2259                           
  2260                           ;main.c: 234:     }
  2261  0E59  2E62               	goto	l211
  2262  0E5A                     l209:	
  2263                           ;main.c: 235:     else
  2264                           
  2265                           
  2266                           ;main.c: 236:     {;main.c: 238:         RD4 = 1;
  2267  0E5A  1608               	bsf	8,4	;volatile
  2268                           
  2269                           ;main.c: 239:         RC1 = 1;
  2270  0E5B  1487               	bsf	7,1	;volatile
  2271                           
  2272                           ;main.c: 240:         RD2 = 1;
  2273  0E5C  1508               	bsf	8,2	;volatile
  2274                           
  2275                           ;main.c: 241:         RD6 = 1;
  2276  0E5D  1708               	bsf	8,6	;volatile
  2277                           
  2278                           ;main.c: 243:         RD0 = 1;
  2279  0E5E  1408               	bsf	8,0	;volatile
  2280                           
  2281                           ;main.c: 244:         RC3 = 1;
  2282  0E5F  1587               	bsf	7,3	;volatile
  2283                           
  2284                           ;main.c: 245:         RC2 = 1;
  2285  0E60  1507               	bsf	7,2	;volatile
  2286                           
  2287                           ;main.c: 246:         RD7 = 1;
  2288  0E61  1788               	bsf	8,7	;volatile
  2289  0E62                     l211:
  2290  0E62  0008               	return
  2291  0E63                     __end_of_expandeTela:
  2292                           
  2293                           	psect	text7
  2294  0368                     __ptext7:	
  2295 ;; *************** function _controleEstufas *****************
  2296 ;; Defined at:
  2297 ;;		line 357 in file "main.c"
  2298 ;; Parameters:    Size  Location     Type
  2299 ;;		None
  2300 ;; Auto vars:     Size  Location     Type
  2301 ;;		None
  2302 ;; Return value:  Size  Location     Type
  2303 ;;                  1    wreg      void 
  2304 ;; Registers used:
  2305 ;;		wreg, status,2, status,0, pclath, cstack
  2306 ;; Tracked objects:
  2307 ;;		On entry : 0/0
  2308 ;;		On exit  : 0/0
  2309 ;;		Unchanged: 0/0
  2310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2311 ;;      Params:         0       0       0       0       0
  2312 ;;      Locals:         0       0       0       0       0
  2313 ;;      Temps:          0       0       0       0       0
  2314 ;;      Totals:         0       0       0       0       0
  2315 ;;Total ram usage:        0 bytes
  2316 ;; Hardware stack levels used: 1
  2317 ;; Hardware stack levels required when called: 4
  2318 ;; This function calls:
  2319 ;;		___flge
  2320 ;;		_estufaDois
  2321 ;;		_estufaQuatro
  2322 ;;		_estufaTres
  2323 ;;		_estufaUm
  2324 ;; This function is called by:
  2325 ;;		_main
  2326 ;; This function uses a non-reentrant model
  2327 ;;
  2328                           
  2329                           
  2330                           ;psect for function _controleEstufas
  2331  0368                     _controleEstufas:
  2332  0368                     l2353:	
  2333                           ;incstack = 0
  2334                           ; Regs used in _controleEstufas: [wreg+status,2+status,0+pclath+cstack]
  2335                           
  2336                           
  2337                           ;main.c: 359:     if(valor_entry1 <= 64)
  2338  0368  3042               	movlw	66
  2339  0369  1283               	bcf	3,5	;RP0=0, select bank0
  2340  036A  1303               	bcf	3,6	;RP1=0, select bank0
  2341  036B  00A3               	movwf	___flge@ff1+3
  2342  036C  3080               	movlw	128
  2343  036D  00A2               	movwf	___flge@ff1+2
  2344  036E  3000               	movlw	0
  2345  036F  00A1               	movwf	___flge@ff1+1
  2346  0370  3000               	movlw	0
  2347  0371  00A0               	movwf	___flge@ff1
  2348  0372  0853               	movf	_valor_entry1+3,w
  2349  0373  00A7               	movwf	___flge@ff2+3
  2350  0374  0852               	movf	_valor_entry1+2,w
  2351  0375  00A6               	movwf	___flge@ff2+2
  2352  0376  0851               	movf	_valor_entry1+1,w
  2353  0377  00A5               	movwf	___flge@ff2+1
  2354  0378  0850               	movf	_valor_entry1,w
  2355  0379  00A4               	movwf	___flge@ff2
  2356  037A  120A  118A  2506  120A  118A  	fcall	___flge
  2357  037F  1C03               	btfss	3,0
  2358  0380  2B82               	goto	u2201
  2359  0381  2B83               	goto	u2200
  2360  0382                     u2201:
  2361  0382  2B92               	goto	l2363
  2362  0383                     u2200:
  2363  0383                     l2355:
  2364                           
  2365                           ;main.c: 360:     {;main.c: 363:         estufaUm();
  2366  0383  120A  158A  26EC  120A  118A  	fcall	_estufaUm
  2367  0388                     l2357:
  2368                           
  2369                           ;main.c: 364:         RC6 = 0;
  2370  0388  1283               	bcf	3,5	;RP0=0, select bank0
  2371  0389  1303               	bcf	3,6	;RP1=0, select bank0
  2372  038A  1307               	bcf	7,6	;volatile
  2373  038B                     l2359:
  2374                           
  2375                           ;main.c: 365:         RC5 = 0;
  2376  038B  1283               	bcf	3,5	;RP0=0, select bank0
  2377  038C  1303               	bcf	3,6	;RP1=0, select bank0
  2378  038D  1287               	bcf	7,5	;volatile
  2379  038E                     l2361:
  2380                           
  2381                           ;main.c: 366:         RC4 = 0;
  2382  038E  1283               	bcf	3,5	;RP0=0, select bank0
  2383  038F  1303               	bcf	3,6	;RP1=0, select bank0
  2384  0390  1207               	bcf	7,4	;volatile
  2385                           
  2386                           ;main.c: 367:     }
  2387  0391  2C49               	goto	l227
  2388  0392                     l2363:
  2389  0392  3043               	movlw	67
  2390  0393  1283               	bcf	3,5	;RP0=0, select bank0
  2391  0394  1303               	bcf	3,6	;RP1=0, select bank0
  2392  0395  00A3               	movwf	___flge@ff1+3
  2393  0396  3000               	movlw	0
  2394  0397  00A2               	movwf	___flge@ff1+2
  2395  0398  3000               	movlw	0
  2396  0399  00A1               	movwf	___flge@ff1+1
  2397  039A  3000               	movlw	0
  2398  039B  00A0               	movwf	___flge@ff1
  2399  039C  0853               	movf	_valor_entry1+3,w
  2400  039D  00A7               	movwf	___flge@ff2+3
  2401  039E  0852               	movf	_valor_entry1+2,w
  2402  039F  00A6               	movwf	___flge@ff2+2
  2403  03A0  0851               	movf	_valor_entry1+1,w
  2404  03A1  00A5               	movwf	___flge@ff2+1
  2405  03A2  0850               	movf	_valor_entry1,w
  2406  03A3  00A4               	movwf	___flge@ff2
  2407  03A4  120A  118A  2506  120A  118A  	fcall	___flge
  2408  03A9  1C03               	btfss	3,0
  2409  03AA  2BAC               	goto	u2211
  2410  03AB  2BAD               	goto	u2210
  2411  03AC                     u2211:
  2412  03AC  2BB8               	goto	l2371
  2413  03AD                     u2210:
  2414  03AD                     l2365:
  2415                           
  2416                           ;main.c: 369:     {;main.c: 372:         estufaUm();
  2417  03AD  120A  158A  26EC  120A  118A  	fcall	_estufaUm
  2418                           
  2419                           ;main.c: 373:         estufaDois();
  2420  03B2  120A  158A  26A6  120A  118A  	fcall	_estufaDois
  2421  03B7  2B8B               	goto	l2359
  2422  03B8                     l2371:
  2423  03B8  3042               	movlw	66
  2424  03B9  1283               	bcf	3,5	;RP0=0, select bank0
  2425  03BA  1303               	bcf	3,6	;RP1=0, select bank0
  2426  03BB  00A3               	movwf	___flge@ff1+3
  2427  03BC  3080               	movlw	128
  2428  03BD  00A2               	movwf	___flge@ff1+2
  2429  03BE  3000               	movlw	0
  2430  03BF  00A1               	movwf	___flge@ff1+1
  2431  03C0  3000               	movlw	0
  2432  03C1  00A0               	movwf	___flge@ff1
  2433  03C2  0853               	movf	_valor_entry1+3,w
  2434  03C3  00A7               	movwf	___flge@ff2+3
  2435  03C4  0852               	movf	_valor_entry1+2,w
  2436  03C5  00A6               	movwf	___flge@ff2+2
  2437  03C6  0851               	movf	_valor_entry1+1,w
  2438  03C7  00A5               	movwf	___flge@ff2+1
  2439  03C8  0850               	movf	_valor_entry1,w
  2440  03C9  00A4               	movwf	___flge@ff2
  2441  03CA  120A  118A  2506  120A  118A  	fcall	___flge
  2442  03CF  1803               	btfsc	3,0
  2443  03D0  2BD2               	goto	u2221
  2444  03D1  2BD3               	goto	u2220
  2445  03D2                     u2221:
  2446  03D2  2BFE               	goto	l2379
  2447  03D3                     u2220:
  2448  03D3                     l2373:
  2449  03D3  3043               	movlw	67
  2450  03D4  1283               	bcf	3,5	;RP0=0, select bank0
  2451  03D5  1303               	bcf	3,6	;RP1=0, select bank0
  2452  03D6  00A3               	movwf	___flge@ff1+3
  2453  03D7  3040               	movlw	64
  2454  03D8  00A2               	movwf	___flge@ff1+2
  2455  03D9  3000               	movlw	0
  2456  03DA  00A1               	movwf	___flge@ff1+1
  2457  03DB  3000               	movlw	0
  2458  03DC  00A0               	movwf	___flge@ff1
  2459  03DD  0853               	movf	_valor_entry1+3,w
  2460  03DE  00A7               	movwf	___flge@ff2+3
  2461  03DF  0852               	movf	_valor_entry1+2,w
  2462  03E0  00A6               	movwf	___flge@ff2+2
  2463  03E1  0851               	movf	_valor_entry1+1,w
  2464  03E2  00A5               	movwf	___flge@ff2+1
  2465  03E3  0850               	movf	_valor_entry1,w
  2466  03E4  00A4               	movwf	___flge@ff2
  2467  03E5  120A  118A  2506  120A  118A  	fcall	___flge
  2468  03EA  1C03               	btfss	3,0
  2469  03EB  2BED               	goto	u2231
  2470  03EC  2BEE               	goto	u2230
  2471  03ED                     u2231:
  2472  03ED  2BFE               	goto	l2379
  2473  03EE                     u2230:
  2474  03EE                     l2375:
  2475                           
  2476                           ;main.c: 378:     {;main.c: 381:         estufaUm();
  2477  03EE  120A  158A  26EC  120A  118A  	fcall	_estufaUm
  2478                           
  2479                           ;main.c: 382:         estufaDois();
  2480  03F3  120A  158A  26A6  120A  118A  	fcall	_estufaDois
  2481                           
  2482                           ;main.c: 383:         estufaTres();
  2483  03F8  120A  158A  26C9  120A  118A  	fcall	_estufaTres
  2484  03FD  2B8E               	goto	l2361
  2485  03FE                     l2379:
  2486  03FE  3042               	movlw	66
  2487  03FF  1283               	bcf	3,5	;RP0=0, select bank0
  2488  0400  1303               	bcf	3,6	;RP1=0, select bank0
  2489  0401  00A3               	movwf	___flge@ff1+3
  2490  0402  3080               	movlw	128
  2491  0403  00A2               	movwf	___flge@ff1+2
  2492  0404  3000               	movlw	0
  2493  0405  00A1               	movwf	___flge@ff1+1
  2494  0406  3000               	movlw	0
  2495  0407  00A0               	movwf	___flge@ff1
  2496  0408  0853               	movf	_valor_entry1+3,w
  2497  0409  00A7               	movwf	___flge@ff2+3
  2498  040A  0852               	movf	_valor_entry1+2,w
  2499  040B  00A6               	movwf	___flge@ff2+2
  2500  040C  0851               	movf	_valor_entry1+1,w
  2501  040D  00A5               	movwf	___flge@ff2+1
  2502  040E  0850               	movf	_valor_entry1,w
  2503  040F  00A4               	movwf	___flge@ff2
  2504  0410  120A  118A  2506  120A  118A  	fcall	___flge
  2505  0415  1803               	btfsc	3,0
  2506  0416  2C18               	goto	u2241
  2507  0417  2C19               	goto	u2240
  2508  0418                     u2241:
  2509  0418  2C49               	goto	l221
  2510  0419                     u2240:
  2511  0419                     l2381:
  2512  0419  3043               	movlw	67
  2513  041A  1283               	bcf	3,5	;RP0=0, select bank0
  2514  041B  1303               	bcf	3,6	;RP1=0, select bank0
  2515  041C  00A3               	movwf	___flge@ff1+3
  2516  041D  3080               	movlw	128
  2517  041E  00A2               	movwf	___flge@ff1+2
  2518  041F  3000               	movlw	0
  2519  0420  00A1               	movwf	___flge@ff1+1
  2520  0421  3000               	movlw	0
  2521  0422  00A0               	movwf	___flge@ff1
  2522  0423  0853               	movf	_valor_entry1+3,w
  2523  0424  00A7               	movwf	___flge@ff2+3
  2524  0425  0852               	movf	_valor_entry1+2,w
  2525  0426  00A6               	movwf	___flge@ff2+2
  2526  0427  0851               	movf	_valor_entry1+1,w
  2527  0428  00A5               	movwf	___flge@ff2+1
  2528  0429  0850               	movf	_valor_entry1,w
  2529  042A  00A4               	movwf	___flge@ff2
  2530  042B  120A  118A  2506  120A  118A  	fcall	___flge
  2531  0430  1C03               	btfss	3,0
  2532  0431  2C33               	goto	u2251
  2533  0432  2C34               	goto	u2250
  2534  0433                     u2251:
  2535  0433  2C49               	goto	l221
  2536  0434                     u2250:
  2537  0434                     l2383:
  2538                           
  2539                           ;main.c: 387:     {;main.c: 390:         estufaUm();
  2540  0434  120A  158A  26EC  120A  118A  	fcall	_estufaUm
  2541                           
  2542                           ;main.c: 391:         estufaDois();
  2543  0439  120A  158A  26A6  120A  118A  	fcall	_estufaDois
  2544                           
  2545                           ;main.c: 392:         estufaTres();
  2546  043E  120A  158A  26C9  120A  118A  	fcall	_estufaTres
  2547                           
  2548                           ;main.c: 393:         estufaQuatro();
  2549  0443  120A  158A  275C  120A  118A  	fcall	_estufaQuatro
  2550  0448  2C49               	goto	l227
  2551  0449                     l221:
  2552  0449                     l227:
  2553  0449  0008               	return
  2554  044A                     __end_of_controleEstufas:
  2555                           
  2556                           	psect	text8
  2557  0EEC                     __ptext8:	
  2558 ;; *************** function _estufaUm *****************
  2559 ;; Defined at:
  2560 ;;		line 399 in file "main.c"
  2561 ;; Parameters:    Size  Location     Type
  2562 ;;		None
  2563 ;; Auto vars:     Size  Location     Type
  2564 ;;		None
  2565 ;; Return value:  Size  Location     Type
  2566 ;;                  1    wreg      void 
  2567 ;; Registers used:
  2568 ;;		wreg, status,2, status,0, pclath, cstack
  2569 ;; Tracked objects:
  2570 ;;		On entry : 0/0
  2571 ;;		On exit  : 0/0
  2572 ;;		Unchanged: 0/0
  2573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2574 ;;      Params:         0       0       0       0       0
  2575 ;;      Locals:         0       0       0       0       0
  2576 ;;      Temps:          0       0       0       0       0
  2577 ;;      Totals:         0       0       0       0       0
  2578 ;;Total ram usage:        0 bytes
  2579 ;; Hardware stack levels used: 1
  2580 ;; Hardware stack levels required when called: 3
  2581 ;; This function calls:
  2582 ;;		___flge
  2583 ;; This function is called by:
  2584 ;;		_controleEstufas
  2585 ;; This function uses a non-reentrant model
  2586 ;;
  2587                           
  2588                           
  2589                           ;psect for function _estufaUm
  2590  0EEC                     _estufaUm:
  2591  0EEC                     l2159:	
  2592                           ;incstack = 0
  2593                           ; Regs used in _estufaUm: [wreg+status,2+status,0+pclath+cstack]
  2594                           
  2595                           
  2596                           ;main.c: 401:     if(valor_entry3 <= 128)
  2597  0EEC  3043               	movlw	67
  2598  0EED  1283               	bcf	3,5	;RP0=0, select bank0
  2599  0EEE  1303               	bcf	3,6	;RP1=0, select bank0
  2600  0EEF  00A3               	movwf	___flge@ff1+3
  2601  0EF0  3000               	movlw	0
  2602  0EF1  00A2               	movwf	___flge@ff1+2
  2603  0EF2  3000               	movlw	0
  2604  0EF3  00A1               	movwf	___flge@ff1+1
  2605  0EF4  3000               	movlw	0
  2606  0EF5  00A0               	movwf	___flge@ff1
  2607  0EF6  084F               	movf	_valor_entry3+3,w
  2608  0EF7  00A7               	movwf	___flge@ff2+3
  2609  0EF8  084E               	movf	_valor_entry3+2,w
  2610  0EF9  00A6               	movwf	___flge@ff2+2
  2611  0EFA  084D               	movf	_valor_entry3+1,w
  2612  0EFB  00A5               	movwf	___flge@ff2+1
  2613  0EFC  084C               	movf	_valor_entry3,w
  2614  0EFD  00A4               	movwf	___flge@ff2
  2615  0EFE  120A  118A  2506  120A  158A  	fcall	___flge
  2616  0F03  1C03               	btfss	3,0
  2617  0F04  2F06               	goto	u1921
  2618  0F05  2F07               	goto	u1920
  2619  0F06                     u1921:
  2620  0F06  2F0B               	goto	l230
  2621  0F07                     u1920:
  2622  0F07                     l2161:
  2623                           
  2624                           ;main.c: 402:     {;main.c: 403:         RC7 = 1;
  2625  0F07  1283               	bcf	3,5	;RP0=0, select bank0
  2626  0F08  1303               	bcf	3,6	;RP1=0, select bank0
  2627  0F09  1787               	bsf	7,7	;volatile
  2628                           
  2629                           ;main.c: 404:     }
  2630  0F0A  2F0E               	goto	l232
  2631  0F0B                     l230:	
  2632                           ;main.c: 405:     else
  2633                           
  2634                           
  2635                           ;main.c: 406:     {;main.c: 407:         RC7 = 0;
  2636  0F0B  1283               	bcf	3,5	;RP0=0, select bank0
  2637  0F0C  1303               	bcf	3,6	;RP1=0, select bank0
  2638  0F0D  1387               	bcf	7,7	;volatile
  2639  0F0E                     l232:
  2640  0F0E  0008               	return
  2641  0F0F                     __end_of_estufaUm:
  2642                           
  2643                           	psect	text9
  2644  0EC9                     __ptext9:	
  2645 ;; *************** function _estufaTres *****************
  2646 ;; Defined at:
  2647 ;;		line 423 in file "main.c"
  2648 ;; Parameters:    Size  Location     Type
  2649 ;;		None
  2650 ;; Auto vars:     Size  Location     Type
  2651 ;;		None
  2652 ;; Return value:  Size  Location     Type
  2653 ;;                  1    wreg      void 
  2654 ;; Registers used:
  2655 ;;		wreg, status,2, status,0, pclath, cstack
  2656 ;; Tracked objects:
  2657 ;;		On entry : 0/0
  2658 ;;		On exit  : 0/0
  2659 ;;		Unchanged: 0/0
  2660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2661 ;;      Params:         0       0       0       0       0
  2662 ;;      Locals:         0       0       0       0       0
  2663 ;;      Temps:          0       0       0       0       0
  2664 ;;      Totals:         0       0       0       0       0
  2665 ;;Total ram usage:        0 bytes
  2666 ;; Hardware stack levels used: 1
  2667 ;; Hardware stack levels required when called: 3
  2668 ;; This function calls:
  2669 ;;		___flge
  2670 ;; This function is called by:
  2671 ;;		_controleEstufas
  2672 ;; This function uses a non-reentrant model
  2673 ;;
  2674                           
  2675                           
  2676                           ;psect for function _estufaTres
  2677  0EC9                     _estufaTres:
  2678  0EC9                     l2167:	
  2679                           ;incstack = 0
  2680                           ; Regs used in _estufaTres: [wreg+status,2+status,0+pclath+cstack]
  2681                           
  2682                           
  2683                           ;main.c: 425:     if(valor_entry5 < 128)
  2684  0EC9  1283               	bcf	3,5	;RP0=0, select bank0
  2685  0ECA  1303               	bcf	3,6	;RP1=0, select bank0
  2686  0ECB  0847               	movf	_valor_entry5+3,w
  2687  0ECC  00A3               	movwf	___flge@ff1+3
  2688  0ECD  0846               	movf	_valor_entry5+2,w
  2689  0ECE  00A2               	movwf	___flge@ff1+2
  2690  0ECF  0845               	movf	_valor_entry5+1,w
  2691  0ED0  00A1               	movwf	___flge@ff1+1
  2692  0ED1  0844               	movf	_valor_entry5,w
  2693  0ED2  00A0               	movwf	___flge@ff1
  2694  0ED3  3043               	movlw	67
  2695  0ED4  00A7               	movwf	___flge@ff2+3
  2696  0ED5  3000               	movlw	0
  2697  0ED6  00A6               	movwf	___flge@ff2+2
  2698  0ED7  3000               	movlw	0
  2699  0ED8  00A5               	movwf	___flge@ff2+1
  2700  0ED9  3000               	movlw	0
  2701  0EDA  00A4               	movwf	___flge@ff2
  2702  0EDB  120A  118A  2506  120A  158A  	fcall	___flge
  2703  0EE0  1803               	btfsc	3,0
  2704  0EE1  2EE3               	goto	u1941
  2705  0EE2  2EE4               	goto	u1940
  2706  0EE3                     u1941:
  2707  0EE3  2EE8               	goto	l240
  2708  0EE4                     u1940:
  2709  0EE4                     l2169:
  2710                           
  2711                           ;main.c: 426:     {;main.c: 427:        RC5 = 1;
  2712  0EE4  1283               	bcf	3,5	;RP0=0, select bank0
  2713  0EE5  1303               	bcf	3,6	;RP1=0, select bank0
  2714  0EE6  1687               	bsf	7,5	;volatile
  2715                           
  2716                           ;main.c: 428:     }
  2717  0EE7  2EEB               	goto	l242
  2718  0EE8                     l240:	
  2719                           ;main.c: 429:     else
  2720                           
  2721                           
  2722                           ;main.c: 430:     {;main.c: 431:         RC5 = 0;
  2723  0EE8  1283               	bcf	3,5	;RP0=0, select bank0
  2724  0EE9  1303               	bcf	3,6	;RP1=0, select bank0
  2725  0EEA  1287               	bcf	7,5	;volatile
  2726  0EEB                     l242:
  2727  0EEB  0008               	return
  2728  0EEC                     __end_of_estufaTres:
  2729                           
  2730                           	psect	text10
  2731  0F5C                     __ptext10:	
  2732 ;; *************** function _estufaQuatro *****************
  2733 ;; Defined at:
  2734 ;;		line 435 in file "main.c"
  2735 ;; Parameters:    Size  Location     Type
  2736 ;;		None
  2737 ;; Auto vars:     Size  Location     Type
  2738 ;;		None
  2739 ;; Return value:  Size  Location     Type
  2740 ;;                  1    wreg      void 
  2741 ;; Registers used:
  2742 ;;		wreg, status,2, status,0, pclath, cstack
  2743 ;; Tracked objects:
  2744 ;;		On entry : 0/0
  2745 ;;		On exit  : 0/0
  2746 ;;		Unchanged: 0/0
  2747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2748 ;;      Params:         0       0       0       0       0
  2749 ;;      Locals:         0       0       0       0       0
  2750 ;;      Temps:          0       0       0       0       0
  2751 ;;      Totals:         0       0       0       0       0
  2752 ;;Total ram usage:        0 bytes
  2753 ;; Hardware stack levels used: 1
  2754 ;; Hardware stack levels required when called: 3
  2755 ;; This function calls:
  2756 ;;		___flge
  2757 ;; This function is called by:
  2758 ;;		_controleEstufas
  2759 ;; This function uses a non-reentrant model
  2760 ;;
  2761                           
  2762                           
  2763                           ;psect for function _estufaQuatro
  2764  0F5C                     _estufaQuatro:
  2765  0F5C                     l2171:	
  2766                           ;incstack = 0
  2767                           ; Regs used in _estufaQuatro: [wreg+status,2+status,0+pclath+cstack]
  2768                           
  2769                           
  2770                           ;main.c: 437:     if(valor_entry6 < 128)
  2771  0F5C  1683               	bsf	3,5	;RP0=1, select bank1
  2772  0F5D  1303               	bcf	3,6	;RP1=0, select bank1
  2773  0F5E  0849               	movf	(_valor_entry6+3)^(0+128),w
  2774  0F5F  1283               	bcf	3,5	;RP0=0, select bank0
  2775  0F60  1303               	bcf	3,6	;RP1=0, select bank0
  2776  0F61  00A3               	movwf	___flge@ff1+3
  2777  0F62  1683               	bsf	3,5	;RP0=1, select bank1
  2778  0F63  1303               	bcf	3,6	;RP1=0, select bank1
  2779  0F64  0848               	movf	(_valor_entry6+2)^(0+128),w
  2780  0F65  1283               	bcf	3,5	;RP0=0, select bank0
  2781  0F66  1303               	bcf	3,6	;RP1=0, select bank0
  2782  0F67  00A2               	movwf	___flge@ff1+2
  2783  0F68  1683               	bsf	3,5	;RP0=1, select bank1
  2784  0F69  1303               	bcf	3,6	;RP1=0, select bank1
  2785  0F6A  0847               	movf	(_valor_entry6+1)^(0+128),w
  2786  0F6B  1283               	bcf	3,5	;RP0=0, select bank0
  2787  0F6C  1303               	bcf	3,6	;RP1=0, select bank0
  2788  0F6D  00A1               	movwf	___flge@ff1+1
  2789  0F6E  1683               	bsf	3,5	;RP0=1, select bank1
  2790  0F6F  1303               	bcf	3,6	;RP1=0, select bank1
  2791  0F70  0846               	movf	_valor_entry6^(0+128),w
  2792  0F71  1283               	bcf	3,5	;RP0=0, select bank0
  2793  0F72  1303               	bcf	3,6	;RP1=0, select bank0
  2794  0F73  00A0               	movwf	___flge@ff1
  2795  0F74  3043               	movlw	67
  2796  0F75  00A7               	movwf	___flge@ff2+3
  2797  0F76  3000               	movlw	0
  2798  0F77  00A6               	movwf	___flge@ff2+2
  2799  0F78  3000               	movlw	0
  2800  0F79  00A5               	movwf	___flge@ff2+1
  2801  0F7A  3000               	movlw	0
  2802  0F7B  00A4               	movwf	___flge@ff2
  2803  0F7C  120A  118A  2506  120A  158A  	fcall	___flge
  2804  0F81  1803               	btfsc	3,0
  2805  0F82  2F84               	goto	u1951
  2806  0F83  2F85               	goto	u1950
  2807  0F84                     u1951:
  2808  0F84  2F89               	goto	l245
  2809  0F85                     u1950:
  2810  0F85                     l2173:
  2811                           
  2812                           ;main.c: 438:     {;main.c: 439:         RC4 = 1;
  2813  0F85  1283               	bcf	3,5	;RP0=0, select bank0
  2814  0F86  1303               	bcf	3,6	;RP1=0, select bank0
  2815  0F87  1607               	bsf	7,4	;volatile
  2816                           
  2817                           ;main.c: 440:     }
  2818  0F88  2F8C               	goto	l247
  2819  0F89                     l245:	
  2820                           ;main.c: 441:     else
  2821                           
  2822                           
  2823                           ;main.c: 442:     {;main.c: 443:        RC4 = 0;
  2824  0F89  1283               	bcf	3,5	;RP0=0, select bank0
  2825  0F8A  1303               	bcf	3,6	;RP1=0, select bank0
  2826  0F8B  1207               	bcf	7,4	;volatile
  2827  0F8C                     l247:
  2828  0F8C  0008               	return
  2829  0F8D                     __end_of_estufaQuatro:
  2830                           
  2831                           	psect	text11
  2832  0EA6                     __ptext11:	
  2833 ;; *************** function _estufaDois *****************
  2834 ;; Defined at:
  2835 ;;		line 411 in file "main.c"
  2836 ;; Parameters:    Size  Location     Type
  2837 ;;		None
  2838 ;; Auto vars:     Size  Location     Type
  2839 ;;		None
  2840 ;; Return value:  Size  Location     Type
  2841 ;;                  1    wreg      void 
  2842 ;; Registers used:
  2843 ;;		wreg, status,2, status,0, pclath, cstack
  2844 ;; Tracked objects:
  2845 ;;		On entry : 0/0
  2846 ;;		On exit  : 0/0
  2847 ;;		Unchanged: 0/0
  2848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2849 ;;      Params:         0       0       0       0       0
  2850 ;;      Locals:         0       0       0       0       0
  2851 ;;      Temps:          0       0       0       0       0
  2852 ;;      Totals:         0       0       0       0       0
  2853 ;;Total ram usage:        0 bytes
  2854 ;; Hardware stack levels used: 1
  2855 ;; Hardware stack levels required when called: 3
  2856 ;; This function calls:
  2857 ;;		___flge
  2858 ;; This function is called by:
  2859 ;;		_controleEstufas
  2860 ;; This function uses a non-reentrant model
  2861 ;;
  2862                           
  2863                           
  2864                           ;psect for function _estufaDois
  2865  0EA6                     _estufaDois:
  2866  0EA6                     l2163:	
  2867                           ;incstack = 0
  2868                           ; Regs used in _estufaDois: [wreg+status,2+status,0+pclath+cstack]
  2869                           
  2870                           
  2871                           ;main.c: 413:     if(valor_entry4 <= 128)
  2872  0EA6  3043               	movlw	67
  2873  0EA7  1283               	bcf	3,5	;RP0=0, select bank0
  2874  0EA8  1303               	bcf	3,6	;RP1=0, select bank0
  2875  0EA9  00A3               	movwf	___flge@ff1+3
  2876  0EAA  3000               	movlw	0
  2877  0EAB  00A2               	movwf	___flge@ff1+2
  2878  0EAC  3000               	movlw	0
  2879  0EAD  00A1               	movwf	___flge@ff1+1
  2880  0EAE  3000               	movlw	0
  2881  0EAF  00A0               	movwf	___flge@ff1
  2882  0EB0  084B               	movf	_valor_entry4+3,w
  2883  0EB1  00A7               	movwf	___flge@ff2+3
  2884  0EB2  084A               	movf	_valor_entry4+2,w
  2885  0EB3  00A6               	movwf	___flge@ff2+2
  2886  0EB4  0849               	movf	_valor_entry4+1,w
  2887  0EB5  00A5               	movwf	___flge@ff2+1
  2888  0EB6  0848               	movf	_valor_entry4,w
  2889  0EB7  00A4               	movwf	___flge@ff2
  2890  0EB8  120A  118A  2506  120A  158A  	fcall	___flge
  2891  0EBD  1C03               	btfss	3,0
  2892  0EBE  2EC0               	goto	u1931
  2893  0EBF  2EC1               	goto	u1930
  2894  0EC0                     u1931:
  2895  0EC0  2EC5               	goto	l235
  2896  0EC1                     u1930:
  2897  0EC1                     l2165:
  2898                           
  2899                           ;main.c: 414:     {;main.c: 415:         RC6 = 1;
  2900  0EC1  1283               	bcf	3,5	;RP0=0, select bank0
  2901  0EC2  1303               	bcf	3,6	;RP1=0, select bank0
  2902  0EC3  1707               	bsf	7,6	;volatile
  2903                           
  2904                           ;main.c: 416:     }
  2905  0EC4  2EC8               	goto	l237
  2906  0EC5                     l235:	
  2907                           ;main.c: 417:     else
  2908                           
  2909                           
  2910                           ;main.c: 418:     {;main.c: 419:         RC6 = 0;
  2911  0EC5  1283               	bcf	3,5	;RP0=0, select bank0
  2912  0EC6  1303               	bcf	3,6	;RP1=0, select bank0
  2913  0EC7  1307               	bcf	7,6	;volatile
  2914  0EC8                     l237:
  2915  0EC8  0008               	return
  2916  0EC9                     __end_of_estufaDois:
  2917                           
  2918                           	psect	text12
  2919  0506                     __ptext12:	
  2920 ;; *************** function ___flge *****************
  2921 ;; Defined at:
  2922 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\flge.c"
  2923 ;; Parameters:    Size  Location     Type
  2924 ;;  ff1             4    0[BANK0 ] void 
  2925 ;;  ff2             4    4[BANK0 ] void 
  2926 ;; Auto vars:     Size  Location     Type
  2927 ;;		None
  2928 ;; Return value:  Size  Location     Type
  2929 ;;		None               void
  2930 ;; Registers used:
  2931 ;;		wreg, status,2, status,0
  2932 ;; Tracked objects:
  2933 ;;		On entry : 0/0
  2934 ;;		On exit  : 0/0
  2935 ;;		Unchanged: 0/0
  2936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2937 ;;      Params:         0       8       0       0       0
  2938 ;;      Locals:         0       0       0       0       0
  2939 ;;      Temps:          0       4       0       0       0
  2940 ;;      Totals:         0      12       0       0       0
  2941 ;;Total ram usage:       12 bytes
  2942 ;; Hardware stack levels used: 1
  2943 ;; Hardware stack levels required when called: 2
  2944 ;; This function calls:
  2945 ;;		Nothing
  2946 ;; This function is called by:
  2947 ;;		_controleEstufas
  2948 ;;		_estufaUm
  2949 ;;		_estufaDois
  2950 ;;		_estufaTres
  2951 ;;		_estufaQuatro
  2952 ;; This function uses a non-reentrant model
  2953 ;;
  2954                           
  2955                           
  2956                           ;psect for function ___flge
  2957  0506                     ___flge:
  2958  0506                     l1999:	
  2959                           ;incstack = 0
  2960                           ; Regs used in ___flge: [wreg+status,2+status,0]
  2961                           
  2962  0506  3000               	movlw	0
  2963  0507  1283               	bcf	3,5	;RP0=0, select bank0
  2964  0508  1303               	bcf	3,6	;RP1=0, select bank0
  2965  0509  0520               	andwf	___flge@ff1,w
  2966  050A  00A8               	movwf	??___flge
  2967  050B  3000               	movlw	0
  2968  050C  0521               	andwf	___flge@ff1+1,w
  2969  050D  00A9               	movwf	??___flge+1
  2970  050E  3080               	movlw	128
  2971  050F  0522               	andwf	___flge@ff1+2,w
  2972  0510  00AA               	movwf	??___flge+2
  2973  0511  307F               	movlw	127
  2974  0512  0523               	andwf	___flge@ff1+3,w
  2975  0513  00AB               	movwf	??___flge+3
  2976  0514  082B               	movf	??___flge+3,w
  2977  0515  042A               	iorwf	??___flge+2,w
  2978  0516  0429               	iorwf	??___flge+1,w
  2979  0517  0428               	iorwf	??___flge,w
  2980  0518  1D03               	skipz
  2981  0519  2D1B               	goto	u1601
  2982  051A  2D1C               	goto	u1600
  2983  051B                     u1601:
  2984  051B  2D24               	goto	l535
  2985  051C                     u1600:
  2986  051C                     l2001:
  2987  051C  3000               	movlw	0
  2988  051D  00A3               	movwf	___flge@ff1+3
  2989  051E  3000               	movlw	0
  2990  051F  00A2               	movwf	___flge@ff1+2
  2991  0520  3000               	movlw	0
  2992  0521  00A1               	movwf	___flge@ff1+1
  2993  0522  3000               	movlw	0
  2994  0523  00A0               	movwf	___flge@ff1
  2995  0524                     l535:
  2996  0524  3000               	movlw	0
  2997  0525  0524               	andwf	___flge@ff2,w
  2998  0526  00A8               	movwf	??___flge
  2999  0527  3000               	movlw	0
  3000  0528  0525               	andwf	___flge@ff2+1,w
  3001  0529  00A9               	movwf	??___flge+1
  3002  052A  3080               	movlw	128
  3003  052B  0526               	andwf	___flge@ff2+2,w
  3004  052C  00AA               	movwf	??___flge+2
  3005  052D  307F               	movlw	127
  3006  052E  0527               	andwf	___flge@ff2+3,w
  3007  052F  00AB               	movwf	??___flge+3
  3008  0530  082B               	movf	??___flge+3,w
  3009  0531  042A               	iorwf	??___flge+2,w
  3010  0532  0429               	iorwf	??___flge+1,w
  3011  0533  0428               	iorwf	??___flge,w
  3012  0534  1D03               	skipz
  3013  0535  2D37               	goto	u1611
  3014  0536  2D38               	goto	u1610
  3015  0537                     u1611:
  3016  0537  2D40               	goto	l2005
  3017  0538                     u1610:
  3018  0538                     l2003:
  3019  0538  3000               	movlw	0
  3020  0539  00A7               	movwf	___flge@ff2+3
  3021  053A  3000               	movlw	0
  3022  053B  00A6               	movwf	___flge@ff2+2
  3023  053C  3000               	movlw	0
  3024  053D  00A5               	movwf	___flge@ff2+1
  3025  053E  3000               	movlw	0
  3026  053F  00A4               	movwf	___flge@ff2
  3027  0540                     l2005:
  3028  0540  1FA3               	btfss	___flge@ff1+3,7
  3029  0541  2D43               	goto	u1621
  3030  0542  2D44               	goto	u1620
  3031  0543                     u1621:
  3032  0543  2D68               	goto	l2009
  3033  0544                     u1620:
  3034  0544                     l2007:
  3035  0544  3000               	movlw	0
  3036  0545  00A8               	movwf	??___flge
  3037  0546  3000               	movlw	0
  3038  0547  00A9               	movwf	??___flge+1
  3039  0548  3000               	movlw	0
  3040  0549  00AA               	movwf	??___flge+2
  3041  054A  3080               	movlw	128
  3042  054B  00AB               	movwf	??___flge+3
  3043  054C  0820               	movf	___flge@ff1,w
  3044  054D  02A8               	subwf	??___flge,f
  3045  054E  0821               	movf	___flge@ff1+1,w
  3046  054F  1C03               	skipc
  3047  0550  0F21               	incfsz	___flge@ff1+1,w
  3048  0551  2D53               	goto	u1631
  3049  0552  2D54               	goto	u1632
  3050  0553                     u1631:
  3051  0553  02A9               	subwf	??___flge+1,f
  3052  0554                     u1632:
  3053  0554  0822               	movf	___flge@ff1+2,w
  3054  0555  1C03               	skipc
  3055  0556  0F22               	incfsz	___flge@ff1+2,w
  3056  0557  2D59               	goto	u1633
  3057  0558  2D5A               	goto	u1634
  3058  0559                     u1633:
  3059  0559  02AA               	subwf	??___flge+2,f
  3060  055A                     u1634:
  3061  055A  0823               	movf	___flge@ff1+3,w
  3062  055B  1C03               	skipc
  3063  055C  0F23               	incfsz	___flge@ff1+3,w
  3064  055D  2D5F               	goto	u1635
  3065  055E  2D60               	goto	u1636
  3066  055F                     u1635:
  3067  055F  02AB               	subwf	??___flge+3,f
  3068  0560                     u1636:
  3069  0560  082B               	movf	??___flge+3,w
  3070  0561  00A3               	movwf	___flge@ff1+3
  3071  0562  082A               	movf	??___flge+2,w
  3072  0563  00A2               	movwf	___flge@ff1+2
  3073  0564  0829               	movf	??___flge+1,w
  3074  0565  00A1               	movwf	___flge@ff1+1
  3075  0566  0828               	movf	??___flge,w
  3076  0567  00A0               	movwf	___flge@ff1
  3077  0568                     l2009:
  3078  0568  1FA7               	btfss	___flge@ff2+3,7
  3079  0569  2D6B               	goto	u1641
  3080  056A  2D6C               	goto	u1640
  3081  056B                     u1641:
  3082  056B  2D90               	goto	l538
  3083  056C                     u1640:
  3084  056C                     l2011:
  3085  056C  3000               	movlw	0
  3086  056D  00A8               	movwf	??___flge
  3087  056E  3000               	movlw	0
  3088  056F  00A9               	movwf	??___flge+1
  3089  0570  3000               	movlw	0
  3090  0571  00AA               	movwf	??___flge+2
  3091  0572  3080               	movlw	128
  3092  0573  00AB               	movwf	??___flge+3
  3093  0574  0824               	movf	___flge@ff2,w
  3094  0575  02A8               	subwf	??___flge,f
  3095  0576  0825               	movf	___flge@ff2+1,w
  3096  0577  1C03               	skipc
  3097  0578  0F25               	incfsz	___flge@ff2+1,w
  3098  0579  2D7B               	goto	u1651
  3099  057A  2D7C               	goto	u1652
  3100  057B                     u1651:
  3101  057B  02A9               	subwf	??___flge+1,f
  3102  057C                     u1652:
  3103  057C  0826               	movf	___flge@ff2+2,w
  3104  057D  1C03               	skipc
  3105  057E  0F26               	incfsz	___flge@ff2+2,w
  3106  057F  2D81               	goto	u1653
  3107  0580  2D82               	goto	u1654
  3108  0581                     u1653:
  3109  0581  02AA               	subwf	??___flge+2,f
  3110  0582                     u1654:
  3111  0582  0827               	movf	___flge@ff2+3,w
  3112  0583  1C03               	skipc
  3113  0584  0F27               	incfsz	___flge@ff2+3,w
  3114  0585  2D87               	goto	u1655
  3115  0586  2D88               	goto	u1656
  3116  0587                     u1655:
  3117  0587  02AB               	subwf	??___flge+3,f
  3118  0588                     u1656:
  3119  0588  082B               	movf	??___flge+3,w
  3120  0589  00A7               	movwf	___flge@ff2+3
  3121  058A  082A               	movf	??___flge+2,w
  3122  058B  00A6               	movwf	___flge@ff2+2
  3123  058C  0829               	movf	??___flge+1,w
  3124  058D  00A5               	movwf	___flge@ff2+1
  3125  058E  0828               	movf	??___flge,w
  3126  058F  00A4               	movwf	___flge@ff2
  3127  0590                     l538:
  3128  0590  3080               	movlw	128
  3129  0591  06A3               	xorwf	___flge@ff1+3,f
  3130  0592  3080               	movlw	128
  3131  0593  06A7               	xorwf	___flge@ff2+3,f
  3132  0594  0827               	movf	___flge@ff2+3,w
  3133  0595  0223               	subwf	___flge@ff1+3,w
  3134  0596  1D03               	skipz
  3135  0597  2DA2               	goto	u1665
  3136  0598  0826               	movf	___flge@ff2+2,w
  3137  0599  0222               	subwf	___flge@ff1+2,w
  3138  059A  1D03               	skipz
  3139  059B  2DA2               	goto	u1665
  3140  059C  0825               	movf	___flge@ff2+1,w
  3141  059D  0221               	subwf	___flge@ff1+1,w
  3142  059E  1D03               	skipz
  3143  059F  2DA2               	goto	u1665
  3144  05A0  0824               	movf	___flge@ff2,w
  3145  05A1  0220               	subwf	___flge@ff1,w
  3146  05A2                     u1665:
  3147  05A2  1803               	skipnc
  3148  05A3  2DA5               	goto	u1661
  3149  05A4  2DA6               	goto	u1660
  3150  05A5                     u1661:
  3151  05A5  2DA8               	goto	l2015
  3152  05A6                     u1660:
  3153  05A6                     l2013:
  3154  05A6  1003               	clrc
  3155  05A7  2DA9               	goto	l539
  3156  05A8                     l2015:
  3157  05A8  1403               	setc
  3158  05A9                     l539:
  3159  05A9  0008               	return
  3160  05AA                     __end_of___flge:
  3161                           
  3162                           	psect	text13
  3163  0187                     __ptext13:	
  3164 ;; *************** function _atualizaLCD *****************
  3165 ;; Defined at:
  3166 ;;		line 251 in file "main.c"
  3167 ;; Parameters:    Size  Location     Type
  3168 ;;		None
  3169 ;; Auto vars:     Size  Location     Type
  3170 ;;  buffer1        16   16[BANK1 ] unsigned char [16]
  3171 ;;  buffer0        16    0[BANK1 ] unsigned char [16]
  3172 ;; Return value:  Size  Location     Type
  3173 ;;                  1    wreg      void 
  3174 ;; Registers used:
  3175 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3176 ;; Tracked objects:
  3177 ;;		On entry : 0/0
  3178 ;;		On exit  : 0/0
  3179 ;;		Unchanged: 0/0
  3180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3181 ;;      Params:         0       0       0       0       0
  3182 ;;      Locals:         0       0      32       0       0
  3183 ;;      Temps:          0       2       0       0       0
  3184 ;;      Totals:         0       2      32       0       0
  3185 ;;Total ram usage:       34 bytes
  3186 ;; Hardware stack levels used: 1
  3187 ;; Hardware stack levels required when called: 5
  3188 ;; This function calls:
  3189 ;;		_Lcd_Clear
  3190 ;;		_Lcd_Set_Cursor
  3191 ;;		_Lcd_Write_String
  3192 ;;		___fltol
  3193 ;;		_sprintf
  3194 ;; This function is called by:
  3195 ;;		_main
  3196 ;; This function uses a non-reentrant model
  3197 ;;
  3198                           
  3199                           
  3200                           ;psect for function _atualizaLCD
  3201  0187                     _atualizaLCD:
  3202  0187                     l2337:	
  3203                           ;incstack = 0
  3204                           ; Regs used in _atualizaLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3205                           
  3206                           
  3207                           ;main.c: 254:     char buffer0[16],buffer1[16];;main.c: 256:     Lcd_Clear();
  3208  0187  120A  158A  2601  120A  118A  	fcall	_Lcd_Clear
  3209                           
  3210                           ;main.c: 257:     Lcd_Set_Cursor(1,1);
  3211  018C  1283               	bcf	3,5	;RP0=0, select bank0
  3212  018D  1303               	bcf	3,6	;RP1=0, select bank0
  3213  018E  01A2               	clrf	Lcd_Set_Cursor@b
  3214  018F  0AA2               	incf	Lcd_Set_Cursor@b,f
  3215  0190  3001               	movlw	1
  3216  0191  120A  118A  26F0  120A  118A  	fcall	_Lcd_Set_Cursor
  3217  0196                     l2339:
  3218                           
  3219                           ;main.c: 258:     sprintf(buffer0, "Q:%i C:%i L:%i S1:%i",(int)valor_entry1, (int)valor_
      +                          entry0, (int)valor_entry2, (int)valor_entry3);
  3220  0196  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  3221  0197  1283               	bcf	3,5	;RP0=0, select bank0
  3222  0198  1303               	bcf	3,6	;RP1=0, select bank0
  3223  0199  00BF               	movwf	??_atualizaLCD
  3224  019A  083F               	movf	??_atualizaLCD,w
  3225  019B  00AC               	movwf	sprintf@f
  3226  019C  0853               	movf	_valor_entry1+3,w
  3227  019D  00A3               	movwf	___fltol@f1+3
  3228  019E  0852               	movf	_valor_entry1+2,w
  3229  019F  00A2               	movwf	___fltol@f1+2
  3230  01A0  0851               	movf	_valor_entry1+1,w
  3231  01A1  00A1               	movwf	___fltol@f1+1
  3232  01A2  0850               	movf	_valor_entry1,w
  3233  01A3  00A0               	movwf	___fltol@f1
  3234  01A4  120A  118A  25AA  120A  118A  	fcall	___fltol
  3235  01A9  1283               	bcf	3,5	;RP0=0, select bank0
  3236  01AA  1303               	bcf	3,6	;RP1=0, select bank0
  3237  01AB  0821               	movf	?___fltol+1,w
  3238  01AC  00AE               	movwf	?_sprintf+2
  3239  01AD  0820               	movf	?___fltol,w
  3240  01AE  00AD               	movwf	?_sprintf+1
  3241  01AF  0879               	movf	_valor_entry0+3,w
  3242  01B0  00A3               	movwf	___fltol@f1+3
  3243  01B1  0878               	movf	_valor_entry0+2,w
  3244  01B2  00A2               	movwf	___fltol@f1+2
  3245  01B3  0877               	movf	_valor_entry0+1,w
  3246  01B4  00A1               	movwf	___fltol@f1+1
  3247  01B5  0876               	movf	_valor_entry0,w
  3248  01B6  00A0               	movwf	___fltol@f1
  3249  01B7  120A  118A  25AA  120A  118A  	fcall	___fltol
  3250  01BC  1283               	bcf	3,5	;RP0=0, select bank0
  3251  01BD  1303               	bcf	3,6	;RP1=0, select bank0
  3252  01BE  0821               	movf	?___fltol+1,w
  3253  01BF  00B0               	movwf	?_sprintf+4
  3254  01C0  0820               	movf	?___fltol,w
  3255  01C1  00AF               	movwf	?_sprintf+3
  3256  01C2  1683               	bsf	3,5	;RP0=1, select bank1
  3257  01C3  1303               	bcf	3,6	;RP1=0, select bank1
  3258  01C4  0843               	movf	(_valor_entry2+3)^(0+128),w
  3259  01C5  1283               	bcf	3,5	;RP0=0, select bank0
  3260  01C6  1303               	bcf	3,6	;RP1=0, select bank0
  3261  01C7  00A3               	movwf	___fltol@f1+3
  3262  01C8  1683               	bsf	3,5	;RP0=1, select bank1
  3263  01C9  1303               	bcf	3,6	;RP1=0, select bank1
  3264  01CA  0842               	movf	(_valor_entry2+2)^(0+128),w
  3265  01CB  1283               	bcf	3,5	;RP0=0, select bank0
  3266  01CC  1303               	bcf	3,6	;RP1=0, select bank0
  3267  01CD  00A2               	movwf	___fltol@f1+2
  3268  01CE  1683               	bsf	3,5	;RP0=1, select bank1
  3269  01CF  1303               	bcf	3,6	;RP1=0, select bank1
  3270  01D0  0841               	movf	(_valor_entry2+1)^(0+128),w
  3271  01D1  1283               	bcf	3,5	;RP0=0, select bank0
  3272  01D2  1303               	bcf	3,6	;RP1=0, select bank0
  3273  01D3  00A1               	movwf	___fltol@f1+1
  3274  01D4  1683               	bsf	3,5	;RP0=1, select bank1
  3275  01D5  1303               	bcf	3,6	;RP1=0, select bank1
  3276  01D6  0840               	movf	_valor_entry2^(0+128),w
  3277  01D7  1283               	bcf	3,5	;RP0=0, select bank0
  3278  01D8  1303               	bcf	3,6	;RP1=0, select bank0
  3279  01D9  00A0               	movwf	___fltol@f1
  3280  01DA  120A  118A  25AA  120A  118A  	fcall	___fltol
  3281  01DF  1283               	bcf	3,5	;RP0=0, select bank0
  3282  01E0  1303               	bcf	3,6	;RP1=0, select bank0
  3283  01E1  0821               	movf	?___fltol+1,w
  3284  01E2  00B2               	movwf	?_sprintf+6
  3285  01E3  0820               	movf	?___fltol,w
  3286  01E4  00B1               	movwf	?_sprintf+5
  3287  01E5  084F               	movf	_valor_entry3+3,w
  3288  01E6  00A3               	movwf	___fltol@f1+3
  3289  01E7  084E               	movf	_valor_entry3+2,w
  3290  01E8  00A2               	movwf	___fltol@f1+2
  3291  01E9  084D               	movf	_valor_entry3+1,w
  3292  01EA  00A1               	movwf	___fltol@f1+1
  3293  01EB  084C               	movf	_valor_entry3,w
  3294  01EC  00A0               	movwf	___fltol@f1
  3295  01ED  120A  118A  25AA  120A  118A  	fcall	___fltol
  3296  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  3297  01F3  1303               	bcf	3,6	;RP1=0, select bank0
  3298  01F4  0821               	movf	?___fltol+1,w
  3299  01F5  00B4               	movwf	?_sprintf+8
  3300  01F6  0820               	movf	?___fltol,w
  3301  01F7  00B3               	movwf	?_sprintf+7
  3302  01F8  30A0               	movlw	(low (atualizaLCD@buffer0| 0))& (0+255)
  3303  01F9  120A  118A  227E  120A  118A  	fcall	_sprintf
  3304  01FE                     l2341:
  3305                           
  3306                           ;main.c: 259:     Lcd_Write_String(buffer0);
  3307  01FE  30A0               	movlw	(low (atualizaLCD@buffer0| 0))& (0+255)
  3308  01FF  120A  158A  270F  120A  118A  	fcall	_Lcd_Write_String
  3309  0204                     l2343:
  3310                           
  3311                           ;main.c: 260:     _delay((unsigned long)((10)*(4000000/4000.0)));
  3312  0204  300D               	movlw	13
  3313  0205  1283               	bcf	3,5	;RP0=0, select bank0
  3314  0206  1303               	bcf	3,6	;RP1=0, select bank0
  3315  0207  00C0               	movwf	??_atualizaLCD+1
  3316  0208  30FB               	movlw	251
  3317  0209  00BF               	movwf	??_atualizaLCD
  3318  020A                     u2397:
  3319  020A  0BBF               	decfsz	??_atualizaLCD,f
  3320  020B  2A0A               	goto	u2397
  3321  020C  0BC0               	decfsz	??_atualizaLCD+1,f
  3322  020D  2A0A               	goto	u2397
  3323  020E                     l2345:
  3324                           
  3325                           ;main.c: 261:     Lcd_Set_Cursor(2,1);
  3326  020E  1283               	bcf	3,5	;RP0=0, select bank0
  3327  020F  1303               	bcf	3,6	;RP1=0, select bank0
  3328  0210  01A2               	clrf	Lcd_Set_Cursor@b
  3329  0211  0AA2               	incf	Lcd_Set_Cursor@b,f
  3330  0212  3002               	movlw	2
  3331  0213  120A  118A  26F0  120A  118A  	fcall	_Lcd_Set_Cursor
  3332  0218                     l2347:
  3333                           
  3334                           ;main.c: 262:     sprintf(buffer1, "S2:%i S3:%i S4:%i ", (int)valor_entry4, (int)valor_e
      +                          ntry5, (int)valor_entry6);
  3335  0218  3020               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  3336  0219  1283               	bcf	3,5	;RP0=0, select bank0
  3337  021A  1303               	bcf	3,6	;RP1=0, select bank0
  3338  021B  00BF               	movwf	??_atualizaLCD
  3339  021C  083F               	movf	??_atualizaLCD,w
  3340  021D  00AC               	movwf	sprintf@f
  3341  021E  084B               	movf	_valor_entry4+3,w
  3342  021F  00A3               	movwf	___fltol@f1+3
  3343  0220  084A               	movf	_valor_entry4+2,w
  3344  0221  00A2               	movwf	___fltol@f1+2
  3345  0222  0849               	movf	_valor_entry4+1,w
  3346  0223  00A1               	movwf	___fltol@f1+1
  3347  0224  0848               	movf	_valor_entry4,w
  3348  0225  00A0               	movwf	___fltol@f1
  3349  0226  120A  118A  25AA  120A  118A  	fcall	___fltol
  3350  022B  1283               	bcf	3,5	;RP0=0, select bank0
  3351  022C  1303               	bcf	3,6	;RP1=0, select bank0
  3352  022D  0821               	movf	?___fltol+1,w
  3353  022E  00AE               	movwf	?_sprintf+2
  3354  022F  0820               	movf	?___fltol,w
  3355  0230  00AD               	movwf	?_sprintf+1
  3356  0231  0847               	movf	_valor_entry5+3,w
  3357  0232  00A3               	movwf	___fltol@f1+3
  3358  0233  0846               	movf	_valor_entry5+2,w
  3359  0234  00A2               	movwf	___fltol@f1+2
  3360  0235  0845               	movf	_valor_entry5+1,w
  3361  0236  00A1               	movwf	___fltol@f1+1
  3362  0237  0844               	movf	_valor_entry5,w
  3363  0238  00A0               	movwf	___fltol@f1
  3364  0239  120A  118A  25AA  120A  118A  	fcall	___fltol
  3365  023E  1283               	bcf	3,5	;RP0=0, select bank0
  3366  023F  1303               	bcf	3,6	;RP1=0, select bank0
  3367  0240  0821               	movf	?___fltol+1,w
  3368  0241  00B0               	movwf	?_sprintf+4
  3369  0242  0820               	movf	?___fltol,w
  3370  0243  00AF               	movwf	?_sprintf+3
  3371  0244  1683               	bsf	3,5	;RP0=1, select bank1
  3372  0245  1303               	bcf	3,6	;RP1=0, select bank1
  3373  0246  0849               	movf	(_valor_entry6+3)^(0+128),w
  3374  0247  1283               	bcf	3,5	;RP0=0, select bank0
  3375  0248  1303               	bcf	3,6	;RP1=0, select bank0
  3376  0249  00A3               	movwf	___fltol@f1+3
  3377  024A  1683               	bsf	3,5	;RP0=1, select bank1
  3378  024B  1303               	bcf	3,6	;RP1=0, select bank1
  3379  024C  0848               	movf	(_valor_entry6+2)^(0+128),w
  3380  024D  1283               	bcf	3,5	;RP0=0, select bank0
  3381  024E  1303               	bcf	3,6	;RP1=0, select bank0
  3382  024F  00A2               	movwf	___fltol@f1+2
  3383  0250  1683               	bsf	3,5	;RP0=1, select bank1
  3384  0251  1303               	bcf	3,6	;RP1=0, select bank1
  3385  0252  0847               	movf	(_valor_entry6+1)^(0+128),w
  3386  0253  1283               	bcf	3,5	;RP0=0, select bank0
  3387  0254  1303               	bcf	3,6	;RP1=0, select bank0
  3388  0255  00A1               	movwf	___fltol@f1+1
  3389  0256  1683               	bsf	3,5	;RP0=1, select bank1
  3390  0257  1303               	bcf	3,6	;RP1=0, select bank1
  3391  0258  0846               	movf	_valor_entry6^(0+128),w
  3392  0259  1283               	bcf	3,5	;RP0=0, select bank0
  3393  025A  1303               	bcf	3,6	;RP1=0, select bank0
  3394  025B  00A0               	movwf	___fltol@f1
  3395  025C  120A  118A  25AA  120A  118A  	fcall	___fltol
  3396  0261  1283               	bcf	3,5	;RP0=0, select bank0
  3397  0262  1303               	bcf	3,6	;RP1=0, select bank0
  3398  0263  0821               	movf	?___fltol+1,w
  3399  0264  00B2               	movwf	?_sprintf+6
  3400  0265  0820               	movf	?___fltol,w
  3401  0266  00B1               	movwf	?_sprintf+5
  3402  0267  30B0               	movlw	(low (atualizaLCD@buffer1| 0))& (0+255)
  3403  0268  120A  118A  227E  120A  118A  	fcall	_sprintf
  3404  026D                     l2349:
  3405                           
  3406                           ;main.c: 263:     Lcd_Write_String(buffer1);
  3407  026D  30B0               	movlw	(low (atualizaLCD@buffer1| 0))& (0+255)
  3408  026E  120A  158A  270F  120A  118A  	fcall	_Lcd_Write_String
  3409                           
  3410                           ;main.c: 264:     _delay((unsigned long)((10)*(4000000/4000.0)));
  3411  0273  300D               	movlw	13
  3412  0274  1283               	bcf	3,5	;RP0=0, select bank0
  3413  0275  1303               	bcf	3,6	;RP1=0, select bank0
  3414  0276  00C0               	movwf	??_atualizaLCD+1
  3415  0277  30FB               	movlw	251
  3416  0278  00BF               	movwf	??_atualizaLCD
  3417  0279                     u2407:
  3418  0279  0BBF               	decfsz	??_atualizaLCD,f
  3419  027A  2A79               	goto	u2407
  3420  027B  0BC0               	decfsz	??_atualizaLCD+1,f
  3421  027C  2A79               	goto	u2407
  3422  027D                     l214:
  3423  027D  0008               	return
  3424  027E                     __end_of_atualizaLCD:
  3425                           
  3426                           	psect	text14
  3427  027E                     __ptext14:	
  3428 ;; *************** function _sprintf *****************
  3429 ;; Defined at:
  3430 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  3431 ;; Parameters:    Size  Location     Type
  3432 ;;  sp              1    wreg     PTR unsigned char 
  3433 ;;		 -> atualizaLCD@buffer1(16), atualizaLCD@buffer0(16), 
  3434 ;;  f               1   12[BANK0 ] PTR const unsigned char 
  3435 ;;		 -> STR_2(19), STR_1(21), 
  3436 ;; Auto vars:     Size  Location     Type
  3437 ;;  sp              1   29[BANK0 ] PTR unsigned char 
  3438 ;;		 -> atualizaLCD@buffer1(16), atualizaLCD@buffer0(16), 
  3439 ;;  tmpval          4    0        struct .
  3440 ;;  val             2   27[BANK0 ] unsigned int 
  3441 ;;  cp              2    0        PTR const unsigned char 
  3442 ;;  len             2    0        unsigned int 
  3443 ;;  c               1   30[BANK0 ] unsigned char 
  3444 ;;  prec            1   26[BANK0 ] char 
  3445 ;;  flag            1   25[BANK0 ] unsigned char 
  3446 ;;  ap              1   24[BANK0 ] PTR void [1]
  3447 ;;		 -> ?_sprintf(2), 
  3448 ;; Return value:  Size  Location     Type
  3449 ;;                  2   12[BANK0 ] int 
  3450 ;; Registers used:
  3451 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3452 ;; Tracked objects:
  3453 ;;		On entry : 0/0
  3454 ;;		On exit  : 0/0
  3455 ;;		Unchanged: 0/0
  3456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3457 ;;      Params:         0       9       0       0       0
  3458 ;;      Locals:         0       7       0       0       0
  3459 ;;      Temps:          0       3       0       0       0
  3460 ;;      Totals:         0      19       0       0       0
  3461 ;;Total ram usage:       19 bytes
  3462 ;; Hardware stack levels used: 1
  3463 ;; Hardware stack levels required when called: 3
  3464 ;; This function calls:
  3465 ;;		___lwdiv
  3466 ;;		___lwmod
  3467 ;; This function is called by:
  3468 ;;		_atualizaLCD
  3469 ;; This function uses a non-reentrant model
  3470 ;;
  3471                           
  3472                           
  3473                           ;psect for function _sprintf
  3474  027E                     _sprintf:
  3475                           
  3476                           ;incstack = 0
  3477                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3478                           ;sprintf@sp stored from wreg
  3479  027E  1283               	bcf	3,5	;RP0=0, select bank0
  3480  027F  1303               	bcf	3,6	;RP1=0, select bank0
  3481  0280  00BD               	movwf	sprintf@sp
  3482  0281                     l2097:
  3483                           
  3484                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  3485  0281  302D               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  3486  0282  00B5               	movwf	??_sprintf
  3487  0283  0835               	movf	??_sprintf,w
  3488  0284  00B8               	movwf	sprintf@ap
  3489                           
  3490                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3491  0285  2B51               	goto	l2149
  3492  0286                     l2099:
  3493                           
  3494                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  3495  0286  3025               	movlw	37
  3496  0287  063E               	xorwf	sprintf@c,w
  3497  0288  1903               	btfsc	3,2
  3498  0289  2A8B               	goto	u1851
  3499  028A  2A8C               	goto	u1850
  3500  028B                     u1851:
  3501  028B  2A98               	goto	l2105
  3502  028C                     u1850:
  3503  028C                     l2101:
  3504                           
  3505                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  3506  028C  083E               	movf	sprintf@c,w
  3507  028D  00B5               	movwf	??_sprintf
  3508  028E  083D               	movf	sprintf@sp,w
  3509  028F  0084               	movwf	4
  3510  0290  0835               	movf	??_sprintf,w
  3511  0291  1383               	bcf	3,7	;select IRP bank0
  3512  0292  0080               	movwf	0
  3513  0293                     l2103:
  3514  0293  3001               	movlw	1
  3515  0294  00B5               	movwf	??_sprintf
  3516  0295  0835               	movf	??_sprintf,w
  3517  0296  07BD               	addwf	sprintf@sp,f
  3518                           
  3519                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 559:    continue;
  3520  0297  2B51               	goto	l2149
  3521  0298                     l2105:
  3522                           
  3523                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  3524  0298  01B9               	clrf	sprintf@flag
  3525  0299                     l2109:	
  3526                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  3527                           
  3528  0299  3001               	movlw	1
  3529  029A  07AC               	addwf	sprintf@f,f
  3530  029B  30FF               	movlw	-1
  3531  029C  072C               	addwf	sprintf@f,w
  3532  029D  0084               	movwf	4
  3533  029E  120A  158A  2000  120A  118A  	fcall	stringdir
  3534  02A3  00BE               	movwf	sprintf@c
  3535  02A4  00B5               	movwf	??_sprintf
  3536  02A5  01B6               	clrf	??_sprintf+1
  3537                           
  3538                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3539                           ; Switch size 1, requested type "simple"
  3540                           ; Number of cases is 1, Range of values is 0 to 0
  3541                           ; switch strategies available:
  3542                           ; Name         Instructions Cycles
  3543                           ; simple_byte            4     3 (average)
  3544                           ; direct_byte           11     8 (fixed)
  3545                           ; jumptable            260     6 (fixed)
  3546                           ;	Chosen strategy is simple_byte
  3547  02A6  0836               	movf	??_sprintf+1,w
  3548  02A7  3A00               	xorlw	0	; case 0
  3549  02A8  1903               	skipnz
  3550  02A9  2AAB               	goto	l2437
  3551  02AA  2B51               	goto	l2149
  3552  02AB                     l2437:
  3553                           
  3554                           ; Switch size 1, requested type "simple"
  3555                           ; Number of cases is 3, Range of values is 0 to 105
  3556                           ; switch strategies available:
  3557                           ; Name         Instructions Cycles
  3558                           ; simple_byte           10     6 (average)
  3559                           ; jumptable            260     6 (fixed)
  3560                           ;	Chosen strategy is simple_byte
  3561  02AB  0835               	movf	??_sprintf,w
  3562  02AC  3A00               	xorlw	0	; case 0
  3563  02AD  1903               	skipnz
  3564  02AE  2B63               	goto	l2151
  3565  02AF  3A64               	xorlw	100	; case 100
  3566  02B0  1903               	skipnz
  3567  02B1  2AB6               	goto	l2111
  3568  02B2  3A0D               	xorlw	13	; case 105
  3569  02B3  1903               	skipnz
  3570  02B4  2AB6               	goto	l2111
  3571  02B5  2B51               	goto	l2149
  3572  02B6                     l2111:
  3573                           
  3574                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3575  02B6  0838               	movf	sprintf@ap,w
  3576  02B7  0084               	movwf	4
  3577  02B8  1383               	bcf	3,7	;select IRP bank0
  3578  02B9  0800               	movf	0,w
  3579  02BA  00BB               	movwf	sprintf@val
  3580  02BB  0A84               	incf	4,f
  3581  02BC  0800               	movf	0,w
  3582  02BD  00BC               	movwf	sprintf@val+1
  3583  02BE                     l2113:
  3584  02BE  3002               	movlw	2
  3585  02BF  00B5               	movwf	??_sprintf
  3586  02C0  0835               	movf	??_sprintf,w
  3587  02C1  07B8               	addwf	sprintf@ap,f
  3588  02C2                     l2115:
  3589                           
  3590                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  3591  02C2  1FBC               	btfss	sprintf@val+1,7
  3592  02C3  2AC5               	goto	u1861
  3593  02C4  2AC6               	goto	u1860
  3594  02C5                     u1861:
  3595  02C5  2ACF               	goto	l2121
  3596  02C6                     u1860:
  3597  02C6                     l2117:
  3598                           
  3599                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  3600  02C6  3003               	movlw	3
  3601  02C7  00B5               	movwf	??_sprintf
  3602  02C8  0835               	movf	??_sprintf,w
  3603  02C9  04B9               	iorwf	sprintf@flag,f
  3604  02CA                     l2119:
  3605                           
  3606                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  3607  02CA  09BB               	comf	sprintf@val,f
  3608  02CB  09BC               	comf	sprintf@val+1,f
  3609  02CC  0ABB               	incf	sprintf@val,f
  3610  02CD  1903               	skipnz
  3611  02CE  0ABC               	incf	sprintf@val+1,f
  3612  02CF                     l2121:
  3613                           
  3614                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  3615  02CF  01BE               	clrf	sprintf@c
  3616  02D0  0ABE               	incf	sprintf@c,f
  3617  02D1                     l2127:
  3618                           
  3619                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  3620  02D1  083E               	movf	sprintf@c,w
  3621  02D2  00B5               	movwf	??_sprintf
  3622  02D3  0735               	addwf	??_sprintf,w
  3623  02D4  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3624  02D5  0084               	movwf	4
  3625  02D6  120A  158A  2000  120A  118A  	fcall	stringdir
  3626  02DB  00B6               	movwf	??_sprintf+1
  3627  02DC  120A  158A  2000  120A  118A  	fcall	stringdir
  3628  02E1  00B7               	movwf	??_sprintf+2
  3629  02E2  0837               	movf	??_sprintf+2,w
  3630  02E3  023C               	subwf	sprintf@val+1,w
  3631  02E4  1D03               	skipz
  3632  02E5  2AE8               	goto	u1875
  3633  02E6  0836               	movf	??_sprintf+1,w
  3634  02E7  023B               	subwf	sprintf@val,w
  3635  02E8                     u1875:
  3636  02E8  1803               	skipnc
  3637  02E9  2AEB               	goto	u1871
  3638  02EA  2AEC               	goto	u1870
  3639  02EB                     u1871:
  3640  02EB  2AED               	goto	l2131
  3641  02EC                     u1870:
  3642  02EC  2AF7               	goto	l2133
  3643  02ED                     l2131:
  3644  02ED  3001               	movlw	1
  3645  02EE  00B5               	movwf	??_sprintf
  3646  02EF  0835               	movf	??_sprintf,w
  3647  02F0  07BE               	addwf	sprintf@c,f
  3648  02F1  3005               	movlw	5
  3649  02F2  063E               	xorwf	sprintf@c,w
  3650  02F3  1D03               	btfss	3,2
  3651  02F4  2AF6               	goto	u1881
  3652  02F5  2AF7               	goto	u1880
  3653  02F6                     u1881:
  3654  02F6  2AD1               	goto	l2127
  3655  02F7                     u1880:
  3656  02F7                     l2133:
  3657                           
  3658                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  3659  02F7  0839               	movf	sprintf@flag,w
  3660  02F8  3903               	andlw	3
  3661  02F9  1903               	btfsc	3,2
  3662  02FA  2AFC               	goto	u1891
  3663  02FB  2AFD               	goto	u1890
  3664  02FC                     u1891:
  3665  02FC  2B08               	goto	l2139
  3666  02FD                     u1890:
  3667  02FD                     l2135:
  3668                           
  3669                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3670  02FD  302D               	movlw	45
  3671  02FE  00B5               	movwf	??_sprintf
  3672  02FF  083D               	movf	sprintf@sp,w
  3673  0300  0084               	movwf	4
  3674  0301  0835               	movf	??_sprintf,w
  3675  0302  1383               	bcf	3,7	;select IRP bank0
  3676  0303  0080               	movwf	0
  3677  0304                     l2137:
  3678  0304  3001               	movlw	1
  3679  0305  00B5               	movwf	??_sprintf
  3680  0306  0835               	movf	??_sprintf,w
  3681  0307  07BD               	addwf	sprintf@sp,f
  3682  0308                     l2139:
  3683                           
  3684                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  3685  0308  083E               	movf	sprintf@c,w
  3686  0309  00B5               	movwf	??_sprintf
  3687  030A  0835               	movf	??_sprintf,w
  3688  030B  00BA               	movwf	sprintf@prec
  3689                           
  3690                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3691  030C  2B48               	goto	l2147
  3692  030D                     l2141:
  3693                           
  3694                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  3695  030D  300A               	movlw	10
  3696  030E  00A7               	movwf	___lwmod@divisor
  3697  030F  3000               	movlw	0
  3698  0310  00A8               	movwf	___lwmod@divisor+1
  3699  0311  083A               	movf	sprintf@prec,w
  3700  0312  00B5               	movwf	??_sprintf
  3701  0313  0735               	addwf	??_sprintf,w
  3702  0314  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3703  0315  0084               	movwf	4
  3704  0316  120A  158A  2000  120A  118A  	fcall	stringdir
  3705  031B  00A0               	movwf	___lwdiv@divisor
  3706  031C  120A  158A  2000  120A  118A  	fcall	stringdir
  3707  0321  00A1               	movwf	___lwdiv@divisor+1
  3708  0322  083C               	movf	sprintf@val+1,w
  3709  0323  00A3               	movwf	___lwdiv@dividend+1
  3710  0324  083B               	movf	sprintf@val,w
  3711  0325  00A2               	movwf	___lwdiv@dividend
  3712  0326  120A  118A  279A  120A  118A  	fcall	___lwdiv
  3713  032B  1283               	bcf	3,5	;RP0=0, select bank0
  3714  032C  1303               	bcf	3,6	;RP1=0, select bank0
  3715  032D  0821               	movf	?___lwdiv+1,w
  3716  032E  00AA               	movwf	___lwmod@dividend+1
  3717  032F  0820               	movf	?___lwdiv,w
  3718  0330  00A9               	movwf	___lwmod@dividend
  3719  0331  120A  158A  27C4  120A  118A  	fcall	___lwmod
  3720  0336  1283               	bcf	3,5	;RP0=0, select bank0
  3721  0337  1303               	bcf	3,6	;RP1=0, select bank0
  3722  0338  0827               	movf	?___lwmod,w
  3723  0339  3E30               	addlw	48
  3724  033A  00B6               	movwf	??_sprintf+1
  3725  033B  0836               	movf	??_sprintf+1,w
  3726  033C  00BE               	movwf	sprintf@c
  3727  033D                     l2143:
  3728                           
  3729                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  3730  033D  083E               	movf	sprintf@c,w
  3731  033E  00B5               	movwf	??_sprintf
  3732  033F  083D               	movf	sprintf@sp,w
  3733  0340  0084               	movwf	4
  3734  0341  0835               	movf	??_sprintf,w
  3735  0342  1383               	bcf	3,7	;select IRP bank0
  3736  0343  0080               	movwf	0
  3737  0344                     l2145:
  3738  0344  3001               	movlw	1
  3739  0345  00B5               	movwf	??_sprintf
  3740  0346  0835               	movf	??_sprintf,w
  3741  0347  07BD               	addwf	sprintf@sp,f
  3742  0348                     l2147:
  3743                           
  3744                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3745  0348  30FF               	movlw	255
  3746  0349  00B5               	movwf	??_sprintf
  3747  034A  0835               	movf	??_sprintf,w
  3748  034B  07BA               	addwf	sprintf@prec,f
  3749  034C  0A3A               	incf	sprintf@prec,w
  3750  034D  1D03               	btfss	3,2
  3751  034E  2B50               	goto	u1901
  3752  034F  2B51               	goto	u1900
  3753  0350                     u1901:
  3754  0350  2B0D               	goto	l2141
  3755  0351                     u1900:
  3756  0351                     l2149:
  3757                           
  3758                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3759  0351  3001               	movlw	1
  3760  0352  07AC               	addwf	sprintf@f,f
  3761  0353  30FF               	movlw	-1
  3762  0354  072C               	addwf	sprintf@f,w
  3763  0355  0084               	movwf	4
  3764  0356  120A  158A  2000  120A  118A  	fcall	stringdir
  3765  035B  00B5               	movwf	??_sprintf
  3766  035C  0835               	movf	??_sprintf,w
  3767  035D  00BE               	movwf	sprintf@c
  3768  035E  083E               	movf	sprintf@c,w
  3769  035F  1D03               	btfss	3,2
  3770  0360  2B62               	goto	u1911
  3771  0361  2B63               	goto	u1910
  3772  0362                     u1911:
  3773  0362  2A86               	goto	l2099
  3774  0363                     u1910:
  3775  0363                     l2151:
  3776                           
  3777                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3778  0363  083D               	movf	sprintf@sp,w
  3779  0364  0084               	movwf	4
  3780  0365  1383               	bcf	3,7	;select IRP bank0
  3781  0366  0180               	clrf	0
  3782  0367                     l357:
  3783  0367  0008               	return
  3784  0368                     __end_of_sprintf:
  3785                           
  3786                           	psect	text15
  3787  0FC4                     __ptext15:	
  3788 ;; *************** function ___lwmod *****************
  3789 ;; Defined at:
  3790 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  3791 ;; Parameters:    Size  Location     Type
  3792 ;;  divisor         2    7[BANK0 ] unsigned int 
  3793 ;;  dividend        2    9[BANK0 ] unsigned int 
  3794 ;; Auto vars:     Size  Location     Type
  3795 ;;  counter         1   11[BANK0 ] unsigned char 
  3796 ;; Return value:  Size  Location     Type
  3797 ;;                  2    7[BANK0 ] unsigned int 
  3798 ;; Registers used:
  3799 ;;		wreg, status,2, status,0
  3800 ;; Tracked objects:
  3801 ;;		On entry : 0/0
  3802 ;;		On exit  : 0/0
  3803 ;;		Unchanged: 0/0
  3804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3805 ;;      Params:         0       4       0       0       0
  3806 ;;      Locals:         0       1       0       0       0
  3807 ;;      Temps:          1       0       0       0       0
  3808 ;;      Totals:         1       5       0       0       0
  3809 ;;Total ram usage:        6 bytes
  3810 ;; Hardware stack levels used: 1
  3811 ;; Hardware stack levels required when called: 2
  3812 ;; This function calls:
  3813 ;;		Nothing
  3814 ;; This function is called by:
  3815 ;;		_sprintf
  3816 ;; This function uses a non-reentrant model
  3817 ;;
  3818                           
  3819                           
  3820                           ;psect for function ___lwmod
  3821  0FC4                     ___lwmod:
  3822  0FC4                     l2045:	
  3823                           ;incstack = 0
  3824                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3825                           
  3826  0FC4  1283               	bcf	3,5	;RP0=0, select bank0
  3827  0FC5  1303               	bcf	3,6	;RP1=0, select bank0
  3828  0FC6  0827               	movf	___lwmod@divisor,w
  3829  0FC7  0428               	iorwf	___lwmod@divisor+1,w
  3830  0FC8  1903               	btfsc	3,2
  3831  0FC9  2FCB               	goto	u1741
  3832  0FCA  2FCC               	goto	u1740
  3833  0FCB                     u1741:
  3834  0FCB  2FFB               	goto	l2063
  3835  0FCC                     u1740:
  3836  0FCC                     l2047:
  3837  0FCC  01AB               	clrf	___lwmod@counter
  3838  0FCD  0AAB               	incf	___lwmod@counter,f
  3839  0FCE  2FDA               	goto	l2053
  3840  0FCF                     l2049:
  3841  0FCF  3001               	movlw	1
  3842  0FD0                     u1755:
  3843  0FD0  1003               	clrc
  3844  0FD1  0DA7               	rlf	___lwmod@divisor,f
  3845  0FD2  0DA8               	rlf	___lwmod@divisor+1,f
  3846  0FD3  3EFF               	addlw	-1
  3847  0FD4  1D03               	skipz
  3848  0FD5  2FD0               	goto	u1755
  3849  0FD6                     l2051:
  3850  0FD6  3001               	movlw	1
  3851  0FD7  00F5               	movwf	??___lwmod
  3852  0FD8  0875               	movf	??___lwmod,w
  3853  0FD9  07AB               	addwf	___lwmod@counter,f
  3854  0FDA                     l2053:
  3855  0FDA  1FA8               	btfss	___lwmod@divisor+1,7
  3856  0FDB  2FDD               	goto	u1761
  3857  0FDC  2FDE               	goto	u1760
  3858  0FDD                     u1761:
  3859  0FDD  2FCF               	goto	l2049
  3860  0FDE                     u1760:
  3861  0FDE                     l2055:
  3862  0FDE  0828               	movf	___lwmod@divisor+1,w
  3863  0FDF  022A               	subwf	___lwmod@dividend+1,w
  3864  0FE0  1D03               	skipz
  3865  0FE1  2FE4               	goto	u1775
  3866  0FE2  0827               	movf	___lwmod@divisor,w
  3867  0FE3  0229               	subwf	___lwmod@dividend,w
  3868  0FE4                     u1775:
  3869  0FE4  1C03               	skipc
  3870  0FE5  2FE7               	goto	u1771
  3871  0FE6  2FE8               	goto	u1770
  3872  0FE7                     u1771:
  3873  0FE7  2FEE               	goto	l2059
  3874  0FE8                     u1770:
  3875  0FE8                     l2057:
  3876  0FE8  0827               	movf	___lwmod@divisor,w
  3877  0FE9  02A9               	subwf	___lwmod@dividend,f
  3878  0FEA  0828               	movf	___lwmod@divisor+1,w
  3879  0FEB  1C03               	skipc
  3880  0FEC  03AA               	decf	___lwmod@dividend+1,f
  3881  0FED  02AA               	subwf	___lwmod@dividend+1,f
  3882  0FEE                     l2059:
  3883  0FEE  3001               	movlw	1
  3884  0FEF                     u1785:
  3885  0FEF  1003               	clrc
  3886  0FF0  0CA8               	rrf	___lwmod@divisor+1,f
  3887  0FF1  0CA7               	rrf	___lwmod@divisor,f
  3888  0FF2  3EFF               	addlw	-1
  3889  0FF3  1D03               	skipz
  3890  0FF4  2FEF               	goto	u1785
  3891  0FF5                     l2061:
  3892  0FF5  3001               	movlw	1
  3893  0FF6  02AB               	subwf	___lwmod@counter,f
  3894  0FF7  1D03               	btfss	3,2
  3895  0FF8  2FFA               	goto	u1791
  3896  0FF9  2FFB               	goto	u1790
  3897  0FFA                     u1791:
  3898  0FFA  2FDE               	goto	l2055
  3899  0FFB                     u1790:
  3900  0FFB                     l2063:
  3901  0FFB  082A               	movf	___lwmod@dividend+1,w
  3902  0FFC  00A8               	movwf	?___lwmod+1
  3903  0FFD  0829               	movf	___lwmod@dividend,w
  3904  0FFE  00A7               	movwf	?___lwmod
  3905  0FFF                     l643:
  3906  0FFF  0008               	return
  3907  1000                     __end_of___lwmod:
  3908                           
  3909                           	psect	text16
  3910  079A                     __ptext16:	
  3911 ;; *************** function ___lwdiv *****************
  3912 ;; Defined at:
  3913 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  3914 ;; Parameters:    Size  Location     Type
  3915 ;;  divisor         2    0[BANK0 ] unsigned int 
  3916 ;;  dividend        2    2[BANK0 ] unsigned int 
  3917 ;; Auto vars:     Size  Location     Type
  3918 ;;  quotient        2    5[BANK0 ] unsigned int 
  3919 ;;  counter         1    4[BANK0 ] unsigned char 
  3920 ;; Return value:  Size  Location     Type
  3921 ;;                  2    0[BANK0 ] unsigned int 
  3922 ;; Registers used:
  3923 ;;		wreg, status,2, status,0
  3924 ;; Tracked objects:
  3925 ;;		On entry : 0/0
  3926 ;;		On exit  : 0/0
  3927 ;;		Unchanged: 0/0
  3928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3929 ;;      Params:         0       4       0       0       0
  3930 ;;      Locals:         0       3       0       0       0
  3931 ;;      Temps:          1       0       0       0       0
  3932 ;;      Totals:         1       7       0       0       0
  3933 ;;Total ram usage:        8 bytes
  3934 ;; Hardware stack levels used: 1
  3935 ;; Hardware stack levels required when called: 2
  3936 ;; This function calls:
  3937 ;;		Nothing
  3938 ;; This function is called by:
  3939 ;;		_sprintf
  3940 ;; This function uses a non-reentrant model
  3941 ;;
  3942                           
  3943                           
  3944                           ;psect for function ___lwdiv
  3945  079A                     ___lwdiv:
  3946  079A                     l2019:	
  3947                           ;incstack = 0
  3948                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3949                           
  3950  079A  1283               	bcf	3,5	;RP0=0, select bank0
  3951  079B  1303               	bcf	3,6	;RP1=0, select bank0
  3952  079C  01A5               	clrf	___lwdiv@quotient
  3953  079D  01A6               	clrf	___lwdiv@quotient+1
  3954  079E                     l2021:
  3955  079E  0820               	movf	___lwdiv@divisor,w
  3956  079F  0421               	iorwf	___lwdiv@divisor+1,w
  3957  07A0  1903               	btfsc	3,2
  3958  07A1  2FA3               	goto	u1671
  3959  07A2  2FA4               	goto	u1670
  3960  07A3                     u1671:
  3961  07A3  2FDB               	goto	l2041
  3962  07A4                     u1670:
  3963  07A4                     l2023:
  3964  07A4  01A4               	clrf	___lwdiv@counter
  3965  07A5  0AA4               	incf	___lwdiv@counter,f
  3966  07A6  2FB2               	goto	l2029
  3967  07A7                     l2025:
  3968  07A7  3001               	movlw	1
  3969  07A8                     u1685:
  3970  07A8  1003               	clrc
  3971  07A9  0DA0               	rlf	___lwdiv@divisor,f
  3972  07AA  0DA1               	rlf	___lwdiv@divisor+1,f
  3973  07AB  3EFF               	addlw	-1
  3974  07AC  1D03               	skipz
  3975  07AD  2FA8               	goto	u1685
  3976  07AE                     l2027:
  3977  07AE  3001               	movlw	1
  3978  07AF  00F4               	movwf	??___lwdiv
  3979  07B0  0874               	movf	??___lwdiv,w
  3980  07B1  07A4               	addwf	___lwdiv@counter,f
  3981  07B2                     l2029:
  3982  07B2  1FA1               	btfss	___lwdiv@divisor+1,7
  3983  07B3  2FB5               	goto	u1691
  3984  07B4  2FB6               	goto	u1690
  3985  07B5                     u1691:
  3986  07B5  2FA7               	goto	l2025
  3987  07B6                     u1690:
  3988  07B6                     l2031:
  3989  07B6  3001               	movlw	1
  3990  07B7                     u1705:
  3991  07B7  1003               	clrc
  3992  07B8  0DA5               	rlf	___lwdiv@quotient,f
  3993  07B9  0DA6               	rlf	___lwdiv@quotient+1,f
  3994  07BA  3EFF               	addlw	-1
  3995  07BB  1D03               	skipz
  3996  07BC  2FB7               	goto	u1705
  3997  07BD  0821               	movf	___lwdiv@divisor+1,w
  3998  07BE  0223               	subwf	___lwdiv@dividend+1,w
  3999  07BF  1D03               	skipz
  4000  07C0  2FC3               	goto	u1715
  4001  07C1  0820               	movf	___lwdiv@divisor,w
  4002  07C2  0222               	subwf	___lwdiv@dividend,w
  4003  07C3                     u1715:
  4004  07C3  1C03               	skipc
  4005  07C4  2FC6               	goto	u1711
  4006  07C5  2FC7               	goto	u1710
  4007  07C6                     u1711:
  4008  07C6  2FCE               	goto	l2037
  4009  07C7                     u1710:
  4010  07C7                     l2033:
  4011  07C7  0820               	movf	___lwdiv@divisor,w
  4012  07C8  02A2               	subwf	___lwdiv@dividend,f
  4013  07C9  0821               	movf	___lwdiv@divisor+1,w
  4014  07CA  1C03               	skipc
  4015  07CB  03A3               	decf	___lwdiv@dividend+1,f
  4016  07CC  02A3               	subwf	___lwdiv@dividend+1,f
  4017  07CD                     l2035:
  4018  07CD  1425               	bsf	___lwdiv@quotient,0
  4019  07CE                     l2037:
  4020  07CE  3001               	movlw	1
  4021  07CF                     u1725:
  4022  07CF  1003               	clrc
  4023  07D0  0CA1               	rrf	___lwdiv@divisor+1,f
  4024  07D1  0CA0               	rrf	___lwdiv@divisor,f
  4025  07D2  3EFF               	addlw	-1
  4026  07D3  1D03               	skipz
  4027  07D4  2FCF               	goto	u1725
  4028  07D5                     l2039:
  4029  07D5  3001               	movlw	1
  4030  07D6  02A4               	subwf	___lwdiv@counter,f
  4031  07D7  1D03               	btfss	3,2
  4032  07D8  2FDA               	goto	u1731
  4033  07D9  2FDB               	goto	u1730
  4034  07DA                     u1731:
  4035  07DA  2FB6               	goto	l2031
  4036  07DB                     u1730:
  4037  07DB                     l2041:
  4038  07DB  0826               	movf	___lwdiv@quotient+1,w
  4039  07DC  00A1               	movwf	?___lwdiv+1
  4040  07DD  0825               	movf	___lwdiv@quotient,w
  4041  07DE  00A0               	movwf	?___lwdiv
  4042  07DF                     l633:
  4043  07DF  0008               	return
  4044  07E0                     __end_of___lwdiv:
  4045                           
  4046                           	psect	text17
  4047  05AA                     __ptext17:	
  4048 ;; *************** function ___fltol *****************
  4049 ;; Defined at:
  4050 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fltol.c"
  4051 ;; Parameters:    Size  Location     Type
  4052 ;;  f1              4    0[BANK0 ] unsigned int 
  4053 ;; Auto vars:     Size  Location     Type
  4054 ;;  exp1            1    5[COMMON] unsigned char 
  4055 ;;  sign1           1    4[COMMON] unsigned char 
  4056 ;; Return value:  Size  Location     Type
  4057 ;;                  4    0[BANK0 ] long 
  4058 ;; Registers used:
  4059 ;;		wreg, status,2, status,0
  4060 ;; Tracked objects:
  4061 ;;		On entry : 0/0
  4062 ;;		On exit  : 0/0
  4063 ;;		Unchanged: 0/0
  4064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4065 ;;      Params:         0       4       0       0       0
  4066 ;;      Locals:         2       0       0       0       0
  4067 ;;      Temps:          0       5       0       0       0
  4068 ;;      Totals:         2       9       0       0       0
  4069 ;;Total ram usage:       11 bytes
  4070 ;; Hardware stack levels used: 1
  4071 ;; Hardware stack levels required when called: 2
  4072 ;; This function calls:
  4073 ;;		Nothing
  4074 ;; This function is called by:
  4075 ;;		_main
  4076 ;;		_atualizaLCD
  4077 ;; This function uses a non-reentrant model
  4078 ;;
  4079                           
  4080                           
  4081                           ;psect for function ___fltol
  4082  05AA                     ___fltol:
  4083  05AA                     l2175:	
  4084                           ;incstack = 0
  4085                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  4086                           
  4087  05AA  1003               	clrc
  4088  05AB  1283               	bcf	3,5	;RP0=0, select bank0
  4089  05AC  1303               	bcf	3,6	;RP1=0, select bank0
  4090  05AD  0D22               	rlf	___fltol@f1+2,w
  4091  05AE  0D23               	rlf	___fltol@f1+3,w
  4092  05AF  00A4               	movwf	??___fltol
  4093  05B0  0824               	movf	??___fltol,w
  4094  05B1  00F5               	movwf	___fltol@exp1
  4095  05B2  0875               	movf	___fltol@exp1,w
  4096  05B3  1D03               	btfss	3,2
  4097  05B4  2DB6               	goto	u1961
  4098  05B5  2DB7               	goto	u1960
  4099  05B6                     u1961:
  4100  05B6  2DC0               	goto	l2181
  4101  05B7                     u1960:
  4102  05B7                     l2177:
  4103  05B7  3000               	movlw	0
  4104  05B8  00A3               	movwf	?___fltol+3
  4105  05B9  3000               	movlw	0
  4106  05BA  00A2               	movwf	?___fltol+2
  4107  05BB  3000               	movlw	0
  4108  05BC  00A1               	movwf	?___fltol+1
  4109  05BD  3000               	movlw	0
  4110  05BE  00A0               	movwf	?___fltol
  4111  05BF  2E25               	goto	l547
  4112  05C0                     l2181:
  4113  05C0  0820               	movf	___fltol@f1,w
  4114  05C1  00A4               	movwf	??___fltol
  4115  05C2  0821               	movf	___fltol@f1+1,w
  4116  05C3  00A5               	movwf	??___fltol+1
  4117  05C4  0822               	movf	___fltol@f1+2,w
  4118  05C5  00A6               	movwf	??___fltol+2
  4119  05C6  0823               	movf	___fltol@f1+3,w
  4120  05C7  00A7               	movwf	??___fltol+3
  4121  05C8  301F               	movlw	31
  4122  05C9                     u1975:
  4123  05C9  1003               	clrc
  4124  05CA  0CA7               	rrf	??___fltol+3,f
  4125  05CB  0CA6               	rrf	??___fltol+2,f
  4126  05CC  0CA5               	rrf	??___fltol+1,f
  4127  05CD  0CA4               	rrf	??___fltol,f
  4128  05CE                     u1970:
  4129  05CE  3EFF               	addlw	-1
  4130  05CF  1D03               	skipz
  4131  05D0  2DC9               	goto	u1975
  4132  05D1  0824               	movf	??___fltol,w
  4133  05D2  00A8               	movwf	??___fltol+4
  4134  05D3  0828               	movf	??___fltol+4,w
  4135  05D4  00F4               	movwf	___fltol@sign1
  4136  05D5                     l2183:
  4137  05D5  17A2               	bsf	___fltol@f1+2,7
  4138  05D6                     l2185:
  4139  05D6  30FF               	movlw	255
  4140  05D7  05A0               	andwf	___fltol@f1,f
  4141  05D8  30FF               	movlw	255
  4142  05D9  05A1               	andwf	___fltol@f1+1,f
  4143  05DA  30FF               	movlw	255
  4144  05DB  05A2               	andwf	___fltol@f1+2,f
  4145  05DC  3000               	movlw	0
  4146  05DD  05A3               	andwf	___fltol@f1+3,f
  4147  05DE                     l2187:
  4148  05DE  3096               	movlw	150
  4149  05DF  02F5               	subwf	___fltol@exp1,f
  4150  05E0                     l2189:
  4151  05E0  1FF5               	btfss	___fltol@exp1,7
  4152  05E1  2DE3               	goto	u1981
  4153  05E2  2DE4               	goto	u1980
  4154  05E3                     u1981:
  4155  05E3  2DFE               	goto	l2199
  4156  05E4                     u1980:
  4157  05E4                     l2191:
  4158  05E4  0875               	movf	___fltol@exp1,w
  4159  05E5  3A80               	xorlw	128
  4160  05E6  3E97               	addlw	151
  4161  05E7  1803               	skipnc
  4162  05E8  2DEA               	goto	u1991
  4163  05E9  2DEB               	goto	u1990
  4164  05EA                     u1991:
  4165  05EA  2DEC               	goto	l2197
  4166  05EB                     u1990:
  4167  05EB  2DB7               	goto	l2177
  4168  05EC                     l2197:
  4169  05EC  3001               	movlw	1
  4170  05ED                     u2005:
  4171  05ED  1003               	clrc
  4172  05EE  0CA3               	rrf	___fltol@f1+3,f
  4173  05EF  0CA2               	rrf	___fltol@f1+2,f
  4174  05F0  0CA1               	rrf	___fltol@f1+1,f
  4175  05F1  0CA0               	rrf	___fltol@f1,f
  4176  05F2  3EFF               	addlw	-1
  4177  05F3  1D03               	skipz
  4178  05F4  2DED               	goto	u2005
  4179  05F5  3001               	movlw	1
  4180  05F6  00A4               	movwf	??___fltol
  4181  05F7  0824               	movf	??___fltol,w
  4182  05F8  07F5               	addwf	___fltol@exp1,f
  4183  05F9  1D03               	btfss	3,2
  4184  05FA  2DFC               	goto	u2011
  4185  05FB  2DFD               	goto	u2010
  4186  05FC                     u2011:
  4187  05FC  2DEC               	goto	l2197
  4188  05FD                     u2010:
  4189  05FD  2E15               	goto	l2207
  4190  05FE                     l2199:
  4191  05FE  3020               	movlw	32
  4192  05FF  0275               	subwf	___fltol@exp1,w
  4193  0600  1C03               	skipc
  4194  0601  2E03               	goto	u2021
  4195  0602  2E04               	goto	u2020
  4196  0603                     u2021:
  4197  0603  2E10               	goto	l554
  4198  0604                     u2020:
  4199  0604  2DB7               	goto	l2177
  4200  0605                     l2205:
  4201  0605  3001               	movlw	1
  4202  0606  00A4               	movwf	??___fltol
  4203  0607                     u2035:
  4204  0607  1003               	clrc
  4205  0608  0DA0               	rlf	___fltol@f1,f
  4206  0609  0DA1               	rlf	___fltol@f1+1,f
  4207  060A  0DA2               	rlf	___fltol@f1+2,f
  4208  060B  0DA3               	rlf	___fltol@f1+3,f
  4209  060C  0BA4               	decfsz	??___fltol,f
  4210  060D  2E07               	goto	u2035
  4211  060E  3001               	movlw	1
  4212  060F  02F5               	subwf	___fltol@exp1,f
  4213  0610                     l554:
  4214  0610  0875               	movf	___fltol@exp1,w
  4215  0611  1D03               	btfss	3,2
  4216  0612  2E14               	goto	u2041
  4217  0613  2E15               	goto	u2040
  4218  0614                     u2041:
  4219  0614  2E05               	goto	l2205
  4220  0615                     u2040:
  4221  0615                     l2207:
  4222  0615  0874               	movf	___fltol@sign1,w
  4223  0616  1903               	btfsc	3,2
  4224  0617  2E19               	goto	u2051
  4225  0618  2E1A               	goto	u2050
  4226  0619                     u2051:
  4227  0619  2E25               	goto	l557
  4228  061A                     u2050:
  4229  061A                     l2209:
  4230  061A  09A0               	comf	___fltol@f1,f
  4231  061B  09A1               	comf	___fltol@f1+1,f
  4232  061C  09A2               	comf	___fltol@f1+2,f
  4233  061D  09A3               	comf	___fltol@f1+3,f
  4234  061E  0AA0               	incf	___fltol@f1,f
  4235  061F  1903               	skipnz
  4236  0620  0AA1               	incf	___fltol@f1+1,f
  4237  0621  1903               	skipnz
  4238  0622  0AA2               	incf	___fltol@f1+2,f
  4239  0623  1903               	skipnz
  4240  0624  0AA3               	incf	___fltol@f1+3,f
  4241  0625                     l557:
  4242  0625                     l547:
  4243  0625  0008               	return
  4244  0626                     __end_of___fltol:
  4245                           
  4246                           	psect	text18
  4247  0F0F                     __ptext18:	
  4248 ;; *************** function _Lcd_Write_String *****************
  4249 ;; Defined at:
  4250 ;;		line 97 in file "./lcd.h"
  4251 ;; Parameters:    Size  Location     Type
  4252 ;;  a               1    wreg     PTR unsigned char 
  4253 ;;		 -> atualizaLCD@buffer1(16), atualizaLCD@buffer0(16), 
  4254 ;; Auto vars:     Size  Location     Type
  4255 ;;  a               1    6[BANK0 ] PTR unsigned char 
  4256 ;;		 -> atualizaLCD@buffer1(16), atualizaLCD@buffer0(16), 
  4257 ;;  i               2    4[BANK0 ] int 
  4258 ;; Return value:  Size  Location     Type
  4259 ;;                  1    wreg      void 
  4260 ;; Registers used:
  4261 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4262 ;; Tracked objects:
  4263 ;;		On entry : 0/0
  4264 ;;		On exit  : 0/0
  4265 ;;		Unchanged: 0/0
  4266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4267 ;;      Params:         0       0       0       0       0
  4268 ;;      Locals:         0       3       0       0       0
  4269 ;;      Temps:          0       1       0       0       0
  4270 ;;      Totals:         0       4       0       0       0
  4271 ;;Total ram usage:        4 bytes
  4272 ;; Hardware stack levels used: 1
  4273 ;; Hardware stack levels required when called: 4
  4274 ;; This function calls:
  4275 ;;		_Lcd_Write_Char
  4276 ;; This function is called by:
  4277 ;;		_atualizaLCD
  4278 ;; This function uses a non-reentrant model
  4279 ;;
  4280                           
  4281                           
  4282                           ;psect for function _Lcd_Write_String
  4283  0F0F                     _Lcd_Write_String:
  4284                           
  4285                           ;incstack = 0
  4286                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4287                           ;Lcd_Write_String@a stored from wreg
  4288  0F0F  1283               	bcf	3,5	;RP0=0, select bank0
  4289  0F10  1303               	bcf	3,6	;RP1=0, select bank0
  4290  0F11  00A6               	movwf	Lcd_Write_String@a
  4291  0F12                     l2089:
  4292                           
  4293                           ;./lcd.h: 97: void Lcd_Write_String(char *a);./lcd.h: 98: {;./lcd.h: 99:  int i;;./lcd.h
      +                          : 100:  for(i=0;a[i]!='\0';i++)
  4294  0F12  01A4               	clrf	Lcd_Write_String@i
  4295  0F13  01A5               	clrf	Lcd_Write_String@i+1
  4296  0F14  2F28               	goto	l2095
  4297  0F15                     l2091:
  4298                           
  4299                           ;./lcd.h: 101:     Lcd_Write_Char(a[i]);
  4300  0F15  0824               	movf	Lcd_Write_String@i,w
  4301  0F16  0726               	addwf	Lcd_Write_String@a,w
  4302  0F17  00A3               	movwf	??_Lcd_Write_String
  4303  0F18  0823               	movf	??_Lcd_Write_String,w
  4304  0F19  0084               	movwf	4
  4305  0F1A  0800               	movf	0,w
  4306  0F1B  120A  158A  278D  120A  158A  	fcall	_Lcd_Write_Char
  4307  0F20                     l2093:
  4308  0F20  3001               	movlw	1
  4309  0F21  1283               	bcf	3,5	;RP0=0, select bank0
  4310  0F22  1303               	bcf	3,6	;RP1=0, select bank0
  4311  0F23  07A4               	addwf	Lcd_Write_String@i,f
  4312  0F24  1803               	skipnc
  4313  0F25  0AA5               	incf	Lcd_Write_String@i+1,f
  4314  0F26  3000               	movlw	0
  4315  0F27  07A5               	addwf	Lcd_Write_String@i+1,f
  4316  0F28                     l2095:
  4317  0F28  0824               	movf	Lcd_Write_String@i,w
  4318  0F29  0726               	addwf	Lcd_Write_String@a,w
  4319  0F2A  00A3               	movwf	??_Lcd_Write_String
  4320  0F2B  0823               	movf	??_Lcd_Write_String,w
  4321  0F2C  0084               	movwf	4
  4322  0F2D  1383               	bcf	3,7	;select IRP bank0
  4323  0F2E  0800               	movf	0,w
  4324  0F2F  1D03               	btfss	3,2
  4325  0F30  2F32               	goto	u1841
  4326  0F31  2F33               	goto	u1840
  4327  0F32                     u1841:
  4328  0F32  2F15               	goto	l2091
  4329  0F33                     u1840:
  4330  0F33                     l149:
  4331  0F33  0008               	return
  4332  0F34                     __end_of_Lcd_Write_String:
  4333                           
  4334                           	psect	text19
  4335  0F8D                     __ptext19:	
  4336 ;; *************** function _Lcd_Write_Char *****************
  4337 ;; Defined at:
  4338 ;;		line 81 in file "./lcd.h"
  4339 ;; Parameters:    Size  Location     Type
  4340 ;;  a               1    wreg     unsigned char 
  4341 ;; Auto vars:     Size  Location     Type
  4342 ;;  a               1    2[BANK0 ] unsigned char 
  4343 ;;  y               1    1[BANK0 ] unsigned char 
  4344 ;;  temp            1    0[BANK0 ] unsigned char 
  4345 ;; Return value:  Size  Location     Type
  4346 ;;                  1    wreg      void 
  4347 ;; Registers used:
  4348 ;;		wreg, status,2, status,0, pclath, cstack
  4349 ;; Tracked objects:
  4350 ;;		On entry : 0/0
  4351 ;;		On exit  : 0/0
  4352 ;;		Unchanged: 0/0
  4353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4354 ;;      Params:         0       0       0       0       0
  4355 ;;      Locals:         0       3       0       0       0
  4356 ;;      Temps:          1       0       0       0       0
  4357 ;;      Totals:         1       3       0       0       0
  4358 ;;Total ram usage:        4 bytes
  4359 ;; Hardware stack levels used: 1
  4360 ;; Hardware stack levels required when called: 3
  4361 ;; This function calls:
  4362 ;;		_Lcd_Port
  4363 ;; This function is called by:
  4364 ;;		_Lcd_Write_String
  4365 ;; This function uses a non-reentrant model
  4366 ;;
  4367                           
  4368                           
  4369                           ;psect for function _Lcd_Write_Char
  4370  0F8D                     _Lcd_Write_Char:
  4371                           
  4372                           ;incstack = 0
  4373                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  4374                           ;Lcd_Write_Char@a stored from wreg
  4375  0F8D  1283               	bcf	3,5	;RP0=0, select bank0
  4376  0F8E  1303               	bcf	3,6	;RP1=0, select bank0
  4377  0F8F  00A2               	movwf	Lcd_Write_Char@a
  4378  0F90                     l1979:
  4379                           
  4380                           ;./lcd.h: 81: void Lcd_Write_Char(char a);./lcd.h: 82: {;./lcd.h: 83:    char temp,y;;./
      +                          lcd.h: 84:    temp = a&0x0F;
  4381  0F90  0822               	movf	Lcd_Write_Char@a,w
  4382  0F91  390F               	andlw	15
  4383  0F92  00F5               	movwf	??_Lcd_Write_Char
  4384  0F93  0875               	movf	??_Lcd_Write_Char,w
  4385  0F94  00A0               	movwf	Lcd_Write_Char@temp
  4386                           
  4387                           ;./lcd.h: 85:    y = a&0xF0;
  4388  0F95  0822               	movf	Lcd_Write_Char@a,w
  4389  0F96  39F0               	andlw	240
  4390  0F97  00F5               	movwf	??_Lcd_Write_Char
  4391  0F98  0875               	movf	??_Lcd_Write_Char,w
  4392  0F99  00A1               	movwf	Lcd_Write_Char@y
  4393  0F9A                     l1981:
  4394                           
  4395                           ;./lcd.h: 86:    RB2 = 1;
  4396  0F9A  1506               	bsf	6,2	;volatile
  4397  0F9B                     l1983:
  4398                           
  4399                           ;./lcd.h: 87:    Lcd_Port(y>>4);
  4400  0F9B  0821               	movf	Lcd_Write_Char@y,w
  4401  0F9C  00F5               	movwf	??_Lcd_Write_Char
  4402  0F9D  3004               	movlw	4
  4403  0F9E                     u1595:
  4404  0F9E  1003               	clrc
  4405  0F9F  0CF5               	rrf	??_Lcd_Write_Char,f
  4406  0FA0  3EFF               	addlw	-1
  4407  0FA1  1D03               	skipz
  4408  0FA2  2F9E               	goto	u1595
  4409  0FA3  0875               	movf	??_Lcd_Write_Char,w
  4410  0FA4  120A  158A  2684  120A  158A  	fcall	_Lcd_Port
  4411  0FA9                     l1985:
  4412                           
  4413                           ;./lcd.h: 88:    RB1 = 1;
  4414  0FA9  1283               	bcf	3,5	;RP0=0, select bank0
  4415  0FAA  1303               	bcf	3,6	;RP1=0, select bank0
  4416  0FAB  1486               	bsf	6,1	;volatile
  4417  0FAC                     l1987:
  4418                           
  4419                           ;./lcd.h: 89:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  4420  0FAC  300D               	movlw	13
  4421  0FAD  00F5               	movwf	??_Lcd_Write_Char
  4422  0FAE                     u2417:
  4423  0FAE  0BF5               	decfsz	??_Lcd_Write_Char,f
  4424  0FAF  2FAE               	goto	u2417
  4425  0FB0                     l1989:
  4426                           
  4427                           ;./lcd.h: 90:    RB1 = 0;
  4428  0FB0  1283               	bcf	3,5	;RP0=0, select bank0
  4429  0FB1  1303               	bcf	3,6	;RP1=0, select bank0
  4430  0FB2  1086               	bcf	6,1	;volatile
  4431  0FB3                     l1991:
  4432                           
  4433                           ;./lcd.h: 91:    Lcd_Port(temp);
  4434  0FB3  0820               	movf	Lcd_Write_Char@temp,w
  4435  0FB4  120A  158A  2684  120A  158A  	fcall	_Lcd_Port
  4436  0FB9                     l1993:
  4437                           
  4438                           ;./lcd.h: 92:    RB1 = 1;
  4439  0FB9  1283               	bcf	3,5	;RP0=0, select bank0
  4440  0FBA  1303               	bcf	3,6	;RP1=0, select bank0
  4441  0FBB  1486               	bsf	6,1	;volatile
  4442  0FBC                     l1995:
  4443                           
  4444                           ;./lcd.h: 93:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  4445  0FBC  300D               	movlw	13
  4446  0FBD  00F5               	movwf	??_Lcd_Write_Char
  4447  0FBE                     u2427:
  4448  0FBE  0BF5               	decfsz	??_Lcd_Write_Char,f
  4449  0FBF  2FBE               	goto	u2427
  4450  0FC0                     l1997:
  4451                           
  4452                           ;./lcd.h: 94:    RB1 = 0;
  4453  0FC0  1283               	bcf	3,5	;RP0=0, select bank0
  4454  0FC1  1303               	bcf	3,6	;RP1=0, select bank0
  4455  0FC2  1086               	bcf	6,1	;volatile
  4456  0FC3                     l143:
  4457  0FC3  0008               	return
  4458  0FC4                     __end_of_Lcd_Write_Char:
  4459                           
  4460                           	psect	text20
  4461  06F0                     __ptext20:	
  4462 ;; *************** function _Lcd_Set_Cursor *****************
  4463 ;; Defined at:
  4464 ;;		line 41 in file "./lcd.h"
  4465 ;; Parameters:    Size  Location     Type
  4466 ;;  a               1    wreg     unsigned char 
  4467 ;;  b               1    2[BANK0 ] unsigned char 
  4468 ;; Auto vars:     Size  Location     Type
  4469 ;;  a               1    5[BANK0 ] unsigned char 
  4470 ;;  temp            1    8[BANK0 ] unsigned char 
  4471 ;;  y               1    7[BANK0 ] unsigned char 
  4472 ;;  z               1    6[BANK0 ] unsigned char 
  4473 ;; Return value:  Size  Location     Type
  4474 ;;                  1    wreg      void 
  4475 ;; Registers used:
  4476 ;;		wreg, status,2, status,0, pclath, cstack
  4477 ;; Tracked objects:
  4478 ;;		On entry : 0/0
  4479 ;;		On exit  : 0/0
  4480 ;;		Unchanged: 0/0
  4481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4482 ;;      Params:         0       1       0       0       0
  4483 ;;      Locals:         0       4       0       0       0
  4484 ;;      Temps:          0       2       0       0       0
  4485 ;;      Totals:         0       7       0       0       0
  4486 ;;Total ram usage:        7 bytes
  4487 ;; Hardware stack levels used: 1
  4488 ;; Hardware stack levels required when called: 4
  4489 ;; This function calls:
  4490 ;;		_Lcd_Cmd
  4491 ;; This function is called by:
  4492 ;;		_atualizaLCD
  4493 ;; This function uses a non-reentrant model
  4494 ;;
  4495                           
  4496                           
  4497                           ;psect for function _Lcd_Set_Cursor
  4498  06F0                     _Lcd_Set_Cursor:
  4499                           
  4500                           ;incstack = 0
  4501                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  4502                           ;Lcd_Set_Cursor@a stored from wreg
  4503  06F0  1283               	bcf	3,5	;RP0=0, select bank0
  4504  06F1  1303               	bcf	3,6	;RP1=0, select bank0
  4505  06F2  00A5               	movwf	Lcd_Set_Cursor@a
  4506  06F3                     l2069:
  4507                           
  4508                           ;./lcd.h: 41: void Lcd_Set_Cursor(char a, char b);./lcd.h: 42: {;./lcd.h: 43:  char temp
      +                          ,z,y;;./lcd.h: 44:  if(a == 1)
  4509  06F3  0325               	decf	Lcd_Set_Cursor@a,w
  4510  06F4  1D03               	btfss	3,2
  4511  06F5  2EF7               	goto	u1801
  4512  06F6  2EF8               	goto	u1800
  4513  06F7                     u1801:
  4514  06F7  2F1D               	goto	l2079
  4515  06F8                     u1800:
  4516  06F8                     l2071:
  4517                           
  4518                           ;./lcd.h: 45:  {;./lcd.h: 46:    temp = 0x80 + b - 1;
  4519  06F8  0822               	movf	Lcd_Set_Cursor@b,w
  4520  06F9  3E7F               	addlw	127
  4521  06FA  00A3               	movwf	??_Lcd_Set_Cursor
  4522  06FB  0823               	movf	??_Lcd_Set_Cursor,w
  4523  06FC  00A8               	movwf	Lcd_Set_Cursor@temp
  4524                           
  4525                           ;./lcd.h: 47:   z = temp>>4;
  4526  06FD  0828               	movf	Lcd_Set_Cursor@temp,w
  4527  06FE  00A3               	movwf	??_Lcd_Set_Cursor
  4528  06FF  3004               	movlw	4
  4529  0700                     u1815:
  4530  0700  1003               	clrc
  4531  0701  0CA3               	rrf	??_Lcd_Set_Cursor,f
  4532  0702  3EFF               	addlw	-1
  4533  0703  1D03               	skipz
  4534  0704  2F00               	goto	u1815
  4535  0705  0823               	movf	??_Lcd_Set_Cursor,w
  4536  0706  00A4               	movwf	??_Lcd_Set_Cursor+1
  4537  0707  0824               	movf	??_Lcd_Set_Cursor+1,w
  4538  0708  00A6               	movwf	Lcd_Set_Cursor@z
  4539  0709                     l2073:
  4540                           
  4541                           ;./lcd.h: 48:   y = temp & 0x0F;
  4542  0709  0828               	movf	Lcd_Set_Cursor@temp,w
  4543  070A  390F               	andlw	15
  4544  070B  00A3               	movwf	??_Lcd_Set_Cursor
  4545  070C  0823               	movf	??_Lcd_Set_Cursor,w
  4546  070D  00A7               	movwf	Lcd_Set_Cursor@y
  4547  070E                     l2075:
  4548                           
  4549                           ;./lcd.h: 49:   Lcd_Cmd(z);
  4550  070E  0826               	movf	Lcd_Set_Cursor@z,w
  4551  070F  120A  118A  27E0  120A  118A  	fcall	_Lcd_Cmd
  4552  0714                     l2077:
  4553                           
  4554                           ;./lcd.h: 50:   Lcd_Cmd(y);
  4555  0714  1283               	bcf	3,5	;RP0=0, select bank0
  4556  0715  1303               	bcf	3,6	;RP1=0, select bank0
  4557  0716  0827               	movf	Lcd_Set_Cursor@y,w
  4558  0717  120A  118A  27E0  120A  118A  	fcall	_Lcd_Cmd
  4559                           
  4560                           ;./lcd.h: 51:  }
  4561  071C  2F47               	goto	l137
  4562  071D                     l2079:
  4563  071D  3002               	movlw	2
  4564  071E  0625               	xorwf	Lcd_Set_Cursor@a,w
  4565  071F  1D03               	btfss	3,2
  4566  0720  2F22               	goto	u1821
  4567  0721  2F23               	goto	u1820
  4568  0722                     u1821:
  4569  0722  2F47               	goto	l137
  4570  0723                     u1820:
  4571  0723                     l2081:
  4572                           
  4573                           ;./lcd.h: 53:  {;./lcd.h: 54:   temp = 0xC0 + b - 1;
  4574  0723  0822               	movf	Lcd_Set_Cursor@b,w
  4575  0724  3EBF               	addlw	191
  4576  0725  00A3               	movwf	??_Lcd_Set_Cursor
  4577  0726  0823               	movf	??_Lcd_Set_Cursor,w
  4578  0727  00A8               	movwf	Lcd_Set_Cursor@temp
  4579                           
  4580                           ;./lcd.h: 55:   z = temp>>4;
  4581  0728  0828               	movf	Lcd_Set_Cursor@temp,w
  4582  0729  00A3               	movwf	??_Lcd_Set_Cursor
  4583  072A  3004               	movlw	4
  4584  072B                     u1835:
  4585  072B  1003               	clrc
  4586  072C  0CA3               	rrf	??_Lcd_Set_Cursor,f
  4587  072D  3EFF               	addlw	-1
  4588  072E  1D03               	skipz
  4589  072F  2F2B               	goto	u1835
  4590  0730  0823               	movf	??_Lcd_Set_Cursor,w
  4591  0731  00A4               	movwf	??_Lcd_Set_Cursor+1
  4592  0732  0824               	movf	??_Lcd_Set_Cursor+1,w
  4593  0733  00A6               	movwf	Lcd_Set_Cursor@z
  4594  0734                     l2083:
  4595                           
  4596                           ;./lcd.h: 56:   y = temp & 0x0F;
  4597  0734  0828               	movf	Lcd_Set_Cursor@temp,w
  4598  0735  390F               	andlw	15
  4599  0736  00A3               	movwf	??_Lcd_Set_Cursor
  4600  0737  0823               	movf	??_Lcd_Set_Cursor,w
  4601  0738  00A7               	movwf	Lcd_Set_Cursor@y
  4602  0739                     l2085:
  4603                           
  4604                           ;./lcd.h: 57:   Lcd_Cmd(z);
  4605  0739  0826               	movf	Lcd_Set_Cursor@z,w
  4606  073A  120A  118A  27E0  120A  118A  	fcall	_Lcd_Cmd
  4607  073F                     l2087:
  4608                           
  4609                           ;./lcd.h: 58:   Lcd_Cmd(y);
  4610  073F  1283               	bcf	3,5	;RP0=0, select bank0
  4611  0740  1303               	bcf	3,6	;RP1=0, select bank0
  4612  0741  0827               	movf	Lcd_Set_Cursor@y,w
  4613  0742  120A  118A  27E0  120A  118A  	fcall	_Lcd_Cmd
  4614  0747                     l137:
  4615  0747  0008               	return
  4616  0748                     __end_of_Lcd_Set_Cursor:
  4617                           
  4618                           	psect	text21
  4619  0E01                     __ptext21:	
  4620 ;; *************** function _Lcd_Clear *****************
  4621 ;; Defined at:
  4622 ;;		line 35 in file "./lcd.h"
  4623 ;; Parameters:    Size  Location     Type
  4624 ;;		None
  4625 ;; Auto vars:     Size  Location     Type
  4626 ;;		None
  4627 ;; Return value:  Size  Location     Type
  4628 ;;                  1    wreg      void 
  4629 ;; Registers used:
  4630 ;;		wreg, status,2, status,0, pclath, cstack
  4631 ;; Tracked objects:
  4632 ;;		On entry : 0/0
  4633 ;;		On exit  : 0/0
  4634 ;;		Unchanged: 0/0
  4635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4636 ;;      Params:         0       0       0       0       0
  4637 ;;      Locals:         0       0       0       0       0
  4638 ;;      Temps:          0       0       0       0       0
  4639 ;;      Totals:         0       0       0       0       0
  4640 ;;Total ram usage:        0 bytes
  4641 ;; Hardware stack levels used: 1
  4642 ;; Hardware stack levels required when called: 4
  4643 ;; This function calls:
  4644 ;;		_Lcd_Cmd
  4645 ;; This function is called by:
  4646 ;;		_atualizaLCD
  4647 ;; This function uses a non-reentrant model
  4648 ;;
  4649                           
  4650                           
  4651                           ;psect for function _Lcd_Clear
  4652  0E01                     _Lcd_Clear:
  4653  0E01                     l2067:	
  4654                           ;incstack = 0
  4655                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  4656                           
  4657                           
  4658                           ;./lcd.h: 37:  Lcd_Cmd(0);
  4659  0E01  3000               	movlw	0
  4660  0E02  120A  118A  27E0  120A  158A  	fcall	_Lcd_Cmd
  4661                           
  4662                           ;./lcd.h: 38:  Lcd_Cmd(1);
  4663  0E07  3001               	movlw	1
  4664  0E08  120A  118A  27E0  120A  158A  	fcall	_Lcd_Cmd
  4665  0E0D                     l131:
  4666  0E0D  0008               	return
  4667  0E0E                     __end_of_Lcd_Clear:
  4668                           
  4669                           	psect	text22
  4670  068D                     __ptext22:	
  4671 ;; *************** function _Lcd_Init *****************
  4672 ;; Defined at:
  4673 ;;		line 62 in file "./lcd.h"
  4674 ;; Parameters:    Size  Location     Type
  4675 ;;		None
  4676 ;; Auto vars:     Size  Location     Type
  4677 ;;		None
  4678 ;; Return value:  Size  Location     Type
  4679 ;;                  1    wreg      void 
  4680 ;; Registers used:
  4681 ;;		wreg, status,2, status,0, pclath, cstack
  4682 ;; Tracked objects:
  4683 ;;		On entry : 0/0
  4684 ;;		On exit  : 0/0
  4685 ;;		Unchanged: 0/0
  4686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4687 ;;      Params:         0       0       0       0       0
  4688 ;;      Locals:         0       0       0       0       0
  4689 ;;      Temps:          0       2       0       0       0
  4690 ;;      Totals:         0       2       0       0       0
  4691 ;;Total ram usage:        2 bytes
  4692 ;; Hardware stack levels used: 1
  4693 ;; Hardware stack levels required when called: 4
  4694 ;; This function calls:
  4695 ;;		_Lcd_Cmd
  4696 ;;		_Lcd_Port
  4697 ;; This function is called by:
  4698 ;;		_main
  4699 ;; This function uses a non-reentrant model
  4700 ;;
  4701                           
  4702                           
  4703                           ;psect for function _Lcd_Init
  4704  068D                     _Lcd_Init:
  4705  068D                     l2255:	
  4706                           ;incstack = 0
  4707                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  4708                           
  4709                           
  4710                           ;./lcd.h: 64:   Lcd_Port(0x00);
  4711  068D  3000               	movlw	0
  4712  068E  120A  158A  2684  120A  118A  	fcall	_Lcd_Port
  4713  0693                     l2257:
  4714                           
  4715                           ;./lcd.h: 65:    _delay((unsigned long)((20)*(4000000/4000.0)));
  4716  0693  301A               	movlw	26
  4717  0694  1283               	bcf	3,5	;RP0=0, select bank0
  4718  0695  1303               	bcf	3,6	;RP1=0, select bank0
  4719  0696  00A3               	movwf	??_Lcd_Init+1
  4720  0697  30F7               	movlw	247
  4721  0698  00A2               	movwf	??_Lcd_Init
  4722  0699                     u2437:
  4723  0699  0BA2               	decfsz	??_Lcd_Init,f
  4724  069A  2E99               	goto	u2437
  4725  069B  0BA3               	decfsz	??_Lcd_Init+1,f
  4726  069C  2E99               	goto	u2437
  4727  069D  2E9E               	nop2
  4728  069E                     l2259:
  4729                           
  4730                           ;./lcd.h: 66:   Lcd_Cmd(0x03);
  4731  069E  3003               	movlw	3
  4732  069F  120A  118A  27E0  120A  118A  	fcall	_Lcd_Cmd
  4733                           
  4734                           ;./lcd.h: 67:  _delay((unsigned long)((5)*(4000000/4000.0)));
  4735  06A4  3007               	movlw	7
  4736  06A5  1283               	bcf	3,5	;RP0=0, select bank0
  4737  06A6  1303               	bcf	3,6	;RP1=0, select bank0
  4738  06A7  00A3               	movwf	??_Lcd_Init+1
  4739  06A8  307C               	movlw	124
  4740  06A9  00A2               	movwf	??_Lcd_Init
  4741  06AA                     u2447:
  4742  06AA  0BA2               	decfsz	??_Lcd_Init,f
  4743  06AB  2EAA               	goto	u2447
  4744  06AC  0BA3               	decfsz	??_Lcd_Init+1,f
  4745  06AD  2EAA               	goto	u2447
  4746  06AE  0000               	nop
  4747  06AF                     l2261:
  4748                           
  4749                           ;./lcd.h: 68:   Lcd_Cmd(0x03);
  4750  06AF  3003               	movlw	3
  4751  06B0  120A  118A  27E0  120A  118A  	fcall	_Lcd_Cmd
  4752  06B5                     l2263:
  4753                           
  4754                           ;./lcd.h: 69:  _delay((unsigned long)((11)*(4000000/4000.0)));
  4755  06B5  300F               	movlw	15
  4756  06B6  1283               	bcf	3,5	;RP0=0, select bank0
  4757  06B7  1303               	bcf	3,6	;RP1=0, select bank0
  4758  06B8  00A3               	movwf	??_Lcd_Init+1
  4759  06B9  3047               	movlw	71
  4760  06BA  00A2               	movwf	??_Lcd_Init
  4761  06BB                     u2457:
  4762  06BB  0BA2               	decfsz	??_Lcd_Init,f
  4763  06BC  2EBB               	goto	u2457
  4764  06BD  0BA3               	decfsz	??_Lcd_Init+1,f
  4765  06BE  2EBB               	goto	u2457
  4766                           
  4767                           ;./lcd.h: 70:   Lcd_Cmd(0x03);
  4768  06BF  3003               	movlw	3
  4769  06C0  120A  118A  27E0  120A  118A  	fcall	_Lcd_Cmd
  4770                           
  4771                           ;./lcd.h: 72:   Lcd_Cmd(0x02);
  4772  06C5  3002               	movlw	2
  4773  06C6  120A  118A  27E0  120A  118A  	fcall	_Lcd_Cmd
  4774                           
  4775                           ;./lcd.h: 73:   Lcd_Cmd(0x02);
  4776  06CB  3002               	movlw	2
  4777  06CC  120A  118A  27E0  120A  118A  	fcall	_Lcd_Cmd
  4778                           
  4779                           ;./lcd.h: 74:   Lcd_Cmd(0x08);
  4780  06D1  3008               	movlw	8
  4781  06D2  120A  118A  27E0  120A  118A  	fcall	_Lcd_Cmd
  4782                           
  4783                           ;./lcd.h: 75:   Lcd_Cmd(0x00);
  4784  06D7  3000               	movlw	0
  4785  06D8  120A  118A  27E0  120A  118A  	fcall	_Lcd_Cmd
  4786                           
  4787                           ;./lcd.h: 76:   Lcd_Cmd(0x0C);
  4788  06DD  300C               	movlw	12
  4789  06DE  120A  118A  27E0  120A  118A  	fcall	_Lcd_Cmd
  4790                           
  4791                           ;./lcd.h: 77:   Lcd_Cmd(0x00);
  4792  06E3  3000               	movlw	0
  4793  06E4  120A  118A  27E0  120A  118A  	fcall	_Lcd_Cmd
  4794                           
  4795                           ;./lcd.h: 78:   Lcd_Cmd(0x06);
  4796  06E9  3006               	movlw	6
  4797  06EA  120A  118A  27E0  120A  118A  	fcall	_Lcd_Cmd
  4798  06EF                     l140:
  4799  06EF  0008               	return
  4800  06F0                     __end_of_Lcd_Init:
  4801                           
  4802                           	psect	text23
  4803  07E0                     __ptext23:	
  4804 ;; *************** function _Lcd_Cmd *****************
  4805 ;; Defined at:
  4806 ;;		line 26 in file "./lcd.h"
  4807 ;; Parameters:    Size  Location     Type
  4808 ;;  a               1    wreg     unsigned char 
  4809 ;; Auto vars:     Size  Location     Type
  4810 ;;  a               1    5[COMMON] unsigned char 
  4811 ;; Return value:  Size  Location     Type
  4812 ;;                  1    wreg      void 
  4813 ;; Registers used:
  4814 ;;		wreg, status,2, status,0, pclath, cstack
  4815 ;; Tracked objects:
  4816 ;;		On entry : 0/0
  4817 ;;		On exit  : 0/0
  4818 ;;		Unchanged: 0/0
  4819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4820 ;;      Params:         0       0       0       0       0
  4821 ;;      Locals:         1       0       0       0       0
  4822 ;;      Temps:          0       2       0       0       0
  4823 ;;      Totals:         1       2       0       0       0
  4824 ;;Total ram usage:        3 bytes
  4825 ;; Hardware stack levels used: 1
  4826 ;; Hardware stack levels required when called: 3
  4827 ;; This function calls:
  4828 ;;		_Lcd_Port
  4829 ;; This function is called by:
  4830 ;;		_Lcd_Clear
  4831 ;;		_Lcd_Set_Cursor
  4832 ;;		_Lcd_Init
  4833 ;;		_Lcd_Shift_Right
  4834 ;;		_Lcd_Shift_Left
  4835 ;; This function uses a non-reentrant model
  4836 ;;
  4837                           
  4838                           
  4839                           ;psect for function _Lcd_Cmd
  4840  07E0                     _Lcd_Cmd:
  4841                           
  4842                           ;incstack = 0
  4843                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  4844                           ;Lcd_Cmd@a stored from wreg
  4845  07E0  00F5               	movwf	Lcd_Cmd@a
  4846  07E1                     l1969:
  4847                           
  4848                           ;./lcd.h: 26: void Lcd_Cmd(char a);./lcd.h: 27: {;./lcd.h: 28:  RB2 = 0;
  4849  07E1  1283               	bcf	3,5	;RP0=0, select bank0
  4850  07E2  1303               	bcf	3,6	;RP1=0, select bank0
  4851  07E3  1106               	bcf	6,2	;volatile
  4852  07E4                     l1971:
  4853                           
  4854                           ;./lcd.h: 29:  Lcd_Port(a);
  4855  07E4  0875               	movf	Lcd_Cmd@a,w
  4856  07E5  120A  158A  2684  120A  118A  	fcall	_Lcd_Port
  4857  07EA                     l1973:
  4858                           
  4859                           ;./lcd.h: 30:  RB1 = 1;
  4860  07EA  1283               	bcf	3,5	;RP0=0, select bank0
  4861  07EB  1303               	bcf	3,6	;RP1=0, select bank0
  4862  07EC  1486               	bsf	6,1	;volatile
  4863  07ED                     l1975:
  4864                           
  4865                           ;./lcd.h: 31:         _delay((unsigned long)((4)*(4000000/4000.0)));
  4866  07ED  3006               	movlw	6
  4867  07EE  1283               	bcf	3,5	;RP0=0, select bank0
  4868  07EF  1303               	bcf	3,6	;RP1=0, select bank0
  4869  07F0  00A1               	movwf	??_Lcd_Cmd+1
  4870  07F1  302F               	movlw	47
  4871  07F2  00A0               	movwf	??_Lcd_Cmd
  4872  07F3                     u2467:
  4873  07F3  0BA0               	decfsz	??_Lcd_Cmd,f
  4874  07F4  2FF3               	goto	u2467
  4875  07F5  0BA1               	decfsz	??_Lcd_Cmd+1,f
  4876  07F6  2FF3               	goto	u2467
  4877  07F7  2FF8               	nop2
  4878  07F8                     l1977:
  4879                           
  4880                           ;./lcd.h: 32:         RB1 = 0;
  4881  07F8  1283               	bcf	3,5	;RP0=0, select bank0
  4882  07F9  1303               	bcf	3,6	;RP1=0, select bank0
  4883  07FA  1086               	bcf	6,1	;volatile
  4884  07FB                     l128:
  4885  07FB  0008               	return
  4886  07FC                     __end_of_Lcd_Cmd:
  4887                           
  4888                           	psect	text24
  4889  0E84                     __ptext24:	
  4890 ;; *************** function _Lcd_Port *****************
  4891 ;; Defined at:
  4892 ;;		line 4 in file "./lcd.h"
  4893 ;; Parameters:    Size  Location     Type
  4894 ;;  a               1    wreg     unsigned char 
  4895 ;; Auto vars:     Size  Location     Type
  4896 ;;  a               1    4[COMMON] unsigned char 
  4897 ;; Return value:  Size  Location     Type
  4898 ;;                  1    wreg      void 
  4899 ;; Registers used:
  4900 ;;		wreg
  4901 ;; Tracked objects:
  4902 ;;		On entry : 0/0
  4903 ;;		On exit  : 0/0
  4904 ;;		Unchanged: 0/0
  4905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4906 ;;      Params:         0       0       0       0       0
  4907 ;;      Locals:         1       0       0       0       0
  4908 ;;      Temps:          0       0       0       0       0
  4909 ;;      Totals:         1       0       0       0       0
  4910 ;;Total ram usage:        1 bytes
  4911 ;; Hardware stack levels used: 1
  4912 ;; Hardware stack levels required when called: 2
  4913 ;; This function calls:
  4914 ;;		Nothing
  4915 ;; This function is called by:
  4916 ;;		_Lcd_Cmd
  4917 ;;		_Lcd_Init
  4918 ;;		_Lcd_Write_Char
  4919 ;; This function uses a non-reentrant model
  4920 ;;
  4921                           
  4922                           
  4923                           ;psect for function _Lcd_Port
  4924  0E84                     _Lcd_Port:
  4925                           
  4926                           ;incstack = 0
  4927                           ; Regs used in _Lcd_Port: [wreg]
  4928                           ;Lcd_Port@a stored from wreg
  4929  0E84  00F4               	movwf	Lcd_Port@a
  4930  0E85                     l1959:
  4931                           
  4932                           ;./lcd.h: 4: void Lcd_Port(char a);./lcd.h: 5: {;./lcd.h: 6:  if(a & 1)
  4933  0E85  1C74               	btfss	Lcd_Port@a,0
  4934  0E86  2E88               	goto	u1551
  4935  0E87  2E89               	goto	u1550
  4936  0E88                     u1551:
  4937  0E88  2E8D               	goto	l117
  4938  0E89                     u1550:
  4939  0E89                     l1961:
  4940                           
  4941                           ;./lcd.h: 7:   RB4 = 1;
  4942  0E89  1283               	bcf	3,5	;RP0=0, select bank0
  4943  0E8A  1303               	bcf	3,6	;RP1=0, select bank0
  4944  0E8B  1606               	bsf	6,4	;volatile
  4945  0E8C  2E90               	goto	l118
  4946  0E8D                     l117:	
  4947                           ;./lcd.h: 8:  else
  4948                           
  4949                           
  4950                           ;./lcd.h: 9:   RB4 = 0;
  4951  0E8D  1283               	bcf	3,5	;RP0=0, select bank0
  4952  0E8E  1303               	bcf	3,6	;RP1=0, select bank0
  4953  0E8F  1206               	bcf	6,4	;volatile
  4954  0E90                     l118:
  4955                           
  4956                           ;./lcd.h: 11:  if(a & 2)
  4957  0E90  1CF4               	btfss	Lcd_Port@a,1
  4958  0E91  2E93               	goto	u1561
  4959  0E92  2E94               	goto	u1560
  4960  0E93                     u1561:
  4961  0E93  2E96               	goto	l119
  4962  0E94                     u1560:
  4963  0E94                     l1963:
  4964                           
  4965                           ;./lcd.h: 12:   RB5 = 1;
  4966  0E94  1686               	bsf	6,5	;volatile
  4967  0E95  2E97               	goto	l120
  4968  0E96                     l119:	
  4969                           ;./lcd.h: 13:  else
  4970                           
  4971                           
  4972                           ;./lcd.h: 14:   RB5 = 0;
  4973  0E96  1286               	bcf	6,5	;volatile
  4974  0E97                     l120:
  4975                           
  4976                           ;./lcd.h: 16:  if(a & 4)
  4977  0E97  1D74               	btfss	Lcd_Port@a,2
  4978  0E98  2E9A               	goto	u1571
  4979  0E99  2E9B               	goto	u1570
  4980  0E9A                     u1571:
  4981  0E9A  2E9D               	goto	l121
  4982  0E9B                     u1570:
  4983  0E9B                     l1965:
  4984                           
  4985                           ;./lcd.h: 17:   RB6 = 1;
  4986  0E9B  1706               	bsf	6,6	;volatile
  4987  0E9C  2E9E               	goto	l122
  4988  0E9D                     l121:	
  4989                           ;./lcd.h: 18:  else
  4990                           
  4991                           
  4992                           ;./lcd.h: 19:   RB6 = 0;
  4993  0E9D  1306               	bcf	6,6	;volatile
  4994  0E9E                     l122:
  4995                           
  4996                           ;./lcd.h: 21:  if(a & 8)
  4997  0E9E  1DF4               	btfss	Lcd_Port@a,3
  4998  0E9F  2EA1               	goto	u1581
  4999  0EA0  2EA2               	goto	u1580
  5000  0EA1                     u1581:
  5001  0EA1  2EA4               	goto	l123
  5002  0EA2                     u1580:
  5003  0EA2                     l1967:
  5004                           
  5005                           ;./lcd.h: 22:   RB7 = 1;
  5006  0EA2  1786               	bsf	6,7	;volatile
  5007  0EA3  2EA5               	goto	l125
  5008  0EA4                     l123:	
  5009                           ;./lcd.h: 23:  else
  5010                           
  5011                           
  5012                           ;./lcd.h: 24:   RB7 = 0;
  5013  0EA4  1386               	bcf	6,7	;volatile
  5014  0EA5                     l125:
  5015  0EA5  0008               	return
  5016  0EA6                     __end_of_Lcd_Port:
  5017                           
  5018                           	psect	text25
  5019  0F34                     __ptext25:	
  5020 ;; *************** function _TrataINT *****************
  5021 ;; Defined at:
  5022 ;;		line 82 in file "main.c"
  5023 ;; Parameters:    Size  Location     Type
  5024 ;;		None
  5025 ;; Auto vars:     Size  Location     Type
  5026 ;;		None
  5027 ;; Return value:  Size  Location     Type
  5028 ;;                  1    wreg      void 
  5029 ;; Registers used:
  5030 ;;		wreg, status,2, status,0, pclath, cstack
  5031 ;; Tracked objects:
  5032 ;;		On entry : 0/0
  5033 ;;		On exit  : 0/0
  5034 ;;		Unchanged: 0/0
  5035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5036 ;;      Params:         0       0       0       0       0
  5037 ;;      Locals:         0       0       0       0       0
  5038 ;;      Temps:          2       0       0       0       0
  5039 ;;      Totals:         2       0       0       0       0
  5040 ;;Total ram usage:        2 bytes
  5041 ;; Hardware stack levels used: 1
  5042 ;; Hardware stack levels required when called: 1
  5043 ;; This function calls:
  5044 ;;		i1_recolheTela
  5045 ;; This function is called by:
  5046 ;;		Interrupt level 1
  5047 ;; This function uses a non-reentrant model
  5048 ;;
  5049                           
  5050                           
  5051                           ;psect for function _TrataINT
  5052  0F34                     _TrataINT:
  5053  0F34                     i1l1439:
  5054                           
  5055                           ;main.c: 84:     if(INTF == 1)
  5056  0F34  1C8B               	btfss	11,1	;volatile
  5057  0F35  2F37               	goto	u78_21
  5058  0F36  2F38               	goto	u78_20
  5059  0F37                     u78_21:
  5060  0F37  2F47               	goto	i1l189
  5061  0F38                     u78_20:
  5062  0F38  2F3F               	goto	i1l1445
  5063  0F39                     i1l191:
  5064  0F39  0064               	clrwdt	;# 
  5065  0F3A                     i1l1443:
  5066                           
  5067                           ;main.c: 89:             recolheTela();
  5068  0F3A  120A  158A  2621  120A  158A  	fcall	i1_recolheTela
  5069  0F3F                     i1l1445:
  5070                           
  5071                           ;main.c: 86:         while(RB0 == 1)
  5072  0F3F  1283               	bcf	3,5	;RP0=0, select bank0
  5073  0F40  1303               	bcf	3,6	;RP1=0, select bank0
  5074  0F41  1806               	btfsc	6,0	;volatile
  5075  0F42  2F44               	goto	u79_21
  5076  0F43  2F45               	goto	u79_20
  5077  0F44                     u79_21:
  5078  0F44  2F39               	goto	i1l191
  5079  0F45                     u79_20:
  5080  0F45                     i1l192:
  5081                           
  5082                           ;main.c: 91:         INTF = 0;
  5083  0F45  108B               	bcf	11,1	;volatile
  5084                           
  5085                           ;main.c: 92:     }
  5086  0F46  2F55               	goto	i1l195
  5087  0F47                     i1l189:	
  5088                           ;main.c: 93:     else if (TMR1IF == 1)
  5089                           
  5090  0F47  1283               	bcf	3,5	;RP0=0, select bank0
  5091  0F48  1303               	bcf	3,6	;RP1=0, select bank0
  5092  0F49  1C0C               	btfss	12,0	;volatile
  5093  0F4A  2F4C               	goto	u80_21
  5094  0F4B  2F4D               	goto	u80_20
  5095  0F4C                     u80_21:
  5096  0F4C  2F55               	goto	i1l195
  5097  0F4D                     u80_20:
  5098  0F4D                     i1l1447:
  5099  0F4D  0064               	clrwdt	;# 
  5100                           
  5101                           ;main.c: 96:         TMR1IF = 0;
  5102  0F4E  1283               	bcf	3,5	;RP0=0, select bank0
  5103  0F4F  1303               	bcf	3,6	;RP1=0, select bank0
  5104  0F50  100C               	bcf	12,0	;volatile
  5105  0F51                     i1l1449:
  5106                           
  5107                           ;main.c: 97:         TMR1L = 0xDC;
  5108  0F51  30DC               	movlw	220
  5109  0F52  008E               	movwf	14	;volatile
  5110                           
  5111                           ;main.c: 98:         TMR1H = 0x0B;
  5112  0F53  300B               	movlw	11
  5113  0F54  008F               	movwf	15	;volatile
  5114  0F55                     i1l195:
  5115  0F55  0873               	movf	??_TrataINT+1,w
  5116  0F56  008A               	movwf	10
  5117  0F57  0E72               	swapf	??_TrataINT,w
  5118  0F58  0083               	movwf	3
  5119  0F59  0EFE               	swapf	btemp,f
  5120  0F5A  0E7E               	swapf	btemp,w
  5121  0F5B  0009               	retfie
  5122  0F5C                     __end_of_TrataINT:
  5123                           
  5124                           	psect	intentry
  5125  0004                     __pintentry:	
  5126                           ;incstack = 0
  5127                           ; Regs used in _TrataINT: [wreg+status,2+status,0+pclath+cstack]
  5128                           
  5129  0004                     interrupt_function:
  5130  007E                     saved_w	set	btemp
  5131  0004  00FE               	movwf	btemp
  5132  0005  0E03               	swapf	3,w
  5133  0006  00F2               	movwf	??_TrataINT
  5134  0007  080A               	movf	10,w
  5135  0008  00F3               	movwf	??_TrataINT+1
  5136  0009  120A  158A  2F34   	ljmp	_TrataINT
  5137                           
  5138                           	psect	text26
  5139  0E21                     __ptext26:	
  5140 ;; *************** function i1_recolheTela *****************
  5141 ;; Defined at:
  5142 ;;		line 186 in file "main.c"
  5143 ;; Parameters:    Size  Location     Type
  5144 ;;		None
  5145 ;; Auto vars:     Size  Location     Type
  5146 ;;		None
  5147 ;; Return value:  Size  Location     Type
  5148 ;;                  1    wreg      void 
  5149 ;; Registers used:
  5150 ;;		wreg
  5151 ;; Tracked objects:
  5152 ;;		On entry : 0/0
  5153 ;;		On exit  : 0/0
  5154 ;;		Unchanged: 0/0
  5155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5156 ;;      Params:         0       0       0       0       0
  5157 ;;      Locals:         0       0       0       0       0
  5158 ;;      Temps:          2       0       0       0       0
  5159 ;;      Totals:         2       0       0       0       0
  5160 ;;Total ram usage:        2 bytes
  5161 ;; Hardware stack levels used: 1
  5162 ;; This function calls:
  5163 ;;		Nothing
  5164 ;; This function is called by:
  5165 ;;		_TrataINT
  5166 ;; This function uses a non-reentrant model
  5167 ;;
  5168                           
  5169                           
  5170                           ;psect for function i1_recolheTela
  5171  0E21                     i1_recolheTela:
  5172  0E21                     i1l1403:	
  5173                           ;incstack = 0
  5174                           ; Regs used in i1_recolheTela: [wreg]
  5175                           
  5176                           
  5177                           ;main.c: 188:     if(RA4 == 0)
  5178  0E21  1283               	bcf	3,5	;RP0=0, select bank0
  5179  0E22  1303               	bcf	3,6	;RP1=0, select bank0
  5180  0E23  1A05               	btfsc	5,4	;volatile
  5181  0E24  2E26               	goto	u74_21
  5182  0E25  2E27               	goto	u74_20
  5183  0E26                     u74_21:
  5184  0E26  2E39               	goto	i1l204
  5185  0E27                     u74_20:
  5186  0E27                     i1l1405:
  5187                           
  5188                           ;main.c: 189:     {;main.c: 191:         RD4 = 0;
  5189  0E27  1208               	bcf	8,4	;volatile
  5190                           
  5191                           ;main.c: 192:         RC1 = 1;
  5192  0E28  1487               	bsf	7,1	;volatile
  5193                           
  5194                           ;main.c: 193:         RD2 = 0;
  5195  0E29  1108               	bcf	8,2	;volatile
  5196                           
  5197                           ;main.c: 194:         RD6 = 1;
  5198  0E2A  1708               	bsf	8,6	;volatile
  5199                           
  5200                           ;main.c: 196:         RD0 = 0;
  5201  0E2B  1008               	bcf	8,0	;volatile
  5202                           
  5203                           ;main.c: 197:         RC3 = 1;
  5204  0E2C  1587               	bsf	7,3	;volatile
  5205                           
  5206                           ;main.c: 198:         RC2 = 0;
  5207  0E2D  1107               	bcf	7,2	;volatile
  5208                           
  5209                           ;main.c: 199:         RD7 = 1;
  5210  0E2E  1788               	bsf	8,7	;volatile
  5211  0E2F                     i1l1407:
  5212                           
  5213                           ;main.c: 201:         _delay((unsigned long)((15)*(4000000/4000.0)));
  5214  0E2F  3014               	movlw	20
  5215  0E30  00F1               	movwf	??i1_recolheTela+1
  5216  0E31  3079               	movlw	121
  5217  0E32  00F0               	movwf	??i1_recolheTela
  5218  0E33                     u247_27:
  5219  0E33  0BF0               	decfsz	??i1_recolheTela,f
  5220  0E34  2E33               	goto	u247_27
  5221  0E35  0BF1               	decfsz	??i1_recolheTela+1,f
  5222  0E36  2E33               	goto	u247_27
  5223  0E37  2E38               	nop2
  5224                           
  5225                           ;main.c: 202:     }
  5226  0E38  2E41               	goto	i1l206
  5227  0E39                     i1l204:	
  5228                           ;main.c: 203:     else
  5229                           
  5230                           
  5231                           ;main.c: 204:     {;main.c: 206:         RD4 = 1;
  5232  0E39  1608               	bsf	8,4	;volatile
  5233                           
  5234                           ;main.c: 207:         RC1 = 1;
  5235  0E3A  1487               	bsf	7,1	;volatile
  5236                           
  5237                           ;main.c: 208:         RD2 = 1;
  5238  0E3B  1508               	bsf	8,2	;volatile
  5239                           
  5240                           ;main.c: 209:         RD6 = 1;
  5241  0E3C  1708               	bsf	8,6	;volatile
  5242                           
  5243                           ;main.c: 211:         RD0 = 1;
  5244  0E3D  1408               	bsf	8,0	;volatile
  5245                           
  5246                           ;main.c: 212:         RC3 = 1;
  5247  0E3E  1587               	bsf	7,3	;volatile
  5248                           
  5249                           ;main.c: 213:         RC2 = 1;
  5250  0E3F  1507               	bsf	7,2	;volatile
  5251                           
  5252                           ;main.c: 214:         RD7 = 1;
  5253  0E40  1788               	bsf	8,7	;volatile
  5254  0E41                     i1l206:
  5255  0E41  0008               	return
  5256  0E42                     __end_ofi1_recolheTela:
  5257  007E                     btemp	set	126	;btemp
  5258  007E                     wtemp0	set	126
  5259                           
  5260                           	psect	config
  5261                           
  5262                           ;Config register CONFIG @ 0x2007
  5263                           ;	Oscillator Selection bits
  5264                           ;	FOSC = HS, HS oscillator
  5265                           ;	Watchdog Timer Enable bit
  5266                           ;	WDTE = ON, WDT enabled
  5267                           ;	Power-up Timer Enable bit
  5268                           ;	PWRTE = ON, PWRT enabled
  5269                           ;	Brown-out Reset Enable bit
  5270                           ;	BOREN = ON, BOR enabled
  5271                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  5272                           ;	LVP = 0x1, unprogrammed default
  5273                           ;	Data EEPROM Memory Code Protection bit
  5274                           ;	CPD = 0x1, unprogrammed default
  5275                           ;	Flash Program Memory Write Enable bits
  5276                           ;	WRT = 0x3, unprogrammed default
  5277                           ;	In-Circuit Debugger Mode bit
  5278                           ;	DEBUG = 0x1, unprogrammed default
  5279                           ;	Flash Program Memory Code Protection bit
  5280                           ;	CP = 0x1, unprogrammed default
  5281  2007                     	org	8199
  5282  2007  3FF6               	dw	16374

Data Sizes:
    Strings     40
    Constant    10
    Data        16
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     36      52
    BANK1            80     32      42
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_2(CODE[19]), STR_1(CODE[21]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> atualizaLCD@buffer1(BANK1[16]), atualizaLCD@buffer0(BANK1[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 16
		 -> atualizaLCD@buffer1(BANK1[16]), atualizaLCD@buffer0(BANK1[16]), 


Critical Paths under _main in COMMON

    _main->___fltol
    _main->_expandeTela
    _main->_recolheTela
    _atualizaLCD->___fltol
    _sprintf->___fltol
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _TrataINT in COMMON

    _TrataINT->i1_recolheTela

Critical Paths under _main in BANK0

    _main->_atualizaLCD
    _lerSensores->___xxtofl
    _controleEstufas->___flge
    _estufaUm->___flge
    _estufaTres->___flge
    _estufaQuatro->___flge
    _estufaDois->___flge
    _atualizaLCD->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _TrataINT in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_atualizaLCD

Critical Paths under _TrataINT in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TrataINT in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TrataINT in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   17130
                                             33 BANK0      3     3      0
                           _Lcd_Init
                            ___fltol
                        _atualizaLCD
                    _controleEstufas
                        _expandeTela
                        _iniciaPinos
                        _lerSensores
                           _paraTela
                        _recolheTela
 ---------------------------------------------------------------------------------
 (1) _recolheTela                                          2     2      0       0
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _paraTela                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lerSensores                                          4     4      0    1106
                                             14 BANK0      4     4      0
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1106
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) _iniciaPinos                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _expandeTela                                          2     2      0       0
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _controleEstufas                                      0     0      0   10330
                             ___flge
                         _estufaDois
                       _estufaQuatro
                         _estufaTres
                           _estufaUm
 ---------------------------------------------------------------------------------
 (2) _estufaUm                                             0     0      0    2066
                             ___flge
 ---------------------------------------------------------------------------------
 (2) _estufaTres                                           0     0      0    2066
                             ___flge
 ---------------------------------------------------------------------------------
 (2) _estufaQuatro                                         0     0      0    2066
                             ___flge
 ---------------------------------------------------------------------------------
 (2) _estufaDois                                           0     0      0    2066
                             ___flge
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8    2066
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _atualizaLCD                                         34    34      0    4358
                                             31 BANK0      2     2      0
                                              0 BANK1     32    32      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___fltol
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             27    18      9    1781
                                             12 BANK0     19    10      9
                            ___fltol (ARG)
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     412
                                              5 COMMON     1     1      0
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     421
                                              4 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4    1057
                                              4 COMMON     2     2      0
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     4     4      0     456
                                              3 BANK0      4     4      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       4     4      0     254
                                              5 COMMON     1     1      0
                                              0 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       7     6      1     725
                                              2 BANK0      7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     279
                                              2 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     155
                                              5 COMMON     1     1      0
                                              0 BANK0      2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0     124
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _TrataINT                                             2     2      0       0
                                              2 COMMON     2     2      0
                      i1_recolheTela
 ---------------------------------------------------------------------------------
 (6) i1_recolheTela                                        2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   ___fltol
   _atualizaLCD
     _Lcd_Clear
       _Lcd_Cmd
     _Lcd_Set_Cursor
       _Lcd_Cmd
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     ___fltol
     _sprintf
       ___fltol (ARG)
       ___lwdiv (ARG)
       ___lwmod (ARG)
         ___lwdiv (ARG)
   _controleEstufas
     ___flge
     _estufaDois
       ___flge
     _estufaQuatro
       ___flge
     _estufaTres
       ___flge
     _estufaUm
       ___flge
   _expandeTela
   _iniciaPinos
   _lerSensores
     ___xxtofl
   _paraTela
   _recolheTela

 _TrataINT (ROOT)
   i1_recolheTela

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     20      2A       7       52.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     24      34       5       65.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      68      12        0.0%
ABS                  0      0      68       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat May 08 20:16:40 2021

                        pc 0002                         fsr 0004   __size_of_controleEstufas 00E2  
                      l120 0E97                        l121 0E9D                        l201 0186  
                      l122 0E9E                        l123 0EA4                        l131 0E0D  
                      l211 0E62                        l140 06EF                        l204 0E7B  
                      l125 0EA5                        l117 0E8D                        l221 0449  
                      l118 0E90                        l214 027D                        l230 0F0B  
                      l206 0E83                        l119 0E96                        l143 0FC3  
                      l128 07FB                        l240 0EE8                        l232 0F0E  
                      l137 0747                        l209 0E5A                        l217 0799  
                      l242 0EEB                        l235 0EC5                        l227 0449  
                      l149 0F33                        l237 0EC8                        l245 0F89  
                      l247 0F8C                        l176 0630                        l357 0367  
                      l198 0DF4                        l535 0524                        l800 04B3  
                      l633 07DF                        l554 0610                        l538 0590  
                      l547 0625                        l643 0FFF                        l539 05A9  
                      l557 0625                        l807 04CF                        l808 04DB  
                      l794 046E                        l796 0505                        _RB0 0030  
                      _RB1 0031                        _RB2 0032                        _RC0 0038  
                      _RA4 002C                        _RB3 0033                        _RC1 0039  
                      _RB4 0034                        _RD0 0040                        _RC2 003A  
                      _RB5 0035                        _RD1 0041                        _RC3 003B  
                      _RB6 0036                        _RD2 0042                        _RC4 003C  
                      _RB7 0037                        _RD3 0043                        _RC5 003D  
                      _RD4 0044                        _RC6 003E                        _RD5 0045  
                      _RC7 003F                        _RD6 0046                        _RD7 0047  
                      u660 0E69                        u661 0E68                        u670 0E48  
                      u671 0E47                        fsr0 0004                        indf 0000  
             ?_atualizaLCD 0070               ___fltol@exp1 0075                       l2001 051C  
                     l1201 0773                       l2011 056C                       l2003 0538  
                     l1211 077C                       l1203 0774                       l2021 079E  
                     l2101 028C                       l2013 05A6                       l2005 0540  
                     l1221 0783                       l1213 077D                       l1205 0775  
                     l2031 07B6                       l2023 07A4                       l2111 02B6  
                     l2103 0293                       l2015 05A8                       l2007 0544  
                     l1231 0788                       l1223 0784                       l1215 0780  
                     l1207 0778                       l2033 07C7                       l2025 07A7  
                     l2041 07DB                       l2121 02CF                       l2113 02BE  
                     l2105 0298                       l2009 0568                       l1241 078D  
                     l1233 0789                       l1225 0785                       l1217 0781  
                     l1209 0779                       l2035 07CD                       l2027 07AE  
                     l2019 079A                       l2051 0FD6                       l2131 02ED  
                     l2115 02C2                       l1251 0792                       l1243 078E  
                     l1235 078A                       l1227 0786                       l1219 0782  
                     l2211 044D                       l2205 0605                       l2037 07CE  
                     l2029 07B2                       l2061 0FF5                       l2053 0FDA  
                     l2045 0FC4                       l2141 030D                       l2133 02F7  
                     l2117 02C6                       l2109 0299                       l1261 0797  
                     l1253 0793                       l1245 078F                       l1237 078B  
                     l1229 0787                       l2213 0452                       l2301 00DB  
                     l2071 06F8                       l2207 0615                       l2039 07D5  
                     l2055 0FDE                       l2047 0FCC                       l2063 0FFB  
                     l2143 033D                       l2135 02FD                       l2127 02D1  
                     l2119 02CA                       l2151 0363                       l1263 0798  
                     l1255 0794                       l1247 0790                       l1239 078C  
                     l1191 0768                       l2231 049C                       l2223 047F  
                     l2215 0456                       l2311 00FE                       l2303 00FA  
                     l2081 0723                       l2073 0709                       l2209 061A  
                     l2057 0FE8                       l2049 0FCF                       l2145 0344  
                     l2137 0304                       l2161 0F07                       l1361 0E42  
                     l1257 0795                       l1249 0791                       l1193 076F  
                     l1185 0748                       l2241 04D3                       l2233 04AA  
                     l2225 0484                       l2217 0466                       l2321 0128  
                     l2313 0124                       l2305 00FB                       l2401 063F  
                     l2067 0E01                       l2083 0734                       l2075 070E  
                     l2091 0F15                       l2059 0FEE                       l2147 0348  
                     l2139 0308                       l2163 0EA6                       l2171 0F5C  
                     l1363 0E48                       l1259 0796                       l1195 0770  
                     l1187 0761                       l2251 04FD                       l2243 04DD  
                     l2235 04BA                       l2227 0491                       l2219 0476  
                     l2331 0151                       l2323 012F                       l2315 0125  
                     l2307 00FC                       l1355 0E63                       l2411 066D  
                     l2403 0640                       l2261 06AF                       l2085 0739  
                     l2077 0714                       l2069 06F3                       l2093 0F20  
                     l2181 05C0                       l2149 0351                       l2341 01FE  
                     l2165 0EC1                       l2173 0F85                       l1365 0E50  
                     l1197 0771                       l1189 0765                       l2245 04F3  
                     l2237 04C5                       l2229 0498                       l2333 0159  
                     l2325 014E                       l2317 0126                       l2309 00FD  
                     l1357 0E69                       l2413 0671                       l2405 065C  
                     l2263 06B5                       l2255 068D                       l2087 073F  
                     l2079 071D                       l2095 0F28                       l2191 05E4  
                     l2183 05D5                       l2175 05AA                       l2343 0204  
                     l2167 0EC9                       l2159 0EEC                       l1199 0772  
                     l2247 04F8                       l2239 04C9                       l2327 014F  
                     l2319 0127                       l2271 006C                       l1367 0DEA  
                     l1359 0E71                       l2415 0676                       l2407 0662  
                     l2257 0693                       l2089 0F12                       l2185 05D6  
                     l2177 05B7                       l2097 0281                       l2345 020E  
                     l2337 0187                       l2169 0EE4                       l2361 038E  
                     l2353 0368                       l2249 04FC                       l2329 0150  
                     l2281 0096                       l2273 006D                       l2265 0040  
                     l2409 0667                       l2259 069E                       l2187 05DE  
                     l2099 0286                       l2347 0218                       l2339 0196  
                     l2371 03B8                       l2355 0383                       l2363 0392  
                     l2291 00A1                       l2283 0097                       l2275 006E  
                     l2267 0046                       l2197 05EC                       l2189 05E0  
                     l2437 02AB                       l2349 026D                       l2381 0419  
                     l2373 03D3                       l2365 03AD                       l2357 0388  
                     l2293 00CE                       l2285 0098                       l2277 006F  
                     l2269 004D                       l2199 05FE                       l2383 0434  
                     l2375 03EE                       l2359 038B                       l2295 00D1  
                     l2287 0099                       l2279 0070                       l2391 0626  
                     l2297 00D2                       l2289 009A                       l2393 0635  
                     l2379 03FE                       l2299 00D3                       l2395 063A  
                     l2397 063D                       l2399 063E                       l1961 0E89  
                     l1963 0E94                       l1971 07E4                       l1965 0E9B  
                     l1973 07EA                       l1981 0F9A                       l1967 0EA2  
                     l1959 0E85                       l1975 07ED                       l1991 0FB3  
                     l1983 0F9B                       l1977 07F8                       l1969 07E1  
                     l1993 0FB9                       l1985 0FA9                       l1995 0FBC  
                     l1987 0FAC                       l1979 0F90                       l1997 0FC0  
                     l1989 0FB0                       l1999 0506                       STR_1 0810  
                     STR_2 0825                       u2010 05FD                       u2011 05FC  
                     u2020 0604                       u2100 0497                       u2021 0603  
                     u2005 05ED                       u2101 0496                       u2040 0615  
                     u2200 0383                       u2120 04B9                       u2041 0614  
                     u2201 0382                       u2121 04B8                       u2050 061A  
                     u2210 03AD                       u2051 0619                       u2035 0607  
                     u2211 03AC                       u2115 04AB                       u2220 03D3  
                     u2140 04C9                       u2060 0452                       u2221 03D2  
                     u2141 04C8                       u2061 0451                       u2230 03EE  
                     u2150 04CF                       u2070 0456                       u2231 03ED  
                     u2151 04CE                       u2135 04BE                       u2071 0455  
                     u1600 051C                       u2240 0419                       u2160 04D3  
                     u2080 0476                       u1601 051B                       u2241 0418  
                     u2161 04D2                       u2081 0475                       u1610 0538  
                     u2250 0434                       u2170 04E8                       u1611 0537  
                     u2251 0433                       u2307 0E75                       u1620 0544  
                     u2180 04F8                       u2260 065C                       u1621 0543  
                     u2181 04F7                       u2317 004A                       u2261 065B  
                     u1550 0E89                       u1710 07C7                       u2190 04FC  
                     u2270 066D                       u1551 0E88                       u1711 07C6  
                     u2407 0279                       u1631 0553                       u2191 04FB  
                     u2175 04E3                       u2095 0489                       u2327 0074  
                     u2271 066C                       u1560 0E94                       u1800 06F8  
                     u1640 056C                       u1632 0554                       u2280 0671  
                     u1561 0E93                       u1801 06F7                       u2417 0FAE  
                     u1705 07B7                       u1641 056B                       u1633 0559  
                     u2337 009E                       u2281 0670                       u2265 0658  
                     u1570 0E9B                       u1730 07DB                       u1634 055A  
                     u1571 0E9A                       u2427 0FBE                       u1731 07DA  
                     u1715 07C3                       u1651 057B                       u1635 055F  
                     u2347 00D8                       u1580 0EA2                       u1820 0723  
                     u1740 0FCC                       u1900 0351                       u1660 05A6  
                     u1652 057C                       u1636 0560                       u1581 0EA1  
                     u2437 0699                       u1821 0722                       u1725 07CF  
                     u1741 0FCB                       u1901 0350                       u1661 05A5  
                     u1653 0581                       u2357 0102                       u1670 07A4  
                     u1910 0363                       u1654 0582                       u2447 06AA  
                     u1815 0700                       u1671 07A3                       u1911 0362  
                     u1655 0587                       u2367 012C                       u1840 0F33  
                     u1760 0FDE                       u1656 0588                       u1920 0F07  
                     u2457 06BB                       u1841 0F32                       u1761 0FDD  
                     u1665 05A2                       u1921 0F06                       u2377 0156  
                     u2297 0683                       u1690 07B6                       u1770 0FE8  
                     u1850 028C                       u1930 0EC1                       u2467 07F3  
                     u1835 072B                       u1595 0F9E                       u1691 07B5  
                     u1771 0FE7                       u1755 0FD0                       u1851 028B  
                     u1931 0EC0                       u2387 0E54                       u1860 02C6  
                     u1940 0EE4                       u1685 07A8                       u1861 02C5  
                     u2397 020A                       u1941 0EE3                       u1790 0FFB  
                     u1870 02EC                       u1950 0F85                       u1791 0FFA  
                     u1775 0FE4                       u1871 02EB                       u1951 0F84  
                     u1960 05B7                       u1880 02F7                       u1961 05B6  
                     u1785 0FEF                       u1881 02F6                       u1970 05CE  
                     u1890 02FD                       u1891 02FC                       u1875 02E8  
                     u1980 05E4                       u1981 05E3                       u1990 05EB  
                     _INTF 0059                       u1991 05EA                       u1975 05C9  
             ?_lerSensores 0070          ?_Lcd_Write_String 0070                       _main 0626  
                     btemp 007E               ?_iniciaPinos 0070                       start 000C  
       ??_Lcd_Write_String 0023            __end_of_Lcd_Cmd 07FC              ___fltol@sign1 0074  
                    ?_main 0070            __end_of___fltol 0626            __end_of___lwdiv 07E0  
                    i1l204 0E39                      i1l206 0E41                      i1l191 0F39  
                    i1l192 0F45            __end_of___lwmod 1000                      i1l195 0F55  
                    i1l189 0F47                      _TMR1H 000F                      _TMR1L 000E  
                    u80_20 0F4D                      u80_21 0F4C    __size_of_Lcd_Set_Cursor 0058  
                    _TRISA 0085                      _TRISC 0087                      _TRISD 0088  
                    u74_20 0E27                      u74_21 0E26                      u78_20 0F38  
                    u78_21 0F37                      u79_20 0F45                      u79_21 0F44  
          __end_of_dpowers 0810               ?_expandeTela 0070                      pclath 000A  
                    status 0003                      wtemp0 007E            __end_of_sprintf 0368  
         __end_of_Lcd_Init 06F0           __end_of_Lcd_Port 0EA6            __initialization 000F  
             __end_of_main 068D               ?_recolheTela 0070                     ??_main 0041  
       __size_of_Lcd_Clear 000D           __end_of_TrataINT 0F5C          ??_controleEstufas 0074  
                   _ADRESH 001E                     _ADRESL 009E                     i1l1403 0E21  
                   i1l1405 0E27                     i1l1407 0E2F                     i1l1443 0F3A  
                   i1l1445 0F3F                     i1l1447 0F4D                     i1l1439 0F34  
                   i1l1449 0F51                     u247_27 0E33                  ??_Lcd_Cmd 0020  
                   _TMR1IF 0060    __size_of_Lcd_Write_Char 0037           __end_of___xxtofl 0506  
                   ___flge 0506                  ??___fltol 0024                  ??___lwdiv 0074  
                ??___lwmod 0075           __end_of_paraTela 0DF5           __end_of_estufaUm 0F0F  
            ?_estufaQuatro 0070                     saved_w 007E                  ??_sprintf 0035  
     __size_of_atualizaLCD 00F7            Lcd_Set_Cursor@a 0025            Lcd_Set_Cursor@b 0022  
          Lcd_Set_Cursor@y 0027            Lcd_Set_Cursor@z 0026                 ___flge@ff1 0020  
               ___flge@ff2 0024               ___xxtofl@arg 002A               ___xxtofl@exp 0029  
             ___xxtofl@val 0020    __end_of__initialization 003C          __end_of_Lcd_Clear 0E0E  
     __size_of_lerSensores 0147                 ___fltol@f1 0020       __size_of_iniciaPinos 0052  
           __pcstackCOMMON 0070               __pidataBANK0 0DF5               __pidataBANK1 07FC  
           ??_estufaQuatro 0074             _Lcd_Set_Cursor 06F0             _OPTION_REGbits 0081  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070                 __pbssBANK0 0050  
               __pbssBANK1 00C0     __size_ofi1_recolheTela 0021       __size_of_expandeTela 0021  
               __pmaintext 0626                    ?___flge 0020                  ?_TrataINT 0070  
               __pintentry 0004  __size_of_Lcd_Write_String 0025     __end_of_Lcd_Set_Cursor 0748  
     __size_of_recolheTela 0021                  ?___xxtofl 0020                 ??_Lcd_Init 0022  
               ??_Lcd_Port 0074                 __stringtab 0800             _Lcd_Write_Char 0F8D  
                  _Lcd_Cmd 07E0                  ?_paraTela 0070                  ?_estufaUm 0070  
               ??_TrataINT 0072            __size_of___flge 00A4                    ___fltol 05AA  
                  ___lwdiv 079A                    ___lwmod 0FC4              i1_recolheTela 0E21  
          _controleEstufas 0368            ?_Lcd_Set_Cursor 0022                    __ptext1 0E63  
                  __ptext2 0DEA                    __ptext3 0040                    __ptext4 044A  
                  __ptext5 0748                    __ptext6 0E42                    __ptext7 0368  
                  __ptext8 0EEC                    __ptext9 0EC9                 _estufaDois 0EA6  
                _T1CONbits 0010                 _estufaTres 0EC9                    _dpowers 0806  
               ??___xxtofl 0024                    _sentido 00C4                    _sprintf 027E  
   __end_of_Lcd_Write_Char 0FC4       end_of_initialization 003C                 ??_paraTela 0074  
               ??_estufaUm 0074       __end_of_estufaQuatro 0F8D                  Lcd_Port@a 0074  
           ?i1_recolheTela 0070                  _PORTBbits 0006                  _PORTCbits 0007  
                _PORTDbits 0008         atualizaLCD@buffer0 00A0         atualizaLCD@buffer1 00B0  
            ___xxtofl@sign 0028                  _TRISBbits 0086            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0026          Lcd_Write_String@i 0024    __end_of_controleEstufas 044A  
                _Lcd_Clear 0E01             __end_of___flge 05AA           _Lcd_Write_String 0F0F  
              ?_estufaDois 0070                ?_estufaTres 0070              ??_atualizaLCD 003F  
      start_initialization 000F          __size_of_Lcd_Init 0063              ??_lerSensores 002E  
        __size_of_Lcd_Port 0022              ??_iniciaPinos 0074            ??i1_recolheTela 0070  
               ?_Lcd_Clear 0070                   ??___flge 0028                 init_fetch0 0E0E  
              __pdataBANK0 0044                __pdataBANK1 00C6            Lcd_Write_Char@a 0022  
          Lcd_Write_Char@y 0021          __size_of_TrataINT 0028                __pbssCOMMON 0076  
                ___latbits 0002              __pcstackBANK0 0020              __pcstackBANK1 00A0  
        __size_of___xxtofl 00BC              ??_expandeTela 0074      __size_of_estufaQuatro 0031  
      __end_of_atualizaLCD 027E                   ?_Lcd_Cmd 0070                sprintf@flag 0039  
              sprintf@prec 003A        __size_of_estufaDois 0023          __size_of_paraTela 000B  
      __size_of_estufaTres 0023        __end_of_lerSensores 0187           ___lwdiv@dividend 0022  
        __size_of_estufaUm 0023           ?_controleEstufas 0070           ??_Lcd_Set_Cursor 0023  
            ??_recolheTela 0074        __end_of_iniciaPinos 079A                   ?___fltol 0020  
                 ?___lwdiv 0020                   ?___lwmod 0027                  __pstrings 0800  
             _estufaQuatro 0F5C           ___lwdiv@quotient 0025                   ?_sprintf 002C  
        interrupt_function 0004        __end_of_expandeTela 0E63                   _PIE1bits 008C  
                 Lcd_Cmd@a 0075                ??_Lcd_Clear 0076                 _ADCON0bits 001F  
              __stringbase 0805                 _ADCON1bits 009F        __end_of_recolheTela 0E84  
         ??_Lcd_Write_Char 0075                _atualizaLCD 0187                   _Lcd_Init 068D  
                 _Lcd_Port 0E84                _lerSensores 0040   __end_of_Lcd_Write_String 0F34  
         __size_of_Lcd_Cmd 001C                _iniciaPinos 0748                   _TrataINT 0F34  
         __size_of___fltol 007C           __size_of___lwdiv 0046           __size_of___lwmod 003C  
       __end_of__stringtab 0806               ??_estufaDois 0074               ??_estufaTres 0074  
               sprintf@val 003B                   ___xxtofl 044A            ___lwdiv@divisor 0020  
          ___lwdiv@counter 0024                   __ptext10 0F5C                   __ptext11 0EA6  
                 __ptext20 06F0                   __ptext12 0506                   __ptext21 0E01  
                 __ptext13 0187                   __ptext22 068D                   __ptext14 027E  
                 __ptext23 07E0                   __ptext15 0FC4                   __ptext24 0E84  
                 __ptext16 079A                   __ptext25 0F34                   __ptext17 05AA  
                 __ptext26 0E21                   __ptext18 0F0F                   __ptext19 0F8D  
              _expandeTela 0E42           __size_of_sprintf 00EA                   _paraTela 0DEA  
            __size_of_main 0067                   _estufaUm 0EEC         __end_of_estufaDois 0EC9  
       __end_of_estufaTres 0EEC                _recolheTela 0E63                 _INTCONbits 000B  
                 init_ram0 0E12               _valor_entry0 0076               _valor_entry1 0050  
             _valor_entry2 00C0               _valor_entry3 004C               _valor_entry4 0048  
             _valor_entry5 0044               _valor_entry6 00C6         Lcd_Write_Char@temp 0020  
                 intlevel1 0000                  sprintf@ap 0038                  sprintf@sp 003D  
         ___lwmod@dividend 0029                  stringcode 0800      __end_ofi1_recolheTela 0E42  
       Lcd_Set_Cursor@temp 0028                   sprintf@c 003E                   sprintf@f 002C  
          ___lwmod@divisor 0027            ___lwmod@counter 002B                   stringdir 0800  
                 stringtab 0800  
