

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed May 05 17:52:40 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
     7                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2
    40                           	psect	text29,local,class=CODE,merge=1,delta=2
    41                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    42                           	dabs	1,0x7E,2
    43  0000                     
    44                           ; Version 2.20
    45                           ; Generated 12/02/2020 GMT
    46                           ; 
    47                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F877A Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     	;# 
    79  0001                     	;# 
    80  0002                     	;# 
    81  0003                     	;# 
    82  0004                     	;# 
    83  0005                     	;# 
    84  0006                     	;# 
    85  0007                     	;# 
    86  0008                     	;# 
    87  0009                     	;# 
    88  000A                     	;# 
    89  000B                     	;# 
    90  000C                     	;# 
    91  000D                     	;# 
    92  000E                     	;# 
    93  000E                     	;# 
    94  000F                     	;# 
    95  0010                     	;# 
    96  0011                     	;# 
    97  0012                     	;# 
    98  0013                     	;# 
    99  0014                     	;# 
   100  0015                     	;# 
   101  0015                     	;# 
   102  0016                     	;# 
   103  0017                     	;# 
   104  0018                     	;# 
   105  0019                     	;# 
   106  001A                     	;# 
   107  001B                     	;# 
   108  001B                     	;# 
   109  001C                     	;# 
   110  001D                     	;# 
   111  001E                     	;# 
   112  001F                     	;# 
   113  0081                     	;# 
   114  0085                     	;# 
   115  0086                     	;# 
   116  0087                     	;# 
   117  0088                     	;# 
   118  0089                     	;# 
   119  008C                     	;# 
   120  008D                     	;# 
   121  008E                     	;# 
   122  0091                     	;# 
   123  0092                     	;# 
   124  0093                     	;# 
   125  0094                     	;# 
   126  0098                     	;# 
   127  0099                     	;# 
   128  009C                     	;# 
   129  009D                     	;# 
   130  009E                     	;# 
   131  009F                     	;# 
   132  010C                     	;# 
   133  010D                     	;# 
   134  010E                     	;# 
   135  010F                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  0000                     	;# 
   139  0001                     	;# 
   140  0002                     	;# 
   141  0003                     	;# 
   142  0004                     	;# 
   143  0005                     	;# 
   144  0006                     	;# 
   145  0007                     	;# 
   146  0008                     	;# 
   147  0009                     	;# 
   148  000A                     	;# 
   149  000B                     	;# 
   150  000C                     	;# 
   151  000D                     	;# 
   152  000E                     	;# 
   153  000E                     	;# 
   154  000F                     	;# 
   155  0010                     	;# 
   156  0011                     	;# 
   157  0012                     	;# 
   158  0013                     	;# 
   159  0014                     	;# 
   160  0015                     	;# 
   161  0015                     	;# 
   162  0016                     	;# 
   163  0017                     	;# 
   164  0018                     	;# 
   165  0019                     	;# 
   166  001A                     	;# 
   167  001B                     	;# 
   168  001B                     	;# 
   169  001C                     	;# 
   170  001D                     	;# 
   171  001E                     	;# 
   172  001F                     	;# 
   173  0081                     	;# 
   174  0085                     	;# 
   175  0086                     	;# 
   176  0087                     	;# 
   177  0088                     	;# 
   178  0089                     	;# 
   179  008C                     	;# 
   180  008D                     	;# 
   181  008E                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  010C                     	;# 
   193  010D                     	;# 
   194  010E                     	;# 
   195  010F                     	;# 
   196  018C                     	;# 
   197  018D                     	;# 
   198                           
   199                           	psect	strings
   200  0003                     __pstrings:
   201  0003                     stringtab:
   202  0003                     __stringtab:
   203                           
   204                           ;	String table - string pointers are 1 byte each
   205  0003  1BFF               	btfsc	btemp+1,7
   206  0004  280D               	ljmp	stringcode
   207  0005  1383               	bcf	3,7
   208  0006  187F               	btfsc	btemp+1,0
   209  0007  1783               	bsf	3,7
   210  0008  0800               	movf	0,w
   211  0009  0A84               	incf	4,f
   212  000A  1903               	skipnz
   213  000B  0AFF               	incf	btemp+1,f
   214  000C  0008               	return
   215  000D                     stringcode:
   216  000D                     stringdir:
   217  000D  3000               	movlw	high stringdir
   218  000E  008A               	movwf	10
   219  000F  0804               	movf	4,w
   220  0010  0A84               	incf	4,f
   221  0011  0782               	addwf	2,f
   222  0012                     __stringbase:
   223  0012  3400               	retlw	0
   224  0013                     __end_of__stringtab:
   225  0013                     __powers_:
   226  0013  3400               	retlw	0
   227  0014  3400               	retlw	0
   228  0015  3480               	retlw	128
   229  0016  343F               	retlw	63
   230  0017  3400               	retlw	0
   231  0018  3400               	retlw	0
   232  0019  3420               	retlw	32
   233  001A  3441               	retlw	65
   234  001B  3400               	retlw	0
   235  001C  3400               	retlw	0
   236  001D  34C8               	retlw	200
   237  001E  3442               	retlw	66
   238  001F  3400               	retlw	0
   239  0020  3400               	retlw	0
   240  0021  347A               	retlw	122
   241  0022  3444               	retlw	68
   242  0023  3400               	retlw	0
   243  0024  3440               	retlw	64
   244  0025  341C               	retlw	28
   245  0026  3446               	retlw	70
   246  0027  3400               	retlw	0
   247  0028  3450               	retlw	80
   248  0029  34C3               	retlw	195
   249  002A  3447               	retlw	71
   250  002B  3400               	retlw	0
   251  002C  3424               	retlw	36
   252  002D  3474               	retlw	116
   253  002E  3449               	retlw	73
   254  002F  3480               	retlw	128
   255  0030  3496               	retlw	150
   256  0031  3418               	retlw	24
   257  0032  344B               	retlw	75
   258  0033  3420               	retlw	32
   259  0034  34BC               	retlw	188
   260  0035  34BE               	retlw	190
   261  0036  344C               	retlw	76
   262  0037  3428               	retlw	40
   263  0038  346B               	retlw	107
   264  0039  346E               	retlw	110
   265  003A  344E               	retlw	78
   266  003B  34F9               	retlw	249
   267  003C  3402               	retlw	2
   268  003D  3415               	retlw	21
   269  003E  3450               	retlw	80
   270  003F  34EC               	retlw	236
   271  0040  3478               	retlw	120
   272  0041  34AD               	retlw	173
   273  0042  3460               	retlw	96
   274  0043  34CA               	retlw	202
   275  0044  34F2               	retlw	242
   276  0045  3449               	retlw	73
   277  0046  3471               	retlw	113
   278  0047                     __end_of__powers_:
   279  0047                     __npowers_:
   280  0047  3400               	retlw	0
   281  0048  3400               	retlw	0
   282  0049  3480               	retlw	128
   283  004A  343F               	retlw	63
   284  004B  34CD               	retlw	205
   285  004C  34CC               	retlw	204
   286  004D  34CC               	retlw	204
   287  004E  343D               	retlw	61
   288  004F  340A               	retlw	10
   289  0050  34D7               	retlw	215
   290  0051  3423               	retlw	35
   291  0052  343C               	retlw	60
   292  0053  346F               	retlw	111
   293  0054  3412               	retlw	18
   294  0055  3483               	retlw	131
   295  0056  343A               	retlw	58
   296  0057  3417               	retlw	23
   297  0058  34B7               	retlw	183
   298  0059  34D1               	retlw	209
   299  005A  3438               	retlw	56
   300  005B  34AC               	retlw	172
   301  005C  34C5               	retlw	197
   302  005D  3427               	retlw	39
   303  005E  3437               	retlw	55
   304  005F  34BD               	retlw	189
   305  0060  3437               	retlw	55
   306  0061  3486               	retlw	134
   307  0062  3435               	retlw	53
   308  0063  3495               	retlw	149
   309  0064  34BF               	retlw	191
   310  0065  34D6               	retlw	214
   311  0066  3433               	retlw	51
   312  0067  3477               	retlw	119
   313  0068  34CC               	retlw	204
   314  0069  342B               	retlw	43
   315  006A  3432               	retlw	50
   316  006B  345F               	retlw	95
   317  006C  3470               	retlw	112
   318  006D  3489               	retlw	137
   319  006E  3430               	retlw	48
   320  006F  34FF               	retlw	255
   321  0070  34E6               	retlw	230
   322  0071  34DB               	retlw	219
   323  0072  342E               	retlw	46
   324  0073  3408               	retlw	8
   325  0074  34E5               	retlw	229
   326  0075  343C               	retlw	60
   327  0076  341E               	retlw	30
   328  0077  3460               	retlw	96
   329  0078  3442               	retlw	66
   330  0079  34A2               	retlw	162
   331  007A  340D               	retlw	13
   332  007B                     __end_of__npowers_:
   333  007B                     _dpowers:
   334  007B  3401               	retlw	1
   335  007C  3400               	retlw	0
   336  007D  3400               	retlw	0
   337  007E  3400               	retlw	0
   338  007F  340A               	retlw	10
   339  0080  3400               	retlw	0
   340  0081  3400               	retlw	0
   341  0082  3400               	retlw	0
   342  0083  3464               	retlw	100
   343  0084  3400               	retlw	0
   344  0085  3400               	retlw	0
   345  0086  3400               	retlw	0
   346  0087  34E8               	retlw	232
   347  0088  3403               	retlw	3
   348  0089  3400               	retlw	0
   349  008A  3400               	retlw	0
   350  008B  3410               	retlw	16
   351  008C  3427               	retlw	39
   352  008D  3400               	retlw	0
   353  008E  3400               	retlw	0
   354  008F  34A0               	retlw	160
   355  0090  3486               	retlw	134
   356  0091  3401               	retlw	1
   357  0092  3400               	retlw	0
   358  0093  3440               	retlw	64
   359  0094  3442               	retlw	66
   360  0095  340F               	retlw	15
   361  0096  3400               	retlw	0
   362  0097  3480               	retlw	128
   363  0098  3496               	retlw	150
   364  0099  3498               	retlw	152
   365  009A  3400               	retlw	0
   366  009B  3400               	retlw	0
   367  009C  34E1               	retlw	225
   368  009D  34F5               	retlw	245
   369  009E  3405               	retlw	5
   370  009F  3400               	retlw	0
   371  00A0  34CA               	retlw	202
   372  00A1  349A               	retlw	154
   373  00A2  343B               	retlw	59
   374  00A3                     __end_of_dpowers:
   375  001E                     _ADRESH	set	30
   376  001F                     _ADCON0bits	set	31
   377  0047                     _RD7	set	71
   378  003A                     _RC2	set	58
   379  003B                     _RC3	set	59
   380  0040                     _RD0	set	64
   381  0046                     _RD6	set	70
   382  0042                     _RD2	set	66
   383  0039                     _RC1	set	57
   384  0044                     _RD4	set	68
   385  0038                     _RC0	set	56
   386  0041                     _RD1	set	65
   387  0043                     _RD3	set	67
   388  0045                     _RD5	set	69
   389  0031                     _RB1	set	49
   390  0032                     _RB2	set	50
   391  0037                     _RB7	set	55
   392  0036                     _RB6	set	54
   393  0035                     _RB5	set	53
   394  0034                     _RB4	set	52
   395  009E                     _ADRESL	set	158
   396  009F                     _ADCON1bits	set	159
   397  0081                     _OPTION_REGbits	set	129
   398  0088                     _TRISD	set	136
   399  0087                     _TRISC	set	135
   400  0085                     _TRISA	set	133
   401  0086                     _TRISB	set	134
   402  00A3                     STR_2:
   403  00A3  3425               	retlw	37	;'%'
   404  00A4  342E               	retlw	46	;'.'
   405  00A5  3432               	retlw	50	;'2'
   406  00A6  3466               	retlw	102	;'f'
   407  00A7  3400               	retlw	0
   408  00A8                     STR_7:
   409  00A8  3453               	retlw	83	;'S'
   410  00A9  3431               	retlw	49	;'1'
   411  00AA  343A               	retlw	58	;':'
   412  00AB  3400               	retlw	0
   413  00AC                     STR_9:
   414  00AC  3453               	retlw	83	;'S'
   415  00AD  3432               	retlw	50	;'2'
   416  00AE  343A               	retlw	58	;':'
   417  00AF  3400               	retlw	0
   418  00B0                     STR_11:
   419  00B0  3453               	retlw	83	;'S'
   420  00B1  3433               	retlw	51	;'3'
   421  00B2  343A               	retlw	58	;':'
   422  00B3  3400               	retlw	0
   423  00B4                     STR_13:
   424  00B4  3453               	retlw	83	;'S'
   425  00B5  3434               	retlw	52	;'4'
   426  00B6  343A               	retlw	58	;':'
   427  00B7  3400               	retlw	0
   428  00B8                     STR_3:
   429  00B8  3441               	retlw	65	;'A'
   430  00B9  343A               	retlw	58	;':'
   431  00BA  3400               	retlw	0
   432  00BB                     STR_1:
   433  00BB  3443               	retlw	67	;'C'
   434  00BC  343A               	retlw	58	;':'
   435  00BD  3400               	retlw	0
   436  00BE                     STR_5:
   437  00BE  344C               	retlw	76	;'L'
   438  00BF  343A               	retlw	58	;':'
   439  00C0  3400               	retlw	0
   440  00A3                     
   441                           	psect	cinit
   442  07FC                     start_initialization:	
   443                           ; #config settings
   444                           
   445  07FC                     __initialization:
   446  07FC                     end_of_initialization:	
   447                           ;End of C runtime variable initialization code
   448                           
   449  07FC                     __end_of__initialization:
   450  07FC  0183               	clrf	3
   451  07FD  120A  158A  2B81   	ljmp	_main	;jump to C main() function
   452                           
   453                           	psect	cstackBANK3
   454  0190                     __pcstackBANK3:
   455  0190                     main@buffer2:
   456                           
   457                           ; 20 bytes @ 0x0
   458  0190                     	ds	20
   459  01A4                     main@buffer3:
   460                           
   461                           ; 20 bytes @ 0x14
   462  01A4                     	ds	20
   463  01B8                     main@buffer4:
   464                           
   465                           ; 20 bytes @ 0x28
   466  01B8                     	ds	20
   467  01CC                     main@buffer5:
   468                           
   469                           ; 20 bytes @ 0x3C
   470  01CC                     	ds	20
   471  01E0                     main@valor_entry0:
   472                           
   473                           ; 4 bytes @ 0x50
   474  01E0                     	ds	4
   475  01E4                     main@valor_entry1:
   476                           
   477                           ; 4 bytes @ 0x54
   478  01E4                     	ds	4
   479  01E8                     main@valor_entry3:
   480                           
   481                           ; 4 bytes @ 0x58
   482  01E8                     	ds	4
   483  01EC                     main@valor_entry4:
   484                           
   485                           ; 4 bytes @ 0x5C
   486  01EC                     	ds	4
   487                           
   488                           	psect	cstackBANK2
   489  0110                     __pcstackBANK2:
   490  0110                     main@buffer6:
   491                           
   492                           ; 20 bytes @ 0x0
   493  0110                     	ds	20
   494  0124                     main@valor_entry5:
   495                           
   496                           ; 4 bytes @ 0x14
   497  0124                     	ds	4
   498  0128                     main@valor_entry6:
   499                           
   500                           ; 4 bytes @ 0x18
   501  0128                     	ds	4
   502  012C                     main@valor_entry2:
   503                           
   504                           ; 4 bytes @ 0x1C
   505  012C                     	ds	4
   506                           
   507                           	psect	cstackBANK1
   508  00A0                     __pcstackBANK1:
   509  00A0                     ?_sprintf:
   510  00A0                     sprintf@sp:	
   511                           ; 2 bytes @ 0x0
   512                           
   513                           
   514                           ; 2 bytes @ 0x0
   515  00A0                     	ds	2
   516  00A2                     sprintf@f:
   517                           
   518                           ; 1 bytes @ 0x2
   519  00A2                     	ds	5
   520  00A7                     ??_sprintf:
   521                           
   522                           ; 1 bytes @ 0x7
   523  00A7                     	ds	5
   524  00AC                     _sprintf$940:
   525                           
   526                           ; 4 bytes @ 0xC
   527  00AC                     	ds	4
   528  00B0                     sprintf@ap:
   529                           
   530                           ; 1 bytes @ 0x10
   531  00B0                     	ds	1
   532  00B1                     sprintf@flag:
   533                           
   534                           ; 2 bytes @ 0x11
   535  00B1                     	ds	2
   536  00B3                     sprintf@val:
   537                           
   538                           ; 4 bytes @ 0x13
   539  00B3                     	ds	4
   540  00B7                     sprintf@eexp:
   541                           
   542                           ; 2 bytes @ 0x17
   543  00B7                     	ds	2
   544  00B9                     sprintf@tmpval:
   545                           
   546                           ; 4 bytes @ 0x19
   547  00B9                     	ds	4
   548  00BD                     sprintf@prec:
   549                           
   550                           ; 2 bytes @ 0x1D
   551  00BD                     	ds	2
   552  00BF                     sprintf@fval:
   553                           
   554                           ; 4 bytes @ 0x1F
   555  00BF                     	ds	4
   556  00C3                     sprintf@c:
   557                           
   558                           ; 1 bytes @ 0x23
   559  00C3                     	ds	1
   560  00C4                     ??_main:
   561                           
   562                           ; 1 bytes @ 0x24
   563  00C4                     	ds	4
   564  00C8                     main@buffer0:
   565                           
   566                           ; 20 bytes @ 0x28
   567  00C8                     	ds	20
   568  00DC                     main@buffer1:
   569                           
   570                           ; 20 bytes @ 0x3C
   571  00DC                     	ds	20
   572                           
   573                           	psect	cstackCOMMON
   574  0070                     __pcstackCOMMON:
   575  0070                     ?_isdigit:
   576  0070                     ?___fleq:	
   577                           ; 1 bit 
   578                           
   579  0070                     ?___flge:	
   580                           ; 1 bit 
   581                           
   582  0070                     ??_isdigit:	
   583                           ; 1 bit 
   584                           
   585  0070                     ?_Lcd_Port:	
   586                           ; 1 bytes @ 0x0
   587                           
   588  0070                     ??_Lcd_Port:	
   589                           ; 1 bytes @ 0x0
   590                           
   591  0070                     ?_Lcd_Cmd:	
   592                           ; 1 bytes @ 0x0
   593                           
   594  0070                     ?_Lcd_Clear:	
   595                           ; 1 bytes @ 0x0
   596                           
   597  0070                     ?_Lcd_Init:	
   598                           ; 1 bytes @ 0x0
   599                           
   600  0070                     ?_Lcd_Write_Char:	
   601                           ; 1 bytes @ 0x0
   602                           
   603  0070                     ?__Umul8_16:	
   604                           ; 1 bytes @ 0x0
   605                           
   606  0070                     ?_main:	
   607                           ; 2 bytes @ 0x0
   608                           
   609  0070                     ?___wmul:	
   610                           ; 2 bytes @ 0x0
   611                           
   612  0070                     ?___awmod:	
   613                           ; 2 bytes @ 0x0
   614                           
   615  0070                     ?___lwmod:	
   616                           ; 2 bytes @ 0x0
   617                           
   618  0070                     ?__tdiv_to_l_:	
   619                           ; 2 bytes @ 0x0
   620                           
   621  0070                     ?__div_to_l_:	
   622                           ; 4 bytes @ 0x0
   623                           
   624  0070                     ?___lldiv:	
   625                           ; 4 bytes @ 0x0
   626                           
   627  0070                     ?___flneg:	
   628                           ; 4 bytes @ 0x0
   629                           
   630  0070                     ?___llmod:	
   631                           ; 4 bytes @ 0x0
   632                           
   633  0070                     ?___xxtofl:	
   634                           ; 4 bytes @ 0x0
   635                           
   636  0070                     Lcd_Port@a:	
   637                           ; 4 bytes @ 0x0
   638                           
   639  0070                     __Umul8_16@multiplicand:	
   640                           ; 1 bytes @ 0x0
   641                           
   642  0070                     _isdigit$751:	
   643                           ; 1 bytes @ 0x0
   644                           
   645  0070                     ___wmul@multiplier:	
   646                           ; 1 bytes @ 0x0
   647                           
   648  0070                     ___awmod@divisor:	
   649                           ; 2 bytes @ 0x0
   650                           
   651  0070                     ___lwmod@divisor:	
   652                           ; 2 bytes @ 0x0
   653                           
   654  0070                     ___lldiv@divisor:	
   655                           ; 2 bytes @ 0x0
   656                           
   657  0070                     __div_to_l_@f1:	
   658                           ; 4 bytes @ 0x0
   659                           
   660  0070                     ___fleq@ff1:	
   661                           ; 4 bytes @ 0x0
   662                           
   663  0070                     ___flge@ff1:	
   664                           ; 4 bytes @ 0x0
   665                           
   666  0070                     ___flneg@f1:	
   667                           ; 4 bytes @ 0x0
   668                           
   669  0070                     __tdiv_to_l_@f1:	
   670                           ; 4 bytes @ 0x0
   671                           
   672  0070                     ___llmod@divisor:	
   673                           ; 4 bytes @ 0x0
   674                           
   675  0070                     ___xxtofl@val:	
   676                           ; 4 bytes @ 0x0
   677                           
   678                           
   679                           ; 4 bytes @ 0x0
   680  0070                     	ds	1
   681  0071                     ??_Lcd_Cmd:
   682  0071                     ??_Lcd_Write_Char:	
   683                           ; 1 bytes @ 0x1
   684                           
   685  0071                     isdigit@c:	
   686                           ; 1 bytes @ 0x1
   687                           
   688                           
   689                           ; 1 bytes @ 0x1
   690  0071                     	ds	1
   691  0072                     ??__Umul8_16:
   692  0072                     Lcd_Write_Char@temp:	
   693                           ; 1 bytes @ 0x2
   694                           
   695  0072                     ___wmul@multiplicand:	
   696                           ; 1 bytes @ 0x2
   697                           
   698  0072                     ___awmod@dividend:	
   699                           ; 2 bytes @ 0x2
   700                           
   701  0072                     ___lwmod@dividend:	
   702                           ; 2 bytes @ 0x2
   703                           
   704                           
   705                           ; 2 bytes @ 0x2
   706  0072                     	ds	1
   707  0073                     Lcd_Cmd@a:
   708  0073                     Lcd_Write_Char@y:	
   709                           ; 1 bytes @ 0x3
   710                           
   711                           
   712                           ; 1 bytes @ 0x3
   713  0073                     	ds	1
   714  0074                     ??_Lcd_Clear:
   715  0074                     ?_Lcd_Set_Cursor:	
   716                           ; 1 bytes @ 0x4
   717                           
   718  0074                     ??_Lcd_Init:	
   719                           ; 1 bytes @ 0x4
   720                           
   721  0074                     ??___wmul:	
   722                           ; 1 bytes @ 0x4
   723                           
   724  0074                     ??___awmod:	
   725                           ; 1 bytes @ 0x4
   726                           
   727  0074                     ??___flneg:	
   728                           ; 1 bytes @ 0x4
   729                           
   730  0074                     ??___lwmod:	
   731                           ; 1 bytes @ 0x4
   732                           
   733  0074                     ??___xxtofl:	
   734                           ; 1 bytes @ 0x4
   735                           
   736  0074                     Lcd_Set_Cursor@b:	
   737                           ; 1 bytes @ 0x4
   738                           
   739  0074                     Lcd_Write_Char@a:	
   740                           ; 1 bytes @ 0x4
   741                           
   742  0074                     ___wmul@product:	
   743                           ; 1 bytes @ 0x4
   744                           
   745  0074                     __Umul8_16@product:	
   746                           ; 2 bytes @ 0x4
   747                           
   748  0074                     ___lldiv@dividend:	
   749                           ; 2 bytes @ 0x4
   750                           
   751  0074                     __div_to_l_@f2:	
   752                           ; 4 bytes @ 0x4
   753                           
   754  0074                     ___fleq@ff2:	
   755                           ; 4 bytes @ 0x4
   756                           
   757  0074                     ___flge@ff2:	
   758                           ; 4 bytes @ 0x4
   759                           
   760  0074                     __tdiv_to_l_@f2:	
   761                           ; 4 bytes @ 0x4
   762                           
   763  0074                     ___llmod@dividend:	
   764                           ; 4 bytes @ 0x4
   765                           
   766                           
   767                           ; 4 bytes @ 0x4
   768  0074                     	ds	1
   769  0075                     ??_Lcd_Set_Cursor:
   770  0075                     ?_Lcd_Write_String:	
   771                           ; 1 bytes @ 0x5
   772                           
   773  0075                     ___awmod@counter:	
   774                           ; 1 bytes @ 0x5
   775                           
   776  0075                     ___lwmod@counter:	
   777                           ; 1 bytes @ 0x5
   778                           
   779  0075                     Lcd_Write_String@a:	
   780                           ; 1 bytes @ 0x5
   781                           
   782                           
   783                           ; 2 bytes @ 0x5
   784  0075                     	ds	1
   785  0076                     ?___lwdiv:
   786  0076                     ___awmod@sign:	
   787                           ; 2 bytes @ 0x6
   788                           
   789  0076                     ___lwdiv@divisor:	
   790                           ; 1 bytes @ 0x6
   791                           
   792  0076                     __Umul8_16@word_mpld:	
   793                           ; 2 bytes @ 0x6
   794                           
   795                           
   796                           ; 2 bytes @ 0x6
   797  0076                     	ds	1
   798  0077                     ??_Lcd_Write_String:
   799  0077                     ?___awdiv:	
   800                           ; 1 bytes @ 0x7
   801                           
   802  0077                     Lcd_Set_Cursor@a:	
   803                           ; 2 bytes @ 0x7
   804                           
   805  0077                     ___awdiv@divisor:	
   806                           ; 1 bytes @ 0x7
   807                           
   808                           
   809                           ; 2 bytes @ 0x7
   810  0077                     	ds	1
   811  0078                     ??__tdiv_to_l_:
   812  0078                     ??__div_to_l_:	
   813                           ; 1 bytes @ 0x8
   814                           
   815  0078                     ??___lldiv:	
   816                           ; 1 bytes @ 0x8
   817                           
   818  0078                     ??___fleq:	
   819                           ; 1 bytes @ 0x8
   820                           
   821  0078                     ??___flge:	
   822                           ; 1 bytes @ 0x8
   823                           
   824  0078                     ??___llmod:	
   825                           ; 1 bytes @ 0x8
   826                           
   827  0078                     Lcd_Set_Cursor@z:	
   828                           ; 1 bytes @ 0x8
   829                           
   830  0078                     __Umul8_16@multiplier:	
   831                           ; 1 bytes @ 0x8
   832                           
   833  0078                     ___xxtofl@sign:	
   834                           ; 1 bytes @ 0x8
   835                           
   836  0078                     ___lwdiv@dividend:	
   837                           ; 1 bytes @ 0x8
   838                           
   839                           
   840                           ; 2 bytes @ 0x8
   841  0078                     	ds	1
   842  0079                     Lcd_Set_Cursor@y:
   843  0079                     ___llmod@counter:	
   844                           ; 1 bytes @ 0x9
   845                           
   846  0079                     ___xxtofl@exp:	
   847                           ; 1 bytes @ 0x9
   848                           
   849  0079                     ___awdiv@dividend:	
   850                           ; 1 bytes @ 0x9
   851                           
   852  0079                     ___lldiv@quotient:	
   853                           ; 2 bytes @ 0x9
   854                           
   855                           
   856                           ; 4 bytes @ 0x9
   857  0079                     	ds	1
   858  007A                     ??___lwdiv:
   859  007A                     Lcd_Set_Cursor@temp:	
   860                           ; 1 bytes @ 0xA
   861                           
   862  007A                     Lcd_Write_String@i:	
   863                           ; 1 bytes @ 0xA
   864                           
   865  007A                     ___xxtofl@arg:	
   866                           ; 2 bytes @ 0xA
   867                           
   868                           
   869                           ; 4 bytes @ 0xA
   870  007A                     	ds	1
   871  007B                     ??___awdiv:
   872  007B                     ___lwdiv@quotient:	
   873                           ; 1 bytes @ 0xB
   874                           
   875                           
   876                           ; 2 bytes @ 0xB
   877  007B                     	ds	2
   878  007D                     ___lldiv@counter:
   879  007D                     ___lwdiv@counter:	
   880                           ; 1 bytes @ 0xD
   881                           
   882                           
   883                           ; 1 bytes @ 0xD
   884  007D                     	ds	1
   885  007E                     ??___flsub:
   886                           
   887                           	psect	cstackBANK0
   888  0020                     __pcstackBANK0:	
   889                           ; 1 bytes @ 0xE
   890                           
   891  0020                     ___awdiv@counter:
   892  0020                     __div_to_l_@quot:	
   893                           ; 1 bytes @ 0x0
   894                           
   895  0020                     __tdiv_to_l_@quot:	
   896                           ; 4 bytes @ 0x0
   897                           
   898                           
   899                           ; 4 bytes @ 0x0
   900  0020                     	ds	1
   901  0021                     ___awdiv@sign:
   902                           
   903                           ; 1 bytes @ 0x1
   904  0021                     	ds	1
   905  0022                     ___awdiv@quotient:
   906                           
   907                           ; 2 bytes @ 0x2
   908  0022                     	ds	2
   909  0024                     ?___flmul:
   910  0024                     __div_to_l_@cntr:	
   911                           ; 4 bytes @ 0x4
   912                           
   913  0024                     __tdiv_to_l_@cntr:	
   914                           ; 1 bytes @ 0x4
   915                           
   916  0024                     ___flmul@b:	
   917                           ; 1 bytes @ 0x4
   918                           
   919                           
   920                           ; 4 bytes @ 0x4
   921  0024                     	ds	1
   922  0025                     __div_to_l_@exp1:
   923  0025                     __tdiv_to_l_@exp1:	
   924                           ; 1 bytes @ 0x5
   925                           
   926                           
   927                           ; 1 bytes @ 0x5
   928  0025                     	ds	3
   929  0028                     ___flmul@a:
   930                           
   931                           ; 4 bytes @ 0x8
   932  0028                     	ds	4
   933  002C                     ??___flmul:
   934                           
   935                           ; 1 bytes @ 0xC
   936  002C                     	ds	5
   937  0031                     ___flmul@sign:
   938                           
   939                           ; 1 bytes @ 0x11
   940  0031                     	ds	1
   941  0032                     ___flmul@grs:
   942                           
   943                           ; 4 bytes @ 0x12
   944  0032                     	ds	4
   945  0036                     ___flmul@aexp:
   946                           
   947                           ; 1 bytes @ 0x16
   948  0036                     	ds	1
   949  0037                     ___flmul@bexp:
   950                           
   951                           ; 1 bytes @ 0x17
   952  0037                     	ds	1
   953  0038                     ___flmul@prod:
   954                           
   955                           ; 4 bytes @ 0x18
   956  0038                     	ds	4
   957  003C                     ___flmul@temp:
   958                           
   959                           ; 2 bytes @ 0x1C
   960  003C                     	ds	2
   961  003E                     ?_fround:
   962  003E                     ?_scale:	
   963                           ; 4 bytes @ 0x1E
   964                           
   965                           
   966                           ; 4 bytes @ 0x1E
   967  003E                     	ds	4
   968  0042                     ??_fround:
   969  0042                     ??_scale:	
   970                           ; 1 bytes @ 0x22
   971                           
   972                           
   973                           ; 1 bytes @ 0x22
   974  0042                     	ds	7
   975  0049                     _fround$938:
   976                           
   977                           ; 4 bytes @ 0x29
   978  0049                     	ds	3
   979  004C                     _scale$939:
   980                           
   981                           ; 4 bytes @ 0x2C
   982  004C                     	ds	1
   983  004D                     _fround$937:
   984                           
   985                           ; 4 bytes @ 0x2D
   986  004D                     	ds	3
   987  0050                     scale@scl:
   988                           
   989                           ; 1 bytes @ 0x30
   990  0050                     	ds	1
   991  0051                     ?___fltol:
   992  0051                     fround@prec:	
   993                           ; 4 bytes @ 0x31
   994                           
   995  0051                     ___fltol@f1:	
   996                           ; 1 bytes @ 0x31
   997                           
   998                           
   999                           ; 4 bytes @ 0x31
  1000  0051                     	ds	1
  1001  0052                     ?___fladd:
  1002  0052                     ___fladd@b:	
  1003                           ; 4 bytes @ 0x32
  1004                           
  1005                           
  1006                           ; 4 bytes @ 0x32
  1007  0052                     	ds	3
  1008  0055                     ??___fltol:
  1009                           
  1010                           ; 1 bytes @ 0x35
  1011  0055                     	ds	1
  1012  0056                     ___fladd@a:
  1013                           
  1014                           ; 4 bytes @ 0x36
  1015  0056                     	ds	4
  1016  005A                     ??___fladd:
  1017  005A                     ___fltol@sign1:	
  1018                           ; 1 bytes @ 0x3A
  1019                           
  1020                           
  1021                           ; 1 bytes @ 0x3A
  1022  005A                     	ds	1
  1023  005B                     ___fltol@exp1:
  1024                           
  1025                           ; 1 bytes @ 0x3B
  1026  005B                     	ds	7
  1027  0062                     ___fladd@signs:
  1028                           
  1029                           ; 1 bytes @ 0x42
  1030  0062                     	ds	1
  1031  0063                     ___fladd@aexp:
  1032                           
  1033                           ; 1 bytes @ 0x43
  1034  0063                     	ds	1
  1035  0064                     ___fladd@bexp:
  1036                           
  1037                           ; 1 bytes @ 0x44
  1038  0064                     	ds	1
  1039  0065                     ___fladd@grs:
  1040                           
  1041                           ; 1 bytes @ 0x45
  1042  0065                     	ds	1
  1043  0066                     ?___flsub:
  1044  0066                     ___flsub@a:	
  1045                           ; 4 bytes @ 0x46
  1046                           
  1047                           
  1048                           ; 4 bytes @ 0x46
  1049  0066                     	ds	4
  1050  006A                     ___flsub@b:
  1051                           
  1052                           ; 4 bytes @ 0x4A
  1053  006A                     	ds	4
  1054                           
  1055                           	psect	maintext
  1056  0B81                     __pmaintext:	
  1057 ;;
  1058 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1059 ;;
  1060 ;; *************** function _main *****************
  1061 ;; Defined at:
  1062 ;;		line 32 in file "main.c"
  1063 ;; Parameters:    Size  Location     Type
  1064 ;;		None
  1065 ;; Auto vars:     Size  Location     Type
  1066 ;;  valor_entry2    4   28[BANK2 ] float 
  1067 ;;  valor_entry6    4   24[BANK2 ] float 
  1068 ;;  valor_entry5    4   20[BANK2 ] float 
  1069 ;;  valor_entry4    4   92[BANK3 ] float 
  1070 ;;  valor_entry3    4   88[BANK3 ] float 
  1071 ;;  valor_entry1    4   84[BANK3 ] float 
  1072 ;;  valor_entry0    4   80[BANK3 ] float 
  1073 ;;  buffer6        20    0[BANK2 ] unsigned char [20]
  1074 ;;  buffer5        20   60[BANK3 ] unsigned char [20]
  1075 ;;  buffer4        20   40[BANK3 ] unsigned char [20]
  1076 ;;  buffer3        20   20[BANK3 ] unsigned char [20]
  1077 ;;  buffer2        20    0[BANK3 ] unsigned char [20]
  1078 ;;  buffer1        20   60[BANK1 ] unsigned char [20]
  1079 ;;  buffer0        20   40[BANK1 ] unsigned char [20]
  1080 ;; Return value:  Size  Location     Type
  1081 ;;                  2  103[None  ] int 
  1082 ;; Registers used:
  1083 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1084 ;; Tracked objects:
  1085 ;;		On entry : B00/0
  1086 ;;		On exit  : 0/0
  1087 ;;		Unchanged: 0/0
  1088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1089 ;;      Params:         0       0       0       0       0
  1090 ;;      Locals:         0       0      40      96      32
  1091 ;;      Temps:          0       0       4       0       0
  1092 ;;      Totals:         0       0      44      96      32
  1093 ;;Total ram usage:      172 bytes
  1094 ;; Hardware stack levels required when called:    4
  1095 ;; This function calls:
  1096 ;;		_Lcd_Clear
  1097 ;;		_Lcd_Init
  1098 ;;		_Lcd_Set_Cursor
  1099 ;;		_Lcd_Write_String
  1100 ;;		___flge
  1101 ;;		___xxtofl
  1102 ;;		_sprintf
  1103 ;; This function is called by:
  1104 ;;		Startup code after reset
  1105 ;; This function uses a non-reentrant model
  1106 ;;
  1107                           
  1108                           
  1109                           ;psect for function _main
  1110  0B81                     _main:
  1111  0B81                     l3379:	
  1112                           ;incstack = 0
  1113                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1114                           
  1115                           
  1116                           ;main.c: 34:     char buffer0[20],buffer1[20],buffer2[20],buffer3[20],buffer4[20],buffer
      +                          5[20],buffer6[20];;main.c: 37:    TRISB = 0b00000000;
  1117  0B81  1683               	bsf	3,5	;RP0=1, select bank1
  1118  0B82  1303               	bcf	3,6	;RP1=0, select bank1
  1119  0B83  0186               	clrf	6	;volatile
  1120  0B84                     l3381:
  1121                           
  1122                           ;main.c: 38:    TRISA = 0b11111111;
  1123  0B84  30FF               	movlw	255
  1124  0B85  0085               	movwf	5	;volatile
  1125  0B86                     l3383:
  1126                           
  1127                           ;main.c: 39:    TRISC = 0b00000000;
  1128  0B86  0187               	clrf	7	;volatile
  1129  0B87                     l3385:
  1130                           
  1131                           ;main.c: 40:    TRISD = 0b00000000;
  1132  0B87  0188               	clrf	8	;volatile
  1133  0B88                     l3387:
  1134                           
  1135                           ;main.c: 42:    OPTION_REGbits.nRBPU = 0;
  1136  0B88  1381               	bcf	1,7	;volatile
  1137  0B89                     l3389:
  1138                           
  1139                           ;main.c: 46:    ADCON1bits.PCFG0 = 0;
  1140  0B89  101F               	bcf	31,0	;volatile
  1141  0B8A                     l3391:
  1142                           
  1143                           ;main.c: 47:    ADCON1bits.PCFG1 = 0;
  1144  0B8A  109F               	bcf	31,1	;volatile
  1145  0B8B                     l3393:
  1146                           
  1147                           ;main.c: 48:    ADCON1bits.PCFG2 = 0;
  1148  0B8B  111F               	bcf	31,2	;volatile
  1149  0B8C                     l3395:
  1150                           
  1151                           ;main.c: 49:    ADCON1bits.PCFG3 = 0;
  1152  0B8C  119F               	bcf	31,3	;volatile
  1153  0B8D                     l3397:
  1154                           
  1155                           ;main.c: 52:    ADCON0bits.ADCS0 = 0 ;
  1156  0B8D  1283               	bcf	3,5	;RP0=0, select bank0
  1157  0B8E  1303               	bcf	3,6	;RP1=0, select bank0
  1158  0B8F  131F               	bcf	31,6	;volatile
  1159  0B90                     l3399:
  1160                           
  1161                           ;main.c: 53:    ADCON0bits.ADCS1 = 0 ;
  1162  0B90  139F               	bcf	31,7	;volatile
  1163  0B91                     l3401:
  1164                           
  1165                           ;main.c: 55:    ADCON1bits.ADFM = 0 ;
  1166  0B91  1683               	bsf	3,5	;RP0=1, select bank1
  1167  0B92  1303               	bcf	3,6	;RP1=0, select bank1
  1168  0B93  139F               	bcf	31,7	;volatile
  1169  0B94                     l3403:
  1170                           
  1171                           ;main.c: 62:    ADRESL = 0x00;
  1172  0B94  019E               	clrf	30	;volatile
  1173  0B95                     l3405:
  1174                           
  1175                           ;main.c: 63:    ADRESH = 0x00;
  1176  0B95  1283               	bcf	3,5	;RP0=0, select bank0
  1177  0B96  1303               	bcf	3,6	;RP1=0, select bank0
  1178  0B97  019E               	clrf	30	;volatile
  1179  0B98                     l3407:
  1180                           
  1181                           ;main.c: 65:    ADCON0bits.ADON = 1;
  1182  0B98  141F               	bsf	31,0	;volatile
  1183  0B99                     l3409:
  1184                           
  1185                           ;main.c: 67:   Lcd_Init();
  1186  0B99  160A  158A  243F  120A  158A  	fcall	_Lcd_Init
  1187  0B9E                     l3411:
  1188  0B9E                     l3413:
  1189                           
  1190                           ;main.c: 78:        ADCON0bits.CHS0 = 0;
  1191  0B9E  1283               	bcf	3,5	;RP0=0, select bank0
  1192  0B9F  1303               	bcf	3,6	;RP1=0, select bank0
  1193  0BA0  119F               	bcf	31,3	;volatile
  1194  0BA1                     l3415:
  1195                           
  1196                           ;main.c: 79:        ADCON0bits.CHS1 = 0;
  1197  0BA1  121F               	bcf	31,4	;volatile
  1198  0BA2                     l3417:
  1199                           
  1200                           ;main.c: 80:        ADCON0bits.CHS2 = 0;
  1201  0BA2  129F               	bcf	31,5	;volatile
  1202  0BA3                     l3419:
  1203                           
  1204                           ;main.c: 82:        ADCON0bits.GO = 1;
  1205  0BA3  151F               	bsf	31,2	;volatile
  1206  0BA4                     l3421:
  1207                           
  1208                           ;main.c: 83:        _delay((unsigned long)((20)*(4000000/4000000.0)));
  1209  0BA4  3005               	movlw	5
  1210  0BA5  1683               	bsf	3,5	;RP0=1, select bank1
  1211  0BA6  1303               	bcf	3,6	;RP1=0, select bank1
  1212  0BA7  00C4               	movwf	??_main^(0+128)
  1213  0BA8                     u5457:
  1214  0BA8  0BC4               	decfsz	??_main^(0+128),f
  1215  0BA9  2BA8               	goto	u5457
  1216  0BAA  2BAB               	nop2
  1217  0BAB                     l3423:
  1218                           
  1219                           ;main.c: 84:        valor_entry0 = ADRESH;
  1220  0BAB  1283               	bcf	3,5	;RP0=0, select bank0
  1221  0BAC  1303               	bcf	3,6	;RP1=0, select bank0
  1222  0BAD  081E               	movf	30,w	;volatile
  1223  0BAE  1683               	bsf	3,5	;RP0=1, select bank1
  1224  0BAF  1303               	bcf	3,6	;RP1=0, select bank1
  1225  0BB0  00C4               	movwf	??_main^(0+128)
  1226  0BB1  01C5               	clrf	(??_main^(0+128)+1)
  1227  0BB2  01C6               	clrf	(??_main^(0+128)+2)
  1228  0BB3  01C7               	clrf	(??_main^(0+128)+3)
  1229  0BB4  0847               	movf	(??_main+3)^(0+128),w
  1230  0BB5  00F3               	movwf	___xxtofl@val+3
  1231  0BB6  0846               	movf	(??_main+2)^(0+128),w
  1232  0BB7  00F2               	movwf	___xxtofl@val+2
  1233  0BB8  0845               	movf	(??_main+1)^(0+128),w
  1234  0BB9  00F1               	movwf	___xxtofl@val+1
  1235  0BBA  0844               	movf	??_main^(0+128),w
  1236  0BBB  00F0               	movwf	___xxtofl@val
  1237  0BBC  3000               	movlw	0
  1238  0BBD  160A  158A  2689  120A  158A  	fcall	___xxtofl
  1239  0BC2  0873               	movf	?___xxtofl+3,w
  1240  0BC3  1683               	bsf	3,5	;RP0=1, select bank3
  1241  0BC4  1703               	bsf	3,6	;RP1=1, select bank3
  1242  0BC5  00E3               	movwf	(main@valor_entry0+3)^(0+384)
  1243  0BC6  0872               	movf	?___xxtofl+2,w
  1244  0BC7  00E2               	movwf	(main@valor_entry0+2)^(0+384)
  1245  0BC8  0871               	movf	?___xxtofl+1,w
  1246  0BC9  00E1               	movwf	(main@valor_entry0+1)^(0+384)
  1247  0BCA  0870               	movf	?___xxtofl,w
  1248  0BCB  00E0               	movwf	main@valor_entry0^(0+384)
  1249  0BCC                     l3425:
  1250                           
  1251                           ;main.c: 88:        ADCON0bits.CHS0 = 1;
  1252  0BCC  1283               	bcf	3,5	;RP0=0, select bank0
  1253  0BCD  1303               	bcf	3,6	;RP1=0, select bank0
  1254  0BCE  159F               	bsf	31,3	;volatile
  1255  0BCF                     l3427:
  1256                           
  1257                           ;main.c: 89:        ADCON0bits.CHS1 = 0;
  1258  0BCF  121F               	bcf	31,4	;volatile
  1259  0BD0                     l3429:
  1260                           
  1261                           ;main.c: 90:        ADCON0bits.CHS2 = 0;
  1262  0BD0  129F               	bcf	31,5	;volatile
  1263  0BD1                     l3431:
  1264                           
  1265                           ;main.c: 92:        ADCON0bits.GO = 1;
  1266  0BD1  151F               	bsf	31,2	;volatile
  1267  0BD2                     l3433:
  1268                           
  1269                           ;main.c: 93:        _delay((unsigned long)((20)*(4000000/4000000.0)));
  1270  0BD2  3005               	movlw	5
  1271  0BD3  1683               	bsf	3,5	;RP0=1, select bank1
  1272  0BD4  1303               	bcf	3,6	;RP1=0, select bank1
  1273  0BD5  00C4               	movwf	??_main^(0+128)
  1274  0BD6                     u5467:
  1275  0BD6  0BC4               	decfsz	??_main^(0+128),f
  1276  0BD7  2BD6               	goto	u5467
  1277  0BD8  2BD9               	nop2
  1278  0BD9                     l3435:
  1279                           
  1280                           ;main.c: 94:        valor_entry1 = ADRESH;
  1281  0BD9  1283               	bcf	3,5	;RP0=0, select bank0
  1282  0BDA  1303               	bcf	3,6	;RP1=0, select bank0
  1283  0BDB  081E               	movf	30,w	;volatile
  1284  0BDC  1683               	bsf	3,5	;RP0=1, select bank1
  1285  0BDD  1303               	bcf	3,6	;RP1=0, select bank1
  1286  0BDE  00C4               	movwf	??_main^(0+128)
  1287  0BDF  01C5               	clrf	(??_main^(0+128)+1)
  1288  0BE0  01C6               	clrf	(??_main^(0+128)+2)
  1289  0BE1  01C7               	clrf	(??_main^(0+128)+3)
  1290  0BE2  0847               	movf	(??_main+3)^(0+128),w
  1291  0BE3  00F3               	movwf	___xxtofl@val+3
  1292  0BE4  0846               	movf	(??_main+2)^(0+128),w
  1293  0BE5  00F2               	movwf	___xxtofl@val+2
  1294  0BE6  0845               	movf	(??_main+1)^(0+128),w
  1295  0BE7  00F1               	movwf	___xxtofl@val+1
  1296  0BE8  0844               	movf	??_main^(0+128),w
  1297  0BE9  00F0               	movwf	___xxtofl@val
  1298  0BEA  3000               	movlw	0
  1299  0BEB  160A  158A  2689  120A  158A  	fcall	___xxtofl
  1300  0BF0  0873               	movf	?___xxtofl+3,w
  1301  0BF1  1683               	bsf	3,5	;RP0=1, select bank3
  1302  0BF2  1703               	bsf	3,6	;RP1=1, select bank3
  1303  0BF3  00E7               	movwf	(main@valor_entry1+3)^(0+384)
  1304  0BF4  0872               	movf	?___xxtofl+2,w
  1305  0BF5  00E6               	movwf	(main@valor_entry1+2)^(0+384)
  1306  0BF6  0871               	movf	?___xxtofl+1,w
  1307  0BF7  00E5               	movwf	(main@valor_entry1+1)^(0+384)
  1308  0BF8  0870               	movf	?___xxtofl,w
  1309  0BF9  00E4               	movwf	main@valor_entry1^(0+384)
  1310  0BFA                     l3437:
  1311                           
  1312                           ;main.c: 98:        ADCON0bits.CHS0 = 0;
  1313  0BFA  1283               	bcf	3,5	;RP0=0, select bank0
  1314  0BFB  1303               	bcf	3,6	;RP1=0, select bank0
  1315  0BFC  119F               	bcf	31,3	;volatile
  1316  0BFD                     l3439:
  1317                           
  1318                           ;main.c: 99:        ADCON0bits.CHS1 = 1;
  1319  0BFD  161F               	bsf	31,4	;volatile
  1320  0BFE                     l3441:
  1321                           
  1322                           ;main.c: 100:        ADCON0bits.CHS2 = 0;
  1323  0BFE  129F               	bcf	31,5	;volatile
  1324  0BFF                     l3443:
  1325                           
  1326                           ;main.c: 102:        ADCON0bits.GO = 1;
  1327  0BFF  151F               	bsf	31,2	;volatile
  1328  0C00                     l3445:
  1329                           
  1330                           ;main.c: 103:        _delay((unsigned long)((20)*(4000000/4000000.0)));
  1331  0C00  3005               	movlw	5
  1332  0C01  1683               	bsf	3,5	;RP0=1, select bank1
  1333  0C02  1303               	bcf	3,6	;RP1=0, select bank1
  1334  0C03  00C4               	movwf	??_main^(0+128)
  1335  0C04                     u5477:
  1336  0C04  0BC4               	decfsz	??_main^(0+128),f
  1337  0C05  2C04               	goto	u5477
  1338  0C06  2C07               	nop2
  1339  0C07                     l3447:
  1340                           
  1341                           ;main.c: 104:        valor_entry2 = ADRESH;
  1342  0C07  1283               	bcf	3,5	;RP0=0, select bank0
  1343  0C08  1303               	bcf	3,6	;RP1=0, select bank0
  1344  0C09  081E               	movf	30,w	;volatile
  1345  0C0A  1683               	bsf	3,5	;RP0=1, select bank1
  1346  0C0B  1303               	bcf	3,6	;RP1=0, select bank1
  1347  0C0C  00C4               	movwf	??_main^(0+128)
  1348  0C0D  01C5               	clrf	(??_main^(0+128)+1)
  1349  0C0E  01C6               	clrf	(??_main^(0+128)+2)
  1350  0C0F  01C7               	clrf	(??_main^(0+128)+3)
  1351  0C10  0847               	movf	(??_main+3)^(0+128),w
  1352  0C11  00F3               	movwf	___xxtofl@val+3
  1353  0C12  0846               	movf	(??_main+2)^(0+128),w
  1354  0C13  00F2               	movwf	___xxtofl@val+2
  1355  0C14  0845               	movf	(??_main+1)^(0+128),w
  1356  0C15  00F1               	movwf	___xxtofl@val+1
  1357  0C16  0844               	movf	??_main^(0+128),w
  1358  0C17  00F0               	movwf	___xxtofl@val
  1359  0C18  3000               	movlw	0
  1360  0C19  160A  158A  2689  120A  158A  	fcall	___xxtofl
  1361  0C1E  0873               	movf	?___xxtofl+3,w
  1362  0C1F  1283               	bcf	3,5	;RP0=0, select bank2
  1363  0C20  1703               	bsf	3,6	;RP1=1, select bank2
  1364  0C21  00AF               	movwf	(main@valor_entry2+3)^(0+256)
  1365  0C22  0872               	movf	?___xxtofl+2,w
  1366  0C23  00AE               	movwf	(main@valor_entry2+2)^(0+256)
  1367  0C24  0871               	movf	?___xxtofl+1,w
  1368  0C25  00AD               	movwf	(main@valor_entry2+1)^(0+256)
  1369  0C26  0870               	movf	?___xxtofl,w
  1370  0C27  00AC               	movwf	main@valor_entry2^(0+256)
  1371  0C28                     l3449:
  1372                           
  1373                           ;main.c: 107:        if(valor_entry2 < 127)
  1374  0C28  082F               	movf	(main@valor_entry2+3)^(0+256),w
  1375  0C29  00F3               	movwf	___flge@ff1+3
  1376  0C2A  082E               	movf	(main@valor_entry2+2)^(0+256),w
  1377  0C2B  00F2               	movwf	___flge@ff1+2
  1378  0C2C  082D               	movf	(main@valor_entry2+1)^(0+256),w
  1379  0C2D  00F1               	movwf	___flge@ff1+1
  1380  0C2E  082C               	movf	main@valor_entry2^(0+256),w
  1381  0C2F  00F0               	movwf	___flge@ff1
  1382  0C30  3042               	movlw	66
  1383  0C31  00F7               	movwf	___flge@ff2+3
  1384  0C32  30FE               	movlw	254
  1385  0C33  00F6               	movwf	___flge@ff2+2
  1386  0C34  3000               	movlw	0
  1387  0C35  00F5               	movwf	___flge@ff2+1
  1388  0C36  3000               	movlw	0
  1389  0C37  00F4               	movwf	___flge@ff2
  1390  0C38  160A  158A  25E7  120A  158A  	fcall	___flge
  1391  0C3D  1803               	btfsc	3,0
  1392  0C3E  2C40               	goto	u5431
  1393  0C3F  2C41               	goto	u5430
  1394  0C40                     u5431:
  1395  0C40  2C75               	goto	l3471
  1396  0C41                     u5430:
  1397  0C41                     l3451:
  1398                           
  1399                           ;main.c: 108:        {;main.c: 110:            RD5 = 1;
  1400  0C41  1283               	bcf	3,5	;RP0=0, select bank0
  1401  0C42  1303               	bcf	3,6	;RP1=0, select bank0
  1402  0C43  1688               	bsf	8,5	;volatile
  1403                           
  1404                           ;main.c: 111:            RD3 = 1;
  1405  0C44  1588               	bsf	8,3	;volatile
  1406                           
  1407                           ;main.c: 112:            RD1 = 1;
  1408  0C45  1488               	bsf	8,1	;volatile
  1409                           
  1410                           ;main.c: 113:            RC0 = 1;
  1411  0C46  1407               	bsf	7,0	;volatile
  1412                           
  1413                           ;main.c: 116:            RD4 = 0;
  1414  0C47  1208               	bcf	8,4	;volatile
  1415                           
  1416                           ;main.c: 117:            RC1 = 1;
  1417  0C48  1487               	bsf	7,1	;volatile
  1418                           
  1419                           ;main.c: 118:            RD2 = 0;
  1420  0C49  1108               	bcf	8,2	;volatile
  1421                           
  1422                           ;main.c: 119:            RD6 = 1;
  1423  0C4A  1708               	bsf	8,6	;volatile
  1424                           
  1425                           ;main.c: 121:            RD0 = 0;
  1426  0C4B  1008               	bcf	8,0	;volatile
  1427                           
  1428                           ;main.c: 122:            RC3 = 1;
  1429  0C4C  1587               	bsf	7,3	;volatile
  1430                           
  1431                           ;main.c: 123:            RC2 = 0;
  1432  0C4D  1107               	bcf	7,2	;volatile
  1433                           
  1434                           ;main.c: 124:            RD7 = 1;
  1435  0C4E  1788               	bsf	8,7	;volatile
  1436  0C4F                     l3453:
  1437                           
  1438                           ;main.c: 125:            _delay((unsigned long)((500)*(4000000/4000.0)));
  1439  0C4F  3003               	movlw	3
  1440  0C50  1683               	bsf	3,5	;RP0=1, select bank1
  1441  0C51  1303               	bcf	3,6	;RP1=0, select bank1
  1442  0C52  00C6               	movwf	(??_main^(0+128)+2)
  1443  0C53  308A               	movlw	138
  1444  0C54  00C5               	movwf	(??_main^(0+128)+1)
  1445  0C55  3055               	movlw	85
  1446  0C56  00C4               	movwf	??_main^(0+128)
  1447  0C57                     u5487:
  1448  0C57  0BC4               	decfsz	??_main^(0+128),f
  1449  0C58  2C57               	goto	u5487
  1450  0C59  0BC5               	decfsz	(??_main^(0+128)+1),f
  1451  0C5A  2C57               	goto	u5487
  1452  0C5B  0BC6               	decfsz	(??_main^(0+128)+2),f
  1453  0C5C  2C57               	goto	u5487
  1454  0C5D                     l3455:
  1455                           
  1456                           ;main.c: 128:            RD4 = 1;
  1457  0C5D  1283               	bcf	3,5	;RP0=0, select bank0
  1458  0C5E  1303               	bcf	3,6	;RP1=0, select bank0
  1459  0C5F  1608               	bsf	8,4	;volatile
  1460  0C60                     l3457:
  1461                           
  1462                           ;main.c: 129:            RC1 = 1;
  1463  0C60  1487               	bsf	7,1	;volatile
  1464  0C61                     l3459:
  1465                           
  1466                           ;main.c: 130:            RD2 = 1;
  1467  0C61  1508               	bsf	8,2	;volatile
  1468  0C62                     l3461:
  1469                           
  1470                           ;main.c: 131:            RD6 = 1;
  1471  0C62  1708               	bsf	8,6	;volatile
  1472  0C63                     l3463:
  1473                           
  1474                           ;main.c: 133:            RD0 = 1;
  1475  0C63  1408               	bsf	8,0	;volatile
  1476  0C64                     l3465:
  1477                           
  1478                           ;main.c: 134:            RC3 = 1;
  1479  0C64  1587               	bsf	7,3	;volatile
  1480  0C65                     l3467:
  1481                           
  1482                           ;main.c: 135:            RC2 = 1;
  1483  0C65  1507               	bsf	7,2	;volatile
  1484  0C66                     l3469:
  1485                           
  1486                           ;main.c: 136:            RD7 = 1;
  1487  0C66  1788               	bsf	8,7	;volatile
  1488                           
  1489                           ;main.c: 137:            _delay((unsigned long)((500)*(4000000/4000.0)));
  1490  0C67  3003               	movlw	3
  1491  0C68  1683               	bsf	3,5	;RP0=1, select bank1
  1492  0C69  1303               	bcf	3,6	;RP1=0, select bank1
  1493  0C6A  00C6               	movwf	(??_main^(0+128)+2)
  1494  0C6B  308A               	movlw	138
  1495  0C6C  00C5               	movwf	(??_main^(0+128)+1)
  1496  0C6D  3055               	movlw	85
  1497  0C6E  00C4               	movwf	??_main^(0+128)
  1498  0C6F                     u5497:
  1499  0C6F  0BC4               	decfsz	??_main^(0+128),f
  1500  0C70  2C6F               	goto	u5497
  1501  0C71  0BC5               	decfsz	(??_main^(0+128)+1),f
  1502  0C72  2C6F               	goto	u5497
  1503  0C73  0BC6               	decfsz	(??_main^(0+128)+2),f
  1504  0C74  2C6F               	goto	u5497
  1505  0C75                     l3471:
  1506                           
  1507                           ;main.c: 140:        if(valor_entry2 > 128)
  1508  0C75  3043               	movlw	67
  1509  0C76  00F3               	movwf	___flge@ff1+3
  1510  0C77  3000               	movlw	0
  1511  0C78  00F2               	movwf	___flge@ff1+2
  1512  0C79  3000               	movlw	0
  1513  0C7A  00F1               	movwf	___flge@ff1+1
  1514  0C7B  3000               	movlw	0
  1515  0C7C  00F0               	movwf	___flge@ff1
  1516  0C7D  1283               	bcf	3,5	;RP0=0, select bank2
  1517  0C7E  1703               	bsf	3,6	;RP1=1, select bank2
  1518  0C7F  082F               	movf	(main@valor_entry2+3)^(0+256),w
  1519  0C80  00F7               	movwf	___flge@ff2+3
  1520  0C81  082E               	movf	(main@valor_entry2+2)^(0+256),w
  1521  0C82  00F6               	movwf	___flge@ff2+2
  1522  0C83  082D               	movf	(main@valor_entry2+1)^(0+256),w
  1523  0C84  00F5               	movwf	___flge@ff2+1
  1524  0C85  082C               	movf	main@valor_entry2^(0+256),w
  1525  0C86  00F4               	movwf	___flge@ff2
  1526  0C87  160A  158A  25E7  120A  158A  	fcall	___flge
  1527  0C8C  1803               	btfsc	3,0
  1528  0C8D  2C8F               	goto	u5441
  1529  0C8E  2C90               	goto	u5440
  1530  0C8F                     u5441:
  1531  0C8F  2CC4               	goto	l3493
  1532  0C90                     u5440:
  1533  0C90                     l3473:
  1534                           
  1535                           ;main.c: 141:        {;main.c: 143:            RD5 = 1;
  1536  0C90  1283               	bcf	3,5	;RP0=0, select bank0
  1537  0C91  1303               	bcf	3,6	;RP1=0, select bank0
  1538  0C92  1688               	bsf	8,5	;volatile
  1539                           
  1540                           ;main.c: 144:            RD3 = 1;
  1541  0C93  1588               	bsf	8,3	;volatile
  1542                           
  1543                           ;main.c: 145:            RD1 = 1;
  1544  0C94  1488               	bsf	8,1	;volatile
  1545                           
  1546                           ;main.c: 146:            RC0 = 1;
  1547  0C95  1407               	bsf	7,0	;volatile
  1548                           
  1549                           ;main.c: 150:            RD4 = 1;
  1550  0C96  1608               	bsf	8,4	;volatile
  1551                           
  1552                           ;main.c: 151:            RC1 = 0;
  1553  0C97  1087               	bcf	7,1	;volatile
  1554                           
  1555                           ;main.c: 152:            RD2 = 1;
  1556  0C98  1508               	bsf	8,2	;volatile
  1557                           
  1558                           ;main.c: 153:            RD6 = 0;
  1559  0C99  1308               	bcf	8,6	;volatile
  1560                           
  1561                           ;main.c: 155:            RD0 = 1;
  1562  0C9A  1408               	bsf	8,0	;volatile
  1563                           
  1564                           ;main.c: 156:            RC3 = 0;
  1565  0C9B  1187               	bcf	7,3	;volatile
  1566                           
  1567                           ;main.c: 157:            RC2 = 1;
  1568  0C9C  1507               	bsf	7,2	;volatile
  1569                           
  1570                           ;main.c: 158:            RD7 = 0;
  1571  0C9D  1388               	bcf	8,7	;volatile
  1572  0C9E                     l3475:
  1573                           
  1574                           ;main.c: 160:            _delay((unsigned long)((500)*(4000000/4000.0)));
  1575  0C9E  3003               	movlw	3
  1576  0C9F  1683               	bsf	3,5	;RP0=1, select bank1
  1577  0CA0  1303               	bcf	3,6	;RP1=0, select bank1
  1578  0CA1  00C6               	movwf	(??_main^(0+128)+2)
  1579  0CA2  308A               	movlw	138
  1580  0CA3  00C5               	movwf	(??_main^(0+128)+1)
  1581  0CA4  3055               	movlw	85
  1582  0CA5  00C4               	movwf	??_main^(0+128)
  1583  0CA6                     u5507:
  1584  0CA6  0BC4               	decfsz	??_main^(0+128),f
  1585  0CA7  2CA6               	goto	u5507
  1586  0CA8  0BC5               	decfsz	(??_main^(0+128)+1),f
  1587  0CA9  2CA6               	goto	u5507
  1588  0CAA  0BC6               	decfsz	(??_main^(0+128)+2),f
  1589  0CAB  2CA6               	goto	u5507
  1590  0CAC                     l3477:
  1591                           
  1592                           ;main.c: 163:            RD4 = 1;
  1593  0CAC  1283               	bcf	3,5	;RP0=0, select bank0
  1594  0CAD  1303               	bcf	3,6	;RP1=0, select bank0
  1595  0CAE  1608               	bsf	8,4	;volatile
  1596  0CAF                     l3479:
  1597                           
  1598                           ;main.c: 164:            RC1 = 1;
  1599  0CAF  1487               	bsf	7,1	;volatile
  1600  0CB0                     l3481:
  1601                           
  1602                           ;main.c: 165:            RD2 = 1;
  1603  0CB0  1508               	bsf	8,2	;volatile
  1604  0CB1                     l3483:
  1605                           
  1606                           ;main.c: 166:            RD6 = 1;
  1607  0CB1  1708               	bsf	8,6	;volatile
  1608  0CB2                     l3485:
  1609                           
  1610                           ;main.c: 168:            RD0 = 1;
  1611  0CB2  1408               	bsf	8,0	;volatile
  1612  0CB3                     l3487:
  1613                           
  1614                           ;main.c: 169:            RC3 = 1;
  1615  0CB3  1587               	bsf	7,3	;volatile
  1616  0CB4                     l3489:
  1617                           
  1618                           ;main.c: 170:            RC2 = 1;
  1619  0CB4  1507               	bsf	7,2	;volatile
  1620  0CB5                     l3491:
  1621                           
  1622                           ;main.c: 171:            RD7 = 1;
  1623  0CB5  1788               	bsf	8,7	;volatile
  1624                           
  1625                           ;main.c: 172:            _delay((unsigned long)((500)*(4000000/4000.0)));
  1626  0CB6  3003               	movlw	3
  1627  0CB7  1683               	bsf	3,5	;RP0=1, select bank1
  1628  0CB8  1303               	bcf	3,6	;RP1=0, select bank1
  1629  0CB9  00C6               	movwf	(??_main^(0+128)+2)
  1630  0CBA  308A               	movlw	138
  1631  0CBB  00C5               	movwf	(??_main^(0+128)+1)
  1632  0CBC  3055               	movlw	85
  1633  0CBD  00C4               	movwf	??_main^(0+128)
  1634  0CBE                     u5517:
  1635  0CBE  0BC4               	decfsz	??_main^(0+128),f
  1636  0CBF  2CBE               	goto	u5517
  1637  0CC0  0BC5               	decfsz	(??_main^(0+128)+1),f
  1638  0CC1  2CBE               	goto	u5517
  1639  0CC2  0BC6               	decfsz	(??_main^(0+128)+2),f
  1640  0CC3  2CBE               	goto	u5517
  1641  0CC4                     l3493:
  1642                           
  1643                           ;main.c: 180:        ADCON0bits.CHS0 = 1;
  1644  0CC4  1283               	bcf	3,5	;RP0=0, select bank0
  1645  0CC5  1303               	bcf	3,6	;RP1=0, select bank0
  1646  0CC6  159F               	bsf	31,3	;volatile
  1647  0CC7                     l3495:
  1648                           
  1649                           ;main.c: 181:        ADCON0bits.CHS1 = 1;
  1650  0CC7  161F               	bsf	31,4	;volatile
  1651  0CC8                     l3497:
  1652                           
  1653                           ;main.c: 182:        ADCON0bits.CHS2 = 0;
  1654  0CC8  129F               	bcf	31,5	;volatile
  1655  0CC9                     l3499:
  1656                           
  1657                           ;main.c: 184:        ADCON0bits.GO = 1;
  1658  0CC9  151F               	bsf	31,2	;volatile
  1659                           
  1660                           ;main.c: 185:        _delay((unsigned long)((20)*(4000000/4000000.0)));
  1661  0CCA  3005               	movlw	5
  1662  0CCB  1683               	bsf	3,5	;RP0=1, select bank1
  1663  0CCC  1303               	bcf	3,6	;RP1=0, select bank1
  1664  0CCD  00C4               	movwf	??_main^(0+128)
  1665  0CCE                     u5527:
  1666  0CCE  0BC4               	decfsz	??_main^(0+128),f
  1667  0CCF  2CCE               	goto	u5527
  1668  0CD0  2CD1               	nop2
  1669  0CD1                     l3501:
  1670                           
  1671                           ;main.c: 186:        valor_entry3 = ADRESH;
  1672  0CD1  1283               	bcf	3,5	;RP0=0, select bank0
  1673  0CD2  1303               	bcf	3,6	;RP1=0, select bank0
  1674  0CD3  081E               	movf	30,w	;volatile
  1675  0CD4  1683               	bsf	3,5	;RP0=1, select bank1
  1676  0CD5  1303               	bcf	3,6	;RP1=0, select bank1
  1677  0CD6  00C4               	movwf	??_main^(0+128)
  1678  0CD7  01C5               	clrf	(??_main^(0+128)+1)
  1679  0CD8  01C6               	clrf	(??_main^(0+128)+2)
  1680  0CD9  01C7               	clrf	(??_main^(0+128)+3)
  1681  0CDA  0847               	movf	(??_main+3)^(0+128),w
  1682  0CDB  00F3               	movwf	___xxtofl@val+3
  1683  0CDC  0846               	movf	(??_main+2)^(0+128),w
  1684  0CDD  00F2               	movwf	___xxtofl@val+2
  1685  0CDE  0845               	movf	(??_main+1)^(0+128),w
  1686  0CDF  00F1               	movwf	___xxtofl@val+1
  1687  0CE0  0844               	movf	??_main^(0+128),w
  1688  0CE1  00F0               	movwf	___xxtofl@val
  1689  0CE2  3000               	movlw	0
  1690  0CE3  160A  158A  2689  120A  158A  	fcall	___xxtofl
  1691  0CE8  0873               	movf	?___xxtofl+3,w
  1692  0CE9  1683               	bsf	3,5	;RP0=1, select bank3
  1693  0CEA  1703               	bsf	3,6	;RP1=1, select bank3
  1694  0CEB  00EB               	movwf	(main@valor_entry3+3)^(0+384)
  1695  0CEC  0872               	movf	?___xxtofl+2,w
  1696  0CED  00EA               	movwf	(main@valor_entry3+2)^(0+384)
  1697  0CEE  0871               	movf	?___xxtofl+1,w
  1698  0CEF  00E9               	movwf	(main@valor_entry3+1)^(0+384)
  1699  0CF0  0870               	movf	?___xxtofl,w
  1700  0CF1  00E8               	movwf	main@valor_entry3^(0+384)
  1701  0CF2                     l3503:
  1702                           
  1703                           ;main.c: 190:        ADCON0bits.CHS0 = 0;
  1704  0CF2  1283               	bcf	3,5	;RP0=0, select bank0
  1705  0CF3  1303               	bcf	3,6	;RP1=0, select bank0
  1706  0CF4  119F               	bcf	31,3	;volatile
  1707  0CF5                     l3505:
  1708                           
  1709                           ;main.c: 191:        ADCON0bits.CHS1 = 0;
  1710  0CF5  121F               	bcf	31,4	;volatile
  1711  0CF6                     l3507:
  1712                           
  1713                           ;main.c: 192:        ADCON0bits.CHS2 = 1;
  1714  0CF6  169F               	bsf	31,5	;volatile
  1715  0CF7                     l3509:
  1716                           
  1717                           ;main.c: 194:        ADCON0bits.GO = 1;
  1718  0CF7  151F               	bsf	31,2	;volatile
  1719  0CF8                     l3511:
  1720                           
  1721                           ;main.c: 195:        _delay((unsigned long)((20)*(4000000/4000000.0)));
  1722  0CF8  3005               	movlw	5
  1723  0CF9  1683               	bsf	3,5	;RP0=1, select bank1
  1724  0CFA  1303               	bcf	3,6	;RP1=0, select bank1
  1725  0CFB  00C4               	movwf	??_main^(0+128)
  1726  0CFC                     u5537:
  1727  0CFC  0BC4               	decfsz	??_main^(0+128),f
  1728  0CFD  2CFC               	goto	u5537
  1729  0CFE  2CFF               	nop2
  1730                           
  1731                           ;main.c: 196:        valor_entry4 = ADRESH;
  1732  0CFF  1283               	bcf	3,5	;RP0=0, select bank0
  1733  0D00  1303               	bcf	3,6	;RP1=0, select bank0
  1734  0D01  081E               	movf	30,w	;volatile
  1735  0D02  1683               	bsf	3,5	;RP0=1, select bank1
  1736  0D03  1303               	bcf	3,6	;RP1=0, select bank1
  1737  0D04  00C4               	movwf	??_main^(0+128)
  1738  0D05  01C5               	clrf	(??_main^(0+128)+1)
  1739  0D06  01C6               	clrf	(??_main^(0+128)+2)
  1740  0D07  01C7               	clrf	(??_main^(0+128)+3)
  1741  0D08  0847               	movf	(??_main+3)^(0+128),w
  1742  0D09  00F3               	movwf	___xxtofl@val+3
  1743  0D0A  0846               	movf	(??_main+2)^(0+128),w
  1744  0D0B  00F2               	movwf	___xxtofl@val+2
  1745  0D0C  0845               	movf	(??_main+1)^(0+128),w
  1746  0D0D  00F1               	movwf	___xxtofl@val+1
  1747  0D0E  0844               	movf	??_main^(0+128),w
  1748  0D0F  00F0               	movwf	___xxtofl@val
  1749  0D10  3000               	movlw	0
  1750  0D11  160A  158A  2689  120A  158A  	fcall	___xxtofl
  1751  0D16  0873               	movf	?___xxtofl+3,w
  1752  0D17  1683               	bsf	3,5	;RP0=1, select bank3
  1753  0D18  1703               	bsf	3,6	;RP1=1, select bank3
  1754  0D19  00EF               	movwf	(main@valor_entry4+3)^(0+384)
  1755  0D1A  0872               	movf	?___xxtofl+2,w
  1756  0D1B  00EE               	movwf	(main@valor_entry4+2)^(0+384)
  1757  0D1C  0871               	movf	?___xxtofl+1,w
  1758  0D1D  00ED               	movwf	(main@valor_entry4+1)^(0+384)
  1759  0D1E  0870               	movf	?___xxtofl,w
  1760  0D1F  00EC               	movwf	main@valor_entry4^(0+384)
  1761  0D20                     l3513:
  1762                           
  1763                           ;main.c: 200:        ADCON0bits.CHS0 = 1;
  1764  0D20  1283               	bcf	3,5	;RP0=0, select bank0
  1765  0D21  1303               	bcf	3,6	;RP1=0, select bank0
  1766  0D22  159F               	bsf	31,3	;volatile
  1767  0D23                     l3515:
  1768                           
  1769                           ;main.c: 201:        ADCON0bits.CHS1 = 0;
  1770  0D23  121F               	bcf	31,4	;volatile
  1771  0D24                     l3517:
  1772                           
  1773                           ;main.c: 202:        ADCON0bits.CHS2 = 1;
  1774  0D24  169F               	bsf	31,5	;volatile
  1775  0D25                     l3519:
  1776                           
  1777                           ;main.c: 204:        ADCON0bits.GO = 1;
  1778  0D25  151F               	bsf	31,2	;volatile
  1779  0D26                     l3521:
  1780                           
  1781                           ;main.c: 205:        _delay((unsigned long)((20)*(4000000/4000000.0)));
  1782  0D26  3005               	movlw	5
  1783  0D27  1683               	bsf	3,5	;RP0=1, select bank1
  1784  0D28  1303               	bcf	3,6	;RP1=0, select bank1
  1785  0D29  00C4               	movwf	??_main^(0+128)
  1786  0D2A                     u5547:
  1787  0D2A  0BC4               	decfsz	??_main^(0+128),f
  1788  0D2B  2D2A               	goto	u5547
  1789  0D2C  2D2D               	nop2
  1790  0D2D                     l3523:
  1791                           
  1792                           ;main.c: 206:        valor_entry5 = ADRESH;
  1793  0D2D  1283               	bcf	3,5	;RP0=0, select bank0
  1794  0D2E  1303               	bcf	3,6	;RP1=0, select bank0
  1795  0D2F  081E               	movf	30,w	;volatile
  1796  0D30  1683               	bsf	3,5	;RP0=1, select bank1
  1797  0D31  1303               	bcf	3,6	;RP1=0, select bank1
  1798  0D32  00C4               	movwf	??_main^(0+128)
  1799  0D33  01C5               	clrf	(??_main^(0+128)+1)
  1800  0D34  01C6               	clrf	(??_main^(0+128)+2)
  1801  0D35  01C7               	clrf	(??_main^(0+128)+3)
  1802  0D36  0847               	movf	(??_main+3)^(0+128),w
  1803  0D37  00F3               	movwf	___xxtofl@val+3
  1804  0D38  0846               	movf	(??_main+2)^(0+128),w
  1805  0D39  00F2               	movwf	___xxtofl@val+2
  1806  0D3A  0845               	movf	(??_main+1)^(0+128),w
  1807  0D3B  00F1               	movwf	___xxtofl@val+1
  1808  0D3C  0844               	movf	??_main^(0+128),w
  1809  0D3D  00F0               	movwf	___xxtofl@val
  1810  0D3E  3000               	movlw	0
  1811  0D3F  160A  158A  2689  120A  158A  	fcall	___xxtofl
  1812  0D44  0873               	movf	?___xxtofl+3,w
  1813  0D45  1283               	bcf	3,5	;RP0=0, select bank2
  1814  0D46  1703               	bsf	3,6	;RP1=1, select bank2
  1815  0D47  00A7               	movwf	(main@valor_entry5+3)^(0+256)
  1816  0D48  0872               	movf	?___xxtofl+2,w
  1817  0D49  00A6               	movwf	(main@valor_entry5+2)^(0+256)
  1818  0D4A  0871               	movf	?___xxtofl+1,w
  1819  0D4B  00A5               	movwf	(main@valor_entry5+1)^(0+256)
  1820  0D4C  0870               	movf	?___xxtofl,w
  1821  0D4D  00A4               	movwf	main@valor_entry5^(0+256)
  1822  0D4E                     l3525:
  1823                           
  1824                           ;main.c: 210:        ADCON0bits.CHS0 = 0;
  1825  0D4E  1283               	bcf	3,5	;RP0=0, select bank0
  1826  0D4F  1303               	bcf	3,6	;RP1=0, select bank0
  1827  0D50  119F               	bcf	31,3	;volatile
  1828  0D51                     l3527:
  1829                           
  1830                           ;main.c: 211:        ADCON0bits.CHS1 = 1;
  1831  0D51  161F               	bsf	31,4	;volatile
  1832  0D52                     l3529:
  1833                           
  1834                           ;main.c: 212:        ADCON0bits.CHS2 = 1;
  1835  0D52  169F               	bsf	31,5	;volatile
  1836  0D53                     l3531:
  1837                           
  1838                           ;main.c: 214:        ADCON0bits.GO = 1;
  1839  0D53  151F               	bsf	31,2	;volatile
  1840                           
  1841                           ;main.c: 215:        _delay((unsigned long)((20)*(4000000/4000000.0)));
  1842  0D54  3005               	movlw	5
  1843  0D55  1683               	bsf	3,5	;RP0=1, select bank1
  1844  0D56  1303               	bcf	3,6	;RP1=0, select bank1
  1845  0D57  00C4               	movwf	??_main^(0+128)
  1846  0D58                     u5557:
  1847  0D58  0BC4               	decfsz	??_main^(0+128),f
  1848  0D59  2D58               	goto	u5557
  1849  0D5A  2D5B               	nop2
  1850  0D5B                     l3533:
  1851                           
  1852                           ;main.c: 216:        valor_entry6 = ADRESH;
  1853  0D5B  1283               	bcf	3,5	;RP0=0, select bank0
  1854  0D5C  1303               	bcf	3,6	;RP1=0, select bank0
  1855  0D5D  081E               	movf	30,w	;volatile
  1856  0D5E  1683               	bsf	3,5	;RP0=1, select bank1
  1857  0D5F  1303               	bcf	3,6	;RP1=0, select bank1
  1858  0D60  00C4               	movwf	??_main^(0+128)
  1859  0D61  01C5               	clrf	(??_main^(0+128)+1)
  1860  0D62  01C6               	clrf	(??_main^(0+128)+2)
  1861  0D63  01C7               	clrf	(??_main^(0+128)+3)
  1862  0D64  0847               	movf	(??_main+3)^(0+128),w
  1863  0D65  00F3               	movwf	___xxtofl@val+3
  1864  0D66  0846               	movf	(??_main+2)^(0+128),w
  1865  0D67  00F2               	movwf	___xxtofl@val+2
  1866  0D68  0845               	movf	(??_main+1)^(0+128),w
  1867  0D69  00F1               	movwf	___xxtofl@val+1
  1868  0D6A  0844               	movf	??_main^(0+128),w
  1869  0D6B  00F0               	movwf	___xxtofl@val
  1870  0D6C  3000               	movlw	0
  1871  0D6D  160A  158A  2689  120A  158A  	fcall	___xxtofl
  1872  0D72  0873               	movf	?___xxtofl+3,w
  1873  0D73  1283               	bcf	3,5	;RP0=0, select bank2
  1874  0D74  1703               	bsf	3,6	;RP1=1, select bank2
  1875  0D75  00AB               	movwf	(main@valor_entry6+3)^(0+256)
  1876  0D76  0872               	movf	?___xxtofl+2,w
  1877  0D77  00AA               	movwf	(main@valor_entry6+2)^(0+256)
  1878  0D78  0871               	movf	?___xxtofl+1,w
  1879  0D79  00A9               	movwf	(main@valor_entry6+1)^(0+256)
  1880  0D7A  0870               	movf	?___xxtofl,w
  1881  0D7B  00A8               	movwf	main@valor_entry6^(0+256)
  1882  0D7C                     l3535:
  1883                           
  1884                           ;main.c: 221:     Lcd_Clear();
  1885  0D7C  160A  118A  2001  120A  158A  	fcall	_Lcd_Clear
  1886  0D81                     l3537:
  1887                           
  1888                           ;main.c: 222:     Lcd_Set_Cursor(1,1);
  1889  0D81  01F4               	clrf	Lcd_Set_Cursor@b
  1890  0D82  0AF4               	incf	Lcd_Set_Cursor@b,f
  1891  0D83  3001               	movlw	1
  1892  0D84  160A  158A  2340  120A  158A  	fcall	_Lcd_Set_Cursor
  1893  0D89                     l3539:
  1894                           
  1895                           ;main.c: 223:     Lcd_Write_String("C:");
  1896  0D89  30A9               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1897  0D8A  00F5               	movwf	Lcd_Write_String@a
  1898  0D8B  3080               	movlw	128
  1899  0D8C  00F6               	movwf	Lcd_Write_String@a+1
  1900  0D8D  160A  158A  226C  120A  158A  	fcall	_Lcd_Write_String
  1901  0D92                     l3541:
  1902                           
  1903                           ;main.c: 224:     sprintf(buffer0, "%.2f", valor_entry0);
  1904  0D92  30C8               	movlw	(low (main@buffer0| 0))& (0+255)
  1905  0D93  1683               	bsf	3,5	;RP0=1, select bank1
  1906  0D94  1303               	bcf	3,6	;RP1=0, select bank1
  1907  0D95  00A0               	movwf	sprintf@sp^(0+128)
  1908  0D96  3000               	movlw	0
  1909  0D97  00A1               	movwf	(sprintf@sp+1)^(0+128)
  1910  0D98  3091               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1911  0D99  00C4               	movwf	??_main^(0+128)
  1912  0D9A  0844               	movf	??_main^(0+128),w
  1913  0D9B  00A2               	movwf	sprintf@f^(0+128)
  1914  0D9C  1683               	bsf	3,5	;RP0=1, select bank3
  1915  0D9D  1703               	bsf	3,6	;RP1=1, select bank3
  1916  0D9E  0863               	movf	(main@valor_entry0+3)^(0+384),w
  1917  0D9F  1683               	bsf	3,5	;RP0=1, select bank1
  1918  0DA0  1303               	bcf	3,6	;RP1=0, select bank1
  1919  0DA1  00A6               	movwf	((?_sprintf+3)^(0+128)+3)
  1920  0DA2  1683               	bsf	3,5	;RP0=1, select bank3
  1921  0DA3  1703               	bsf	3,6	;RP1=1, select bank3
  1922  0DA4  0862               	movf	(main@valor_entry0+2)^(0+384),w
  1923  0DA5  1683               	bsf	3,5	;RP0=1, select bank1
  1924  0DA6  1303               	bcf	3,6	;RP1=0, select bank1
  1925  0DA7  00A5               	movwf	((?_sprintf+2)^(0+128)+3)
  1926  0DA8  1683               	bsf	3,5	;RP0=1, select bank3
  1927  0DA9  1703               	bsf	3,6	;RP1=1, select bank3
  1928  0DAA  0861               	movf	(main@valor_entry0+1)^(0+384),w
  1929  0DAB  1683               	bsf	3,5	;RP0=1, select bank1
  1930  0DAC  1303               	bcf	3,6	;RP1=0, select bank1
  1931  0DAD  00A4               	movwf	((?_sprintf+1)^(0+128)+3)
  1932  0DAE  1683               	bsf	3,5	;RP0=1, select bank3
  1933  0DAF  1703               	bsf	3,6	;RP1=1, select bank3
  1934  0DB0  0860               	movf	main@valor_entry0^(0+384),w
  1935  0DB1  1683               	bsf	3,5	;RP0=1, select bank1
  1936  0DB2  1303               	bcf	3,6	;RP1=0, select bank1
  1937  0DB3  00A3               	movwf	(?_sprintf^(0+128)+3)
  1938  0DB4  120A  118A  2180  120A  158A  	fcall	_sprintf
  1939  0DB9                     l3543:
  1940                           
  1941                           ;main.c: 225:     Lcd_Set_Cursor(1,3);
  1942  0DB9  3003               	movlw	3
  1943  0DBA  1683               	bsf	3,5	;RP0=1, select bank1
  1944  0DBB  1303               	bcf	3,6	;RP1=0, select bank1
  1945  0DBC  00C4               	movwf	??_main^(0+128)
  1946  0DBD  0844               	movf	??_main^(0+128),w
  1947  0DBE  00F4               	movwf	Lcd_Set_Cursor@b
  1948  0DBF  3001               	movlw	1
  1949  0DC0  160A  158A  2340  120A  158A  	fcall	_Lcd_Set_Cursor
  1950  0DC5                     l3545:
  1951                           
  1952                           ;main.c: 226:     Lcd_Write_String(buffer0);
  1953  0DC5  30C8               	movlw	(low (main@buffer0| 0))& (0+255)
  1954  0DC6  00F5               	movwf	Lcd_Write_String@a
  1955  0DC7  3000               	movlw	0
  1956  0DC8  00F6               	movwf	Lcd_Write_String@a+1
  1957  0DC9  160A  158A  226C  120A  158A  	fcall	_Lcd_Write_String
  1958  0DCE                     l3547:
  1959                           
  1960                           ;main.c: 227:     _delay((unsigned long)((20)*(4000000/4000.0)));
  1961  0DCE  301A               	movlw	26
  1962  0DCF  1683               	bsf	3,5	;RP0=1, select bank1
  1963  0DD0  1303               	bcf	3,6	;RP1=0, select bank1
  1964  0DD1  00C5               	movwf	(??_main^(0+128)+1)
  1965  0DD2  30F7               	movlw	247
  1966  0DD3  00C4               	movwf	??_main^(0+128)
  1967  0DD4                     u5567:
  1968  0DD4  0BC4               	decfsz	??_main^(0+128),f
  1969  0DD5  2DD4               	goto	u5567
  1970  0DD6  0BC5               	decfsz	(??_main^(0+128)+1),f
  1971  0DD7  2DD4               	goto	u5567
  1972  0DD8  2DD9               	nop2
  1973  0DD9                     l3549:
  1974                           
  1975                           ;main.c: 230:     Lcd_Set_Cursor(1,10);
  1976  0DD9  300A               	movlw	10
  1977  0DDA  1683               	bsf	3,5	;RP0=1, select bank1
  1978  0DDB  1303               	bcf	3,6	;RP1=0, select bank1
  1979  0DDC  00C4               	movwf	??_main^(0+128)
  1980  0DDD  0844               	movf	??_main^(0+128),w
  1981  0DDE  00F4               	movwf	Lcd_Set_Cursor@b
  1982  0DDF  3001               	movlw	1
  1983  0DE0  160A  158A  2340  120A  158A  	fcall	_Lcd_Set_Cursor
  1984  0DE5                     l3551:
  1985                           
  1986                           ;main.c: 231:     Lcd_Write_String("A:");
  1987  0DE5  30A6               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1988  0DE6  00F5               	movwf	Lcd_Write_String@a
  1989  0DE7  3080               	movlw	128
  1990  0DE8  00F6               	movwf	Lcd_Write_String@a+1
  1991  0DE9  160A  158A  226C  120A  158A  	fcall	_Lcd_Write_String
  1992  0DEE                     l3553:
  1993                           
  1994                           ;main.c: 232:     sprintf(buffer1, "%.2f", valor_entry1);
  1995  0DEE  30DC               	movlw	(low (main@buffer1| 0))& (0+255)
  1996  0DEF  1683               	bsf	3,5	;RP0=1, select bank1
  1997  0DF0  1303               	bcf	3,6	;RP1=0, select bank1
  1998  0DF1  00A0               	movwf	sprintf@sp^(0+128)
  1999  0DF2  3000               	movlw	0
  2000  0DF3  00A1               	movwf	(sprintf@sp+1)^(0+128)
  2001  0DF4  3091               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2002  0DF5  00C4               	movwf	??_main^(0+128)
  2003  0DF6  0844               	movf	??_main^(0+128),w
  2004  0DF7  00A2               	movwf	sprintf@f^(0+128)
  2005  0DF8  1683               	bsf	3,5	;RP0=1, select bank3
  2006  0DF9  1703               	bsf	3,6	;RP1=1, select bank3
  2007  0DFA  0867               	movf	(main@valor_entry1+3)^(0+384),w
  2008  0DFB  1683               	bsf	3,5	;RP0=1, select bank1
  2009  0DFC  1303               	bcf	3,6	;RP1=0, select bank1
  2010  0DFD  00A6               	movwf	((?_sprintf+3)^(0+128)+3)
  2011  0DFE  1683               	bsf	3,5	;RP0=1, select bank3
  2012  0DFF  1703               	bsf	3,6	;RP1=1, select bank3
  2013  0E00  0866               	movf	(main@valor_entry1+2)^(0+384),w
  2014  0E01  1683               	bsf	3,5	;RP0=1, select bank1
  2015  0E02  1303               	bcf	3,6	;RP1=0, select bank1
  2016  0E03  00A5               	movwf	((?_sprintf+2)^(0+128)+3)
  2017  0E04  1683               	bsf	3,5	;RP0=1, select bank3
  2018  0E05  1703               	bsf	3,6	;RP1=1, select bank3
  2019  0E06  0865               	movf	(main@valor_entry1+1)^(0+384),w
  2020  0E07  1683               	bsf	3,5	;RP0=1, select bank1
  2021  0E08  1303               	bcf	3,6	;RP1=0, select bank1
  2022  0E09  00A4               	movwf	((?_sprintf+1)^(0+128)+3)
  2023  0E0A  1683               	bsf	3,5	;RP0=1, select bank3
  2024  0E0B  1703               	bsf	3,6	;RP1=1, select bank3
  2025  0E0C  0864               	movf	main@valor_entry1^(0+384),w
  2026  0E0D  1683               	bsf	3,5	;RP0=1, select bank1
  2027  0E0E  1303               	bcf	3,6	;RP1=0, select bank1
  2028  0E0F  00A3               	movwf	(?_sprintf^(0+128)+3)
  2029  0E10  120A  118A  2180  120A  158A  	fcall	_sprintf
  2030  0E15                     l3555:
  2031                           
  2032                           ;main.c: 233:     Lcd_Set_Cursor(1,12);
  2033  0E15  300C               	movlw	12
  2034  0E16  1683               	bsf	3,5	;RP0=1, select bank1
  2035  0E17  1303               	bcf	3,6	;RP1=0, select bank1
  2036  0E18  00C4               	movwf	??_main^(0+128)
  2037  0E19  0844               	movf	??_main^(0+128),w
  2038  0E1A  00F4               	movwf	Lcd_Set_Cursor@b
  2039  0E1B  3001               	movlw	1
  2040  0E1C  160A  158A  2340  120A  158A  	fcall	_Lcd_Set_Cursor
  2041                           
  2042                           ;main.c: 234:     Lcd_Write_String(buffer1);
  2043  0E21  30DC               	movlw	(low (main@buffer1| 0))& (0+255)
  2044  0E22  00F5               	movwf	Lcd_Write_String@a
  2045  0E23  3000               	movlw	0
  2046  0E24  00F6               	movwf	Lcd_Write_String@a+1
  2047  0E25  160A  158A  226C  120A  158A  	fcall	_Lcd_Write_String
  2048  0E2A                     l3557:
  2049                           
  2050                           ;main.c: 235:     _delay((unsigned long)((20)*(4000000/4000.0)));
  2051  0E2A  301A               	movlw	26
  2052  0E2B  1683               	bsf	3,5	;RP0=1, select bank1
  2053  0E2C  1303               	bcf	3,6	;RP1=0, select bank1
  2054  0E2D  00C5               	movwf	(??_main^(0+128)+1)
  2055  0E2E  30F7               	movlw	247
  2056  0E2F  00C4               	movwf	??_main^(0+128)
  2057  0E30                     u5577:
  2058  0E30  0BC4               	decfsz	??_main^(0+128),f
  2059  0E31  2E30               	goto	u5577
  2060  0E32  0BC5               	decfsz	(??_main^(0+128)+1),f
  2061  0E33  2E30               	goto	u5577
  2062  0E34  2E35               	nop2
  2063  0E35                     l3559:
  2064                           
  2065                           ;main.c: 238:     Lcd_Set_Cursor(1,19);
  2066  0E35  3013               	movlw	19
  2067  0E36  1683               	bsf	3,5	;RP0=1, select bank1
  2068  0E37  1303               	bcf	3,6	;RP1=0, select bank1
  2069  0E38  00C4               	movwf	??_main^(0+128)
  2070  0E39  0844               	movf	??_main^(0+128),w
  2071  0E3A  00F4               	movwf	Lcd_Set_Cursor@b
  2072  0E3B  3001               	movlw	1
  2073  0E3C  160A  158A  2340  120A  158A  	fcall	_Lcd_Set_Cursor
  2074  0E41                     l3561:
  2075                           
  2076                           ;main.c: 239:     Lcd_Write_String("L:");
  2077  0E41  30AC               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2078  0E42  00F5               	movwf	Lcd_Write_String@a
  2079  0E43  3080               	movlw	128
  2080  0E44  00F6               	movwf	Lcd_Write_String@a+1
  2081  0E45  160A  158A  226C  120A  158A  	fcall	_Lcd_Write_String
  2082  0E4A                     l3563:
  2083                           
  2084                           ;main.c: 240:     sprintf(buffer2, "%.2f", valor_entry2);
  2085  0E4A  3090               	movlw	(low (main@buffer2| (0+256)))& (0+255)
  2086  0E4B  1683               	bsf	3,5	;RP0=1, select bank1
  2087  0E4C  1303               	bcf	3,6	;RP1=0, select bank1
  2088  0E4D  00A0               	movwf	sprintf@sp^(0+128)
  2089  0E4E  3001               	movlw	1
  2090  0E4F  00A1               	movwf	(sprintf@sp+1)^(0+128)
  2091  0E50  3091               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2092  0E51  00C4               	movwf	??_main^(0+128)
  2093  0E52  0844               	movf	??_main^(0+128),w
  2094  0E53  00A2               	movwf	sprintf@f^(0+128)
  2095  0E54  1283               	bcf	3,5	;RP0=0, select bank2
  2096  0E55  1703               	bsf	3,6	;RP1=1, select bank2
  2097  0E56  082F               	movf	(main@valor_entry2+3)^(0+256),w
  2098  0E57  1683               	bsf	3,5	;RP0=1, select bank1
  2099  0E58  1303               	bcf	3,6	;RP1=0, select bank1
  2100  0E59  00A6               	movwf	((?_sprintf+3)^(0+128)+3)
  2101  0E5A  1283               	bcf	3,5	;RP0=0, select bank2
  2102  0E5B  1703               	bsf	3,6	;RP1=1, select bank2
  2103  0E5C  082E               	movf	(main@valor_entry2+2)^(0+256),w
  2104  0E5D  1683               	bsf	3,5	;RP0=1, select bank1
  2105  0E5E  1303               	bcf	3,6	;RP1=0, select bank1
  2106  0E5F  00A5               	movwf	((?_sprintf+2)^(0+128)+3)
  2107  0E60  1283               	bcf	3,5	;RP0=0, select bank2
  2108  0E61  1703               	bsf	3,6	;RP1=1, select bank2
  2109  0E62  082D               	movf	(main@valor_entry2+1)^(0+256),w
  2110  0E63  1683               	bsf	3,5	;RP0=1, select bank1
  2111  0E64  1303               	bcf	3,6	;RP1=0, select bank1
  2112  0E65  00A4               	movwf	((?_sprintf+1)^(0+128)+3)
  2113  0E66  1283               	bcf	3,5	;RP0=0, select bank2
  2114  0E67  1703               	bsf	3,6	;RP1=1, select bank2
  2115  0E68  082C               	movf	main@valor_entry2^(0+256),w
  2116  0E69  1683               	bsf	3,5	;RP0=1, select bank1
  2117  0E6A  1303               	bcf	3,6	;RP1=0, select bank1
  2118  0E6B  00A3               	movwf	(?_sprintf^(0+128)+3)
  2119  0E6C  120A  118A  2180  120A  158A  	fcall	_sprintf
  2120  0E71                     l3565:
  2121                           
  2122                           ;main.c: 241:     Lcd_Set_Cursor(1,21);
  2123  0E71  3015               	movlw	21
  2124  0E72  1683               	bsf	3,5	;RP0=1, select bank1
  2125  0E73  1303               	bcf	3,6	;RP1=0, select bank1
  2126  0E74  00C4               	movwf	??_main^(0+128)
  2127  0E75  0844               	movf	??_main^(0+128),w
  2128  0E76  00F4               	movwf	Lcd_Set_Cursor@b
  2129  0E77  3001               	movlw	1
  2130  0E78  160A  158A  2340  120A  158A  	fcall	_Lcd_Set_Cursor
  2131  0E7D                     l3567:
  2132                           
  2133                           ;main.c: 242:     Lcd_Write_String(buffer2);
  2134  0E7D  3090               	movlw	(low (main@buffer2| (0+256)))& (0+255)
  2135  0E7E  00F5               	movwf	Lcd_Write_String@a
  2136  0E7F  3001               	movlw	1
  2137  0E80  00F6               	movwf	Lcd_Write_String@a+1
  2138  0E81  160A  158A  226C  120A  158A  	fcall	_Lcd_Write_String
  2139                           
  2140                           ;main.c: 243:     _delay((unsigned long)((20)*(4000000/4000.0)));
  2141  0E86  301A               	movlw	26
  2142  0E87  1683               	bsf	3,5	;RP0=1, select bank1
  2143  0E88  1303               	bcf	3,6	;RP1=0, select bank1
  2144  0E89  00C5               	movwf	(??_main^(0+128)+1)
  2145  0E8A  30F7               	movlw	247
  2146  0E8B  00C4               	movwf	??_main^(0+128)
  2147  0E8C                     u5587:
  2148  0E8C  0BC4               	decfsz	??_main^(0+128),f
  2149  0E8D  2E8C               	goto	u5587
  2150  0E8E  0BC5               	decfsz	(??_main^(0+128)+1),f
  2151  0E8F  2E8C               	goto	u5587
  2152  0E90  2E91               	nop2
  2153  0E91                     l3569:
  2154                           
  2155                           ;main.c: 246:     Lcd_Set_Cursor(1,28);
  2156  0E91  301C               	movlw	28
  2157  0E92  1683               	bsf	3,5	;RP0=1, select bank1
  2158  0E93  1303               	bcf	3,6	;RP1=0, select bank1
  2159  0E94  00C4               	movwf	??_main^(0+128)
  2160  0E95  0844               	movf	??_main^(0+128),w
  2161  0E96  00F4               	movwf	Lcd_Set_Cursor@b
  2162  0E97  3001               	movlw	1
  2163  0E98  160A  158A  2340  120A  158A  	fcall	_Lcd_Set_Cursor
  2164  0E9D                     l3571:
  2165                           
  2166                           ;main.c: 247:     Lcd_Write_String("S1:");
  2167  0E9D  3096               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2168  0E9E  00F5               	movwf	Lcd_Write_String@a
  2169  0E9F  3080               	movlw	128
  2170  0EA0  00F6               	movwf	Lcd_Write_String@a+1
  2171  0EA1  160A  158A  226C  120A  158A  	fcall	_Lcd_Write_String
  2172  0EA6                     l3573:
  2173                           
  2174                           ;main.c: 248:     sprintf(buffer3, "%.2f", valor_entry3);
  2175  0EA6  30A4               	movlw	(low (main@buffer3| (0+256)))& (0+255)
  2176  0EA7  1683               	bsf	3,5	;RP0=1, select bank1
  2177  0EA8  1303               	bcf	3,6	;RP1=0, select bank1
  2178  0EA9  00A0               	movwf	sprintf@sp^(0+128)
  2179  0EAA  3001               	movlw	1
  2180  0EAB  00A1               	movwf	(sprintf@sp+1)^(0+128)
  2181  0EAC  3091               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2182  0EAD  00C4               	movwf	??_main^(0+128)
  2183  0EAE  0844               	movf	??_main^(0+128),w
  2184  0EAF  00A2               	movwf	sprintf@f^(0+128)
  2185  0EB0  1683               	bsf	3,5	;RP0=1, select bank3
  2186  0EB1  1703               	bsf	3,6	;RP1=1, select bank3
  2187  0EB2  086B               	movf	(main@valor_entry3+3)^(0+384),w
  2188  0EB3  1683               	bsf	3,5	;RP0=1, select bank1
  2189  0EB4  1303               	bcf	3,6	;RP1=0, select bank1
  2190  0EB5  00A6               	movwf	((?_sprintf+3)^(0+128)+3)
  2191  0EB6  1683               	bsf	3,5	;RP0=1, select bank3
  2192  0EB7  1703               	bsf	3,6	;RP1=1, select bank3
  2193  0EB8  086A               	movf	(main@valor_entry3+2)^(0+384),w
  2194  0EB9  1683               	bsf	3,5	;RP0=1, select bank1
  2195  0EBA  1303               	bcf	3,6	;RP1=0, select bank1
  2196  0EBB  00A5               	movwf	((?_sprintf+2)^(0+128)+3)
  2197  0EBC  1683               	bsf	3,5	;RP0=1, select bank3
  2198  0EBD  1703               	bsf	3,6	;RP1=1, select bank3
  2199  0EBE  0869               	movf	(main@valor_entry3+1)^(0+384),w
  2200  0EBF  1683               	bsf	3,5	;RP0=1, select bank1
  2201  0EC0  1303               	bcf	3,6	;RP1=0, select bank1
  2202  0EC1  00A4               	movwf	((?_sprintf+1)^(0+128)+3)
  2203  0EC2  1683               	bsf	3,5	;RP0=1, select bank3
  2204  0EC3  1703               	bsf	3,6	;RP1=1, select bank3
  2205  0EC4  0868               	movf	main@valor_entry3^(0+384),w
  2206  0EC5  1683               	bsf	3,5	;RP0=1, select bank1
  2207  0EC6  1303               	bcf	3,6	;RP1=0, select bank1
  2208  0EC7  00A3               	movwf	(?_sprintf^(0+128)+3)
  2209  0EC8  120A  118A  2180  120A  158A  	fcall	_sprintf
  2210  0ECD                     l3575:
  2211                           
  2212                           ;main.c: 249:     Lcd_Set_Cursor(1,31);
  2213  0ECD  301F               	movlw	31
  2214  0ECE  1683               	bsf	3,5	;RP0=1, select bank1
  2215  0ECF  1303               	bcf	3,6	;RP1=0, select bank1
  2216  0ED0  00C4               	movwf	??_main^(0+128)
  2217  0ED1  0844               	movf	??_main^(0+128),w
  2218  0ED2  00F4               	movwf	Lcd_Set_Cursor@b
  2219  0ED3  3001               	movlw	1
  2220  0ED4  160A  158A  2340  120A  158A  	fcall	_Lcd_Set_Cursor
  2221  0ED9                     l3577:
  2222                           
  2223                           ;main.c: 250:     Lcd_Write_String(buffer3);
  2224  0ED9  30A4               	movlw	(low (main@buffer3| (0+256)))& (0+255)
  2225  0EDA  00F5               	movwf	Lcd_Write_String@a
  2226  0EDB  3001               	movlw	1
  2227  0EDC  00F6               	movwf	Lcd_Write_String@a+1
  2228  0EDD  160A  158A  226C  120A  158A  	fcall	_Lcd_Write_String
  2229  0EE2                     l3579:
  2230                           
  2231                           ;main.c: 251:     _delay((unsigned long)((20)*(4000000/4000.0)));
  2232  0EE2  301A               	movlw	26
  2233  0EE3  1683               	bsf	3,5	;RP0=1, select bank1
  2234  0EE4  1303               	bcf	3,6	;RP1=0, select bank1
  2235  0EE5  00C5               	movwf	(??_main^(0+128)+1)
  2236  0EE6  30F7               	movlw	247
  2237  0EE7  00C4               	movwf	??_main^(0+128)
  2238  0EE8                     u5597:
  2239  0EE8  0BC4               	decfsz	??_main^(0+128),f
  2240  0EE9  2EE8               	goto	u5597
  2241  0EEA  0BC5               	decfsz	(??_main^(0+128)+1),f
  2242  0EEB  2EE8               	goto	u5597
  2243  0EEC  2EED               	nop2
  2244  0EED                     l3581:
  2245                           
  2246                           ;main.c: 254:     Lcd_Set_Cursor(2,1);
  2247  0EED  01F4               	clrf	Lcd_Set_Cursor@b
  2248  0EEE  0AF4               	incf	Lcd_Set_Cursor@b,f
  2249  0EEF  3002               	movlw	2
  2250  0EF0  160A  158A  2340  120A  158A  	fcall	_Lcd_Set_Cursor
  2251  0EF5                     l3583:
  2252                           
  2253                           ;main.c: 255:     Lcd_Write_String("S2:");
  2254  0EF5  309A               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2255  0EF6  00F5               	movwf	Lcd_Write_String@a
  2256  0EF7  3080               	movlw	128
  2257  0EF8  00F6               	movwf	Lcd_Write_String@a+1
  2258  0EF9  160A  158A  226C  120A  158A  	fcall	_Lcd_Write_String
  2259  0EFE                     l3585:
  2260                           
  2261                           ;main.c: 256:     sprintf(buffer4, "%.2f", valor_entry4);
  2262  0EFE  30B8               	movlw	(low (main@buffer4| (0+256)))& (0+255)
  2263  0EFF  1683               	bsf	3,5	;RP0=1, select bank1
  2264  0F00  1303               	bcf	3,6	;RP1=0, select bank1
  2265  0F01  00A0               	movwf	sprintf@sp^(0+128)
  2266  0F02  3001               	movlw	1
  2267  0F03  00A1               	movwf	(sprintf@sp+1)^(0+128)
  2268  0F04  3091               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2269  0F05  00C4               	movwf	??_main^(0+128)
  2270  0F06  0844               	movf	??_main^(0+128),w
  2271  0F07  00A2               	movwf	sprintf@f^(0+128)
  2272  0F08  1683               	bsf	3,5	;RP0=1, select bank3
  2273  0F09  1703               	bsf	3,6	;RP1=1, select bank3
  2274  0F0A  086F               	movf	(main@valor_entry4+3)^(0+384),w
  2275  0F0B  1683               	bsf	3,5	;RP0=1, select bank1
  2276  0F0C  1303               	bcf	3,6	;RP1=0, select bank1
  2277  0F0D  00A6               	movwf	((?_sprintf+3)^(0+128)+3)
  2278  0F0E  1683               	bsf	3,5	;RP0=1, select bank3
  2279  0F0F  1703               	bsf	3,6	;RP1=1, select bank3
  2280  0F10  086E               	movf	(main@valor_entry4+2)^(0+384),w
  2281  0F11  1683               	bsf	3,5	;RP0=1, select bank1
  2282  0F12  1303               	bcf	3,6	;RP1=0, select bank1
  2283  0F13  00A5               	movwf	((?_sprintf+2)^(0+128)+3)
  2284  0F14  1683               	bsf	3,5	;RP0=1, select bank3
  2285  0F15  1703               	bsf	3,6	;RP1=1, select bank3
  2286  0F16  086D               	movf	(main@valor_entry4+1)^(0+384),w
  2287  0F17  1683               	bsf	3,5	;RP0=1, select bank1
  2288  0F18  1303               	bcf	3,6	;RP1=0, select bank1
  2289  0F19  00A4               	movwf	((?_sprintf+1)^(0+128)+3)
  2290  0F1A  1683               	bsf	3,5	;RP0=1, select bank3
  2291  0F1B  1703               	bsf	3,6	;RP1=1, select bank3
  2292  0F1C  086C               	movf	main@valor_entry4^(0+384),w
  2293  0F1D  1683               	bsf	3,5	;RP0=1, select bank1
  2294  0F1E  1303               	bcf	3,6	;RP1=0, select bank1
  2295  0F1F  00A3               	movwf	(?_sprintf^(0+128)+3)
  2296  0F20  120A  118A  2180  120A  158A  	fcall	_sprintf
  2297  0F25                     l3587:
  2298                           
  2299                           ;main.c: 257:     Lcd_Set_Cursor(2,4);
  2300  0F25  3004               	movlw	4
  2301  0F26  1683               	bsf	3,5	;RP0=1, select bank1
  2302  0F27  1303               	bcf	3,6	;RP1=0, select bank1
  2303  0F28  00C4               	movwf	??_main^(0+128)
  2304  0F29  0844               	movf	??_main^(0+128),w
  2305  0F2A  00F4               	movwf	Lcd_Set_Cursor@b
  2306  0F2B  3002               	movlw	2
  2307  0F2C  160A  158A  2340  120A  158A  	fcall	_Lcd_Set_Cursor
  2308                           
  2309                           ;main.c: 258:     Lcd_Write_String(buffer4);
  2310  0F31  30B8               	movlw	(low (main@buffer4| (0+256)))& (0+255)
  2311  0F32  00F5               	movwf	Lcd_Write_String@a
  2312  0F33  3001               	movlw	1
  2313  0F34  00F6               	movwf	Lcd_Write_String@a+1
  2314  0F35  160A  158A  226C  120A  158A  	fcall	_Lcd_Write_String
  2315  0F3A                     l3589:
  2316                           
  2317                           ;main.c: 259:     _delay((unsigned long)((20)*(4000000/4000.0)));
  2318  0F3A  301A               	movlw	26
  2319  0F3B  1683               	bsf	3,5	;RP0=1, select bank1
  2320  0F3C  1303               	bcf	3,6	;RP1=0, select bank1
  2321  0F3D  00C5               	movwf	(??_main^(0+128)+1)
  2322  0F3E  30F7               	movlw	247
  2323  0F3F  00C4               	movwf	??_main^(0+128)
  2324  0F40                     u5607:
  2325  0F40  0BC4               	decfsz	??_main^(0+128),f
  2326  0F41  2F40               	goto	u5607
  2327  0F42  0BC5               	decfsz	(??_main^(0+128)+1),f
  2328  0F43  2F40               	goto	u5607
  2329  0F44  2F45               	nop2
  2330  0F45                     l3591:
  2331                           
  2332                           ;main.c: 262:     Lcd_Set_Cursor(2,11);
  2333  0F45  300B               	movlw	11
  2334  0F46  1683               	bsf	3,5	;RP0=1, select bank1
  2335  0F47  1303               	bcf	3,6	;RP1=0, select bank1
  2336  0F48  00C4               	movwf	??_main^(0+128)
  2337  0F49  0844               	movf	??_main^(0+128),w
  2338  0F4A  00F4               	movwf	Lcd_Set_Cursor@b
  2339  0F4B  3002               	movlw	2
  2340  0F4C  160A  158A  2340  120A  158A  	fcall	_Lcd_Set_Cursor
  2341  0F51                     l3593:
  2342                           
  2343                           ;main.c: 263:     Lcd_Write_String("S3:");
  2344  0F51  309E               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  2345  0F52  00F5               	movwf	Lcd_Write_String@a
  2346  0F53  3080               	movlw	128
  2347  0F54  00F6               	movwf	Lcd_Write_String@a+1
  2348  0F55  160A  158A  226C  120A  158A  	fcall	_Lcd_Write_String
  2349  0F5A                     l3595:
  2350                           
  2351                           ;main.c: 264:     sprintf(buffer5, "%.2f", valor_entry5);
  2352  0F5A  30CC               	movlw	(low (main@buffer5| (0+256)))& (0+255)
  2353  0F5B  1683               	bsf	3,5	;RP0=1, select bank1
  2354  0F5C  1303               	bcf	3,6	;RP1=0, select bank1
  2355  0F5D  00A0               	movwf	sprintf@sp^(0+128)
  2356  0F5E  3001               	movlw	1
  2357  0F5F  00A1               	movwf	(sprintf@sp+1)^(0+128)
  2358  0F60  3091               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2359  0F61  00C4               	movwf	??_main^(0+128)
  2360  0F62  0844               	movf	??_main^(0+128),w
  2361  0F63  00A2               	movwf	sprintf@f^(0+128)
  2362  0F64  1283               	bcf	3,5	;RP0=0, select bank2
  2363  0F65  1703               	bsf	3,6	;RP1=1, select bank2
  2364  0F66  0827               	movf	(main@valor_entry5+3)^(0+256),w
  2365  0F67  1683               	bsf	3,5	;RP0=1, select bank1
  2366  0F68  1303               	bcf	3,6	;RP1=0, select bank1
  2367  0F69  00A6               	movwf	((?_sprintf+3)^(0+128)+3)
  2368  0F6A  1283               	bcf	3,5	;RP0=0, select bank2
  2369  0F6B  1703               	bsf	3,6	;RP1=1, select bank2
  2370  0F6C  0826               	movf	(main@valor_entry5+2)^(0+256),w
  2371  0F6D  1683               	bsf	3,5	;RP0=1, select bank1
  2372  0F6E  1303               	bcf	3,6	;RP1=0, select bank1
  2373  0F6F  00A5               	movwf	((?_sprintf+2)^(0+128)+3)
  2374  0F70  1283               	bcf	3,5	;RP0=0, select bank2
  2375  0F71  1703               	bsf	3,6	;RP1=1, select bank2
  2376  0F72  0825               	movf	(main@valor_entry5+1)^(0+256),w
  2377  0F73  1683               	bsf	3,5	;RP0=1, select bank1
  2378  0F74  1303               	bcf	3,6	;RP1=0, select bank1
  2379  0F75  00A4               	movwf	((?_sprintf+1)^(0+128)+3)
  2380  0F76  1283               	bcf	3,5	;RP0=0, select bank2
  2381  0F77  1703               	bsf	3,6	;RP1=1, select bank2
  2382  0F78  0824               	movf	main@valor_entry5^(0+256),w
  2383  0F79  1683               	bsf	3,5	;RP0=1, select bank1
  2384  0F7A  1303               	bcf	3,6	;RP1=0, select bank1
  2385  0F7B  00A3               	movwf	(?_sprintf^(0+128)+3)
  2386  0F7C  120A  118A  2180  120A  158A  	fcall	_sprintf
  2387  0F81                     l3597:
  2388                           
  2389                           ;main.c: 265:     Lcd_Set_Cursor(2,14);
  2390  0F81  300E               	movlw	14
  2391  0F82  1683               	bsf	3,5	;RP0=1, select bank1
  2392  0F83  1303               	bcf	3,6	;RP1=0, select bank1
  2393  0F84  00C4               	movwf	??_main^(0+128)
  2394  0F85  0844               	movf	??_main^(0+128),w
  2395  0F86  00F4               	movwf	Lcd_Set_Cursor@b
  2396  0F87  3002               	movlw	2
  2397  0F88  160A  158A  2340  120A  158A  	fcall	_Lcd_Set_Cursor
  2398  0F8D                     l3599:
  2399                           
  2400                           ;main.c: 266:     Lcd_Write_String(buffer5);
  2401  0F8D  30CC               	movlw	(low (main@buffer5| (0+256)))& (0+255)
  2402  0F8E  00F5               	movwf	Lcd_Write_String@a
  2403  0F8F  3001               	movlw	1
  2404  0F90  00F6               	movwf	Lcd_Write_String@a+1
  2405  0F91  160A  158A  226C  120A  158A  	fcall	_Lcd_Write_String
  2406                           
  2407                           ;main.c: 267:     _delay((unsigned long)((20)*(4000000/4000.0)));
  2408  0F96  301A               	movlw	26
  2409  0F97  1683               	bsf	3,5	;RP0=1, select bank1
  2410  0F98  1303               	bcf	3,6	;RP1=0, select bank1
  2411  0F99  00C5               	movwf	(??_main^(0+128)+1)
  2412  0F9A  30F7               	movlw	247
  2413  0F9B  00C4               	movwf	??_main^(0+128)
  2414  0F9C                     u5617:
  2415  0F9C  0BC4               	decfsz	??_main^(0+128),f
  2416  0F9D  2F9C               	goto	u5617
  2417  0F9E  0BC5               	decfsz	(??_main^(0+128)+1),f
  2418  0F9F  2F9C               	goto	u5617
  2419  0FA0  2FA1               	nop2
  2420  0FA1                     l3601:
  2421                           
  2422                           ;main.c: 269:     Lcd_Set_Cursor(2,21);
  2423  0FA1  3015               	movlw	21
  2424  0FA2  1683               	bsf	3,5	;RP0=1, select bank1
  2425  0FA3  1303               	bcf	3,6	;RP1=0, select bank1
  2426  0FA4  00C4               	movwf	??_main^(0+128)
  2427  0FA5  0844               	movf	??_main^(0+128),w
  2428  0FA6  00F4               	movwf	Lcd_Set_Cursor@b
  2429  0FA7  3002               	movlw	2
  2430  0FA8  160A  158A  2340  120A  158A  	fcall	_Lcd_Set_Cursor
  2431  0FAD                     l3603:
  2432                           
  2433                           ;main.c: 270:     Lcd_Write_String("S4:");
  2434  0FAD  30A2               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  2435  0FAE  00F5               	movwf	Lcd_Write_String@a
  2436  0FAF  3080               	movlw	128
  2437  0FB0  00F6               	movwf	Lcd_Write_String@a+1
  2438  0FB1  160A  158A  226C  120A  158A  	fcall	_Lcd_Write_String
  2439  0FB6                     l3605:
  2440                           
  2441                           ;main.c: 271:     sprintf(buffer6, "%.2f", valor_entry6);
  2442  0FB6  3010               	movlw	(low (main@buffer6| (0+256)))& (0+255)
  2443  0FB7  1683               	bsf	3,5	;RP0=1, select bank1
  2444  0FB8  1303               	bcf	3,6	;RP1=0, select bank1
  2445  0FB9  00A0               	movwf	sprintf@sp^(0+128)
  2446  0FBA  3001               	movlw	1
  2447  0FBB  00A1               	movwf	(sprintf@sp+1)^(0+128)
  2448  0FBC  3091               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2449  0FBD  00C4               	movwf	??_main^(0+128)
  2450  0FBE  0844               	movf	??_main^(0+128),w
  2451  0FBF  00A2               	movwf	sprintf@f^(0+128)
  2452  0FC0  1283               	bcf	3,5	;RP0=0, select bank2
  2453  0FC1  1703               	bsf	3,6	;RP1=1, select bank2
  2454  0FC2  082B               	movf	(main@valor_entry6+3)^(0+256),w
  2455  0FC3  1683               	bsf	3,5	;RP0=1, select bank1
  2456  0FC4  1303               	bcf	3,6	;RP1=0, select bank1
  2457  0FC5  00A6               	movwf	((?_sprintf+3)^(0+128)+3)
  2458  0FC6  1283               	bcf	3,5	;RP0=0, select bank2
  2459  0FC7  1703               	bsf	3,6	;RP1=1, select bank2
  2460  0FC8  082A               	movf	(main@valor_entry6+2)^(0+256),w
  2461  0FC9  1683               	bsf	3,5	;RP0=1, select bank1
  2462  0FCA  1303               	bcf	3,6	;RP1=0, select bank1
  2463  0FCB  00A5               	movwf	((?_sprintf+2)^(0+128)+3)
  2464  0FCC  1283               	bcf	3,5	;RP0=0, select bank2
  2465  0FCD  1703               	bsf	3,6	;RP1=1, select bank2
  2466  0FCE  0829               	movf	(main@valor_entry6+1)^(0+256),w
  2467  0FCF  1683               	bsf	3,5	;RP0=1, select bank1
  2468  0FD0  1303               	bcf	3,6	;RP1=0, select bank1
  2469  0FD1  00A4               	movwf	((?_sprintf+1)^(0+128)+3)
  2470  0FD2  1283               	bcf	3,5	;RP0=0, select bank2
  2471  0FD3  1703               	bsf	3,6	;RP1=1, select bank2
  2472  0FD4  0828               	movf	main@valor_entry6^(0+256),w
  2473  0FD5  1683               	bsf	3,5	;RP0=1, select bank1
  2474  0FD6  1303               	bcf	3,6	;RP1=0, select bank1
  2475  0FD7  00A3               	movwf	(?_sprintf^(0+128)+3)
  2476  0FD8  120A  118A  2180  120A  158A  	fcall	_sprintf
  2477  0FDD                     l3607:
  2478                           
  2479                           ;main.c: 272:     Lcd_Set_Cursor(2,24);
  2480  0FDD  3018               	movlw	24
  2481  0FDE  1683               	bsf	3,5	;RP0=1, select bank1
  2482  0FDF  1303               	bcf	3,6	;RP1=0, select bank1
  2483  0FE0  00C4               	movwf	??_main^(0+128)
  2484  0FE1  0844               	movf	??_main^(0+128),w
  2485  0FE2  00F4               	movwf	Lcd_Set_Cursor@b
  2486  0FE3  3002               	movlw	2
  2487  0FE4  160A  158A  2340  120A  158A  	fcall	_Lcd_Set_Cursor
  2488  0FE9                     l3609:
  2489                           
  2490                           ;main.c: 273:     Lcd_Write_String(buffer6);
  2491  0FE9  3010               	movlw	(low (main@buffer6| (0+256)))& (0+255)
  2492  0FEA  00F5               	movwf	Lcd_Write_String@a
  2493  0FEB  3001               	movlw	1
  2494  0FEC  00F6               	movwf	Lcd_Write_String@a+1
  2495  0FED  160A  158A  226C  120A  158A  	fcall	_Lcd_Write_String
  2496  0FF2                     l3611:
  2497                           
  2498                           ;main.c: 274:     _delay((unsigned long)((100)*(4000000/4000.0)));
  2499  0FF2  3082               	movlw	130
  2500  0FF3  1683               	bsf	3,5	;RP0=1, select bank1
  2501  0FF4  1303               	bcf	3,6	;RP1=0, select bank1
  2502  0FF5  00C5               	movwf	(??_main^(0+128)+1)
  2503  0FF6  30DD               	movlw	221
  2504  0FF7  00C4               	movwf	??_main^(0+128)
  2505  0FF8                     u5627:
  2506  0FF8  0BC4               	decfsz	??_main^(0+128),f
  2507  0FF9  2FF8               	goto	u5627
  2508  0FFA  0BC5               	decfsz	(??_main^(0+128)+1),f
  2509  0FFB  2FF8               	goto	u5627
  2510  0FFC  2B9E               	goto	l3411
  2511  0FFD  120A  118A  2800   	ljmp	start
  2512  1000                     __end_of_main:
  2513                           
  2514                           	psect	text1
  2515  0180                     __ptext1:	
  2516 ;; *************** function _sprintf *****************
  2517 ;; Defined at:
  2518 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2519 ;; Parameters:    Size  Location     Type
  2520 ;;  sp              2    0[BANK1 ] PTR unsigned char 
  2521 ;;		 -> main@buffer6(20), main@buffer5(20), main@buffer4(20), main@buffer3(20), 
  2522 ;;		 -> main@buffer2(20), main@buffer1(20), main@buffer0(20), 
  2523 ;;  f               1    2[BANK1 ] PTR const unsigned char 
  2524 ;;		 -> STR_14(5), STR_12(5), STR_10(5), STR_8(5), 
  2525 ;;		 -> STR_6(5), STR_4(5), STR_2(5), 
  2526 ;; Auto vars:     Size  Location     Type
  2527 ;;  fval            4   31[BANK1 ] PTR const unsigned char 
  2528 ;;  tmpval          4   25[BANK1 ] struct .
  2529 ;;  val             4   19[BANK1 ] unsigned long 
  2530 ;;  prec            2   29[BANK1 ] int 
  2531 ;;  eexp            2   23[BANK1 ] int 
  2532 ;;  flag            2   17[BANK1 ] unsigned short 
  2533 ;;  cp              2    0        PTR const unsigned char 
  2534 ;;  len             2    0        unsigned int 
  2535 ;;  width           2    0        int 
  2536 ;;  c               1   35[BANK1 ] unsigned char 
  2537 ;;  ap              1   16[BANK1 ] PTR void [1]
  2538 ;;		 -> ?_sprintf(2), 
  2539 ;;  d               1    0        unsigned char 
  2540 ;; Return value:  Size  Location     Type
  2541 ;;                  2    0[BANK1 ] int 
  2542 ;; Registers used:
  2543 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2544 ;; Tracked objects:
  2545 ;;		On entry : 0/0
  2546 ;;		On exit  : 0/0
  2547 ;;		Unchanged: 0/0
  2548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2549 ;;      Params:         0       0       7       0       0
  2550 ;;      Locals:         0       0      24       0       0
  2551 ;;      Temps:          0       0       5       0       0
  2552 ;;      Totals:         0       0      36       0       0
  2553 ;;Total ram usage:       36 bytes
  2554 ;; Hardware stack levels used:    1
  2555 ;; Hardware stack levels required when called:    3
  2556 ;; This function calls:
  2557 ;;		___awdiv
  2558 ;;		___fladd
  2559 ;;		___fleq
  2560 ;;		___flge
  2561 ;;		___flmul
  2562 ;;		___flneg
  2563 ;;		___flsub
  2564 ;;		___fltol
  2565 ;;		___lldiv
  2566 ;;		___llmod
  2567 ;;		___wmul
  2568 ;;		___xxtofl
  2569 ;;		__div_to_l_
  2570 ;;		__tdiv_to_l_
  2571 ;;		_fround
  2572 ;;		_isdigit
  2573 ;;		_scale
  2574 ;; This function is called by:
  2575 ;;		_main
  2576 ;; This function uses a non-reentrant model
  2577 ;;
  2578                           
  2579                           
  2580                           ;psect for function _sprintf
  2581  0180                     _sprintf:
  2582  0180                     l3167:	
  2583                           ;incstack = 0
  2584                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2585                           
  2586                           
  2587                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  2588  0180  30A3               	movlw	(low ((?_sprintf| 0+3)))& (0+255)
  2589  0181  1683               	bsf	3,5	;RP0=1, select bank1
  2590  0182  1303               	bcf	3,6	;RP1=0, select bank1
  2591  0183  00A7               	movwf	??_sprintf^(0+128)
  2592  0184  0827               	movf	??_sprintf^(0+128),w
  2593  0185  00B0               	movwf	sprintf@ap^(0+128)
  2594                           
  2595                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2596  0186  2FE3               	goto	l3365
  2597  0187                     l3169:
  2598                           
  2599                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2600  0187  3025               	movlw	37
  2601  0188  0643               	xorwf	sprintf@c^(0+128),w
  2602  0189  1903               	btfsc	3,2
  2603  018A  298C               	goto	u5081
  2604  018B  298D               	goto	u5080
  2605  018C                     u5081:
  2606  018C  299D               	goto	l3175
  2607  018D                     u5080:
  2608  018D                     l3171:
  2609                           
  2610                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2611  018D  0843               	movf	sprintf@c^(0+128),w
  2612  018E  00A7               	movwf	??_sprintf^(0+128)
  2613  018F  0820               	movf	sprintf@sp^(0+128),w
  2614  0190  0084               	movwf	4
  2615  0191  1783               	bsf	3,7
  2616  0192  1C21               	btfss	(sprintf@sp+1)^(0+128),0
  2617  0193  1383               	bcf	3,7
  2618  0194  0827               	movf	??_sprintf^(0+128),w
  2619  0195  0080               	movwf	0
  2620  0196                     l3173:
  2621  0196  3001               	movlw	1
  2622  0197  07A0               	addwf	sprintf@sp^(0+128),f
  2623  0198  1803               	skipnc
  2624  0199  0AA1               	incf	(sprintf@sp+1)^(0+128),f
  2625  019A  3000               	movlw	0
  2626  019B  07A1               	addwf	(sprintf@sp+1)^(0+128),f
  2627                           
  2628                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  2629  019C  2FE3               	goto	l3365
  2630  019D                     l3175:
  2631                           
  2632                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2633  019D  01B1               	clrf	sprintf@flag^(0+128)
  2634  019E  01B2               	clrf	(sprintf@flag+1)^(0+128)
  2635  019F                     l3177:
  2636                           
  2637                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  2638  019F  0822               	movf	sprintf@f^(0+128),w
  2639  01A0  0084               	movwf	4
  2640  01A1  120A  118A  200D  120A  118A  	fcall	stringdir
  2641  01A6  3A2E               	xorlw	46
  2642  01A7  1D03               	skipz
  2643  01A8  29AA               	goto	u5091
  2644  01A9  29AB               	goto	u5090
  2645  01AA                     u5091:
  2646  01AA  29F0               	goto	l3193
  2647  01AB                     u5090:
  2648  01AB                     l3179:
  2649                           
  2650                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  2651  01AB  1732               	bsf	(sprintf@flag^(0+128)+1),6
  2652  01AC                     l3181:
  2653                           
  2654                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  2655  01AC  3001               	movlw	1
  2656  01AD  00A7               	movwf	??_sprintf^(0+128)
  2657  01AE  0827               	movf	??_sprintf^(0+128),w
  2658  01AF  07A2               	addwf	sprintf@f^(0+128),f
  2659  01B0                     l3183:
  2660                           
  2661                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2662  01B0  01BD               	clrf	sprintf@prec^(0+128)
  2663  01B1  01BE               	clrf	(sprintf@prec+1)^(0+128)
  2664                           
  2665                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2666  01B2  29DF               	goto	l3191
  2667  01B3                     l3185:
  2668                           
  2669                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2670  01B3  300A               	movlw	10
  2671  01B4  00F0               	movwf	___wmul@multiplier
  2672  01B5  3000               	movlw	0
  2673  01B6  00F1               	movwf	___wmul@multiplier+1
  2674  01B7  1683               	bsf	3,5	;RP0=1, select bank1
  2675  01B8  1303               	bcf	3,6	;RP1=0, select bank1
  2676  01B9  083E               	movf	(sprintf@prec+1)^(0+128),w
  2677  01BA  00F3               	movwf	___wmul@multiplicand+1
  2678  01BB  083D               	movf	sprintf@prec^(0+128),w
  2679  01BC  00F2               	movwf	___wmul@multiplicand
  2680  01BD  160A  158A  21AF  120A  118A  	fcall	___wmul
  2681  01C2  0871               	movf	?___wmul+1,w
  2682  01C3  1683               	bsf	3,5	;RP0=1, select bank1
  2683  01C4  1303               	bcf	3,6	;RP1=0, select bank1
  2684  01C5  00BE               	movwf	(sprintf@prec+1)^(0+128)
  2685  01C6  0870               	movf	?___wmul,w
  2686  01C7  00BD               	movwf	sprintf@prec^(0+128)
  2687  01C8                     l3187:
  2688                           
  2689                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2690  01C8  0822               	movf	sprintf@f^(0+128),w
  2691  01C9  0084               	movwf	4
  2692  01CA  120A  118A  200D  120A  118A  	fcall	stringdir
  2693  01CF  3ED0               	addlw	208
  2694  01D0  00A7               	movwf	??_sprintf^(0+128)
  2695  01D1  30FF               	movlw	255
  2696  01D2  1803               	skipnc
  2697  01D3  3000               	movlw	0
  2698  01D4  00A8               	movwf	(??_sprintf^(0+128)+1)
  2699  01D5  0827               	movf	??_sprintf^(0+128),w
  2700  01D6  07BD               	addwf	sprintf@prec^(0+128),f
  2701  01D7  1803               	skipnc
  2702  01D8  0ABE               	incf	(sprintf@prec+1)^(0+128),f
  2703  01D9  0828               	movf	(??_sprintf+1)^(0+128),w
  2704  01DA  07BE               	addwf	(sprintf@prec+1)^(0+128),f
  2705  01DB                     l3189:
  2706  01DB  3001               	movlw	1
  2707  01DC  00A7               	movwf	??_sprintf^(0+128)
  2708  01DD  0827               	movf	??_sprintf^(0+128),w
  2709  01DE  07A2               	addwf	sprintf@f^(0+128),f
  2710  01DF                     l3191:
  2711                           
  2712                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2713  01DF  0822               	movf	sprintf@f^(0+128),w
  2714  01E0  0084               	movwf	4
  2715  01E1  120A  118A  200D  120A  118A  	fcall	stringdir
  2716  01E6  160A  158A  2157  120A  118A  	fcall	_isdigit
  2717  01EB  1803               	btfsc	3,0
  2718  01EC  29EE               	goto	u5101
  2719  01ED  29EF               	goto	u5100
  2720  01EE                     u5101:
  2721  01EE  29B3               	goto	l3185
  2722  01EF                     u5100:
  2723  01EF  29F6               	goto	l3199
  2724  01F0                     l3193:
  2725                           
  2726                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2727  01F0  01BD               	clrf	sprintf@prec^(0+128)
  2728  01F1  01BE               	clrf	(sprintf@prec+1)^(0+128)
  2729  01F2                     l3195:
  2730                           
  2731                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2732  01F2  1632               	bsf	(sprintf@flag^(0+128)+1),4
  2733  01F3  29F6               	goto	l3199
  2734  01F4                     l237:	
  2735                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2736                           
  2737                           
  2738                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2739  01F4  1532               	bsf	(sprintf@flag^(0+128)+1),2
  2740                           
  2741                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  2742  01F5  2A12               	goto	l3201
  2743  01F6                     l3199:
  2744  01F6  3001               	movlw	1
  2745  01F7  1683               	bsf	3,5	;RP0=1, select bank1
  2746  01F8  1303               	bcf	3,6	;RP1=0, select bank1
  2747  01F9  07A2               	addwf	sprintf@f^(0+128),f
  2748  01FA  30FF               	movlw	-1
  2749  01FB  0722               	addwf	sprintf@f^(0+128),w
  2750  01FC  0084               	movwf	4
  2751  01FD  120A  118A  200D  120A  118A  	fcall	stringdir
  2752  0202  00C3               	movwf	sprintf@c^(0+128)
  2753  0203  00A7               	movwf	??_sprintf^(0+128)
  2754  0204  01A8               	clrf	(??_sprintf^(0+128)+1)
  2755                           
  2756                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2757                           ; Switch size 1, requested type "simple"
  2758                           ; Number of cases is 1, Range of values is 0 to 0
  2759                           ; switch strategies available:
  2760                           ; Name         Instructions Cycles
  2761                           ; simple_byte            4     3 (average)
  2762                           ; direct_byte           11     8 (fixed)
  2763                           ; jumptable            260     6 (fixed)
  2764                           ;	Chosen strategy is simple_byte
  2765  0205  0828               	movf	(??_sprintf+1)^(0+128),w
  2766  0206  3A00               	xorlw	0	; case 0
  2767  0207  1903               	skipnz
  2768  0208  2A0A               	goto	l3633
  2769  0209  2FE3               	goto	l3365
  2770  020A                     l3633:
  2771                           
  2772                           ; Switch size 1, requested type "simple"
  2773                           ; Number of cases is 2, Range of values is 0 to 102
  2774                           ; switch strategies available:
  2775                           ; Name         Instructions Cycles
  2776                           ; simple_byte            7     4 (average)
  2777                           ; jumptable            260     6 (fixed)
  2778                           ;	Chosen strategy is simple_byte
  2779  020A  0827               	movf	??_sprintf^(0+128),w
  2780  020B  3A00               	xorlw	0	; case 0
  2781  020C  1903               	skipnz
  2782  020D  2FF5               	goto	l3367
  2783  020E  3A66               	xorlw	102	; case 102
  2784  020F  1903               	skipnz
  2785  0210  29F4               	goto	l237
  2786  0211  2FE3               	goto	l3365
  2787  0212                     l3201:
  2788                           
  2789                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2790  0212  3000               	movlw	0
  2791  0213  0531               	andwf	sprintf@flag^(0+128),w
  2792  0214  00A7               	movwf	??_sprintf^(0+128)
  2793  0215  3007               	movlw	7
  2794  0216  0532               	andwf	(sprintf@flag+1)^(0+128),w
  2795  0217  00A8               	movwf	(??_sprintf+1)^(0+128)
  2796  0218  0827               	movf	??_sprintf^(0+128),w
  2797  0219  0428               	iorwf	(??_sprintf^(0+128)+1),w
  2798  021A  1903               	btfsc	3,2
  2799  021B  2A1D               	goto	u5111
  2800  021C  2A1E               	goto	u5110
  2801  021D                     u5111:
  2802  021D  2F97               	goto	l3347
  2803  021E                     u5110:
  2804  021E                     l3203:
  2805                           
  2806                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2807  021E  1E32               	btfss	(sprintf@flag+1)^(0+128),4
  2808  021F  2A21               	goto	u5121
  2809  0220  2A22               	goto	u5120
  2810  0221                     u5121:
  2811  0221  2A26               	goto	l3207
  2812  0222                     u5120:
  2813  0222                     l3205:
  2814                           
  2815                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2816  0222  3006               	movlw	6
  2817  0223  00BD               	movwf	sprintf@prec^(0+128)
  2818  0224  3000               	movlw	0
  2819  0225  00BE               	movwf	(sprintf@prec^(0+128)+1)
  2820  0226                     l3207:
  2821                           
  2822                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2823  0226  0830               	movf	sprintf@ap^(0+128),w
  2824  0227  0084               	movwf	4
  2825  0228  1383               	bcf	3,7	;select IRP bank0
  2826  0229  0800               	movf	0,w
  2827  022A  00BF               	movwf	sprintf@fval^(0+128)
  2828  022B  0A84               	incf	4,f
  2829  022C  0800               	movf	0,w
  2830  022D  00C0               	movwf	(sprintf@fval+1)^(0+128)
  2831  022E  0A84               	incf	4,f
  2832  022F  0800               	movf	0,w
  2833  0230  00C1               	movwf	(sprintf@fval+2)^(0+128)
  2834  0231  0A84               	incf	4,f
  2835  0232  0800               	movf	0,w
  2836  0233  00C2               	movwf	(sprintf@fval+3)^(0+128)
  2837  0234                     l3209:
  2838  0234  3004               	movlw	4
  2839  0235  00A7               	movwf	??_sprintf^(0+128)
  2840  0236  0827               	movf	??_sprintf^(0+128),w
  2841  0237  07B0               	addwf	sprintf@ap^(0+128),f
  2842  0238                     l3211:
  2843                           
  2844                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2845  0238  0842               	movf	(sprintf@fval+3)^(0+128),w
  2846  0239  00F3               	movwf	___flge@ff1+3
  2847  023A  0841               	movf	(sprintf@fval+2)^(0+128),w
  2848  023B  00F2               	movwf	___flge@ff1+2
  2849  023C  0840               	movf	(sprintf@fval+1)^(0+128),w
  2850  023D  00F1               	movwf	___flge@ff1+1
  2851  023E  083F               	movf	sprintf@fval^(0+128),w
  2852  023F  00F0               	movwf	___flge@ff1
  2853  0240  3000               	movlw	0
  2854  0241  00F7               	movwf	___flge@ff2+3
  2855  0242  3000               	movlw	0
  2856  0243  00F6               	movwf	___flge@ff2+2
  2857  0244  3000               	movlw	0
  2858  0245  00F5               	movwf	___flge@ff2+1
  2859  0246  3000               	movlw	0
  2860  0247  00F4               	movwf	___flge@ff2
  2861  0248  160A  158A  25E7  120A  118A  	fcall	___flge
  2862  024D  1803               	btfsc	3,0
  2863  024E  2A50               	goto	u5131
  2864  024F  2A51               	goto	u5130
  2865  0250                     u5131:
  2866  0250  2A6E               	goto	l3217
  2867  0251                     u5130:
  2868  0251                     l3213:
  2869                           
  2870                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2871  0251  1683               	bsf	3,5	;RP0=1, select bank1
  2872  0252  1303               	bcf	3,6	;RP1=0, select bank1
  2873  0253  0842               	movf	(sprintf@fval+3)^(0+128),w
  2874  0254  00F3               	movwf	___flneg@f1+3
  2875  0255  0841               	movf	(sprintf@fval+2)^(0+128),w
  2876  0256  00F2               	movwf	___flneg@f1+2
  2877  0257  0840               	movf	(sprintf@fval+1)^(0+128),w
  2878  0258  00F1               	movwf	___flneg@f1+1
  2879  0259  083F               	movf	sprintf@fval^(0+128),w
  2880  025A  00F0               	movwf	___flneg@f1
  2881  025B  160A  158A  214C  120A  118A  	fcall	___flneg
  2882  0260  0873               	movf	?___flneg+3,w
  2883  0261  1683               	bsf	3,5	;RP0=1, select bank1
  2884  0262  1303               	bcf	3,6	;RP1=0, select bank1
  2885  0263  00C2               	movwf	(sprintf@fval+3)^(0+128)
  2886  0264  0872               	movf	?___flneg+2,w
  2887  0265  00C1               	movwf	(sprintf@fval+2)^(0+128)
  2888  0266  0871               	movf	?___flneg+1,w
  2889  0267  00C0               	movwf	(sprintf@fval+1)^(0+128)
  2890  0268  0870               	movf	?___flneg,w
  2891  0269  00BF               	movwf	sprintf@fval^(0+128)
  2892  026A                     l3215:
  2893                           
  2894                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2895  026A  3003               	movlw	3
  2896  026B  04B1               	iorwf	sprintf@flag^(0+128),f
  2897  026C  3000               	movlw	0
  2898  026D  04B2               	iorwf	(sprintf@flag+1)^(0+128),f
  2899  026E                     l3217:
  2900                           
  2901                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2902  026E  1683               	bsf	3,5	;RP0=1, select bank1
  2903  026F  1303               	bcf	3,6	;RP1=0, select bank1
  2904  0270  01B7               	clrf	sprintf@eexp^(0+128)
  2905  0271  01B8               	clrf	(sprintf@eexp+1)^(0+128)
  2906  0272                     l3219:
  2907                           
  2908                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2909  0272  0842               	movf	(sprintf@fval+3)^(0+128),w
  2910  0273  00F3               	movwf	___fleq@ff1+3
  2911  0274  0841               	movf	(sprintf@fval+2)^(0+128),w
  2912  0275  00F2               	movwf	___fleq@ff1+2
  2913  0276  0840               	movf	(sprintf@fval+1)^(0+128),w
  2914  0277  00F1               	movwf	___fleq@ff1+1
  2915  0278  083F               	movf	sprintf@fval^(0+128),w
  2916  0279  00F0               	movwf	___fleq@ff1
  2917  027A  3000               	movlw	0
  2918  027B  00F7               	movwf	___fleq@ff2+3
  2919  027C  3000               	movlw	0
  2920  027D  00F6               	movwf	___fleq@ff2+2
  2921  027E  3000               	movlw	0
  2922  027F  00F5               	movwf	___fleq@ff2+1
  2923  0280  3000               	movlw	0
  2924  0281  00F4               	movwf	___fleq@ff2
  2925  0282  160A  158A  22F2  120A  118A  	fcall	___fleq
  2926  0287  1803               	btfsc	3,0
  2927  0288  2A8A               	goto	u5141
  2928  0289  2A8B               	goto	u5140
  2929  028A                     u5141:
  2930  028A  2B7B               	goto	l3245
  2931  028B                     u5140:
  2932  028B                     l3221:
  2933                           
  2934                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2935  028B  1003               	clrc
  2936  028C  1683               	bsf	3,5	;RP0=1, select bank1
  2937  028D  1303               	bcf	3,6	;RP1=0, select bank1
  2938  028E  0D41               	rlf	(sprintf@fval+2)^(0+128),w
  2939  028F  0D42               	rlf	(sprintf@fval+3)^(0+128),w
  2940  0290  3E82               	addlw	130
  2941  0291  00B7               	movwf	sprintf@eexp^(0+128)
  2942  0292  30FF               	movlw	255
  2943  0293  1803               	skipnc
  2944  0294  3000               	movlw	0
  2945  0295  00B8               	movwf	(sprintf@eexp^(0+128)+1)
  2946  0296                     l3223:
  2947                           
  2948                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2949  0296  30FF               	movlw	255
  2950  0297  07B7               	addwf	sprintf@eexp^(0+128),f
  2951  0298  1803               	skipnc
  2952  0299  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  2953  029A  30FF               	movlw	255
  2954  029B  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  2955  029C                     l3225:
  2956                           
  2957                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2958  029C  3003               	movlw	3
  2959  029D  00F0               	movwf	___wmul@multiplier
  2960  029E  3000               	movlw	0
  2961  029F  00F1               	movwf	___wmul@multiplier+1
  2962  02A0  0838               	movf	(sprintf@eexp+1)^(0+128),w
  2963  02A1  00F3               	movwf	___wmul@multiplicand+1
  2964  02A2  0837               	movf	sprintf@eexp^(0+128),w
  2965  02A3  00F2               	movwf	___wmul@multiplicand
  2966  02A4  160A  158A  21AF  120A  118A  	fcall	___wmul
  2967  02A9  0871               	movf	?___wmul+1,w
  2968  02AA  1683               	bsf	3,5	;RP0=1, select bank1
  2969  02AB  1303               	bcf	3,6	;RP1=0, select bank1
  2970  02AC  00B8               	movwf	(sprintf@eexp+1)^(0+128)
  2971  02AD  0870               	movf	?___wmul,w
  2972  02AE  00B7               	movwf	sprintf@eexp^(0+128)
  2973  02AF                     l3227:
  2974                           
  2975                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2976  02AF  300A               	movlw	10
  2977  02B0  00F7               	movwf	___awdiv@divisor
  2978  02B1  3000               	movlw	0
  2979  02B2  00F8               	movwf	___awdiv@divisor+1
  2980  02B3  0838               	movf	(sprintf@eexp+1)^(0+128),w
  2981  02B4  00FA               	movwf	___awdiv@dividend+1
  2982  02B5  0837               	movf	sprintf@eexp^(0+128),w
  2983  02B6  00F9               	movwf	___awdiv@dividend
  2984  02B7  160A  158A  2502  120A  118A  	fcall	___awdiv
  2985  02BC  0878               	movf	?___awdiv+1,w
  2986  02BD  1683               	bsf	3,5	;RP0=1, select bank1
  2987  02BE  1303               	bcf	3,6	;RP1=0, select bank1
  2988  02BF  00B8               	movwf	(sprintf@eexp+1)^(0+128)
  2989  02C0  0877               	movf	?___awdiv,w
  2990  02C1  00B7               	movwf	sprintf@eexp^(0+128)
  2991  02C2                     l3229:
  2992                           
  2993                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2994  02C2  1FB8               	btfss	(sprintf@eexp+1)^(0+128),7
  2995  02C3  2AC5               	goto	u5151
  2996  02C4  2AC6               	goto	u5150
  2997  02C5                     u5151:
  2998  02C5  2ACC               	goto	l3233
  2999  02C6                     u5150:
  3000  02C6                     l3231:
  3001                           
  3002                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  3003  02C6  30FF               	movlw	255
  3004  02C7  07B7               	addwf	sprintf@eexp^(0+128),f
  3005  02C8  1803               	skipnc
  3006  02C9  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  3007  02CA  30FF               	movlw	255
  3008  02CB  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  3009  02CC                     l3233:
  3010                           
  3011                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  3012  02CC  0337               	decf	sprintf@eexp^(0+128),w
  3013  02CD  3AFF               	xorlw	255
  3014  02CE  160A  118A  24A1  120A  118A  	fcall	_scale
  3015  02D3  1283               	bcf	3,5	;RP0=0, select bank0
  3016  02D4  1303               	bcf	3,6	;RP1=0, select bank0
  3017  02D5  0841               	movf	?_scale+3,w
  3018  02D6  1683               	bsf	3,5	;RP0=1, select bank1
  3019  02D7  1303               	bcf	3,6	;RP1=0, select bank1
  3020  02D8  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  3021  02D9  1283               	bcf	3,5	;RP0=0, select bank0
  3022  02DA  1303               	bcf	3,6	;RP1=0, select bank0
  3023  02DB  0840               	movf	?_scale+2,w
  3024  02DC  1683               	bsf	3,5	;RP0=1, select bank1
  3025  02DD  1303               	bcf	3,6	;RP1=0, select bank1
  3026  02DE  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  3027  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  3028  02E0  1303               	bcf	3,6	;RP1=0, select bank0
  3029  02E1  083F               	movf	?_scale+1,w
  3030  02E2  1683               	bsf	3,5	;RP0=1, select bank1
  3031  02E3  1303               	bcf	3,6	;RP1=0, select bank1
  3032  02E4  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  3033  02E5  1283               	bcf	3,5	;RP0=0, select bank0
  3034  02E6  1303               	bcf	3,6	;RP1=0, select bank0
  3035  02E7  083E               	movf	?_scale,w
  3036  02E8  1683               	bsf	3,5	;RP0=1, select bank1
  3037  02E9  1303               	bcf	3,6	;RP1=0, select bank1
  3038  02EA  00B9               	movwf	sprintf@tmpval^(0+128)
  3039  02EB                     l3235:
  3040                           
  3041                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  3042  02EB  0842               	movf	(sprintf@fval+3)^(0+128),w
  3043  02EC  1283               	bcf	3,5	;RP0=0, select bank0
  3044  02ED  1303               	bcf	3,6	;RP1=0, select bank0
  3045  02EE  00A7               	movwf	___flmul@b+3
  3046  02EF  1683               	bsf	3,5	;RP0=1, select bank1
  3047  02F0  1303               	bcf	3,6	;RP1=0, select bank1
  3048  02F1  0841               	movf	(sprintf@fval+2)^(0+128),w
  3049  02F2  1283               	bcf	3,5	;RP0=0, select bank0
  3050  02F3  1303               	bcf	3,6	;RP1=0, select bank0
  3051  02F4  00A6               	movwf	___flmul@b+2
  3052  02F5  1683               	bsf	3,5	;RP0=1, select bank1
  3053  02F6  1303               	bcf	3,6	;RP1=0, select bank1
  3054  02F7  0840               	movf	(sprintf@fval+1)^(0+128),w
  3055  02F8  1283               	bcf	3,5	;RP0=0, select bank0
  3056  02F9  1303               	bcf	3,6	;RP1=0, select bank0
  3057  02FA  00A5               	movwf	___flmul@b+1
  3058  02FB  1683               	bsf	3,5	;RP0=1, select bank1
  3059  02FC  1303               	bcf	3,6	;RP1=0, select bank1
  3060  02FD  083F               	movf	sprintf@fval^(0+128),w
  3061  02FE  1283               	bcf	3,5	;RP0=0, select bank0
  3062  02FF  1303               	bcf	3,6	;RP1=0, select bank0
  3063  0300  00A4               	movwf	___flmul@b
  3064  0301  1683               	bsf	3,5	;RP0=1, select bank1
  3065  0302  1303               	bcf	3,6	;RP1=0, select bank1
  3066  0303  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  3067  0304  1283               	bcf	3,5	;RP0=0, select bank0
  3068  0305  1303               	bcf	3,6	;RP1=0, select bank0
  3069  0306  00AB               	movwf	___flmul@a+3
  3070  0307  1683               	bsf	3,5	;RP0=1, select bank1
  3071  0308  1303               	bcf	3,6	;RP1=0, select bank1
  3072  0309  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  3073  030A  1283               	bcf	3,5	;RP0=0, select bank0
  3074  030B  1303               	bcf	3,6	;RP1=0, select bank0
  3075  030C  00AA               	movwf	___flmul@a+2
  3076  030D  1683               	bsf	3,5	;RP0=1, select bank1
  3077  030E  1303               	bcf	3,6	;RP1=0, select bank1
  3078  030F  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  3079  0310  1283               	bcf	3,5	;RP0=0, select bank0
  3080  0311  1303               	bcf	3,6	;RP1=0, select bank0
  3081  0312  00A9               	movwf	___flmul@a+1
  3082  0313  1683               	bsf	3,5	;RP0=1, select bank1
  3083  0314  1303               	bcf	3,6	;RP1=0, select bank1
  3084  0315  0839               	movf	sprintf@tmpval^(0+128),w
  3085  0316  1283               	bcf	3,5	;RP0=0, select bank0
  3086  0317  1303               	bcf	3,6	;RP1=0, select bank0
  3087  0318  00A8               	movwf	___flmul@a
  3088  0319  120A  158A  2020  120A  118A  	fcall	___flmul
  3089  031E  1283               	bcf	3,5	;RP0=0, select bank0
  3090  031F  1303               	bcf	3,6	;RP1=0, select bank0
  3091  0320  0827               	movf	?___flmul+3,w
  3092  0321  1683               	bsf	3,5	;RP0=1, select bank1
  3093  0322  1303               	bcf	3,6	;RP1=0, select bank1
  3094  0323  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  3095  0324  1283               	bcf	3,5	;RP0=0, select bank0
  3096  0325  1303               	bcf	3,6	;RP1=0, select bank0
  3097  0326  0826               	movf	?___flmul+2,w
  3098  0327  1683               	bsf	3,5	;RP0=1, select bank1
  3099  0328  1303               	bcf	3,6	;RP1=0, select bank1
  3100  0329  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  3101  032A  1283               	bcf	3,5	;RP0=0, select bank0
  3102  032B  1303               	bcf	3,6	;RP1=0, select bank0
  3103  032C  0825               	movf	?___flmul+1,w
  3104  032D  1683               	bsf	3,5	;RP0=1, select bank1
  3105  032E  1303               	bcf	3,6	;RP1=0, select bank1
  3106  032F  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  3107  0330  1283               	bcf	3,5	;RP0=0, select bank0
  3108  0331  1303               	bcf	3,6	;RP1=0, select bank0
  3109  0332  0824               	movf	?___flmul,w
  3110  0333  1683               	bsf	3,5	;RP0=1, select bank1
  3111  0334  1303               	bcf	3,6	;RP1=0, select bank1
  3112  0335  00B9               	movwf	sprintf@tmpval^(0+128)
  3113  0336                     l3237:
  3114                           
  3115                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  3116  0336  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  3117  0337  00F3               	movwf	___flge@ff1+3
  3118  0338  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  3119  0339  00F2               	movwf	___flge@ff1+2
  3120  033A  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  3121  033B  00F1               	movwf	___flge@ff1+1
  3122  033C  0839               	movf	sprintf@tmpval^(0+128),w
  3123  033D  00F0               	movwf	___flge@ff1
  3124  033E  303F               	movlw	63
  3125  033F  00F7               	movwf	___flge@ff2+3
  3126  0340  3080               	movlw	128
  3127  0341  00F6               	movwf	___flge@ff2+2
  3128  0342  3000               	movlw	0
  3129  0343  00F5               	movwf	___flge@ff2+1
  3130  0344  3000               	movlw	0
  3131  0345  00F4               	movwf	___flge@ff2
  3132  0346  160A  158A  25E7  120A  118A  	fcall	___flge
  3133  034B  1803               	btfsc	3,0
  3134  034C  2B4E               	goto	u5161
  3135  034D  2B4F               	goto	u5160
  3136  034E                     u5161:
  3137  034E  2B58               	goto	l3241
  3138  034F                     u5160:
  3139  034F                     l3239:
  3140                           
  3141                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  3142  034F  30FF               	movlw	255
  3143  0350  1683               	bsf	3,5	;RP0=1, select bank1
  3144  0351  1303               	bcf	3,6	;RP1=0, select bank1
  3145  0352  07B7               	addwf	sprintf@eexp^(0+128),f
  3146  0353  1803               	skipnc
  3147  0354  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  3148  0355  30FF               	movlw	255
  3149  0356  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  3150  0357  2B7B               	goto	l3245
  3151  0358                     l3241:
  3152  0358  1683               	bsf	3,5	;RP0=1, select bank1
  3153  0359  1303               	bcf	3,6	;RP1=0, select bank1
  3154  035A  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  3155  035B  00F3               	movwf	___flge@ff1+3
  3156  035C  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  3157  035D  00F2               	movwf	___flge@ff1+2
  3158  035E  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  3159  035F  00F1               	movwf	___flge@ff1+1
  3160  0360  0839               	movf	sprintf@tmpval^(0+128),w
  3161  0361  00F0               	movwf	___flge@ff1
  3162  0362  3041               	movlw	65
  3163  0363  00F7               	movwf	___flge@ff2+3
  3164  0364  3020               	movlw	32
  3165  0365  00F6               	movwf	___flge@ff2+2
  3166  0366  3000               	movlw	0
  3167  0367  00F5               	movwf	___flge@ff2+1
  3168  0368  3000               	movlw	0
  3169  0369  00F4               	movwf	___flge@ff2
  3170  036A  160A  158A  25E7  120A  118A  	fcall	___flge
  3171  036F  1C03               	btfss	3,0
  3172  0370  2B72               	goto	u5171
  3173  0371  2B73               	goto	u5170
  3174  0372                     u5171:
  3175  0372  2B7B               	goto	l3245
  3176  0373                     u5170:
  3177  0373                     l3243:
  3178                           
  3179                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  3180  0373  3001               	movlw	1
  3181  0374  1683               	bsf	3,5	;RP0=1, select bank1
  3182  0375  1303               	bcf	3,6	;RP1=0, select bank1
  3183  0376  07B7               	addwf	sprintf@eexp^(0+128),f
  3184  0377  1803               	skipnc
  3185  0378  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  3186  0379  3000               	movlw	0
  3187  037A  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  3188  037B                     l3245:
  3189                           
  3190                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  3191  037B  1683               	bsf	3,5	;RP0=1, select bank1
  3192  037C  1303               	bcf	3,6	;RP1=0, select bank1
  3193  037D  083E               	movf	(sprintf@prec+1)^(0+128),w
  3194  037E  3A80               	xorlw	128
  3195  037F  00FF               	movwf	btemp+1
  3196  0380  3080               	movlw	128
  3197  0381  027F               	subwf	btemp+1,w
  3198  0382  1D03               	skipz
  3199  0383  2B86               	goto	u5185
  3200  0384  300D               	movlw	13
  3201  0385  023D               	subwf	sprintf@prec^(0+128),w
  3202  0386                     u5185:
  3203  0386  1803               	skipnc
  3204  0387  2B89               	goto	u5181
  3205  0388  2B8A               	goto	u5180
  3206  0389                     u5181:
  3207  0389  2BD1               	goto	l3249
  3208  038A                     u5180:
  3209  038A                     l3247:
  3210                           
  3211                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  3212  038A  1683               	bsf	3,5	;RP0=1, select bank1
  3213  038B  1303               	bcf	3,6	;RP1=0, select bank1
  3214  038C  083D               	movf	sprintf@prec^(0+128),w
  3215  038D  160A  118A  200E  120A  118A  	fcall	_fround
  3216  0392  1283               	bcf	3,5	;RP0=0, select bank0
  3217  0393  1303               	bcf	3,6	;RP1=0, select bank0
  3218  0394  0841               	movf	?_fround+3,w
  3219  0395  00D5               	movwf	___fladd@b+3
  3220  0396  0840               	movf	?_fround+2,w
  3221  0397  00D4               	movwf	___fladd@b+2
  3222  0398  083F               	movf	?_fround+1,w
  3223  0399  00D3               	movwf	___fladd@b+1
  3224  039A  083E               	movf	?_fround,w
  3225  039B  00D2               	movwf	___fladd@b
  3226  039C  1683               	bsf	3,5	;RP0=1, select bank1
  3227  039D  1303               	bcf	3,6	;RP1=0, select bank1
  3228  039E  0842               	movf	(sprintf@fval+3)^(0+128),w
  3229  039F  1283               	bcf	3,5	;RP0=0, select bank0
  3230  03A0  1303               	bcf	3,6	;RP1=0, select bank0
  3231  03A1  00D9               	movwf	___fladd@a+3
  3232  03A2  1683               	bsf	3,5	;RP0=1, select bank1
  3233  03A3  1303               	bcf	3,6	;RP1=0, select bank1
  3234  03A4  0841               	movf	(sprintf@fval+2)^(0+128),w
  3235  03A5  1283               	bcf	3,5	;RP0=0, select bank0
  3236  03A6  1303               	bcf	3,6	;RP1=0, select bank0
  3237  03A7  00D8               	movwf	___fladd@a+2
  3238  03A8  1683               	bsf	3,5	;RP0=1, select bank1
  3239  03A9  1303               	bcf	3,6	;RP1=0, select bank1
  3240  03AA  0840               	movf	(sprintf@fval+1)^(0+128),w
  3241  03AB  1283               	bcf	3,5	;RP0=0, select bank0
  3242  03AC  1303               	bcf	3,6	;RP1=0, select bank0
  3243  03AD  00D7               	movwf	___fladd@a+1
  3244  03AE  1683               	bsf	3,5	;RP0=1, select bank1
  3245  03AF  1303               	bcf	3,6	;RP1=0, select bank1
  3246  03B0  083F               	movf	sprintf@fval^(0+128),w
  3247  03B1  1283               	bcf	3,5	;RP0=0, select bank0
  3248  03B2  1303               	bcf	3,6	;RP1=0, select bank0
  3249  03B3  00D6               	movwf	___fladd@a
  3250  03B4  160A  118A  2219  120A  118A  	fcall	___fladd
  3251  03B9  1283               	bcf	3,5	;RP0=0, select bank0
  3252  03BA  1303               	bcf	3,6	;RP1=0, select bank0
  3253  03BB  0855               	movf	?___fladd+3,w
  3254  03BC  1683               	bsf	3,5	;RP0=1, select bank1
  3255  03BD  1303               	bcf	3,6	;RP1=0, select bank1
  3256  03BE  00C2               	movwf	(sprintf@fval+3)^(0+128)
  3257  03BF  1283               	bcf	3,5	;RP0=0, select bank0
  3258  03C0  1303               	bcf	3,6	;RP1=0, select bank0
  3259  03C1  0854               	movf	?___fladd+2,w
  3260  03C2  1683               	bsf	3,5	;RP0=1, select bank1
  3261  03C3  1303               	bcf	3,6	;RP1=0, select bank1
  3262  03C4  00C1               	movwf	(sprintf@fval+2)^(0+128)
  3263  03C5  1283               	bcf	3,5	;RP0=0, select bank0
  3264  03C6  1303               	bcf	3,6	;RP1=0, select bank0
  3265  03C7  0853               	movf	?___fladd+1,w
  3266  03C8  1683               	bsf	3,5	;RP0=1, select bank1
  3267  03C9  1303               	bcf	3,6	;RP1=0, select bank1
  3268  03CA  00C0               	movwf	(sprintf@fval+1)^(0+128)
  3269  03CB  1283               	bcf	3,5	;RP0=0, select bank0
  3270  03CC  1303               	bcf	3,6	;RP1=0, select bank0
  3271  03CD  0852               	movf	?___fladd,w
  3272  03CE  1683               	bsf	3,5	;RP0=1, select bank1
  3273  03CF  1303               	bcf	3,6	;RP1=0, select bank1
  3274  03D0  00BF               	movwf	sprintf@fval^(0+128)
  3275  03D1                     l3249:
  3276                           
  3277                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  3278  03D1  1683               	bsf	3,5	;RP0=1, select bank1
  3279  03D2  1303               	bcf	3,6	;RP1=0, select bank1
  3280  03D3  0838               	movf	(sprintf@eexp+1)^(0+128),w
  3281  03D4  3A80               	xorlw	128
  3282  03D5  00FF               	movwf	btemp+1
  3283  03D6  3080               	movlw	128
  3284  03D7  027F               	subwf	btemp+1,w
  3285  03D8  1D03               	skipz
  3286  03D9  2BDC               	goto	u5195
  3287  03DA  300A               	movlw	10
  3288  03DB  0237               	subwf	sprintf@eexp^(0+128),w
  3289  03DC                     u5195:
  3290  03DC  1803               	skipnc
  3291  03DD  2BDF               	goto	u5191
  3292  03DE  2BE0               	goto	u5190
  3293  03DF                     u5191:
  3294  03DF  2C31               	goto	l3257
  3295  03E0                     u5190:
  3296  03E0                     l3251:
  3297  03E0  1683               	bsf	3,5	;RP0=1, select bank1
  3298  03E1  1303               	bcf	3,6	;RP1=0, select bank1
  3299  03E2  0842               	movf	(sprintf@fval+3)^(0+128),w
  3300  03E3  00F3               	movwf	___fleq@ff1+3
  3301  03E4  0841               	movf	(sprintf@fval+2)^(0+128),w
  3302  03E5  00F2               	movwf	___fleq@ff1+2
  3303  03E6  0840               	movf	(sprintf@fval+1)^(0+128),w
  3304  03E7  00F1               	movwf	___fleq@ff1+1
  3305  03E8  083F               	movf	sprintf@fval^(0+128),w
  3306  03E9  00F0               	movwf	___fleq@ff1
  3307  03EA  3000               	movlw	0
  3308  03EB  00F7               	movwf	___fleq@ff2+3
  3309  03EC  3000               	movlw	0
  3310  03ED  00F6               	movwf	___fleq@ff2+2
  3311  03EE  3000               	movlw	0
  3312  03EF  00F5               	movwf	___fleq@ff2+1
  3313  03F0  3000               	movlw	0
  3314  03F1  00F4               	movwf	___fleq@ff2
  3315  03F2  160A  158A  22F2  120A  118A  	fcall	___fleq
  3316  03F7  1803               	btfsc	3,0
  3317  03F8  2BFA               	goto	u5201
  3318  03F9  2BFB               	goto	u5200
  3319  03FA                     u5201:
  3320  03FA  2CA3               	goto	l3271
  3321  03FB                     u5200:
  3322  03FB                     l3253:
  3323  03FB  1683               	bsf	3,5	;RP0=1, select bank1
  3324  03FC  1303               	bcf	3,6	;RP1=0, select bank1
  3325  03FD  0842               	movf	(sprintf@fval+3)^(0+128),w
  3326  03FE  1283               	bcf	3,5	;RP0=0, select bank0
  3327  03FF  1303               	bcf	3,6	;RP1=0, select bank0
  3328  0400  00D4               	movwf	___fltol@f1+3
  3329  0401  1683               	bsf	3,5	;RP0=1, select bank1
  3330  0402  1303               	bcf	3,6	;RP1=0, select bank1
  3331  0403  0841               	movf	(sprintf@fval+2)^(0+128),w
  3332  0404  1283               	bcf	3,5	;RP0=0, select bank0
  3333  0405  1303               	bcf	3,6	;RP1=0, select bank0
  3334  0406  00D3               	movwf	___fltol@f1+2
  3335  0407  1683               	bsf	3,5	;RP0=1, select bank1
  3336  0408  1303               	bcf	3,6	;RP1=0, select bank1
  3337  0409  0840               	movf	(sprintf@fval+1)^(0+128),w
  3338  040A  1283               	bcf	3,5	;RP0=0, select bank0
  3339  040B  1303               	bcf	3,6	;RP1=0, select bank0
  3340  040C  00D2               	movwf	___fltol@f1+1
  3341  040D  1683               	bsf	3,5	;RP0=1, select bank1
  3342  040E  1303               	bcf	3,6	;RP1=0, select bank1
  3343  040F  083F               	movf	sprintf@fval^(0+128),w
  3344  0410  1283               	bcf	3,5	;RP0=0, select bank0
  3345  0411  1303               	bcf	3,6	;RP1=0, select bank0
  3346  0412  00D1               	movwf	___fltol@f1
  3347  0413  160A  158A  256B  120A  118A  	fcall	___fltol
  3348  0418  1283               	bcf	3,5	;RP0=0, select bank0
  3349  0419  1303               	bcf	3,6	;RP1=0, select bank0
  3350  041A  0854               	movf	?___fltol+3,w
  3351  041B  0453               	iorwf	?___fltol+2,w
  3352  041C  0452               	iorwf	?___fltol+1,w
  3353  041D  0451               	iorwf	?___fltol,w
  3354  041E  1D03               	skipz
  3355  041F  2C21               	goto	u5211
  3356  0420  2C22               	goto	u5210
  3357  0421                     u5211:
  3358  0421  2CA3               	goto	l3271
  3359  0422                     u5210:
  3360  0422                     l3255:
  3361  0422  1683               	bsf	3,5	;RP0=1, select bank1
  3362  0423  1303               	bcf	3,6	;RP1=0, select bank1
  3363  0424  0838               	movf	(sprintf@eexp+1)^(0+128),w
  3364  0425  3A80               	xorlw	128
  3365  0426  00FF               	movwf	btemp+1
  3366  0427  3080               	movlw	128
  3367  0428  027F               	subwf	btemp+1,w
  3368  0429  1D03               	skipz
  3369  042A  2C2D               	goto	u5225
  3370  042B  3002               	movlw	2
  3371  042C  0237               	subwf	sprintf@eexp^(0+128),w
  3372  042D                     u5225:
  3373  042D  1C03               	skipc
  3374  042E  2C30               	goto	u5221
  3375  042F  2C31               	goto	u5220
  3376  0430                     u5221:
  3377  0430  2CA3               	goto	l3271
  3378  0431                     u5220:
  3379  0431                     l3257:
  3380                           
  3381                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  3382  0431  1683               	bsf	3,5	;RP0=1, select bank1
  3383  0432  1303               	bcf	3,6	;RP1=0, select bank1
  3384  0433  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  3385  0434  00F3               	movwf	___flge@ff1+3
  3386  0435  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  3387  0436  00F2               	movwf	___flge@ff1+2
  3388  0437  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  3389  0438  00F1               	movwf	___flge@ff1+1
  3390  0439  0839               	movf	sprintf@tmpval^(0+128),w
  3391  043A  00F0               	movwf	___flge@ff1
  3392  043B  3040               	movlw	64
  3393  043C  00F7               	movwf	___flge@ff2+3
  3394  043D  3089               	movlw	137
  3395  043E  00F6               	movwf	___flge@ff2+2
  3396  043F  3070               	movlw	112
  3397  0440  00F5               	movwf	___flge@ff2+1
  3398  0441  305F               	movlw	95
  3399  0442  00F4               	movwf	___flge@ff2
  3400  0443  160A  158A  25E7  120A  118A  	fcall	___flge
  3401  0448  1803               	btfsc	3,0
  3402  0449  2C4B               	goto	u5231
  3403  044A  2C4C               	goto	u5230
  3404  044B                     u5231:
  3405  044B  2C55               	goto	l3261
  3406  044C                     u5230:
  3407  044C                     l3259:
  3408                           
  3409                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  3410  044C  30F7               	movlw	247
  3411  044D  1683               	bsf	3,5	;RP0=1, select bank1
  3412  044E  1303               	bcf	3,6	;RP1=0, select bank1
  3413  044F  07B7               	addwf	sprintf@eexp^(0+128),f
  3414  0450  1803               	skipnc
  3415  0451  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  3416  0452  30FF               	movlw	255
  3417  0453  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  3418                           
  3419                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
  3420  0454  2C5D               	goto	l3263
  3421  0455                     l3261:
  3422                           
  3423                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  3424  0455  30F8               	movlw	248
  3425  0456  1683               	bsf	3,5	;RP0=1, select bank1
  3426  0457  1303               	bcf	3,6	;RP1=0, select bank1
  3427  0458  07B7               	addwf	sprintf@eexp^(0+128),f
  3428  0459  1803               	skipnc
  3429  045A  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  3430  045B  30FF               	movlw	255
  3431  045C  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  3432  045D                     l3263:
  3433                           
  3434                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  3435  045D  0837               	movf	sprintf@eexp^(0+128),w
  3436  045E  160A  118A  24A1  120A  118A  	fcall	_scale
  3437  0463  1283               	bcf	3,5	;RP0=0, select bank0
  3438  0464  1303               	bcf	3,6	;RP1=0, select bank0
  3439  0465  0841               	movf	?_scale+3,w
  3440  0466  1683               	bsf	3,5	;RP0=1, select bank1
  3441  0467  1303               	bcf	3,6	;RP1=0, select bank1
  3442  0468  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  3443  0469  1283               	bcf	3,5	;RP0=0, select bank0
  3444  046A  1303               	bcf	3,6	;RP1=0, select bank0
  3445  046B  0840               	movf	?_scale+2,w
  3446  046C  1683               	bsf	3,5	;RP0=1, select bank1
  3447  046D  1303               	bcf	3,6	;RP1=0, select bank1
  3448  046E  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  3449  046F  1283               	bcf	3,5	;RP0=0, select bank0
  3450  0470  1303               	bcf	3,6	;RP1=0, select bank0
  3451  0471  083F               	movf	?_scale+1,w
  3452  0472  1683               	bsf	3,5	;RP0=1, select bank1
  3453  0473  1303               	bcf	3,6	;RP1=0, select bank1
  3454  0474  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  3455  0475  1283               	bcf	3,5	;RP0=0, select bank0
  3456  0476  1303               	bcf	3,6	;RP1=0, select bank0
  3457  0477  083E               	movf	?_scale,w
  3458  0478  1683               	bsf	3,5	;RP0=1, select bank1
  3459  0479  1303               	bcf	3,6	;RP1=0, select bank1
  3460  047A  00B9               	movwf	sprintf@tmpval^(0+128)
  3461  047B                     l3265:
  3462  047B  0842               	movf	(sprintf@fval+3)^(0+128),w
  3463  047C  00F3               	movwf	__div_to_l_@f1+3
  3464  047D  0841               	movf	(sprintf@fval+2)^(0+128),w
  3465  047E  00F2               	movwf	__div_to_l_@f1+2
  3466  047F  0840               	movf	(sprintf@fval+1)^(0+128),w
  3467  0480  00F1               	movwf	__div_to_l_@f1+1
  3468  0481  083F               	movf	sprintf@fval^(0+128),w
  3469  0482  00F0               	movwf	__div_to_l_@f1
  3470  0483  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  3471  0484  00F7               	movwf	__div_to_l_@f2+3
  3472  0485  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  3473  0486  00F6               	movwf	__div_to_l_@f2+2
  3474  0487  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  3475  0488  00F5               	movwf	__div_to_l_@f2+1
  3476  0489  0839               	movf	sprintf@tmpval^(0+128),w
  3477  048A  00F4               	movwf	__div_to_l_@f2
  3478  048B  120A  118A  20C2  120A  118A  	fcall	__div_to_l_
  3479  0490  0873               	movf	?__div_to_l_+3,w
  3480  0491  1683               	bsf	3,5	;RP0=1, select bank1
  3481  0492  1303               	bcf	3,6	;RP1=0, select bank1
  3482  0493  00B6               	movwf	(sprintf@val+3)^(0+128)
  3483  0494  0872               	movf	?__div_to_l_+2,w
  3484  0495  00B5               	movwf	(sprintf@val+2)^(0+128)
  3485  0496  0871               	movf	?__div_to_l_+1,w
  3486  0497  00B4               	movwf	(sprintf@val+1)^(0+128)
  3487  0498  0870               	movf	?__div_to_l_,w
  3488  0499  00B3               	movwf	sprintf@val^(0+128)
  3489  049A                     l3269:
  3490                           
  3491                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  3492  049A  3000               	movlw	0
  3493  049B  00C2               	movwf	(sprintf@fval+3)^(0+128)
  3494  049C  3000               	movlw	0
  3495  049D  00C1               	movwf	(sprintf@fval+2)^(0+128)
  3496  049E  3000               	movlw	0
  3497  049F  00C0               	movwf	(sprintf@fval+1)^(0+128)
  3498  04A0  3000               	movlw	0
  3499  04A1  00BF               	movwf	sprintf@fval^(0+128)
  3500                           
  3501                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  3502  04A2  2D27               	goto	l3277
  3503  04A3                     l3271:
  3504                           
  3505                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  3506  04A3  1683               	bsf	3,5	;RP0=1, select bank1
  3507  04A4  1303               	bcf	3,6	;RP1=0, select bank1
  3508  04A5  0842               	movf	(sprintf@fval+3)^(0+128),w
  3509  04A6  1283               	bcf	3,5	;RP0=0, select bank0
  3510  04A7  1303               	bcf	3,6	;RP1=0, select bank0
  3511  04A8  00D4               	movwf	___fltol@f1+3
  3512  04A9  1683               	bsf	3,5	;RP0=1, select bank1
  3513  04AA  1303               	bcf	3,6	;RP1=0, select bank1
  3514  04AB  0841               	movf	(sprintf@fval+2)^(0+128),w
  3515  04AC  1283               	bcf	3,5	;RP0=0, select bank0
  3516  04AD  1303               	bcf	3,6	;RP1=0, select bank0
  3517  04AE  00D3               	movwf	___fltol@f1+2
  3518  04AF  1683               	bsf	3,5	;RP0=1, select bank1
  3519  04B0  1303               	bcf	3,6	;RP1=0, select bank1
  3520  04B1  0840               	movf	(sprintf@fval+1)^(0+128),w
  3521  04B2  1283               	bcf	3,5	;RP0=0, select bank0
  3522  04B3  1303               	bcf	3,6	;RP1=0, select bank0
  3523  04B4  00D2               	movwf	___fltol@f1+1
  3524  04B5  1683               	bsf	3,5	;RP0=1, select bank1
  3525  04B6  1303               	bcf	3,6	;RP1=0, select bank1
  3526  04B7  083F               	movf	sprintf@fval^(0+128),w
  3527  04B8  1283               	bcf	3,5	;RP0=0, select bank0
  3528  04B9  1303               	bcf	3,6	;RP1=0, select bank0
  3529  04BA  00D1               	movwf	___fltol@f1
  3530  04BB  160A  158A  256B  120A  118A  	fcall	___fltol
  3531  04C0  1283               	bcf	3,5	;RP0=0, select bank0
  3532  04C1  1303               	bcf	3,6	;RP1=0, select bank0
  3533  04C2  0854               	movf	?___fltol+3,w
  3534  04C3  1683               	bsf	3,5	;RP0=1, select bank1
  3535  04C4  1303               	bcf	3,6	;RP1=0, select bank1
  3536  04C5  00B6               	movwf	(sprintf@val+3)^(0+128)
  3537  04C6  1283               	bcf	3,5	;RP0=0, select bank0
  3538  04C7  1303               	bcf	3,6	;RP1=0, select bank0
  3539  04C8  0853               	movf	?___fltol+2,w
  3540  04C9  1683               	bsf	3,5	;RP0=1, select bank1
  3541  04CA  1303               	bcf	3,6	;RP1=0, select bank1
  3542  04CB  00B5               	movwf	(sprintf@val+2)^(0+128)
  3543  04CC  1283               	bcf	3,5	;RP0=0, select bank0
  3544  04CD  1303               	bcf	3,6	;RP1=0, select bank0
  3545  04CE  0852               	movf	?___fltol+1,w
  3546  04CF  1683               	bsf	3,5	;RP0=1, select bank1
  3547  04D0  1303               	bcf	3,6	;RP1=0, select bank1
  3548  04D1  00B4               	movwf	(sprintf@val+1)^(0+128)
  3549  04D2  1283               	bcf	3,5	;RP0=0, select bank0
  3550  04D3  1303               	bcf	3,6	;RP1=0, select bank0
  3551  04D4  0851               	movf	?___fltol,w
  3552  04D5  1683               	bsf	3,5	;RP0=1, select bank1
  3553  04D6  1303               	bcf	3,6	;RP1=0, select bank1
  3554  04D7  00B3               	movwf	sprintf@val^(0+128)
  3555  04D8                     l3273:
  3556                           
  3557                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  3558  04D8  0836               	movf	(sprintf@val+3)^(0+128),w
  3559  04D9  00F3               	movwf	___xxtofl@val+3
  3560  04DA  0835               	movf	(sprintf@val+2)^(0+128),w
  3561  04DB  00F2               	movwf	___xxtofl@val+2
  3562  04DC  0834               	movf	(sprintf@val+1)^(0+128),w
  3563  04DD  00F1               	movwf	___xxtofl@val+1
  3564  04DE  0833               	movf	sprintf@val^(0+128),w
  3565  04DF  00F0               	movwf	___xxtofl@val
  3566  04E0  3000               	movlw	0
  3567  04E1  160A  158A  2689  120A  118A  	fcall	___xxtofl
  3568  04E6  0873               	movf	?___xxtofl+3,w
  3569  04E7  1283               	bcf	3,5	;RP0=0, select bank0
  3570  04E8  1303               	bcf	3,6	;RP1=0, select bank0
  3571  04E9  00E9               	movwf	___flsub@a+3
  3572  04EA  0872               	movf	?___xxtofl+2,w
  3573  04EB  00E8               	movwf	___flsub@a+2
  3574  04EC  0871               	movf	?___xxtofl+1,w
  3575  04ED  00E7               	movwf	___flsub@a+1
  3576  04EE  0870               	movf	?___xxtofl,w
  3577  04EF  00E6               	movwf	___flsub@a
  3578  04F0  1683               	bsf	3,5	;RP0=1, select bank1
  3579  04F1  1303               	bcf	3,6	;RP1=0, select bank1
  3580  04F2  0842               	movf	(sprintf@fval+3)^(0+128),w
  3581  04F3  1283               	bcf	3,5	;RP0=0, select bank0
  3582  04F4  1303               	bcf	3,6	;RP1=0, select bank0
  3583  04F5  00ED               	movwf	___flsub@b+3
  3584  04F6  1683               	bsf	3,5	;RP0=1, select bank1
  3585  04F7  1303               	bcf	3,6	;RP1=0, select bank1
  3586  04F8  0841               	movf	(sprintf@fval+2)^(0+128),w
  3587  04F9  1283               	bcf	3,5	;RP0=0, select bank0
  3588  04FA  1303               	bcf	3,6	;RP1=0, select bank0
  3589  04FB  00EC               	movwf	___flsub@b+2
  3590  04FC  1683               	bsf	3,5	;RP0=1, select bank1
  3591  04FD  1303               	bcf	3,6	;RP1=0, select bank1
  3592  04FE  0840               	movf	(sprintf@fval+1)^(0+128),w
  3593  04FF  1283               	bcf	3,5	;RP0=0, select bank0
  3594  0500  1303               	bcf	3,6	;RP1=0, select bank0
  3595  0501  00EB               	movwf	___flsub@b+1
  3596  0502  1683               	bsf	3,5	;RP0=1, select bank1
  3597  0503  1303               	bcf	3,6	;RP1=0, select bank1
  3598  0504  083F               	movf	sprintf@fval^(0+128),w
  3599  0505  1283               	bcf	3,5	;RP0=0, select bank0
  3600  0506  1303               	bcf	3,6	;RP1=0, select bank0
  3601  0507  00EA               	movwf	___flsub@b
  3602  0508  160A  158A  218B  120A  118A  	fcall	___flsub
  3603  050D  1283               	bcf	3,5	;RP0=0, select bank0
  3604  050E  1303               	bcf	3,6	;RP1=0, select bank0
  3605  050F  0869               	movf	?___flsub+3,w
  3606  0510  1683               	bsf	3,5	;RP0=1, select bank1
  3607  0511  1303               	bcf	3,6	;RP1=0, select bank1
  3608  0512  00C2               	movwf	(sprintf@fval+3)^(0+128)
  3609  0513  1283               	bcf	3,5	;RP0=0, select bank0
  3610  0514  1303               	bcf	3,6	;RP1=0, select bank0
  3611  0515  0868               	movf	?___flsub+2,w
  3612  0516  1683               	bsf	3,5	;RP0=1, select bank1
  3613  0517  1303               	bcf	3,6	;RP1=0, select bank1
  3614  0518  00C1               	movwf	(sprintf@fval+2)^(0+128)
  3615  0519  1283               	bcf	3,5	;RP0=0, select bank0
  3616  051A  1303               	bcf	3,6	;RP1=0, select bank0
  3617  051B  0867               	movf	?___flsub+1,w
  3618  051C  1683               	bsf	3,5	;RP0=1, select bank1
  3619  051D  1303               	bcf	3,6	;RP1=0, select bank1
  3620  051E  00C0               	movwf	(sprintf@fval+1)^(0+128)
  3621  051F  1283               	bcf	3,5	;RP0=0, select bank0
  3622  0520  1303               	bcf	3,6	;RP1=0, select bank0
  3623  0521  0866               	movf	?___flsub,w
  3624  0522  1683               	bsf	3,5	;RP0=1, select bank1
  3625  0523  1303               	bcf	3,6	;RP1=0, select bank1
  3626  0524  00BF               	movwf	sprintf@fval^(0+128)
  3627  0525                     l3275:
  3628                           
  3629                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  3630  0525  01B7               	clrf	sprintf@eexp^(0+128)
  3631  0526  01B8               	clrf	(sprintf@eexp+1)^(0+128)
  3632  0527                     l3277:
  3633                           
  3634                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3635  0527  01C3               	clrf	sprintf@c^(0+128)
  3636  0528  0AC3               	incf	sprintf@c^(0+128),f
  3637  0529                     l3283:
  3638                           
  3639                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  3640  0529  0843               	movf	sprintf@c^(0+128),w
  3641  052A  00A7               	movwf	??_sprintf^(0+128)
  3642  052B  3001               	movlw	1
  3643  052C                     u5245:
  3644  052C  1003               	clrc
  3645  052D  0DA7               	rlf	??_sprintf^(0+128),f
  3646  052E  3EFF               	addlw	-1
  3647  052F  1D03               	skipz
  3648  0530  2D2C               	goto	u5245
  3649  0531  1003               	clrc
  3650  0532  0D27               	rlf	??_sprintf^(0+128),w
  3651  0533  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3652  0534  0084               	movwf	4
  3653  0535  120A  118A  200D  120A  118A  	fcall	stringdir
  3654  053A  00A8               	movwf	(??_sprintf+1)^(0+128)
  3655  053B  120A  118A  200D  120A  118A  	fcall	stringdir
  3656  0540  00A9               	movwf	((??_sprintf+1)^(0+128)+1)
  3657  0541  120A  118A  200D  120A  118A  	fcall	stringdir
  3658  0546  00AA               	movwf	((??_sprintf+1)^(0+128)+2)
  3659  0547  120A  118A  200D  120A  118A  	fcall	stringdir
  3660  054C  00AB               	movwf	((??_sprintf+1)^(0+128)+3)
  3661  054D  082B               	movf	(??_sprintf+4)^(0+128),w
  3662  054E  0236               	subwf	(sprintf@val+3)^(0+128),w
  3663  054F  1D03               	skipz
  3664  0550  2D5B               	goto	u5255
  3665  0551  082A               	movf	(??_sprintf+3)^(0+128),w
  3666  0552  0235               	subwf	(sprintf@val+2)^(0+128),w
  3667  0553  1D03               	skipz
  3668  0554  2D5B               	goto	u5255
  3669  0555  0829               	movf	(??_sprintf+2)^(0+128),w
  3670  0556  0234               	subwf	(sprintf@val+1)^(0+128),w
  3671  0557  1D03               	skipz
  3672  0558  2D5B               	goto	u5255
  3673  0559  0828               	movf	(??_sprintf+1)^(0+128),w
  3674  055A  0233               	subwf	sprintf@val^(0+128),w
  3675  055B                     u5255:
  3676  055B  1803               	skipnc
  3677  055C  2D5E               	goto	u5251
  3678  055D  2D5F               	goto	u5250
  3679  055E                     u5251:
  3680  055E  2D60               	goto	l3287
  3681  055F                     u5250:
  3682  055F  2D6A               	goto	l3289
  3683  0560                     l3287:
  3684  0560  3001               	movlw	1
  3685  0561  00A7               	movwf	??_sprintf^(0+128)
  3686  0562  0827               	movf	??_sprintf^(0+128),w
  3687  0563  07C3               	addwf	sprintf@c^(0+128),f
  3688  0564  300A               	movlw	10
  3689  0565  0643               	xorwf	sprintf@c^(0+128),w
  3690  0566  1D03               	btfss	3,2
  3691  0567  2D69               	goto	u5261
  3692  0568  2D6A               	goto	u5260
  3693  0569                     u5261:
  3694  0569  2D29               	goto	l3283
  3695  056A                     u5260:
  3696  056A                     l3289:
  3697                           
  3698                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1201:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag & 0x0
      +                          3)
  3699  056A  3003               	movlw	3
  3700  056B  0531               	andwf	sprintf@flag^(0+128),w
  3701  056C  00A7               	movwf	??_sprintf^(0+128)
  3702  056D  3000               	movlw	0
  3703  056E  0532               	andwf	(sprintf@flag+1)^(0+128),w
  3704  056F  00A8               	movwf	(??_sprintf+1)^(0+128)
  3705  0570  0827               	movf	??_sprintf^(0+128),w
  3706  0571  0428               	iorwf	(??_sprintf^(0+128)+1),w
  3707  0572  1903               	btfsc	3,2
  3708  0573  2D75               	goto	u5271
  3709  0574  2D76               	goto	u5270
  3710  0575                     u5271:
  3711  0575  2DF0               	goto	l3303
  3712  0576                     u5270:
  3713  0576                     l3291:
  3714                           
  3715                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  3716  0576  302D               	movlw	45
  3717  0577  00A7               	movwf	??_sprintf^(0+128)
  3718  0578  0820               	movf	sprintf@sp^(0+128),w
  3719  0579  0084               	movwf	4
  3720  057A  1783               	bsf	3,7
  3721  057B  1C21               	btfss	(sprintf@sp+1)^(0+128),0
  3722  057C  1383               	bcf	3,7
  3723  057D  0827               	movf	??_sprintf^(0+128),w
  3724  057E  0080               	movwf	0
  3725  057F                     l3293:
  3726  057F  3001               	movlw	1
  3727  0580  07A0               	addwf	sprintf@sp^(0+128),f
  3728  0581  1803               	skipnc
  3729  0582  0AA1               	incf	(sprintf@sp+1)^(0+128),f
  3730  0583  3000               	movlw	0
  3731  0584  07A1               	addwf	(sprintf@sp+1)^(0+128),f
  3732  0585  2DF0               	goto	l3303
  3733  0586                     l3295:
  3734                           
  3735                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  3736  0586  0843               	movf	sprintf@c^(0+128),w
  3737  0587  00A7               	movwf	??_sprintf^(0+128)
  3738  0588  3001               	movlw	1
  3739  0589                     u5285:
  3740  0589  1003               	clrc
  3741  058A  0DA7               	rlf	??_sprintf^(0+128),f
  3742  058B  3EFF               	addlw	-1
  3743  058C  1D03               	skipz
  3744  058D  2D89               	goto	u5285
  3745  058E  1003               	clrc
  3746  058F  0D27               	rlf	??_sprintf^(0+128),w
  3747  0590  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3748  0591  0084               	movwf	4
  3749  0592  120A  118A  200D  120A  118A  	fcall	stringdir
  3750  0597  00F0               	movwf	___lldiv@divisor
  3751  0598  120A  118A  200D  120A  118A  	fcall	stringdir
  3752  059D  00F1               	movwf	___lldiv@divisor+1
  3753  059E  120A  118A  200D  120A  118A  	fcall	stringdir
  3754  05A3  00F2               	movwf	___lldiv@divisor+2
  3755  05A4  120A  118A  200D  120A  118A  	fcall	stringdir
  3756  05A9  00F3               	movwf	___lldiv@divisor+3
  3757  05AA  0836               	movf	(sprintf@val+3)^(0+128),w
  3758  05AB  00F7               	movwf	___lldiv@dividend+3
  3759  05AC  0835               	movf	(sprintf@val+2)^(0+128),w
  3760  05AD  00F6               	movwf	___lldiv@dividend+2
  3761  05AE  0834               	movf	(sprintf@val+1)^(0+128),w
  3762  05AF  00F5               	movwf	___lldiv@dividend+1
  3763  05B0  0833               	movf	sprintf@val^(0+128),w
  3764  05B1  00F4               	movwf	___lldiv@dividend
  3765  05B2  160A  158A  249C  120A  118A  	fcall	___lldiv
  3766  05B7  0873               	movf	?___lldiv+3,w
  3767  05B8  1683               	bsf	3,5	;RP0=1, select bank1
  3768  05B9  1303               	bcf	3,6	;RP1=0, select bank1
  3769  05BA  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  3770  05BB  0872               	movf	?___lldiv+2,w
  3771  05BC  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  3772  05BD  0871               	movf	?___lldiv+1,w
  3773  05BE  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  3774  05BF  0870               	movf	?___lldiv,w
  3775  05C0  00B9               	movwf	sprintf@tmpval^(0+128)
  3776  05C1                     l3297:
  3777                           
  3778                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  3779  05C1  3000               	movlw	0
  3780  05C2  00F3               	movwf	___llmod@divisor+3
  3781  05C3  3000               	movlw	0
  3782  05C4  00F2               	movwf	___llmod@divisor+2
  3783  05C5  3000               	movlw	0
  3784  05C6  00F1               	movwf	___llmod@divisor+1
  3785  05C7  300A               	movlw	10
  3786  05C8  00F0               	movwf	___llmod@divisor
  3787  05C9  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  3788  05CA  00F7               	movwf	___llmod@dividend+3
  3789  05CB  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  3790  05CC  00F6               	movwf	___llmod@dividend+2
  3791  05CD  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  3792  05CE  00F5               	movwf	___llmod@dividend+1
  3793  05CF  0839               	movf	sprintf@tmpval^(0+128),w
  3794  05D0  00F4               	movwf	___llmod@dividend
  3795  05D1  160A  158A  2392  120A  118A  	fcall	___llmod
  3796  05D6  0873               	movf	?___llmod+3,w
  3797  05D7  1683               	bsf	3,5	;RP0=1, select bank1
  3798  05D8  1303               	bcf	3,6	;RP1=0, select bank1
  3799  05D9  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  3800  05DA  0872               	movf	?___llmod+2,w
  3801  05DB  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  3802  05DC  0871               	movf	?___llmod+1,w
  3803  05DD  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  3804  05DE  0870               	movf	?___llmod,w
  3805  05DF  00B9               	movwf	sprintf@tmpval^(0+128)
  3806  05E0                     l3299:
  3807                           
  3808                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  3809  05E0  0839               	movf	sprintf@tmpval^(0+128),w
  3810  05E1  3E30               	addlw	48
  3811  05E2  00A7               	movwf	??_sprintf^(0+128)
  3812  05E3  0820               	movf	sprintf@sp^(0+128),w
  3813  05E4  0084               	movwf	4
  3814  05E5  1783               	bsf	3,7
  3815  05E6  1C21               	btfss	(sprintf@sp+1)^(0+128),0
  3816  05E7  1383               	bcf	3,7
  3817  05E8  0827               	movf	??_sprintf^(0+128),w
  3818  05E9  0080               	movwf	0
  3819  05EA                     l3301:
  3820  05EA  3001               	movlw	1
  3821  05EB  07A0               	addwf	sprintf@sp^(0+128),f
  3822  05EC  1803               	skipnc
  3823  05ED  0AA1               	incf	(sprintf@sp+1)^(0+128),f
  3824  05EE  3000               	movlw	0
  3825  05EF  07A1               	addwf	(sprintf@sp+1)^(0+128),f
  3826  05F0                     l3303:
  3827                           
  3828                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  3829  05F0  3001               	movlw	1
  3830  05F1  02C3               	subwf	sprintf@c^(0+128),f
  3831  05F2  0A43               	incf	sprintf@c^(0+128),w
  3832  05F3  1D03               	btfss	3,2
  3833  05F4  2DF6               	goto	u5291
  3834  05F5  2DF7               	goto	u5290
  3835  05F6                     u5291:
  3836  05F6  2D86               	goto	l3295
  3837  05F7                     u5290:
  3838  05F7  2E0F               	goto	l3311
  3839  05F8                     l3305:
  3840                           
  3841                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  3842  05F8  3030               	movlw	48
  3843  05F9  1683               	bsf	3,5	;RP0=1, select bank1
  3844  05FA  1303               	bcf	3,6	;RP1=0, select bank1
  3845  05FB  00A7               	movwf	??_sprintf^(0+128)
  3846  05FC  0820               	movf	sprintf@sp^(0+128),w
  3847  05FD  0084               	movwf	4
  3848  05FE  1783               	bsf	3,7
  3849  05FF  1C21               	btfss	(sprintf@sp+1)^(0+128),0
  3850  0600  1383               	bcf	3,7
  3851  0601  0827               	movf	??_sprintf^(0+128),w
  3852  0602  0080               	movwf	0
  3853  0603                     l3307:
  3854  0603  3001               	movlw	1
  3855  0604  07A0               	addwf	sprintf@sp^(0+128),f
  3856  0605  1803               	skipnc
  3857  0606  0AA1               	incf	(sprintf@sp+1)^(0+128),f
  3858  0607  3000               	movlw	0
  3859  0608  07A1               	addwf	(sprintf@sp+1)^(0+128),f
  3860  0609                     l3309:
  3861                           
  3862                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  3863  0609  30FF               	movlw	255
  3864  060A  07B7               	addwf	sprintf@eexp^(0+128),f
  3865  060B  1803               	skipnc
  3866  060C  0AB8               	incf	(sprintf@eexp+1)^(0+128),f
  3867  060D  30FF               	movlw	255
  3868  060E  07B8               	addwf	(sprintf@eexp+1)^(0+128),f
  3869  060F                     l3311:
  3870                           
  3871                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  3872  060F  0838               	movf	(sprintf@eexp+1)^(0+128),w
  3873  0610  3A80               	xorlw	128
  3874  0611  00FF               	movwf	btemp+1
  3875  0612  3080               	movlw	128
  3876  0613  027F               	subwf	btemp+1,w
  3877  0614  1D03               	skipz
  3878  0615  2E18               	goto	u5305
  3879  0616  3001               	movlw	1
  3880  0617  0237               	subwf	sprintf@eexp^(0+128),w
  3881  0618                     u5305:
  3882  0618  1803               	skipnc
  3883  0619  2E1B               	goto	u5301
  3884  061A  2E1C               	goto	u5300
  3885  061B                     u5301:
  3886  061B  2DF8               	goto	l3305
  3887  061C                     u5300:
  3888  061C                     l3313:
  3889                           
  3890                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3891  061C  1683               	bsf	3,5	;RP0=1, select bank1
  3892  061D  1303               	bcf	3,6	;RP1=0, select bank1
  3893  061E  083E               	movf	(sprintf@prec+1)^(0+128),w
  3894  061F  3A80               	xorlw	128
  3895  0620  00FF               	movwf	btemp+1
  3896  0621  3080               	movlw	128
  3897  0622  027F               	subwf	btemp+1,w
  3898  0623  1D03               	skipz
  3899  0624  2E27               	goto	u5315
  3900  0625  3009               	movlw	9
  3901  0626  023D               	subwf	sprintf@prec^(0+128),w
  3902  0627                     u5315:
  3903  0627  1C03               	skipc
  3904  0628  2E2A               	goto	u5311
  3905  0629  2E2B               	goto	u5310
  3906  062A                     u5311:
  3907  062A  2E32               	goto	l3317
  3908  062B                     u5310:
  3909  062B                     l3315:
  3910                           
  3911                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  3912  062B  3008               	movlw	8
  3913  062C  1683               	bsf	3,5	;RP0=1, select bank1
  3914  062D  1303               	bcf	3,6	;RP1=0, select bank1
  3915  062E  00A7               	movwf	??_sprintf^(0+128)
  3916  062F  0827               	movf	??_sprintf^(0+128),w
  3917  0630  00C3               	movwf	sprintf@c^(0+128)
  3918  0631  2E38               	goto	l270
  3919  0632                     l3317:
  3920                           
  3921                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  3922  0632  1683               	bsf	3,5	;RP0=1, select bank1
  3923  0633  1303               	bcf	3,6	;RP1=0, select bank1
  3924  0634  083D               	movf	sprintf@prec^(0+128),w
  3925  0635  00A7               	movwf	??_sprintf^(0+128)
  3926  0636  0827               	movf	??_sprintf^(0+128),w
  3927  0637  00C3               	movwf	sprintf@c^(0+128)
  3928  0638                     l270:
  3929                           
  3930                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  3931  0638  0843               	movf	sprintf@c^(0+128),w
  3932  0639  00A7               	movwf	??_sprintf^(0+128)
  3933  063A  01A8               	clrf	(??_sprintf^(0+128)+1)
  3934  063B  0827               	movf	??_sprintf^(0+128),w
  3935  063C  02BD               	subwf	sprintf@prec^(0+128),f
  3936  063D  0828               	movf	(??_sprintf+1)^(0+128),w
  3937  063E  1C03               	skipc
  3938  063F  03BE               	decf	(sprintf@prec+1)^(0+128),f
  3939  0640  02BE               	subwf	(sprintf@prec+1)^(0+128),f
  3940  0641                     l3319:
  3941                           
  3942                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  3943  0641  0843               	movf	sprintf@c^(0+128),w
  3944  0642  1903               	btfsc	3,2
  3945  0643  2E45               	goto	u5321
  3946  0644  2E46               	goto	u5320
  3947  0645                     u5321:
  3948  0645  2E55               	goto	l3325
  3949  0646                     u5320:
  3950  0646                     l3321:
  3951                           
  3952                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  3953  0646  302E               	movlw	46
  3954  0647  00A7               	movwf	??_sprintf^(0+128)
  3955  0648  0820               	movf	sprintf@sp^(0+128),w
  3956  0649  0084               	movwf	4
  3957  064A  1783               	bsf	3,7
  3958  064B  1C21               	btfss	(sprintf@sp+1)^(0+128),0
  3959  064C  1383               	bcf	3,7
  3960  064D  0827               	movf	??_sprintf^(0+128),w
  3961  064E  0080               	movwf	0
  3962  064F                     l3323:
  3963  064F  3001               	movlw	1
  3964  0650  07A0               	addwf	sprintf@sp^(0+128),f
  3965  0651  1803               	skipnc
  3966  0652  0AA1               	incf	(sprintf@sp+1)^(0+128),f
  3967  0653  3000               	movlw	0
  3968  0654  07A1               	addwf	(sprintf@sp+1)^(0+128),f
  3969  0655                     l3325:
  3970                           
  3971                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3972  0655  0843               	movf	sprintf@c^(0+128),w
  3973  0656  160A  118A  24A1  120A  118A  	fcall	_scale
  3974  065B  1283               	bcf	3,5	;RP0=0, select bank0
  3975  065C  1303               	bcf	3,6	;RP1=0, select bank0
  3976  065D  0841               	movf	?_scale+3,w
  3977  065E  1683               	bsf	3,5	;RP0=1, select bank1
  3978  065F  1303               	bcf	3,6	;RP1=0, select bank1
  3979  0660  00AF               	movwf	(_sprintf$940+3)^(0+128)
  3980  0661  1283               	bcf	3,5	;RP0=0, select bank0
  3981  0662  1303               	bcf	3,6	;RP1=0, select bank0
  3982  0663  0840               	movf	?_scale+2,w
  3983  0664  1683               	bsf	3,5	;RP0=1, select bank1
  3984  0665  1303               	bcf	3,6	;RP1=0, select bank1
  3985  0666  00AE               	movwf	(_sprintf$940+2)^(0+128)
  3986  0667  1283               	bcf	3,5	;RP0=0, select bank0
  3987  0668  1303               	bcf	3,6	;RP1=0, select bank0
  3988  0669  083F               	movf	?_scale+1,w
  3989  066A  1683               	bsf	3,5	;RP0=1, select bank1
  3990  066B  1303               	bcf	3,6	;RP1=0, select bank1
  3991  066C  00AD               	movwf	(_sprintf$940+1)^(0+128)
  3992  066D  1283               	bcf	3,5	;RP0=0, select bank0
  3993  066E  1303               	bcf	3,6	;RP1=0, select bank0
  3994  066F  083E               	movf	?_scale,w
  3995  0670  1683               	bsf	3,5	;RP0=1, select bank1
  3996  0671  1303               	bcf	3,6	;RP1=0, select bank1
  3997  0672  00AC               	movwf	_sprintf$940^(0+128)
  3998                           
  3999                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  4000  0673  082F               	movf	(_sprintf$940+3)^(0+128),w
  4001  0674  1283               	bcf	3,5	;RP0=0, select bank0
  4002  0675  1303               	bcf	3,6	;RP1=0, select bank0
  4003  0676  00AB               	movwf	___flmul@a+3
  4004  0677  1683               	bsf	3,5	;RP0=1, select bank1
  4005  0678  1303               	bcf	3,6	;RP1=0, select bank1
  4006  0679  082E               	movf	(_sprintf$940+2)^(0+128),w
  4007  067A  1283               	bcf	3,5	;RP0=0, select bank0
  4008  067B  1303               	bcf	3,6	;RP1=0, select bank0
  4009  067C  00AA               	movwf	___flmul@a+2
  4010  067D  1683               	bsf	3,5	;RP0=1, select bank1
  4011  067E  1303               	bcf	3,6	;RP1=0, select bank1
  4012  067F  082D               	movf	(_sprintf$940+1)^(0+128),w
  4013  0680  1283               	bcf	3,5	;RP0=0, select bank0
  4014  0681  1303               	bcf	3,6	;RP1=0, select bank0
  4015  0682  00A9               	movwf	___flmul@a+1
  4016  0683  1683               	bsf	3,5	;RP0=1, select bank1
  4017  0684  1303               	bcf	3,6	;RP1=0, select bank1
  4018  0685  082C               	movf	_sprintf$940^(0+128),w
  4019  0686  1283               	bcf	3,5	;RP0=0, select bank0
  4020  0687  1303               	bcf	3,6	;RP1=0, select bank0
  4021  0688  00A8               	movwf	___flmul@a
  4022  0689  1683               	bsf	3,5	;RP0=1, select bank1
  4023  068A  1303               	bcf	3,6	;RP1=0, select bank1
  4024  068B  0842               	movf	(sprintf@fval+3)^(0+128),w
  4025  068C  1283               	bcf	3,5	;RP0=0, select bank0
  4026  068D  1303               	bcf	3,6	;RP1=0, select bank0
  4027  068E  00A7               	movwf	___flmul@b+3
  4028  068F  1683               	bsf	3,5	;RP0=1, select bank1
  4029  0690  1303               	bcf	3,6	;RP1=0, select bank1
  4030  0691  0841               	movf	(sprintf@fval+2)^(0+128),w
  4031  0692  1283               	bcf	3,5	;RP0=0, select bank0
  4032  0693  1303               	bcf	3,6	;RP1=0, select bank0
  4033  0694  00A6               	movwf	___flmul@b+2
  4034  0695  1683               	bsf	3,5	;RP0=1, select bank1
  4035  0696  1303               	bcf	3,6	;RP1=0, select bank1
  4036  0697  0840               	movf	(sprintf@fval+1)^(0+128),w
  4037  0698  1283               	bcf	3,5	;RP0=0, select bank0
  4038  0699  1303               	bcf	3,6	;RP1=0, select bank0
  4039  069A  00A5               	movwf	___flmul@b+1
  4040  069B  1683               	bsf	3,5	;RP0=1, select bank1
  4041  069C  1303               	bcf	3,6	;RP1=0, select bank1
  4042  069D  083F               	movf	sprintf@fval^(0+128),w
  4043  069E  1283               	bcf	3,5	;RP0=0, select bank0
  4044  069F  1303               	bcf	3,6	;RP1=0, select bank0
  4045  06A0  00A4               	movwf	___flmul@b
  4046  06A1  120A  158A  2020  120A  118A  	fcall	___flmul
  4047  06A6  1283               	bcf	3,5	;RP0=0, select bank0
  4048  06A7  1303               	bcf	3,6	;RP1=0, select bank0
  4049  06A8  0827               	movf	?___flmul+3,w
  4050  06A9  00D4               	movwf	___fltol@f1+3
  4051  06AA  0826               	movf	?___flmul+2,w
  4052  06AB  00D3               	movwf	___fltol@f1+2
  4053  06AC  0825               	movf	?___flmul+1,w
  4054  06AD  00D2               	movwf	___fltol@f1+1
  4055  06AE  0824               	movf	?___flmul,w
  4056  06AF  00D1               	movwf	___fltol@f1
  4057  06B0  160A  158A  256B  120A  118A  	fcall	___fltol
  4058  06B5  1283               	bcf	3,5	;RP0=0, select bank0
  4059  06B6  1303               	bcf	3,6	;RP1=0, select bank0
  4060  06B7  0854               	movf	?___fltol+3,w
  4061  06B8  1683               	bsf	3,5	;RP0=1, select bank1
  4062  06B9  1303               	bcf	3,6	;RP1=0, select bank1
  4063  06BA  00B6               	movwf	(sprintf@val+3)^(0+128)
  4064  06BB  1283               	bcf	3,5	;RP0=0, select bank0
  4065  06BC  1303               	bcf	3,6	;RP1=0, select bank0
  4066  06BD  0853               	movf	?___fltol+2,w
  4067  06BE  1683               	bsf	3,5	;RP0=1, select bank1
  4068  06BF  1303               	bcf	3,6	;RP1=0, select bank1
  4069  06C0  00B5               	movwf	(sprintf@val+2)^(0+128)
  4070  06C1  1283               	bcf	3,5	;RP0=0, select bank0
  4071  06C2  1303               	bcf	3,6	;RP1=0, select bank0
  4072  06C3  0852               	movf	?___fltol+1,w
  4073  06C4  1683               	bsf	3,5	;RP0=1, select bank1
  4074  06C5  1303               	bcf	3,6	;RP1=0, select bank1
  4075  06C6  00B4               	movwf	(sprintf@val+1)^(0+128)
  4076  06C7  1283               	bcf	3,5	;RP0=0, select bank0
  4077  06C8  1303               	bcf	3,6	;RP1=0, select bank0
  4078  06C9  0851               	movf	?___fltol,w
  4079  06CA  1683               	bsf	3,5	;RP0=1, select bank1
  4080  06CB  1303               	bcf	3,6	;RP1=0, select bank1
  4081  06CC  00B3               	movwf	sprintf@val^(0+128)
  4082                           
  4083                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  4084  06CD  2F73               	goto	l3337
  4085  06CE                     l3327:
  4086                           
  4087                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  4088  06CE  0843               	movf	sprintf@c^(0+128),w
  4089  06CF  00A7               	movwf	??_sprintf^(0+128)
  4090  06D0  3001               	movlw	1
  4091  06D1                     u5335:
  4092  06D1  1003               	clrc
  4093  06D2  0DA7               	rlf	??_sprintf^(0+128),f
  4094  06D3  3EFF               	addlw	-1
  4095  06D4  1D03               	skipz
  4096  06D5  2ED1               	goto	u5335
  4097  06D6  1003               	clrc
  4098  06D7  0D27               	rlf	??_sprintf^(0+128),w
  4099  06D8  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4100  06D9  0084               	movwf	4
  4101  06DA  120A  118A  200D  120A  118A  	fcall	stringdir
  4102  06DF  00F0               	movwf	___lldiv@divisor
  4103  06E0  120A  118A  200D  120A  118A  	fcall	stringdir
  4104  06E5  00F1               	movwf	___lldiv@divisor+1
  4105  06E6  120A  118A  200D  120A  118A  	fcall	stringdir
  4106  06EB  00F2               	movwf	___lldiv@divisor+2
  4107  06EC  120A  118A  200D  120A  118A  	fcall	stringdir
  4108  06F1  00F3               	movwf	___lldiv@divisor+3
  4109  06F2  0836               	movf	(sprintf@val+3)^(0+128),w
  4110  06F3  00F7               	movwf	___lldiv@dividend+3
  4111  06F4  0835               	movf	(sprintf@val+2)^(0+128),w
  4112  06F5  00F6               	movwf	___lldiv@dividend+2
  4113  06F6  0834               	movf	(sprintf@val+1)^(0+128),w
  4114  06F7  00F5               	movwf	___lldiv@dividend+1
  4115  06F8  0833               	movf	sprintf@val^(0+128),w
  4116  06F9  00F4               	movwf	___lldiv@dividend
  4117  06FA  160A  158A  249C  120A  118A  	fcall	___lldiv
  4118  06FF  0873               	movf	?___lldiv+3,w
  4119  0700  1683               	bsf	3,5	;RP0=1, select bank1
  4120  0701  1303               	bcf	3,6	;RP1=0, select bank1
  4121  0702  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  4122  0703  0872               	movf	?___lldiv+2,w
  4123  0704  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  4124  0705  0871               	movf	?___lldiv+1,w
  4125  0706  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  4126  0707  0870               	movf	?___lldiv,w
  4127  0708  00B9               	movwf	sprintf@tmpval^(0+128)
  4128  0709                     l3329:
  4129                           
  4130                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  4131  0709  3000               	movlw	0
  4132  070A  00F3               	movwf	___llmod@divisor+3
  4133  070B  3000               	movlw	0
  4134  070C  00F2               	movwf	___llmod@divisor+2
  4135  070D  3000               	movlw	0
  4136  070E  00F1               	movwf	___llmod@divisor+1
  4137  070F  300A               	movlw	10
  4138  0710  00F0               	movwf	___llmod@divisor
  4139  0711  083C               	movf	(sprintf@tmpval+3)^(0+128),w
  4140  0712  00F7               	movwf	___llmod@dividend+3
  4141  0713  083B               	movf	(sprintf@tmpval+2)^(0+128),w
  4142  0714  00F6               	movwf	___llmod@dividend+2
  4143  0715  083A               	movf	(sprintf@tmpval+1)^(0+128),w
  4144  0716  00F5               	movwf	___llmod@dividend+1
  4145  0717  0839               	movf	sprintf@tmpval^(0+128),w
  4146  0718  00F4               	movwf	___llmod@dividend
  4147  0719  160A  158A  2392  120A  118A  	fcall	___llmod
  4148  071E  0873               	movf	?___llmod+3,w
  4149  071F  1683               	bsf	3,5	;RP0=1, select bank1
  4150  0720  1303               	bcf	3,6	;RP1=0, select bank1
  4151  0721  00BC               	movwf	(sprintf@tmpval+3)^(0+128)
  4152  0722  0872               	movf	?___llmod+2,w
  4153  0723  00BB               	movwf	(sprintf@tmpval+2)^(0+128)
  4154  0724  0871               	movf	?___llmod+1,w
  4155  0725  00BA               	movwf	(sprintf@tmpval+1)^(0+128)
  4156  0726  0870               	movf	?___llmod,w
  4157  0727  00B9               	movwf	sprintf@tmpval^(0+128)
  4158  0728                     l3331:
  4159                           
  4160                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  4161  0728  0839               	movf	sprintf@tmpval^(0+128),w
  4162  0729  3E30               	addlw	48
  4163  072A  00A7               	movwf	??_sprintf^(0+128)
  4164  072B  0820               	movf	sprintf@sp^(0+128),w
  4165  072C  0084               	movwf	4
  4166  072D  1783               	bsf	3,7
  4167  072E  1C21               	btfss	(sprintf@sp+1)^(0+128),0
  4168  072F  1383               	bcf	3,7
  4169  0730  0827               	movf	??_sprintf^(0+128),w
  4170  0731  0080               	movwf	0
  4171  0732                     l3333:
  4172  0732  3001               	movlw	1
  4173  0733  07A0               	addwf	sprintf@sp^(0+128),f
  4174  0734  1803               	skipnc
  4175  0735  0AA1               	incf	(sprintf@sp+1)^(0+128),f
  4176  0736  3000               	movlw	0
  4177  0737  07A1               	addwf	(sprintf@sp+1)^(0+128),f
  4178  0738                     l3335:
  4179                           
  4180                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  4181  0738  0843               	movf	sprintf@c^(0+128),w
  4182  0739  00A7               	movwf	??_sprintf^(0+128)
  4183  073A  3001               	movlw	1
  4184  073B                     u5345:
  4185  073B  1003               	clrc
  4186  073C  0DA7               	rlf	??_sprintf^(0+128),f
  4187  073D  3EFF               	addlw	-1
  4188  073E  1D03               	skipz
  4189  073F  2F3B               	goto	u5345
  4190  0740  1003               	clrc
  4191  0741  0D27               	rlf	??_sprintf^(0+128),w
  4192  0742  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  4193  0743  0084               	movwf	4
  4194  0744  120A  118A  200D  120A  118A  	fcall	stringdir
  4195  0749  00F0               	movwf	___llmod@divisor
  4196  074A  120A  118A  200D  120A  118A  	fcall	stringdir
  4197  074F  00F1               	movwf	___llmod@divisor+1
  4198  0750  120A  118A  200D  120A  118A  	fcall	stringdir
  4199  0755  00F2               	movwf	___llmod@divisor+2
  4200  0756  120A  118A  200D  120A  118A  	fcall	stringdir
  4201  075B  00F3               	movwf	___llmod@divisor+3
  4202  075C  0836               	movf	(sprintf@val+3)^(0+128),w
  4203  075D  00F7               	movwf	___llmod@dividend+3
  4204  075E  0835               	movf	(sprintf@val+2)^(0+128),w
  4205  075F  00F6               	movwf	___llmod@dividend+2
  4206  0760  0834               	movf	(sprintf@val+1)^(0+128),w
  4207  0761  00F5               	movwf	___llmod@dividend+1
  4208  0762  0833               	movf	sprintf@val^(0+128),w
  4209  0763  00F4               	movwf	___llmod@dividend
  4210  0764  160A  158A  2392  120A  118A  	fcall	___llmod
  4211  0769  0873               	movf	?___llmod+3,w
  4212  076A  1683               	bsf	3,5	;RP0=1, select bank1
  4213  076B  1303               	bcf	3,6	;RP1=0, select bank1
  4214  076C  00B6               	movwf	(sprintf@val+3)^(0+128)
  4215  076D  0872               	movf	?___llmod+2,w
  4216  076E  00B5               	movwf	(sprintf@val+2)^(0+128)
  4217  076F  0871               	movf	?___llmod+1,w
  4218  0770  00B4               	movwf	(sprintf@val+1)^(0+128)
  4219  0771  0870               	movf	?___llmod,w
  4220  0772  00B3               	movwf	sprintf@val^(0+128)
  4221  0773                     l3337:
  4222                           
  4223                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  4224  0773  3001               	movlw	1
  4225  0774  02C3               	subwf	sprintf@c^(0+128),f
  4226  0775  0A43               	incf	sprintf@c^(0+128),w
  4227  0776  1D03               	btfss	3,2
  4228  0777  2F79               	goto	u5351
  4229  0778  2F7A               	goto	u5350
  4230  0779                     u5351:
  4231  0779  2ECE               	goto	l3327
  4232  077A                     u5350:
  4233  077A  2F90               	goto	l3345
  4234  077B                     l3339:
  4235                           
  4236                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  4237  077B  3030               	movlw	48
  4238  077C  00A7               	movwf	??_sprintf^(0+128)
  4239  077D  0820               	movf	sprintf@sp^(0+128),w
  4240  077E  0084               	movwf	4
  4241  077F  1783               	bsf	3,7
  4242  0780  1C21               	btfss	(sprintf@sp+1)^(0+128),0
  4243  0781  1383               	bcf	3,7
  4244  0782  0827               	movf	??_sprintf^(0+128),w
  4245  0783  0080               	movwf	0
  4246  0784                     l3341:
  4247  0784  3001               	movlw	1
  4248  0785  07A0               	addwf	sprintf@sp^(0+128),f
  4249  0786  1803               	skipnc
  4250  0787  0AA1               	incf	(sprintf@sp+1)^(0+128),f
  4251  0788  3000               	movlw	0
  4252  0789  07A1               	addwf	(sprintf@sp+1)^(0+128),f
  4253  078A                     l3343:
  4254                           
  4255                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  4256  078A  30FF               	movlw	255
  4257  078B  07BD               	addwf	sprintf@prec^(0+128),f
  4258  078C  1803               	skipnc
  4259  078D  0ABE               	incf	(sprintf@prec+1)^(0+128),f
  4260  078E  30FF               	movlw	255
  4261  078F  07BE               	addwf	(sprintf@prec+1)^(0+128),f
  4262  0790                     l3345:
  4263                           
  4264                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  4265  0790  083D               	movf	sprintf@prec^(0+128),w
  4266  0791  043E               	iorwf	(sprintf@prec+1)^(0+128),w
  4267  0792  1D03               	btfss	3,2
  4268  0793  2F95               	goto	u5361
  4269  0794  2F96               	goto	u5360
  4270  0795                     u5361:
  4271  0795  2F7B               	goto	l3339
  4272  0796                     u5360:
  4273  0796  2FE3               	goto	l3365
  4274  0797                     l3347:
  4275                           
  4276                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
  4277  0797  083D               	movf	sprintf@prec^(0+128),w
  4278  0798  043E               	iorwf	(sprintf@prec+1)^(0+128),w
  4279  0799  1D03               	btfss	3,2
  4280  079A  2F9C               	goto	u5371
  4281  079B  2F9D               	goto	u5370
  4282  079C                     u5371:
  4283  079C  2FAB               	goto	l278
  4284  079D                     u5370:
  4285  079D                     l3349:
  4286  079D  0836               	movf	(sprintf@val+3)^(0+128),w
  4287  079E  0435               	iorwf	(sprintf@val+2)^(0+128),w
  4288  079F  0434               	iorwf	(sprintf@val+1)^(0+128),w
  4289  07A0  0433               	iorwf	sprintf@val^(0+128),w
  4290  07A1  1D03               	skipz
  4291  07A2  2FA4               	goto	u5381
  4292  07A3  2FA5               	goto	u5380
  4293  07A4                     u5381:
  4294  07A4  2FAB               	goto	l278
  4295  07A5                     u5380:
  4296  07A5                     l3351:
  4297                           
  4298                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  4299  07A5  3001               	movlw	1
  4300  07A6  07BD               	addwf	sprintf@prec^(0+128),f
  4301  07A7  1803               	skipnc
  4302  07A8  0ABE               	incf	(sprintf@prec+1)^(0+128),f
  4303  07A9  3000               	movlw	0
  4304  07AA  07BE               	addwf	(sprintf@prec+1)^(0+128),f
  4305  07AB                     l278:
  4306                           
  4307                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  4308  07AB  083E               	movf	(sprintf@prec+1)^(0+128),w
  4309  07AC  3A80               	xorlw	128
  4310  07AD  3C80               	sublw	128
  4311  07AE  1D03               	skipz
  4312  07AF  2FB2               	goto	u5395
  4313  07B0  083D               	movf	sprintf@prec^(0+128),w
  4314  07B1  0243               	subwf	sprintf@c^(0+128),w
  4315  07B2                     u5395:
  4316  07B2  1803               	skipnc
  4317  07B3  2FB5               	goto	u5391
  4318  07B4  2FB6               	goto	u5390
  4319  07B5                     u5391:
  4320  07B5  2FB7               	goto	l3355
  4321  07B6                     u5390:
  4322  07B6                     l3353:
  4323  07B6  2FC6               	goto	l3359
  4324  07B7                     l3355:
  4325  07B7  1683               	bsf	3,5	;RP0=1, select bank1
  4326  07B8  1303               	bcf	3,6	;RP1=0, select bank1
  4327  07B9  083E               	movf	(sprintf@prec+1)^(0+128),w
  4328  07BA  3A80               	xorlw	128
  4329  07BB  00A7               	movwf	??_sprintf^(0+128)
  4330  07BC  3080               	movlw	128
  4331  07BD  0227               	subwf	??_sprintf^(0+128),w
  4332  07BE  1D03               	skipz
  4333  07BF  2FC2               	goto	u5405
  4334  07C0  0843               	movf	sprintf@c^(0+128),w
  4335  07C1  023D               	subwf	sprintf@prec^(0+128),w
  4336  07C2                     u5405:
  4337  07C2  1803               	skipnc
  4338  07C3  2FC5               	goto	u5401
  4339  07C4  2FC6               	goto	u5400
  4340  07C5                     u5401:
  4341  07C5  2FC6               	goto	l3359
  4342  07C6                     u5400:
  4343  07C6                     l3357:
  4344  07C6                     l3359:
  4345                           
  4346                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  4347  07C6  3003               	movlw	3
  4348  07C7  1683               	bsf	3,5	;RP0=1, select bank1
  4349  07C8  1303               	bcf	3,6	;RP1=0, select bank1
  4350  07C9  0531               	andwf	sprintf@flag^(0+128),w
  4351  07CA  00A7               	movwf	??_sprintf^(0+128)
  4352  07CB  3000               	movlw	0
  4353  07CC  0532               	andwf	(sprintf@flag+1)^(0+128),w
  4354  07CD  00A8               	movwf	(??_sprintf+1)^(0+128)
  4355  07CE  0827               	movf	??_sprintf^(0+128),w
  4356  07CF  0428               	iorwf	(??_sprintf^(0+128)+1),w
  4357  07D0  1903               	btfsc	3,2
  4358  07D1  2FD3               	goto	u5411
  4359  07D2  2FD4               	goto	u5410
  4360  07D3                     u5411:
  4361  07D3  2FE3               	goto	l3365
  4362  07D4                     u5410:
  4363  07D4                     l3361:
  4364                           
  4365                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  4366  07D4  302D               	movlw	45
  4367  07D5  00A7               	movwf	??_sprintf^(0+128)
  4368  07D6  0820               	movf	sprintf@sp^(0+128),w
  4369  07D7  0084               	movwf	4
  4370  07D8  1783               	bsf	3,7
  4371  07D9  1C21               	btfss	(sprintf@sp+1)^(0+128),0
  4372  07DA  1383               	bcf	3,7
  4373  07DB  0827               	movf	??_sprintf^(0+128),w
  4374  07DC  0080               	movwf	0
  4375  07DD                     l3363:
  4376  07DD  3001               	movlw	1
  4377  07DE  07A0               	addwf	sprintf@sp^(0+128),f
  4378  07DF  1803               	skipnc
  4379  07E0  0AA1               	incf	(sprintf@sp+1)^(0+128),f
  4380  07E1  3000               	movlw	0
  4381  07E2  07A1               	addwf	(sprintf@sp+1)^(0+128),f
  4382  07E3                     l3365:
  4383                           
  4384                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  4385  07E3  3001               	movlw	1
  4386  07E4  07A2               	addwf	sprintf@f^(0+128),f
  4387  07E5  30FF               	movlw	-1
  4388  07E6  0722               	addwf	sprintf@f^(0+128),w
  4389  07E7  0084               	movwf	4
  4390  07E8  120A  118A  200D  120A  118A  	fcall	stringdir
  4391  07ED  00A7               	movwf	??_sprintf^(0+128)
  4392  07EE  0827               	movf	??_sprintf^(0+128),w
  4393  07EF  00C3               	movwf	sprintf@c^(0+128)
  4394  07F0  0843               	movf	sprintf@c^(0+128),w
  4395  07F1  1D03               	btfss	3,2
  4396  07F2  2FF4               	goto	u5421
  4397  07F3  2FF5               	goto	u5420
  4398  07F4                     u5421:
  4399  07F4  2987               	goto	l3169
  4400  07F5                     u5420:
  4401  07F5                     l3367:
  4402                           
  4403                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  4404  07F5  0820               	movf	sprintf@sp^(0+128),w
  4405  07F6  0084               	movwf	4
  4406  07F7  1783               	bsf	3,7
  4407  07F8  1C21               	btfss	(sprintf@sp+1)^(0+128),0
  4408  07F9  1383               	bcf	3,7
  4409  07FA  0180               	clrf	0
  4410  07FB                     l284:
  4411  07FB  0008               	return
  4412  07FC                     __end_of_sprintf:
  4413                           
  4414                           	psect	text2
  4415  14A1                     __ptext2:	
  4416 ;; *************** function _scale *****************
  4417 ;; Defined at:
  4418 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  4419 ;; Parameters:    Size  Location     Type
  4420 ;;  scl             1    wreg     char 
  4421 ;; Auto vars:     Size  Location     Type
  4422 ;;  scl             1   48[BANK0 ] char 
  4423 ;; Return value:  Size  Location     Type
  4424 ;;                  4   30[BANK0 ] char 
  4425 ;; Registers used:
  4426 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4427 ;; Tracked objects:
  4428 ;;		On entry : 0/0
  4429 ;;		On exit  : 0/0
  4430 ;;		Unchanged: 0/0
  4431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4432 ;;      Params:         0       4       0       0       0
  4433 ;;      Locals:         0       5       0       0       0
  4434 ;;      Temps:          0      10       0       0       0
  4435 ;;      Totals:         0      19       0       0       0
  4436 ;;Total ram usage:       19 bytes
  4437 ;; Hardware stack levels used:    1
  4438 ;; Hardware stack levels required when called:    2
  4439 ;; This function calls:
  4440 ;;		___awdiv
  4441 ;;		___awmod
  4442 ;;		___flmul
  4443 ;; This function is called by:
  4444 ;;		_sprintf
  4445 ;; This function uses a non-reentrant model
  4446 ;;
  4447                           
  4448                           
  4449                           ;psect for function _scale
  4450  14A1                     _scale:
  4451                           
  4452                           ;incstack = 0
  4453                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4454                           ;scale@scl stored from wreg
  4455  14A1  1283               	bcf	3,5	;RP0=0, select bank0
  4456  14A2  1303               	bcf	3,6	;RP1=0, select bank0
  4457  14A3  00D0               	movwf	scale@scl
  4458  14A4                     l2787:
  4459                           
  4460                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  4461  14A4  1FD0               	btfss	scale@scl,7
  4462  14A5  2CA7               	goto	u4041
  4463  14A6  2CA8               	goto	u4040
  4464  14A7                     u4041:
  4465  14A7  2E55               	goto	l2809
  4466  14A8                     u4040:
  4467  14A8                     l2789:
  4468                           
  4469                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  4470  14A8  09D0               	comf	scale@scl,f
  4471  14A9  0AD0               	incf	scale@scl,f
  4472  14AA                     l2791:
  4473                           
  4474                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  4475  14AA  0850               	movf	scale@scl,w
  4476  14AB  3A80               	xorlw	128
  4477  14AC  3E12               	addlw	-238
  4478  14AD  1C03               	skipc
  4479  14AE  2CB0               	goto	u4051
  4480  14AF  2CB1               	goto	u4050
  4481  14B0                     u4051:
  4482  14B0  2D99               	goto	l2799
  4483  14B1                     u4050:
  4484  14B1                     l2793:
  4485                           
  4486                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4487  14B1  300A               	movlw	10
  4488  14B2  00F7               	movwf	___awdiv@divisor
  4489  14B3  3000               	movlw	0
  4490  14B4  00F8               	movwf	___awdiv@divisor+1
  4491  14B5  0850               	movf	scale@scl,w
  4492  14B6  00F2               	movwf	___awmod@dividend
  4493  14B7  01F3               	clrf	___awmod@dividend+1
  4494  14B8  1BF2               	btfsc	___awmod@dividend,7
  4495  14B9  03F3               	decf	___awmod@dividend+1,f
  4496  14BA  3064               	movlw	100
  4497  14BB  00F0               	movwf	___awmod@divisor
  4498  14BC  3000               	movlw	0
  4499  14BD  00F1               	movwf	___awmod@divisor+1
  4500  14BE  160A  158A  23E6  160A  118A  	fcall	___awmod
  4501  14C3  0871               	movf	?___awmod+1,w
  4502  14C4  00FA               	movwf	___awdiv@dividend+1
  4503  14C5  0870               	movf	?___awmod,w
  4504  14C6  00F9               	movwf	___awdiv@dividend
  4505  14C7  160A  158A  2502  160A  118A  	fcall	___awdiv
  4506  14CC  0877               	movf	?___awdiv,w
  4507  14CD  1283               	bcf	3,5	;RP0=0, select bank0
  4508  14CE  1303               	bcf	3,6	;RP1=0, select bank0
  4509  14CF  00C2               	movwf	??_scale
  4510  14D0  3001               	movlw	1
  4511  14D1                     u4065:
  4512  14D1  1003               	clrc
  4513  14D2  0DC2               	rlf	??_scale,f
  4514  14D3  3EFF               	addlw	-1
  4515  14D4  1D03               	skipz
  4516  14D5  2CD1               	goto	u4065
  4517  14D6  1003               	clrc
  4518  14D7  0D42               	rlf	??_scale,w
  4519  14D8  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4520  14D9  0084               	movwf	4
  4521  14DA  120A  118A  200D  160A  118A  	fcall	stringdir
  4522  14DF  00C3               	movwf	??_scale+1
  4523  14E0  120A  118A  200D  160A  118A  	fcall	stringdir
  4524  14E5  00C4               	movwf	??_scale+2
  4525  14E6  120A  118A  200D  160A  118A  	fcall	stringdir
  4526  14EB  00C5               	movwf	??_scale+3
  4527  14EC  120A  118A  200D  160A  118A  	fcall	stringdir
  4528  14F1  00C6               	movwf	??_scale+4
  4529  14F2  0846               	movf	??_scale+4,w
  4530  14F3  00A7               	movwf	___flmul@b+3
  4531  14F4  0845               	movf	??_scale+3,w
  4532  14F5  00A6               	movwf	___flmul@b+2
  4533  14F6  0844               	movf	??_scale+2,w
  4534  14F7  00A5               	movwf	___flmul@b+1
  4535  14F8  0843               	movf	??_scale+1,w
  4536  14F9  00A4               	movwf	___flmul@b
  4537  14FA  3064               	movlw	100
  4538  14FB  00F7               	movwf	___awdiv@divisor
  4539  14FC  3000               	movlw	0
  4540  14FD  00F8               	movwf	___awdiv@divisor+1
  4541  14FE  0850               	movf	scale@scl,w
  4542  14FF  00F9               	movwf	___awdiv@dividend
  4543  1500  01FA               	clrf	___awdiv@dividend+1
  4544  1501  1BF9               	btfsc	___awdiv@dividend,7
  4545  1502  03FA               	decf	___awdiv@dividend+1,f
  4546  1503  160A  158A  2502  160A  118A  	fcall	___awdiv
  4547  1508  0877               	movf	?___awdiv,w
  4548  1509  1283               	bcf	3,5	;RP0=0, select bank0
  4549  150A  1303               	bcf	3,6	;RP1=0, select bank0
  4550  150B  00C7               	movwf	??_scale+5
  4551  150C  3001               	movlw	1
  4552  150D                     u4075:
  4553  150D  1003               	clrc
  4554  150E  0DC7               	rlf	??_scale+5,f
  4555  150F  3EFF               	addlw	-1
  4556  1510  1D03               	skipz
  4557  1511  2D0D               	goto	u4075
  4558  1512  1003               	clrc
  4559  1513  0D47               	rlf	??_scale+5,w
  4560  1514  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4561  1515  0084               	movwf	4
  4562  1516  120A  118A  200D  160A  118A  	fcall	stringdir
  4563  151B  00C8               	movwf	??_scale+6
  4564  151C  120A  118A  200D  160A  118A  	fcall	stringdir
  4565  1521  00C9               	movwf	??_scale+7
  4566  1522  120A  118A  200D  160A  118A  	fcall	stringdir
  4567  1527  00CA               	movwf	??_scale+8
  4568  1528  120A  118A  200D  160A  118A  	fcall	stringdir
  4569  152D  00CB               	movwf	??_scale+9
  4570  152E  084B               	movf	??_scale+9,w
  4571  152F  00AB               	movwf	___flmul@a+3
  4572  1530  084A               	movf	??_scale+8,w
  4573  1531  00AA               	movwf	___flmul@a+2
  4574  1532  0849               	movf	??_scale+7,w
  4575  1533  00A9               	movwf	___flmul@a+1
  4576  1534  0848               	movf	??_scale+6,w
  4577  1535  00A8               	movwf	___flmul@a
  4578  1536  120A  158A  2020  160A  118A  	fcall	___flmul
  4579  153B  1283               	bcf	3,5	;RP0=0, select bank0
  4580  153C  1303               	bcf	3,6	;RP1=0, select bank0
  4581  153D  0827               	movf	?___flmul+3,w
  4582  153E  00CF               	movwf	_scale$939+3
  4583  153F  0826               	movf	?___flmul+2,w
  4584  1540  00CE               	movwf	_scale$939+2
  4585  1541  0825               	movf	?___flmul+1,w
  4586  1542  00CD               	movwf	_scale$939+1
  4587  1543  0824               	movf	?___flmul,w
  4588  1544  00CC               	movwf	_scale$939
  4589                           
  4590                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4591  1545  300A               	movlw	10
  4592  1546  00F0               	movwf	___awmod@divisor
  4593  1547  3000               	movlw	0
  4594  1548  00F1               	movwf	___awmod@divisor+1
  4595  1549  0850               	movf	scale@scl,w
  4596  154A  00F2               	movwf	___awmod@dividend
  4597  154B  01F3               	clrf	___awmod@dividend+1
  4598  154C  1BF2               	btfsc	___awmod@dividend,7
  4599  154D  03F3               	decf	___awmod@dividend+1,f
  4600  154E  160A  158A  23E6  160A  118A  	fcall	___awmod
  4601  1553  0870               	movf	?___awmod,w
  4602  1554  1283               	bcf	3,5	;RP0=0, select bank0
  4603  1555  1303               	bcf	3,6	;RP1=0, select bank0
  4604  1556  00C2               	movwf	??_scale
  4605  1557  3001               	movlw	1
  4606  1558                     u4085:
  4607  1558  1003               	clrc
  4608  1559  0DC2               	rlf	??_scale,f
  4609  155A  3EFF               	addlw	-1
  4610  155B  1D03               	skipz
  4611  155C  2D58               	goto	u4085
  4612  155D  1003               	clrc
  4613  155E  0D42               	rlf	??_scale,w
  4614  155F  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4615  1560  0084               	movwf	4
  4616  1561  120A  118A  200D  160A  118A  	fcall	stringdir
  4617  1566  00C3               	movwf	??_scale+1
  4618  1567  120A  118A  200D  160A  118A  	fcall	stringdir
  4619  156C  00C4               	movwf	??_scale+2
  4620  156D  120A  118A  200D  160A  118A  	fcall	stringdir
  4621  1572  00C5               	movwf	??_scale+3
  4622  1573  120A  118A  200D  160A  118A  	fcall	stringdir
  4623  1578  00C6               	movwf	??_scale+4
  4624  1579  0846               	movf	??_scale+4,w
  4625  157A  00A7               	movwf	___flmul@b+3
  4626  157B  0845               	movf	??_scale+3,w
  4627  157C  00A6               	movwf	___flmul@b+2
  4628  157D  0844               	movf	??_scale+2,w
  4629  157E  00A5               	movwf	___flmul@b+1
  4630  157F  0843               	movf	??_scale+1,w
  4631  1580  00A4               	movwf	___flmul@b
  4632  1581  084F               	movf	_scale$939+3,w
  4633  1582  00AB               	movwf	___flmul@a+3
  4634  1583  084E               	movf	_scale$939+2,w
  4635  1584  00AA               	movwf	___flmul@a+2
  4636  1585  084D               	movf	_scale$939+1,w
  4637  1586  00A9               	movwf	___flmul@a+1
  4638  1587  084C               	movf	_scale$939,w
  4639  1588  00A8               	movwf	___flmul@a
  4640  1589  120A  158A  2020  160A  118A  	fcall	___flmul
  4641  158E  1283               	bcf	3,5	;RP0=0, select bank0
  4642  158F  1303               	bcf	3,6	;RP1=0, select bank0
  4643  1590  0827               	movf	?___flmul+3,w
  4644  1591  00C1               	movwf	?_scale+3
  4645  1592  0826               	movf	?___flmul+2,w
  4646  1593  00C0               	movwf	?_scale+2
  4647  1594  0825               	movf	?___flmul+1,w
  4648  1595  00BF               	movwf	?_scale+1
  4649  1596  0824               	movf	?___flmul,w
  4650  1597  00BE               	movwf	?_scale
  4651  1598  2FFF               	goto	l218
  4652  1599                     l2799:
  4653  1599  0850               	movf	scale@scl,w
  4654  159A  3A80               	xorlw	128
  4655  159B  3E75               	addlw	-139
  4656  159C  1C03               	skipc
  4657  159D  2D9F               	goto	u4091
  4658  159E  2DA0               	goto	u4090
  4659  159F                     u4091:
  4660  159F  2E28               	goto	l2805
  4661  15A0                     u4090:
  4662  15A0                     l2801:
  4663                           
  4664                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  4665  15A0  300A               	movlw	10
  4666  15A1  00F0               	movwf	___awmod@divisor
  4667  15A2  3000               	movlw	0
  4668  15A3  00F1               	movwf	___awmod@divisor+1
  4669  15A4  0850               	movf	scale@scl,w
  4670  15A5  00F2               	movwf	___awmod@dividend
  4671  15A6  01F3               	clrf	___awmod@dividend+1
  4672  15A7  1BF2               	btfsc	___awmod@dividend,7
  4673  15A8  03F3               	decf	___awmod@dividend+1,f
  4674  15A9  160A  158A  23E6  160A  118A  	fcall	___awmod
  4675  15AE  0870               	movf	?___awmod,w
  4676  15AF  1283               	bcf	3,5	;RP0=0, select bank0
  4677  15B0  1303               	bcf	3,6	;RP1=0, select bank0
  4678  15B1  00C2               	movwf	??_scale
  4679  15B2  3001               	movlw	1
  4680  15B3                     u4105:
  4681  15B3  1003               	clrc
  4682  15B4  0DC2               	rlf	??_scale,f
  4683  15B5  3EFF               	addlw	-1
  4684  15B6  1D03               	skipz
  4685  15B7  2DB3               	goto	u4105
  4686  15B8  1003               	clrc
  4687  15B9  0D42               	rlf	??_scale,w
  4688  15BA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4689  15BB  0084               	movwf	4
  4690  15BC  120A  118A  200D  160A  118A  	fcall	stringdir
  4691  15C1  00C3               	movwf	??_scale+1
  4692  15C2  120A  118A  200D  160A  118A  	fcall	stringdir
  4693  15C7  00C4               	movwf	??_scale+2
  4694  15C8  120A  118A  200D  160A  118A  	fcall	stringdir
  4695  15CD  00C5               	movwf	??_scale+3
  4696  15CE  120A  118A  200D  160A  118A  	fcall	stringdir
  4697  15D3  00C6               	movwf	??_scale+4
  4698  15D4  0846               	movf	??_scale+4,w
  4699  15D5  00A7               	movwf	___flmul@b+3
  4700  15D6  0845               	movf	??_scale+3,w
  4701  15D7  00A6               	movwf	___flmul@b+2
  4702  15D8  0844               	movf	??_scale+2,w
  4703  15D9  00A5               	movwf	___flmul@b+1
  4704  15DA  0843               	movf	??_scale+1,w
  4705  15DB  00A4               	movwf	___flmul@b
  4706  15DC  300A               	movlw	10
  4707  15DD  00F7               	movwf	___awdiv@divisor
  4708  15DE  3000               	movlw	0
  4709  15DF  00F8               	movwf	___awdiv@divisor+1
  4710  15E0  0850               	movf	scale@scl,w
  4711  15E1  00F9               	movwf	___awdiv@dividend
  4712  15E2  01FA               	clrf	___awdiv@dividend+1
  4713  15E3  1BF9               	btfsc	___awdiv@dividend,7
  4714  15E4  03FA               	decf	___awdiv@dividend+1,f
  4715  15E5  160A  158A  2502  160A  118A  	fcall	___awdiv
  4716  15EA  0877               	movf	?___awdiv,w
  4717  15EB  1283               	bcf	3,5	;RP0=0, select bank0
  4718  15EC  1303               	bcf	3,6	;RP1=0, select bank0
  4719  15ED  00C7               	movwf	??_scale+5
  4720  15EE  3001               	movlw	1
  4721  15EF                     u4115:
  4722  15EF  1003               	clrc
  4723  15F0  0DC7               	rlf	??_scale+5,f
  4724  15F1  3EFF               	addlw	-1
  4725  15F2  1D03               	skipz
  4726  15F3  2DEF               	goto	u4115
  4727  15F4  1003               	clrc
  4728  15F5  0D47               	rlf	??_scale+5,w
  4729  15F6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4730  15F7  0084               	movwf	4
  4731  15F8  120A  118A  200D  160A  118A  	fcall	stringdir
  4732  15FD  00C8               	movwf	??_scale+6
  4733  15FE  120A  118A  200D  160A  118A  	fcall	stringdir
  4734  1603  00C9               	movwf	??_scale+7
  4735  1604  120A  118A  200D  160A  118A  	fcall	stringdir
  4736  1609  00CA               	movwf	??_scale+8
  4737  160A  120A  118A  200D  160A  118A  	fcall	stringdir
  4738  160F  00CB               	movwf	??_scale+9
  4739  1610  084B               	movf	??_scale+9,w
  4740  1611  00AB               	movwf	___flmul@a+3
  4741  1612  084A               	movf	??_scale+8,w
  4742  1613  00AA               	movwf	___flmul@a+2
  4743  1614  0849               	movf	??_scale+7,w
  4744  1615  00A9               	movwf	___flmul@a+1
  4745  1616  0848               	movf	??_scale+6,w
  4746  1617  00A8               	movwf	___flmul@a
  4747  1618  120A  158A  2020  160A  118A  	fcall	___flmul
  4748  161D  1283               	bcf	3,5	;RP0=0, select bank0
  4749  161E  1303               	bcf	3,6	;RP1=0, select bank0
  4750  161F  0827               	movf	?___flmul+3,w
  4751  1620  00C1               	movwf	?_scale+3
  4752  1621  0826               	movf	?___flmul+2,w
  4753  1622  00C0               	movwf	?_scale+2
  4754  1623  0825               	movf	?___flmul+1,w
  4755  1624  00BF               	movwf	?_scale+1
  4756  1625  0824               	movf	?___flmul,w
  4757  1626  00BE               	movwf	?_scale
  4758  1627  2FFF               	goto	l218
  4759  1628                     l2805:
  4760                           
  4761                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  4762  1628  0850               	movf	scale@scl,w
  4763  1629  00C2               	movwf	??_scale
  4764  162A  3001               	movlw	1
  4765  162B                     u4125:
  4766  162B  1003               	clrc
  4767  162C  0DC2               	rlf	??_scale,f
  4768  162D  3EFF               	addlw	-1
  4769  162E  1D03               	skipz
  4770  162F  2E2B               	goto	u4125
  4771  1630  1003               	clrc
  4772  1631  0D42               	rlf	??_scale,w
  4773  1632  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4774  1633  0084               	movwf	4
  4775  1634  120A  118A  200D  160A  118A  	fcall	stringdir
  4776  1639  00C3               	movwf	??_scale+1
  4777  163A  120A  118A  200D  160A  118A  	fcall	stringdir
  4778  163F  00C4               	movwf	??_scale+2
  4779  1640  120A  118A  200D  160A  118A  	fcall	stringdir
  4780  1645  00C5               	movwf	??_scale+3
  4781  1646  120A  118A  200D  160A  118A  	fcall	stringdir
  4782  164B  00C6               	movwf	??_scale+4
  4783  164C  0846               	movf	??_scale+4,w
  4784  164D  00C1               	movwf	?_scale+3
  4785  164E  0845               	movf	??_scale+3,w
  4786  164F  00C0               	movwf	?_scale+2
  4787  1650  0844               	movf	??_scale+2,w
  4788  1651  00BF               	movwf	?_scale+1
  4789  1652  0843               	movf	??_scale+1,w
  4790  1653  00BE               	movwf	?_scale
  4791  1654  2FFF               	goto	l218
  4792  1655                     l2809:
  4793                           
  4794                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  4795  1655  0850               	movf	scale@scl,w
  4796  1656  3A80               	xorlw	128
  4797  1657  3E12               	addlw	-238
  4798  1658  1C03               	skipc
  4799  1659  2E5B               	goto	u4131
  4800  165A  2E5C               	goto	u4130
  4801  165B                     u4131:
  4802  165B  2F44               	goto	l2817
  4803  165C                     u4130:
  4804  165C                     l2811:
  4805                           
  4806                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4807  165C  300A               	movlw	10
  4808  165D  00F7               	movwf	___awdiv@divisor
  4809  165E  3000               	movlw	0
  4810  165F  00F8               	movwf	___awdiv@divisor+1
  4811  1660  0850               	movf	scale@scl,w
  4812  1661  00F2               	movwf	___awmod@dividend
  4813  1662  01F3               	clrf	___awmod@dividend+1
  4814  1663  1BF2               	btfsc	___awmod@dividend,7
  4815  1664  03F3               	decf	___awmod@dividend+1,f
  4816  1665  3064               	movlw	100
  4817  1666  00F0               	movwf	___awmod@divisor
  4818  1667  3000               	movlw	0
  4819  1668  00F1               	movwf	___awmod@divisor+1
  4820  1669  160A  158A  23E6  160A  118A  	fcall	___awmod
  4821  166E  0871               	movf	?___awmod+1,w
  4822  166F  00FA               	movwf	___awdiv@dividend+1
  4823  1670  0870               	movf	?___awmod,w
  4824  1671  00F9               	movwf	___awdiv@dividend
  4825  1672  160A  158A  2502  160A  118A  	fcall	___awdiv
  4826  1677  0877               	movf	?___awdiv,w
  4827  1678  1283               	bcf	3,5	;RP0=0, select bank0
  4828  1679  1303               	bcf	3,6	;RP1=0, select bank0
  4829  167A  00C2               	movwf	??_scale
  4830  167B  3001               	movlw	1
  4831  167C                     u4145:
  4832  167C  1003               	clrc
  4833  167D  0DC2               	rlf	??_scale,f
  4834  167E  3EFF               	addlw	-1
  4835  167F  1D03               	skipz
  4836  1680  2E7C               	goto	u4145
  4837  1681  1003               	clrc
  4838  1682  0D42               	rlf	??_scale,w
  4839  1683  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4840  1684  0084               	movwf	4
  4841  1685  120A  118A  200D  160A  118A  	fcall	stringdir
  4842  168A  00C3               	movwf	??_scale+1
  4843  168B  120A  118A  200D  160A  118A  	fcall	stringdir
  4844  1690  00C4               	movwf	??_scale+2
  4845  1691  120A  118A  200D  160A  118A  	fcall	stringdir
  4846  1696  00C5               	movwf	??_scale+3
  4847  1697  120A  118A  200D  160A  118A  	fcall	stringdir
  4848  169C  00C6               	movwf	??_scale+4
  4849  169D  0846               	movf	??_scale+4,w
  4850  169E  00A7               	movwf	___flmul@b+3
  4851  169F  0845               	movf	??_scale+3,w
  4852  16A0  00A6               	movwf	___flmul@b+2
  4853  16A1  0844               	movf	??_scale+2,w
  4854  16A2  00A5               	movwf	___flmul@b+1
  4855  16A3  0843               	movf	??_scale+1,w
  4856  16A4  00A4               	movwf	___flmul@b
  4857  16A5  3064               	movlw	100
  4858  16A6  00F7               	movwf	___awdiv@divisor
  4859  16A7  3000               	movlw	0
  4860  16A8  00F8               	movwf	___awdiv@divisor+1
  4861  16A9  0850               	movf	scale@scl,w
  4862  16AA  00F9               	movwf	___awdiv@dividend
  4863  16AB  01FA               	clrf	___awdiv@dividend+1
  4864  16AC  1BF9               	btfsc	___awdiv@dividend,7
  4865  16AD  03FA               	decf	___awdiv@dividend+1,f
  4866  16AE  160A  158A  2502  160A  118A  	fcall	___awdiv
  4867  16B3  0877               	movf	?___awdiv,w
  4868  16B4  1283               	bcf	3,5	;RP0=0, select bank0
  4869  16B5  1303               	bcf	3,6	;RP1=0, select bank0
  4870  16B6  00C7               	movwf	??_scale+5
  4871  16B7  3001               	movlw	1
  4872  16B8                     u4155:
  4873  16B8  1003               	clrc
  4874  16B9  0DC7               	rlf	??_scale+5,f
  4875  16BA  3EFF               	addlw	-1
  4876  16BB  1D03               	skipz
  4877  16BC  2EB8               	goto	u4155
  4878  16BD  1003               	clrc
  4879  16BE  0D47               	rlf	??_scale+5,w
  4880  16BF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  4881  16C0  0084               	movwf	4
  4882  16C1  120A  118A  200D  160A  118A  	fcall	stringdir
  4883  16C6  00C8               	movwf	??_scale+6
  4884  16C7  120A  118A  200D  160A  118A  	fcall	stringdir
  4885  16CC  00C9               	movwf	??_scale+7
  4886  16CD  120A  118A  200D  160A  118A  	fcall	stringdir
  4887  16D2  00CA               	movwf	??_scale+8
  4888  16D3  120A  118A  200D  160A  118A  	fcall	stringdir
  4889  16D8  00CB               	movwf	??_scale+9
  4890  16D9  084B               	movf	??_scale+9,w
  4891  16DA  00AB               	movwf	___flmul@a+3
  4892  16DB  084A               	movf	??_scale+8,w
  4893  16DC  00AA               	movwf	___flmul@a+2
  4894  16DD  0849               	movf	??_scale+7,w
  4895  16DE  00A9               	movwf	___flmul@a+1
  4896  16DF  0848               	movf	??_scale+6,w
  4897  16E0  00A8               	movwf	___flmul@a
  4898  16E1  120A  158A  2020  160A  118A  	fcall	___flmul
  4899  16E6  1283               	bcf	3,5	;RP0=0, select bank0
  4900  16E7  1303               	bcf	3,6	;RP1=0, select bank0
  4901  16E8  0827               	movf	?___flmul+3,w
  4902  16E9  00CF               	movwf	_scale$939+3
  4903  16EA  0826               	movf	?___flmul+2,w
  4904  16EB  00CE               	movwf	_scale$939+2
  4905  16EC  0825               	movf	?___flmul+1,w
  4906  16ED  00CD               	movwf	_scale$939+1
  4907  16EE  0824               	movf	?___flmul,w
  4908  16EF  00CC               	movwf	_scale$939
  4909                           
  4910                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4911  16F0  300A               	movlw	10
  4912  16F1  00F0               	movwf	___awmod@divisor
  4913  16F2  3000               	movlw	0
  4914  16F3  00F1               	movwf	___awmod@divisor+1
  4915  16F4  0850               	movf	scale@scl,w
  4916  16F5  00F2               	movwf	___awmod@dividend
  4917  16F6  01F3               	clrf	___awmod@dividend+1
  4918  16F7  1BF2               	btfsc	___awmod@dividend,7
  4919  16F8  03F3               	decf	___awmod@dividend+1,f
  4920  16F9  160A  158A  23E6  160A  118A  	fcall	___awmod
  4921  16FE  0870               	movf	?___awmod,w
  4922  16FF  1283               	bcf	3,5	;RP0=0, select bank0
  4923  1700  1303               	bcf	3,6	;RP1=0, select bank0
  4924  1701  00C2               	movwf	??_scale
  4925  1702  3001               	movlw	1
  4926  1703                     u4165:
  4927  1703  1003               	clrc
  4928  1704  0DC2               	rlf	??_scale,f
  4929  1705  3EFF               	addlw	-1
  4930  1706  1D03               	skipz
  4931  1707  2F03               	goto	u4165
  4932  1708  1003               	clrc
  4933  1709  0D42               	rlf	??_scale,w
  4934  170A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4935  170B  0084               	movwf	4
  4936  170C  120A  118A  200D  160A  118A  	fcall	stringdir
  4937  1711  00C3               	movwf	??_scale+1
  4938  1712  120A  118A  200D  160A  118A  	fcall	stringdir
  4939  1717  00C4               	movwf	??_scale+2
  4940  1718  120A  118A  200D  160A  118A  	fcall	stringdir
  4941  171D  00C5               	movwf	??_scale+3
  4942  171E  120A  118A  200D  160A  118A  	fcall	stringdir
  4943  1723  00C6               	movwf	??_scale+4
  4944  1724  0846               	movf	??_scale+4,w
  4945  1725  00A7               	movwf	___flmul@b+3
  4946  1726  0845               	movf	??_scale+3,w
  4947  1727  00A6               	movwf	___flmul@b+2
  4948  1728  0844               	movf	??_scale+2,w
  4949  1729  00A5               	movwf	___flmul@b+1
  4950  172A  0843               	movf	??_scale+1,w
  4951  172B  00A4               	movwf	___flmul@b
  4952  172C  084F               	movf	_scale$939+3,w
  4953  172D  00AB               	movwf	___flmul@a+3
  4954  172E  084E               	movf	_scale$939+2,w
  4955  172F  00AA               	movwf	___flmul@a+2
  4956  1730  084D               	movf	_scale$939+1,w
  4957  1731  00A9               	movwf	___flmul@a+1
  4958  1732  084C               	movf	_scale$939,w
  4959  1733  00A8               	movwf	___flmul@a
  4960  1734  120A  158A  2020  160A  118A  	fcall	___flmul
  4961  1739  1283               	bcf	3,5	;RP0=0, select bank0
  4962  173A  1303               	bcf	3,6	;RP1=0, select bank0
  4963  173B  0827               	movf	?___flmul+3,w
  4964  173C  00C1               	movwf	?_scale+3
  4965  173D  0826               	movf	?___flmul+2,w
  4966  173E  00C0               	movwf	?_scale+2
  4967  173F  0825               	movf	?___flmul+1,w
  4968  1740  00BF               	movwf	?_scale+1
  4969  1741  0824               	movf	?___flmul,w
  4970  1742  00BE               	movwf	?_scale
  4971  1743  2FFF               	goto	l218
  4972  1744                     l2817:
  4973  1744  0850               	movf	scale@scl,w
  4974  1745  3A80               	xorlw	128
  4975  1746  3E75               	addlw	-139
  4976  1747  1C03               	skipc
  4977  1748  2F4A               	goto	u4171
  4978  1749  2F4B               	goto	u4170
  4979  174A                     u4171:
  4980  174A  2FD3               	goto	l2823
  4981  174B                     u4170:
  4982  174B                     l2819:
  4983                           
  4984                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4985  174B  300A               	movlw	10
  4986  174C  00F0               	movwf	___awmod@divisor
  4987  174D  3000               	movlw	0
  4988  174E  00F1               	movwf	___awmod@divisor+1
  4989  174F  0850               	movf	scale@scl,w
  4990  1750  00F2               	movwf	___awmod@dividend
  4991  1751  01F3               	clrf	___awmod@dividend+1
  4992  1752  1BF2               	btfsc	___awmod@dividend,7
  4993  1753  03F3               	decf	___awmod@dividend+1,f
  4994  1754  160A  158A  23E6  160A  118A  	fcall	___awmod
  4995  1759  0870               	movf	?___awmod,w
  4996  175A  1283               	bcf	3,5	;RP0=0, select bank0
  4997  175B  1303               	bcf	3,6	;RP1=0, select bank0
  4998  175C  00C2               	movwf	??_scale
  4999  175D  3001               	movlw	1
  5000  175E                     u4185:
  5001  175E  1003               	clrc
  5002  175F  0DC2               	rlf	??_scale,f
  5003  1760  3EFF               	addlw	-1
  5004  1761  1D03               	skipz
  5005  1762  2F5E               	goto	u4185
  5006  1763  1003               	clrc
  5007  1764  0D42               	rlf	??_scale,w
  5008  1765  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  5009  1766  0084               	movwf	4
  5010  1767  120A  118A  200D  160A  118A  	fcall	stringdir
  5011  176C  00C3               	movwf	??_scale+1
  5012  176D  120A  118A  200D  160A  118A  	fcall	stringdir
  5013  1772  00C4               	movwf	??_scale+2
  5014  1773  120A  118A  200D  160A  118A  	fcall	stringdir
  5015  1778  00C5               	movwf	??_scale+3
  5016  1779  120A  118A  200D  160A  118A  	fcall	stringdir
  5017  177E  00C6               	movwf	??_scale+4
  5018  177F  0846               	movf	??_scale+4,w
  5019  1780  00A7               	movwf	___flmul@b+3
  5020  1781  0845               	movf	??_scale+3,w
  5021  1782  00A6               	movwf	___flmul@b+2
  5022  1783  0844               	movf	??_scale+2,w
  5023  1784  00A5               	movwf	___flmul@b+1
  5024  1785  0843               	movf	??_scale+1,w
  5025  1786  00A4               	movwf	___flmul@b
  5026  1787  300A               	movlw	10
  5027  1788  00F7               	movwf	___awdiv@divisor
  5028  1789  3000               	movlw	0
  5029  178A  00F8               	movwf	___awdiv@divisor+1
  5030  178B  0850               	movf	scale@scl,w
  5031  178C  00F9               	movwf	___awdiv@dividend
  5032  178D  01FA               	clrf	___awdiv@dividend+1
  5033  178E  1BF9               	btfsc	___awdiv@dividend,7
  5034  178F  03FA               	decf	___awdiv@dividend+1,f
  5035  1790  160A  158A  2502  160A  118A  	fcall	___awdiv
  5036  1795  0877               	movf	?___awdiv,w
  5037  1796  1283               	bcf	3,5	;RP0=0, select bank0
  5038  1797  1303               	bcf	3,6	;RP1=0, select bank0
  5039  1798  00C7               	movwf	??_scale+5
  5040  1799  3001               	movlw	1
  5041  179A                     u4195:
  5042  179A  1003               	clrc
  5043  179B  0DC7               	rlf	??_scale+5,f
  5044  179C  3EFF               	addlw	-1
  5045  179D  1D03               	skipz
  5046  179E  2F9A               	goto	u4195
  5047  179F  1003               	clrc
  5048  17A0  0D47               	rlf	??_scale+5,w
  5049  17A1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  5050  17A2  0084               	movwf	4
  5051  17A3  120A  118A  200D  160A  118A  	fcall	stringdir
  5052  17A8  00C8               	movwf	??_scale+6
  5053  17A9  120A  118A  200D  160A  118A  	fcall	stringdir
  5054  17AE  00C9               	movwf	??_scale+7
  5055  17AF  120A  118A  200D  160A  118A  	fcall	stringdir
  5056  17B4  00CA               	movwf	??_scale+8
  5057  17B5  120A  118A  200D  160A  118A  	fcall	stringdir
  5058  17BA  00CB               	movwf	??_scale+9
  5059  17BB  084B               	movf	??_scale+9,w
  5060  17BC  00AB               	movwf	___flmul@a+3
  5061  17BD  084A               	movf	??_scale+8,w
  5062  17BE  00AA               	movwf	___flmul@a+2
  5063  17BF  0849               	movf	??_scale+7,w
  5064  17C0  00A9               	movwf	___flmul@a+1
  5065  17C1  0848               	movf	??_scale+6,w
  5066  17C2  00A8               	movwf	___flmul@a
  5067  17C3  120A  158A  2020  160A  118A  	fcall	___flmul
  5068  17C8  1283               	bcf	3,5	;RP0=0, select bank0
  5069  17C9  1303               	bcf	3,6	;RP1=0, select bank0
  5070  17CA  0827               	movf	?___flmul+3,w
  5071  17CB  00C1               	movwf	?_scale+3
  5072  17CC  0826               	movf	?___flmul+2,w
  5073  17CD  00C0               	movwf	?_scale+2
  5074  17CE  0825               	movf	?___flmul+1,w
  5075  17CF  00BF               	movwf	?_scale+1
  5076  17D0  0824               	movf	?___flmul,w
  5077  17D1  00BE               	movwf	?_scale
  5078  17D2  2FFF               	goto	l218
  5079  17D3                     l2823:
  5080                           
  5081                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  5082  17D3  0850               	movf	scale@scl,w
  5083  17D4  00C2               	movwf	??_scale
  5084  17D5  3001               	movlw	1
  5085  17D6                     u4205:
  5086  17D6  1003               	clrc
  5087  17D7  0DC2               	rlf	??_scale,f
  5088  17D8  3EFF               	addlw	-1
  5089  17D9  1D03               	skipz
  5090  17DA  2FD6               	goto	u4205
  5091  17DB  1003               	clrc
  5092  17DC  0D42               	rlf	??_scale,w
  5093  17DD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  5094  17DE  0084               	movwf	4
  5095  17DF  120A  118A  200D  160A  118A  	fcall	stringdir
  5096  17E4  00C3               	movwf	??_scale+1
  5097  17E5  120A  118A  200D  160A  118A  	fcall	stringdir
  5098  17EA  00C4               	movwf	??_scale+2
  5099  17EB  120A  118A  200D  160A  118A  	fcall	stringdir
  5100  17F0  00C5               	movwf	??_scale+3
  5101  17F1  120A  118A  200D  160A  118A  	fcall	stringdir
  5102  17F6  00C6               	movwf	??_scale+4
  5103  17F7  0846               	movf	??_scale+4,w
  5104  17F8  00C1               	movwf	?_scale+3
  5105  17F9  0845               	movf	??_scale+3,w
  5106  17FA  00C0               	movwf	?_scale+2
  5107  17FB  0844               	movf	??_scale+2,w
  5108  17FC  00BF               	movwf	?_scale+1
  5109  17FD  0843               	movf	??_scale+1,w
  5110  17FE  00BE               	movwf	?_scale
  5111  17FF                     l218:
  5112  17FF  0008               	return
  5113  1800                     __end_of_scale:
  5114                           
  5115                           	psect	text3
  5116  1BE6                     __ptext3:	
  5117 ;; *************** function ___awmod *****************
  5118 ;; Defined at:
  5119 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  5120 ;; Parameters:    Size  Location     Type
  5121 ;;  divisor         2    0[COMMON] int 
  5122 ;;  dividend        2    2[COMMON] int 
  5123 ;; Auto vars:     Size  Location     Type
  5124 ;;  sign            1    6[COMMON] unsigned char 
  5125 ;;  counter         1    5[COMMON] unsigned char 
  5126 ;; Return value:  Size  Location     Type
  5127 ;;                  2    0[COMMON] int 
  5128 ;; Registers used:
  5129 ;;		wreg, status,2, status,0
  5130 ;; Tracked objects:
  5131 ;;		On entry : 0/0
  5132 ;;		On exit  : 0/0
  5133 ;;		Unchanged: 0/0
  5134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5135 ;;      Params:         4       0       0       0       0
  5136 ;;      Locals:         2       0       0       0       0
  5137 ;;      Temps:          1       0       0       0       0
  5138 ;;      Totals:         7       0       0       0       0
  5139 ;;Total ram usage:        7 bytes
  5140 ;; Hardware stack levels used:    1
  5141 ;; This function calls:
  5142 ;;		Nothing
  5143 ;; This function is called by:
  5144 ;;		_scale
  5145 ;; This function uses a non-reentrant model
  5146 ;;
  5147                           
  5148                           
  5149                           ;psect for function ___awmod
  5150  1BE6                     ___awmod:
  5151  1BE6                     l2319:	
  5152                           ;incstack = 0
  5153                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5154                           
  5155  1BE6  01F6               	clrf	___awmod@sign
  5156  1BE7                     l2321:
  5157  1BE7  1FF3               	btfss	___awmod@dividend+1,7
  5158  1BE8  2BEA               	goto	u2901
  5159  1BE9  2BEB               	goto	u2900
  5160  1BEA                     u2901:
  5161  1BEA  2BF2               	goto	l2327
  5162  1BEB                     u2900:
  5163  1BEB                     l2323:
  5164  1BEB  09F2               	comf	___awmod@dividend,f
  5165  1BEC  09F3               	comf	___awmod@dividend+1,f
  5166  1BED  0AF2               	incf	___awmod@dividend,f
  5167  1BEE  1903               	skipnz
  5168  1BEF  0AF3               	incf	___awmod@dividend+1,f
  5169  1BF0                     l2325:
  5170  1BF0  01F6               	clrf	___awmod@sign
  5171  1BF1  0AF6               	incf	___awmod@sign,f
  5172  1BF2                     l2327:
  5173  1BF2  1FF1               	btfss	___awmod@divisor+1,7
  5174  1BF3  2BF5               	goto	u2911
  5175  1BF4  2BF6               	goto	u2910
  5176  1BF5                     u2911:
  5177  1BF5  2BFB               	goto	l2331
  5178  1BF6                     u2910:
  5179  1BF6                     l2329:
  5180  1BF6  09F0               	comf	___awmod@divisor,f
  5181  1BF7  09F1               	comf	___awmod@divisor+1,f
  5182  1BF8  0AF0               	incf	___awmod@divisor,f
  5183  1BF9  1903               	skipnz
  5184  1BFA  0AF1               	incf	___awmod@divisor+1,f
  5185  1BFB                     l2331:
  5186  1BFB  0870               	movf	___awmod@divisor,w
  5187  1BFC  0471               	iorwf	___awmod@divisor+1,w
  5188  1BFD  1903               	btfsc	3,2
  5189  1BFE  2C00               	goto	u2921
  5190  1BFF  2C01               	goto	u2920
  5191  1C00                     u2921:
  5192  1C00  2C30               	goto	l2349
  5193  1C01                     u2920:
  5194  1C01                     l2333:
  5195  1C01  01F5               	clrf	___awmod@counter
  5196  1C02  0AF5               	incf	___awmod@counter,f
  5197  1C03  2C0F               	goto	l2339
  5198  1C04                     l2335:
  5199  1C04  3001               	movlw	1
  5200  1C05                     u2935:
  5201  1C05  1003               	clrc
  5202  1C06  0DF0               	rlf	___awmod@divisor,f
  5203  1C07  0DF1               	rlf	___awmod@divisor+1,f
  5204  1C08  3EFF               	addlw	-1
  5205  1C09  1D03               	skipz
  5206  1C0A  2C05               	goto	u2935
  5207  1C0B                     l2337:
  5208  1C0B  3001               	movlw	1
  5209  1C0C  00F4               	movwf	??___awmod
  5210  1C0D  0874               	movf	??___awmod,w
  5211  1C0E  07F5               	addwf	___awmod@counter,f
  5212  1C0F                     l2339:
  5213  1C0F  1FF1               	btfss	___awmod@divisor+1,7
  5214  1C10  2C12               	goto	u2941
  5215  1C11  2C13               	goto	u2940
  5216  1C12                     u2941:
  5217  1C12  2C04               	goto	l2335
  5218  1C13                     u2940:
  5219  1C13                     l2341:
  5220  1C13  0871               	movf	___awmod@divisor+1,w
  5221  1C14  0273               	subwf	___awmod@dividend+1,w
  5222  1C15  1D03               	skipz
  5223  1C16  2C19               	goto	u2955
  5224  1C17  0870               	movf	___awmod@divisor,w
  5225  1C18  0272               	subwf	___awmod@dividend,w
  5226  1C19                     u2955:
  5227  1C19  1C03               	skipc
  5228  1C1A  2C1C               	goto	u2951
  5229  1C1B  2C1D               	goto	u2950
  5230  1C1C                     u2951:
  5231  1C1C  2C23               	goto	l2345
  5232  1C1D                     u2950:
  5233  1C1D                     l2343:
  5234  1C1D  0870               	movf	___awmod@divisor,w
  5235  1C1E  02F2               	subwf	___awmod@dividend,f
  5236  1C1F  0871               	movf	___awmod@divisor+1,w
  5237  1C20  1C03               	skipc
  5238  1C21  03F3               	decf	___awmod@dividend+1,f
  5239  1C22  02F3               	subwf	___awmod@dividend+1,f
  5240  1C23                     l2345:
  5241  1C23  3001               	movlw	1
  5242  1C24                     u2965:
  5243  1C24  1003               	clrc
  5244  1C25  0CF1               	rrf	___awmod@divisor+1,f
  5245  1C26  0CF0               	rrf	___awmod@divisor,f
  5246  1C27  3EFF               	addlw	-1
  5247  1C28  1D03               	skipz
  5248  1C29  2C24               	goto	u2965
  5249  1C2A                     l2347:
  5250  1C2A  3001               	movlw	1
  5251  1C2B  02F5               	subwf	___awmod@counter,f
  5252  1C2C  1D03               	btfss	3,2
  5253  1C2D  2C2F               	goto	u2971
  5254  1C2E  2C30               	goto	u2970
  5255  1C2F                     u2971:
  5256  1C2F  2C13               	goto	l2341
  5257  1C30                     u2970:
  5258  1C30                     l2349:
  5259  1C30  0876               	movf	___awmod@sign,w
  5260  1C31  1903               	btfsc	3,2
  5261  1C32  2C34               	goto	u2981
  5262  1C33  2C35               	goto	u2980
  5263  1C34                     u2981:
  5264  1C34  2C3A               	goto	l2353
  5265  1C35                     u2980:
  5266  1C35                     l2351:
  5267  1C35  09F2               	comf	___awmod@dividend,f
  5268  1C36  09F3               	comf	___awmod@dividend+1,f
  5269  1C37  0AF2               	incf	___awmod@dividend,f
  5270  1C38  1903               	skipnz
  5271  1C39  0AF3               	incf	___awmod@dividend+1,f
  5272  1C3A                     l2353:
  5273  1C3A  0873               	movf	___awmod@dividend+1,w
  5274  1C3B  00F1               	movwf	?___awmod+1
  5275  1C3C  0872               	movf	___awmod@dividend,w
  5276  1C3D  00F0               	movwf	?___awmod
  5277  1C3E                     l454:
  5278  1C3E  0008               	return
  5279  1C3F                     __end_of___awmod:
  5280                           
  5281                           	psect	text4
  5282  1D02                     __ptext4:	
  5283 ;; *************** function ___awdiv *****************
  5284 ;; Defined at:
  5285 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  5286 ;; Parameters:    Size  Location     Type
  5287 ;;  divisor         2    7[COMMON] int 
  5288 ;;  dividend        2    9[COMMON] int 
  5289 ;; Auto vars:     Size  Location     Type
  5290 ;;  quotient        2    2[BANK0 ] int 
  5291 ;;  sign            1    1[BANK0 ] unsigned char 
  5292 ;;  counter         1    0[BANK0 ] unsigned char 
  5293 ;; Return value:  Size  Location     Type
  5294 ;;                  2    7[COMMON] int 
  5295 ;; Registers used:
  5296 ;;		wreg, status,2, status,0
  5297 ;; Tracked objects:
  5298 ;;		On entry : 0/0
  5299 ;;		On exit  : 0/0
  5300 ;;		Unchanged: 0/0
  5301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5302 ;;      Params:         4       0       0       0       0
  5303 ;;      Locals:         0       4       0       0       0
  5304 ;;      Temps:          1       0       0       0       0
  5305 ;;      Totals:         5       4       0       0       0
  5306 ;;Total ram usage:        9 bytes
  5307 ;; Hardware stack levels used:    1
  5308 ;; This function calls:
  5309 ;;		Nothing
  5310 ;; This function is called by:
  5311 ;;		_scale
  5312 ;;		_sprintf
  5313 ;; This function uses a non-reentrant model
  5314 ;;
  5315                           
  5316                           
  5317                           ;psect for function ___awdiv
  5318  1D02                     ___awdiv:
  5319  1D02                     l2275:	
  5320                           ;incstack = 0
  5321                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5322                           
  5323  1D02  1283               	bcf	3,5	;RP0=0, select bank0
  5324  1D03  1303               	bcf	3,6	;RP1=0, select bank0
  5325  1D04  01A1               	clrf	___awdiv@sign
  5326  1D05                     l2277:
  5327  1D05  1FF8               	btfss	___awdiv@divisor+1,7
  5328  1D06  2D08               	goto	u2801
  5329  1D07  2D09               	goto	u2800
  5330  1D08                     u2801:
  5331  1D08  2D10               	goto	l2283
  5332  1D09                     u2800:
  5333  1D09                     l2279:
  5334  1D09  09F7               	comf	___awdiv@divisor,f
  5335  1D0A  09F8               	comf	___awdiv@divisor+1,f
  5336  1D0B  0AF7               	incf	___awdiv@divisor,f
  5337  1D0C  1903               	skipnz
  5338  1D0D  0AF8               	incf	___awdiv@divisor+1,f
  5339  1D0E                     l2281:
  5340  1D0E  01A1               	clrf	___awdiv@sign
  5341  1D0F  0AA1               	incf	___awdiv@sign,f
  5342  1D10                     l2283:
  5343  1D10  1FFA               	btfss	___awdiv@dividend+1,7
  5344  1D11  2D13               	goto	u2811
  5345  1D12  2D14               	goto	u2810
  5346  1D13                     u2811:
  5347  1D13  2D1D               	goto	l2289
  5348  1D14                     u2810:
  5349  1D14                     l2285:
  5350  1D14  09F9               	comf	___awdiv@dividend,f
  5351  1D15  09FA               	comf	___awdiv@dividend+1,f
  5352  1D16  0AF9               	incf	___awdiv@dividend,f
  5353  1D17  1903               	skipnz
  5354  1D18  0AFA               	incf	___awdiv@dividend+1,f
  5355  1D19                     l2287:
  5356  1D19  3001               	movlw	1
  5357  1D1A  00FB               	movwf	??___awdiv
  5358  1D1B  087B               	movf	??___awdiv,w
  5359  1D1C  06A1               	xorwf	___awdiv@sign,f
  5360  1D1D                     l2289:
  5361  1D1D  01A2               	clrf	___awdiv@quotient
  5362  1D1E  01A3               	clrf	___awdiv@quotient+1
  5363  1D1F                     l2291:
  5364  1D1F  0877               	movf	___awdiv@divisor,w
  5365  1D20  0478               	iorwf	___awdiv@divisor+1,w
  5366  1D21  1903               	btfsc	3,2
  5367  1D22  2D24               	goto	u2821
  5368  1D23  2D25               	goto	u2820
  5369  1D24                     u2821:
  5370  1D24  2D5C               	goto	l2311
  5371  1D25                     u2820:
  5372  1D25                     l2293:
  5373  1D25  01A0               	clrf	___awdiv@counter
  5374  1D26  0AA0               	incf	___awdiv@counter,f
  5375  1D27  2D33               	goto	l2299
  5376  1D28                     l2295:
  5377  1D28  3001               	movlw	1
  5378  1D29                     u2835:
  5379  1D29  1003               	clrc
  5380  1D2A  0DF7               	rlf	___awdiv@divisor,f
  5381  1D2B  0DF8               	rlf	___awdiv@divisor+1,f
  5382  1D2C  3EFF               	addlw	-1
  5383  1D2D  1D03               	skipz
  5384  1D2E  2D29               	goto	u2835
  5385  1D2F                     l2297:
  5386  1D2F  3001               	movlw	1
  5387  1D30  00FB               	movwf	??___awdiv
  5388  1D31  087B               	movf	??___awdiv,w
  5389  1D32  07A0               	addwf	___awdiv@counter,f
  5390  1D33                     l2299:
  5391  1D33  1FF8               	btfss	___awdiv@divisor+1,7
  5392  1D34  2D36               	goto	u2841
  5393  1D35  2D37               	goto	u2840
  5394  1D36                     u2841:
  5395  1D36  2D28               	goto	l2295
  5396  1D37                     u2840:
  5397  1D37                     l2301:
  5398  1D37  3001               	movlw	1
  5399  1D38                     u2855:
  5400  1D38  1003               	clrc
  5401  1D39  0DA2               	rlf	___awdiv@quotient,f
  5402  1D3A  0DA3               	rlf	___awdiv@quotient+1,f
  5403  1D3B  3EFF               	addlw	-1
  5404  1D3C  1D03               	skipz
  5405  1D3D  2D38               	goto	u2855
  5406  1D3E  0878               	movf	___awdiv@divisor+1,w
  5407  1D3F  027A               	subwf	___awdiv@dividend+1,w
  5408  1D40  1D03               	skipz
  5409  1D41  2D44               	goto	u2865
  5410  1D42  0877               	movf	___awdiv@divisor,w
  5411  1D43  0279               	subwf	___awdiv@dividend,w
  5412  1D44                     u2865:
  5413  1D44  1C03               	skipc
  5414  1D45  2D47               	goto	u2861
  5415  1D46  2D48               	goto	u2860
  5416  1D47                     u2861:
  5417  1D47  2D4F               	goto	l2307
  5418  1D48                     u2860:
  5419  1D48                     l2303:
  5420  1D48  0877               	movf	___awdiv@divisor,w
  5421  1D49  02F9               	subwf	___awdiv@dividend,f
  5422  1D4A  0878               	movf	___awdiv@divisor+1,w
  5423  1D4B  1C03               	skipc
  5424  1D4C  03FA               	decf	___awdiv@dividend+1,f
  5425  1D4D  02FA               	subwf	___awdiv@dividend+1,f
  5426  1D4E                     l2305:
  5427  1D4E  1422               	bsf	___awdiv@quotient,0
  5428  1D4F                     l2307:
  5429  1D4F  3001               	movlw	1
  5430  1D50                     u2875:
  5431  1D50  1003               	clrc
  5432  1D51  0CF8               	rrf	___awdiv@divisor+1,f
  5433  1D52  0CF7               	rrf	___awdiv@divisor,f
  5434  1D53  3EFF               	addlw	-1
  5435  1D54  1D03               	skipz
  5436  1D55  2D50               	goto	u2875
  5437  1D56                     l2309:
  5438  1D56  3001               	movlw	1
  5439  1D57  02A0               	subwf	___awdiv@counter,f
  5440  1D58  1D03               	btfss	3,2
  5441  1D59  2D5B               	goto	u2881
  5442  1D5A  2D5C               	goto	u2880
  5443  1D5B                     u2881:
  5444  1D5B  2D37               	goto	l2301
  5445  1D5C                     u2880:
  5446  1D5C                     l2311:
  5447  1D5C  0821               	movf	___awdiv@sign,w
  5448  1D5D  1903               	btfsc	3,2
  5449  1D5E  2D60               	goto	u2891
  5450  1D5F  2D61               	goto	u2890
  5451  1D60                     u2891:
  5452  1D60  2D66               	goto	l2315
  5453  1D61                     u2890:
  5454  1D61                     l2313:
  5455  1D61  09A2               	comf	___awdiv@quotient,f
  5456  1D62  09A3               	comf	___awdiv@quotient+1,f
  5457  1D63  0AA2               	incf	___awdiv@quotient,f
  5458  1D64  1903               	skipnz
  5459  1D65  0AA3               	incf	___awdiv@quotient+1,f
  5460  1D66                     l2315:
  5461  1D66  0823               	movf	___awdiv@quotient+1,w
  5462  1D67  00F8               	movwf	?___awdiv+1
  5463  1D68  0822               	movf	___awdiv@quotient,w
  5464  1D69  00F7               	movwf	?___awdiv
  5465  1D6A                     l441:
  5466  1D6A  0008               	return
  5467  1D6B                     __end_of___awdiv:
  5468                           
  5469                           	psect	text5
  5470  1957                     __ptext5:	
  5471 ;; *************** function _isdigit *****************
  5472 ;; Defined at:
  5473 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  5474 ;; Parameters:    Size  Location     Type
  5475 ;;  c               1    wreg     unsigned char 
  5476 ;; Auto vars:     Size  Location     Type
  5477 ;;  c               1    1[COMMON] unsigned char 
  5478 ;; Return value:  Size  Location     Type
  5479 ;;		None               void
  5480 ;; Registers used:
  5481 ;;		wreg, status,2, status,0
  5482 ;; Tracked objects:
  5483 ;;		On entry : 0/0
  5484 ;;		On exit  : 0/0
  5485 ;;		Unchanged: 0/0
  5486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5487 ;;      Params:         0       0       0       0       0
  5488 ;;      Locals:         2       0       0       0       0
  5489 ;;      Temps:          0       0       0       0       0
  5490 ;;      Totals:         2       0       0       0       0
  5491 ;;Total ram usage:        2 bytes
  5492 ;; Hardware stack levels used:    1
  5493 ;; This function calls:
  5494 ;;		Nothing
  5495 ;; This function is called by:
  5496 ;;		_sprintf
  5497 ;; This function uses a non-reentrant model
  5498 ;;
  5499                           
  5500                           
  5501                           ;psect for function _isdigit
  5502  1957                     _isdigit:
  5503                           
  5504                           ;incstack = 0
  5505                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  5506                           ;isdigit@c stored from wreg
  5507  1957  00F1               	movwf	isdigit@c
  5508  1958                     l2827:
  5509  1958  01F0               	clrf	_isdigit$751
  5510  1959                     l2829:
  5511  1959  303A               	movlw	58
  5512  195A  0271               	subwf	isdigit@c,w
  5513  195B  1803               	skipnc
  5514  195C  295E               	goto	u4211
  5515  195D  295F               	goto	u4210
  5516  195E                     u4211:
  5517  195E  2967               	goto	l2835
  5518  195F                     u4210:
  5519  195F                     l2831:
  5520  195F  3030               	movlw	48
  5521  1960  0271               	subwf	isdigit@c,w
  5522  1961  1C03               	skipc
  5523  1962  2964               	goto	u4221
  5524  1963  2965               	goto	u4220
  5525  1964                     u4221:
  5526  1964  2967               	goto	l2835
  5527  1965                     u4220:
  5528  1965                     l2833:
  5529  1965  01F0               	clrf	_isdigit$751
  5530  1966  0AF0               	incf	_isdigit$751,f
  5531  1967                     l2835:
  5532  1967  0C70               	rrf	_isdigit$751,w
  5533  1968                     l775:
  5534  1968  0008               	return
  5535  1969                     __end_of_isdigit:
  5536                           
  5537                           	psect	text6
  5538  100E                     __ptext6:	
  5539 ;; *************** function _fround *****************
  5540 ;; Defined at:
  5541 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  5542 ;; Parameters:    Size  Location     Type
  5543 ;;  prec            1    wreg     unsigned char 
  5544 ;; Auto vars:     Size  Location     Type
  5545 ;;  prec            1   49[BANK0 ] unsigned char 
  5546 ;; Return value:  Size  Location     Type
  5547 ;;                  4   30[BANK0 ] unsigned char 
  5548 ;; Registers used:
  5549 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5550 ;; Tracked objects:
  5551 ;;		On entry : 0/0
  5552 ;;		On exit  : 0/0
  5553 ;;		Unchanged: 0/0
  5554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5555 ;;      Params:         0       4       0       0       0
  5556 ;;      Locals:         0       9       0       0       0
  5557 ;;      Temps:          0       7       0       0       0
  5558 ;;      Totals:         0      20       0       0       0
  5559 ;;Total ram usage:       20 bytes
  5560 ;; Hardware stack levels used:    1
  5561 ;; Hardware stack levels required when called:    2
  5562 ;; This function calls:
  5563 ;;		___flmul
  5564 ;;		___lwdiv
  5565 ;;		___lwmod
  5566 ;; This function is called by:
  5567 ;;		_sprintf
  5568 ;; This function uses a non-reentrant model
  5569 ;;
  5570                           
  5571                           
  5572                           ;psect for function _fround
  5573  100E                     _fround:
  5574                           
  5575                           ;incstack = 0
  5576                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5577                           ;fround@prec stored from wreg
  5578  100E  1283               	bcf	3,5	;RP0=0, select bank0
  5579  100F  1303               	bcf	3,6	;RP1=0, select bank0
  5580  1010  00D1               	movwf	fround@prec
  5581  1011                     l2769:
  5582                           
  5583                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  5584  1011  306E               	movlw	110
  5585  1012  0251               	subwf	fround@prec,w
  5586  1013  1C03               	skipc
  5587  1014  2816               	goto	u3961
  5588  1015  2817               	goto	u3960
  5589  1016                     u3961:
  5590  1016  2924               	goto	l2777
  5591  1017                     u3960:
  5592  1017                     l2771:
  5593                           
  5594                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5595  1017  303F               	movlw	63
  5596  1018  00A7               	movwf	___flmul@b+3
  5597  1019  3000               	movlw	0
  5598  101A  00A6               	movwf	___flmul@b+2
  5599  101B  3000               	movlw	0
  5600  101C  00A5               	movwf	___flmul@b+1
  5601  101D  3000               	movlw	0
  5602  101E  00A4               	movwf	___flmul@b
  5603  101F  3064               	movlw	100
  5604  1020  00F6               	movwf	___lwdiv@divisor
  5605  1021  3000               	movlw	0
  5606  1022  00F7               	movwf	___lwdiv@divisor+1
  5607  1023  0851               	movf	fround@prec,w
  5608  1024  00C2               	movwf	??_fround
  5609  1025  01C3               	clrf	??_fround+1
  5610  1026  0842               	movf	??_fround,w
  5611  1027  00F8               	movwf	___lwdiv@dividend
  5612  1028  0843               	movf	??_fround+1,w
  5613  1029  00F9               	movwf	___lwdiv@dividend+1
  5614  102A  160A  158A  22AE  160A  118A  	fcall	___lwdiv
  5615  102F  0876               	movf	?___lwdiv,w
  5616  1030  1283               	bcf	3,5	;RP0=0, select bank0
  5617  1031  1303               	bcf	3,6	;RP1=0, select bank0
  5618  1032  00C4               	movwf	??_fround+2
  5619  1033  3001               	movlw	1
  5620  1034                     u3975:
  5621  1034  1003               	clrc
  5622  1035  0DC4               	rlf	??_fround+2,f
  5623  1036  3EFF               	addlw	-1
  5624  1037  1D03               	skipz
  5625  1038  2834               	goto	u3975
  5626  1039  1003               	clrc
  5627  103A  0D44               	rlf	??_fround+2,w
  5628  103B  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  5629  103C  0084               	movwf	4
  5630  103D  120A  118A  200D  160A  118A  	fcall	stringdir
  5631  1042  00C5               	movwf	??_fround+3
  5632  1043  120A  118A  200D  160A  118A  	fcall	stringdir
  5633  1048  00C6               	movwf	??_fround+4
  5634  1049  120A  118A  200D  160A  118A  	fcall	stringdir
  5635  104E  00C7               	movwf	??_fround+5
  5636  104F  120A  118A  200D  160A  118A  	fcall	stringdir
  5637  1054  00C8               	movwf	??_fround+6
  5638  1055  0848               	movf	??_fround+6,w
  5639  1056  00AB               	movwf	___flmul@a+3
  5640  1057  0847               	movf	??_fround+5,w
  5641  1058  00AA               	movwf	___flmul@a+2
  5642  1059  0846               	movf	??_fround+4,w
  5643  105A  00A9               	movwf	___flmul@a+1
  5644  105B  0845               	movf	??_fround+3,w
  5645  105C  00A8               	movwf	___flmul@a
  5646  105D  120A  158A  2020  160A  118A  	fcall	___flmul
  5647  1062  1283               	bcf	3,5	;RP0=0, select bank0
  5648  1063  1303               	bcf	3,6	;RP1=0, select bank0
  5649  1064  0827               	movf	?___flmul+3,w
  5650  1065  00D0               	movwf	_fround$937+3
  5651  1066  0826               	movf	?___flmul+2,w
  5652  1067  00CF               	movwf	_fround$937+2
  5653  1068  0825               	movf	?___flmul+1,w
  5654  1069  00CE               	movwf	_fround$937+1
  5655  106A  0824               	movf	?___flmul,w
  5656  106B  00CD               	movwf	_fround$937
  5657                           
  5658                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5659  106C  300A               	movlw	10
  5660  106D  00F6               	movwf	___lwdiv@divisor
  5661  106E  3000               	movlw	0
  5662  106F  00F7               	movwf	___lwdiv@divisor+1
  5663  1070  0851               	movf	fround@prec,w
  5664  1071  00C2               	movwf	??_fround
  5665  1072  01C3               	clrf	??_fround+1
  5666  1073  0842               	movf	??_fround,w
  5667  1074  00F2               	movwf	___lwmod@dividend
  5668  1075  0843               	movf	??_fround+1,w
  5669  1076  00F3               	movwf	___lwmod@dividend+1
  5670  1077  3064               	movlw	100
  5671  1078  00F0               	movwf	___lwmod@divisor
  5672  1079  3000               	movlw	0
  5673  107A  00F1               	movwf	___lwmod@divisor+1
  5674  107B  160A  158A  2232  160A  118A  	fcall	___lwmod
  5675  1080  0871               	movf	?___lwmod+1,w
  5676  1081  00F9               	movwf	___lwdiv@dividend+1
  5677  1082  0870               	movf	?___lwmod,w
  5678  1083  00F8               	movwf	___lwdiv@dividend
  5679  1084  160A  158A  22AE  160A  118A  	fcall	___lwdiv
  5680  1089  0876               	movf	?___lwdiv,w
  5681  108A  1283               	bcf	3,5	;RP0=0, select bank0
  5682  108B  1303               	bcf	3,6	;RP1=0, select bank0
  5683  108C  00C4               	movwf	??_fround+2
  5684  108D  3001               	movlw	1
  5685  108E                     u3985:
  5686  108E  1003               	clrc
  5687  108F  0DC4               	rlf	??_fround+2,f
  5688  1090  3EFF               	addlw	-1
  5689  1091  1D03               	skipz
  5690  1092  288E               	goto	u3985
  5691  1093  1003               	clrc
  5692  1094  0D44               	rlf	??_fround+2,w
  5693  1095  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5694  1096  0084               	movwf	4
  5695  1097  120A  118A  200D  160A  118A  	fcall	stringdir
  5696  109C  00C5               	movwf	??_fround+3
  5697  109D  120A  118A  200D  160A  118A  	fcall	stringdir
  5698  10A2  00C6               	movwf	??_fround+4
  5699  10A3  120A  118A  200D  160A  118A  	fcall	stringdir
  5700  10A8  00C7               	movwf	??_fround+5
  5701  10A9  120A  118A  200D  160A  118A  	fcall	stringdir
  5702  10AE  00C8               	movwf	??_fround+6
  5703  10AF  0848               	movf	??_fround+6,w
  5704  10B0  00A7               	movwf	___flmul@b+3
  5705  10B1  0847               	movf	??_fround+5,w
  5706  10B2  00A6               	movwf	___flmul@b+2
  5707  10B3  0846               	movf	??_fround+4,w
  5708  10B4  00A5               	movwf	___flmul@b+1
  5709  10B5  0845               	movf	??_fround+3,w
  5710  10B6  00A4               	movwf	___flmul@b
  5711  10B7  0850               	movf	_fround$937+3,w
  5712  10B8  00AB               	movwf	___flmul@a+3
  5713  10B9  084F               	movf	_fround$937+2,w
  5714  10BA  00AA               	movwf	___flmul@a+2
  5715  10BB  084E               	movf	_fround$937+1,w
  5716  10BC  00A9               	movwf	___flmul@a+1
  5717  10BD  084D               	movf	_fround$937,w
  5718  10BE  00A8               	movwf	___flmul@a
  5719  10BF  120A  158A  2020  160A  118A  	fcall	___flmul
  5720  10C4  1283               	bcf	3,5	;RP0=0, select bank0
  5721  10C5  1303               	bcf	3,6	;RP1=0, select bank0
  5722  10C6  0827               	movf	?___flmul+3,w
  5723  10C7  00CC               	movwf	_fround$938+3
  5724  10C8  0826               	movf	?___flmul+2,w
  5725  10C9  00CB               	movwf	_fround$938+2
  5726  10CA  0825               	movf	?___flmul+1,w
  5727  10CB  00CA               	movwf	_fround$938+1
  5728  10CC  0824               	movf	?___flmul,w
  5729  10CD  00C9               	movwf	_fround$938
  5730                           
  5731                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5732  10CE  300A               	movlw	10
  5733  10CF  00F0               	movwf	___lwmod@divisor
  5734  10D0  3000               	movlw	0
  5735  10D1  00F1               	movwf	___lwmod@divisor+1
  5736  10D2  0851               	movf	fround@prec,w
  5737  10D3  00C2               	movwf	??_fround
  5738  10D4  01C3               	clrf	??_fround+1
  5739  10D5  0842               	movf	??_fround,w
  5740  10D6  00F2               	movwf	___lwmod@dividend
  5741  10D7  0843               	movf	??_fround+1,w
  5742  10D8  00F3               	movwf	___lwmod@dividend+1
  5743  10D9  160A  158A  2232  160A  118A  	fcall	___lwmod
  5744  10DE  0870               	movf	?___lwmod,w
  5745  10DF  1283               	bcf	3,5	;RP0=0, select bank0
  5746  10E0  1303               	bcf	3,6	;RP1=0, select bank0
  5747  10E1  00C4               	movwf	??_fround+2
  5748  10E2  3001               	movlw	1
  5749  10E3                     u3995:
  5750  10E3  1003               	clrc
  5751  10E4  0DC4               	rlf	??_fround+2,f
  5752  10E5  3EFF               	addlw	-1
  5753  10E6  1D03               	skipz
  5754  10E7  28E3               	goto	u3995
  5755  10E8  1003               	clrc
  5756  10E9  0D44               	rlf	??_fround+2,w
  5757  10EA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5758  10EB  0084               	movwf	4
  5759  10EC  120A  118A  200D  160A  118A  	fcall	stringdir
  5760  10F1  00C5               	movwf	??_fround+3
  5761  10F2  120A  118A  200D  160A  118A  	fcall	stringdir
  5762  10F7  00C6               	movwf	??_fround+4
  5763  10F8  120A  118A  200D  160A  118A  	fcall	stringdir
  5764  10FD  00C7               	movwf	??_fround+5
  5765  10FE  120A  118A  200D  160A  118A  	fcall	stringdir
  5766  1103  00C8               	movwf	??_fround+6
  5767  1104  0848               	movf	??_fround+6,w
  5768  1105  00A7               	movwf	___flmul@b+3
  5769  1106  0847               	movf	??_fround+5,w
  5770  1107  00A6               	movwf	___flmul@b+2
  5771  1108  0846               	movf	??_fround+4,w
  5772  1109  00A5               	movwf	___flmul@b+1
  5773  110A  0845               	movf	??_fround+3,w
  5774  110B  00A4               	movwf	___flmul@b
  5775  110C  084C               	movf	_fround$938+3,w
  5776  110D  00AB               	movwf	___flmul@a+3
  5777  110E  084B               	movf	_fround$938+2,w
  5778  110F  00AA               	movwf	___flmul@a+2
  5779  1110  084A               	movf	_fround$938+1,w
  5780  1111  00A9               	movwf	___flmul@a+1
  5781  1112  0849               	movf	_fround$938,w
  5782  1113  00A8               	movwf	___flmul@a
  5783  1114  120A  158A  2020  160A  118A  	fcall	___flmul
  5784  1119  1283               	bcf	3,5	;RP0=0, select bank0
  5785  111A  1303               	bcf	3,6	;RP1=0, select bank0
  5786  111B  0827               	movf	?___flmul+3,w
  5787  111C  00C1               	movwf	?_fround+3
  5788  111D  0826               	movf	?___flmul+2,w
  5789  111E  00C0               	movwf	?_fround+2
  5790  111F  0825               	movf	?___flmul+1,w
  5791  1120  00BF               	movwf	?_fround+1
  5792  1121  0824               	movf	?___flmul,w
  5793  1122  00BE               	movwf	?_fround
  5794  1123  2A18               	goto	l211
  5795  1124                     l2777:
  5796  1124  300B               	movlw	11
  5797  1125  0251               	subwf	fround@prec,w
  5798  1126  1C03               	skipc
  5799  1127  2929               	goto	u4001
  5800  1128  292A               	goto	u4000
  5801  1129                     u4001:
  5802  1129  29D5               	goto	l2783
  5803  112A                     u4000:
  5804  112A                     l2779:
  5805                           
  5806                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5807  112A  303F               	movlw	63
  5808  112B  00A7               	movwf	___flmul@b+3
  5809  112C  3000               	movlw	0
  5810  112D  00A6               	movwf	___flmul@b+2
  5811  112E  3000               	movlw	0
  5812  112F  00A5               	movwf	___flmul@b+1
  5813  1130  3000               	movlw	0
  5814  1131  00A4               	movwf	___flmul@b
  5815  1132  300A               	movlw	10
  5816  1133  00F6               	movwf	___lwdiv@divisor
  5817  1134  3000               	movlw	0
  5818  1135  00F7               	movwf	___lwdiv@divisor+1
  5819  1136  0851               	movf	fround@prec,w
  5820  1137  00C2               	movwf	??_fround
  5821  1138  01C3               	clrf	??_fround+1
  5822  1139  0842               	movf	??_fround,w
  5823  113A  00F8               	movwf	___lwdiv@dividend
  5824  113B  0843               	movf	??_fround+1,w
  5825  113C  00F9               	movwf	___lwdiv@dividend+1
  5826  113D  160A  158A  22AE  160A  118A  	fcall	___lwdiv
  5827  1142  0876               	movf	?___lwdiv,w
  5828  1143  1283               	bcf	3,5	;RP0=0, select bank0
  5829  1144  1303               	bcf	3,6	;RP1=0, select bank0
  5830  1145  00C4               	movwf	??_fround+2
  5831  1146  3001               	movlw	1
  5832  1147                     u4015:
  5833  1147  1003               	clrc
  5834  1148  0DC4               	rlf	??_fround+2,f
  5835  1149  3EFF               	addlw	-1
  5836  114A  1D03               	skipz
  5837  114B  2947               	goto	u4015
  5838  114C  1003               	clrc
  5839  114D  0D44               	rlf	??_fround+2,w
  5840  114E  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5841  114F  0084               	movwf	4
  5842  1150  120A  118A  200D  160A  118A  	fcall	stringdir
  5843  1155  00C5               	movwf	??_fround+3
  5844  1156  120A  118A  200D  160A  118A  	fcall	stringdir
  5845  115B  00C6               	movwf	??_fround+4
  5846  115C  120A  118A  200D  160A  118A  	fcall	stringdir
  5847  1161  00C7               	movwf	??_fround+5
  5848  1162  120A  118A  200D  160A  118A  	fcall	stringdir
  5849  1167  00C8               	movwf	??_fround+6
  5850  1168  0848               	movf	??_fround+6,w
  5851  1169  00AB               	movwf	___flmul@a+3
  5852  116A  0847               	movf	??_fround+5,w
  5853  116B  00AA               	movwf	___flmul@a+2
  5854  116C  0846               	movf	??_fround+4,w
  5855  116D  00A9               	movwf	___flmul@a+1
  5856  116E  0845               	movf	??_fround+3,w
  5857  116F  00A8               	movwf	___flmul@a
  5858  1170  120A  158A  2020  160A  118A  	fcall	___flmul
  5859  1175  1283               	bcf	3,5	;RP0=0, select bank0
  5860  1176  1303               	bcf	3,6	;RP1=0, select bank0
  5861  1177  0827               	movf	?___flmul+3,w
  5862  1178  00D0               	movwf	_fround$937+3
  5863  1179  0826               	movf	?___flmul+2,w
  5864  117A  00CF               	movwf	_fround$937+2
  5865  117B  0825               	movf	?___flmul+1,w
  5866  117C  00CE               	movwf	_fround$937+1
  5867  117D  0824               	movf	?___flmul,w
  5868  117E  00CD               	movwf	_fround$937
  5869                           
  5870                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5871  117F  300A               	movlw	10
  5872  1180  00F0               	movwf	___lwmod@divisor
  5873  1181  3000               	movlw	0
  5874  1182  00F1               	movwf	___lwmod@divisor+1
  5875  1183  0851               	movf	fround@prec,w
  5876  1184  00C2               	movwf	??_fround
  5877  1185  01C3               	clrf	??_fround+1
  5878  1186  0842               	movf	??_fround,w
  5879  1187  00F2               	movwf	___lwmod@dividend
  5880  1188  0843               	movf	??_fround+1,w
  5881  1189  00F3               	movwf	___lwmod@dividend+1
  5882  118A  160A  158A  2232  160A  118A  	fcall	___lwmod
  5883  118F  0870               	movf	?___lwmod,w
  5884  1190  1283               	bcf	3,5	;RP0=0, select bank0
  5885  1191  1303               	bcf	3,6	;RP1=0, select bank0
  5886  1192  00C4               	movwf	??_fround+2
  5887  1193  3001               	movlw	1
  5888  1194                     u4025:
  5889  1194  1003               	clrc
  5890  1195  0DC4               	rlf	??_fround+2,f
  5891  1196  3EFF               	addlw	-1
  5892  1197  1D03               	skipz
  5893  1198  2994               	goto	u4025
  5894  1199  1003               	clrc
  5895  119A  0D44               	rlf	??_fround+2,w
  5896  119B  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5897  119C  0084               	movwf	4
  5898  119D  120A  118A  200D  160A  118A  	fcall	stringdir
  5899  11A2  00C5               	movwf	??_fround+3
  5900  11A3  120A  118A  200D  160A  118A  	fcall	stringdir
  5901  11A8  00C6               	movwf	??_fround+4
  5902  11A9  120A  118A  200D  160A  118A  	fcall	stringdir
  5903  11AE  00C7               	movwf	??_fround+5
  5904  11AF  120A  118A  200D  160A  118A  	fcall	stringdir
  5905  11B4  00C8               	movwf	??_fround+6
  5906  11B5  0848               	movf	??_fround+6,w
  5907  11B6  00A7               	movwf	___flmul@b+3
  5908  11B7  0847               	movf	??_fround+5,w
  5909  11B8  00A6               	movwf	___flmul@b+2
  5910  11B9  0846               	movf	??_fround+4,w
  5911  11BA  00A5               	movwf	___flmul@b+1
  5912  11BB  0845               	movf	??_fround+3,w
  5913  11BC  00A4               	movwf	___flmul@b
  5914  11BD  0850               	movf	_fround$937+3,w
  5915  11BE  00AB               	movwf	___flmul@a+3
  5916  11BF  084F               	movf	_fround$937+2,w
  5917  11C0  00AA               	movwf	___flmul@a+2
  5918  11C1  084E               	movf	_fround$937+1,w
  5919  11C2  00A9               	movwf	___flmul@a+1
  5920  11C3  084D               	movf	_fround$937,w
  5921  11C4  00A8               	movwf	___flmul@a
  5922  11C5  120A  158A  2020  160A  118A  	fcall	___flmul
  5923  11CA  1283               	bcf	3,5	;RP0=0, select bank0
  5924  11CB  1303               	bcf	3,6	;RP1=0, select bank0
  5925  11CC  0827               	movf	?___flmul+3,w
  5926  11CD  00C1               	movwf	?_fround+3
  5927  11CE  0826               	movf	?___flmul+2,w
  5928  11CF  00C0               	movwf	?_fround+2
  5929  11D0  0825               	movf	?___flmul+1,w
  5930  11D1  00BF               	movwf	?_fround+1
  5931  11D2  0824               	movf	?___flmul,w
  5932  11D3  00BE               	movwf	?_fround
  5933  11D4  2A18               	goto	l211
  5934  11D5                     l2783:
  5935                           
  5936                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  5937  11D5  303F               	movlw	63
  5938  11D6  00A7               	movwf	___flmul@b+3
  5939  11D7  3000               	movlw	0
  5940  11D8  00A6               	movwf	___flmul@b+2
  5941  11D9  3000               	movlw	0
  5942  11DA  00A5               	movwf	___flmul@b+1
  5943  11DB  3000               	movlw	0
  5944  11DC  00A4               	movwf	___flmul@b
  5945  11DD  0851               	movf	fround@prec,w
  5946  11DE  00C2               	movwf	??_fround
  5947  11DF  3001               	movlw	1
  5948  11E0                     u4035:
  5949  11E0  1003               	clrc
  5950  11E1  0DC2               	rlf	??_fround,f
  5951  11E2  3EFF               	addlw	-1
  5952  11E3  1D03               	skipz
  5953  11E4  29E0               	goto	u4035
  5954  11E5  1003               	clrc
  5955  11E6  0D42               	rlf	??_fround,w
  5956  11E7  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5957  11E8  0084               	movwf	4
  5958  11E9  120A  118A  200D  160A  118A  	fcall	stringdir
  5959  11EE  00C3               	movwf	??_fround+1
  5960  11EF  120A  118A  200D  160A  118A  	fcall	stringdir
  5961  11F4  00C4               	movwf	??_fround+2
  5962  11F5  120A  118A  200D  160A  118A  	fcall	stringdir
  5963  11FA  00C5               	movwf	??_fround+3
  5964  11FB  120A  118A  200D  160A  118A  	fcall	stringdir
  5965  1200  00C6               	movwf	??_fround+4
  5966  1201  0846               	movf	??_fround+4,w
  5967  1202  00AB               	movwf	___flmul@a+3
  5968  1203  0845               	movf	??_fround+3,w
  5969  1204  00AA               	movwf	___flmul@a+2
  5970  1205  0844               	movf	??_fround+2,w
  5971  1206  00A9               	movwf	___flmul@a+1
  5972  1207  0843               	movf	??_fround+1,w
  5973  1208  00A8               	movwf	___flmul@a
  5974  1209  120A  158A  2020  160A  118A  	fcall	___flmul
  5975  120E  1283               	bcf	3,5	;RP0=0, select bank0
  5976  120F  1303               	bcf	3,6	;RP1=0, select bank0
  5977  1210  0827               	movf	?___flmul+3,w
  5978  1211  00C1               	movwf	?_fround+3
  5979  1212  0826               	movf	?___flmul+2,w
  5980  1213  00C0               	movwf	?_fround+2
  5981  1214  0825               	movf	?___flmul+1,w
  5982  1215  00BF               	movwf	?_fround+1
  5983  1216  0824               	movf	?___flmul,w
  5984  1217  00BE               	movwf	?_fround
  5985  1218                     l211:
  5986  1218  0008               	return
  5987  1219                     __end_of_fround:
  5988                           
  5989                           	psect	text7
  5990  1A32                     __ptext7:	
  5991 ;; *************** function ___lwmod *****************
  5992 ;; Defined at:
  5993 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  5994 ;; Parameters:    Size  Location     Type
  5995 ;;  divisor         2    0[COMMON] unsigned int 
  5996 ;;  dividend        2    2[COMMON] unsigned int 
  5997 ;; Auto vars:     Size  Location     Type
  5998 ;;  counter         1    5[COMMON] unsigned char 
  5999 ;; Return value:  Size  Location     Type
  6000 ;;                  2    0[COMMON] unsigned int 
  6001 ;; Registers used:
  6002 ;;		wreg, status,2, status,0
  6003 ;; Tracked objects:
  6004 ;;		On entry : 0/0
  6005 ;;		On exit  : 0/0
  6006 ;;		Unchanged: 0/0
  6007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6008 ;;      Params:         4       0       0       0       0
  6009 ;;      Locals:         1       0       0       0       0
  6010 ;;      Temps:          1       0       0       0       0
  6011 ;;      Totals:         6       0       0       0       0
  6012 ;;Total ram usage:        6 bytes
  6013 ;; Hardware stack levels used:    1
  6014 ;; This function calls:
  6015 ;;		Nothing
  6016 ;; This function is called by:
  6017 ;;		_fround
  6018 ;; This function uses a non-reentrant model
  6019 ;;
  6020                           
  6021                           
  6022                           ;psect for function ___lwmod
  6023  1A32                     ___lwmod:
  6024  1A32                     l2383:	
  6025                           ;incstack = 0
  6026                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6027                           
  6028  1A32  0870               	movf	___lwmod@divisor,w
  6029  1A33  0471               	iorwf	___lwmod@divisor+1,w
  6030  1A34  1903               	btfsc	3,2
  6031  1A35  2A37               	goto	u3061
  6032  1A36  2A38               	goto	u3060
  6033  1A37                     u3061:
  6034  1A37  2A67               	goto	l2401
  6035  1A38                     u3060:
  6036  1A38                     l2385:
  6037  1A38  01F5               	clrf	___lwmod@counter
  6038  1A39  0AF5               	incf	___lwmod@counter,f
  6039  1A3A  2A46               	goto	l2391
  6040  1A3B                     l2387:
  6041  1A3B  3001               	movlw	1
  6042  1A3C                     u3075:
  6043  1A3C  1003               	clrc
  6044  1A3D  0DF0               	rlf	___lwmod@divisor,f
  6045  1A3E  0DF1               	rlf	___lwmod@divisor+1,f
  6046  1A3F  3EFF               	addlw	-1
  6047  1A40  1D03               	skipz
  6048  1A41  2A3C               	goto	u3075
  6049  1A42                     l2389:
  6050  1A42  3001               	movlw	1
  6051  1A43  00F4               	movwf	??___lwmod
  6052  1A44  0874               	movf	??___lwmod,w
  6053  1A45  07F5               	addwf	___lwmod@counter,f
  6054  1A46                     l2391:
  6055  1A46  1FF1               	btfss	___lwmod@divisor+1,7
  6056  1A47  2A49               	goto	u3081
  6057  1A48  2A4A               	goto	u3080
  6058  1A49                     u3081:
  6059  1A49  2A3B               	goto	l2387
  6060  1A4A                     u3080:
  6061  1A4A                     l2393:
  6062  1A4A  0871               	movf	___lwmod@divisor+1,w
  6063  1A4B  0273               	subwf	___lwmod@dividend+1,w
  6064  1A4C  1D03               	skipz
  6065  1A4D  2A50               	goto	u3095
  6066  1A4E  0870               	movf	___lwmod@divisor,w
  6067  1A4F  0272               	subwf	___lwmod@dividend,w
  6068  1A50                     u3095:
  6069  1A50  1C03               	skipc
  6070  1A51  2A53               	goto	u3091
  6071  1A52  2A54               	goto	u3090
  6072  1A53                     u3091:
  6073  1A53  2A5A               	goto	l2397
  6074  1A54                     u3090:
  6075  1A54                     l2395:
  6076  1A54  0870               	movf	___lwmod@divisor,w
  6077  1A55  02F2               	subwf	___lwmod@dividend,f
  6078  1A56  0871               	movf	___lwmod@divisor+1,w
  6079  1A57  1C03               	skipc
  6080  1A58  03F3               	decf	___lwmod@dividend+1,f
  6081  1A59  02F3               	subwf	___lwmod@dividend+1,f
  6082  1A5A                     l2397:
  6083  1A5A  3001               	movlw	1
  6084  1A5B                     u3105:
  6085  1A5B  1003               	clrc
  6086  1A5C  0CF1               	rrf	___lwmod@divisor+1,f
  6087  1A5D  0CF0               	rrf	___lwmod@divisor,f
  6088  1A5E  3EFF               	addlw	-1
  6089  1A5F  1D03               	skipz
  6090  1A60  2A5B               	goto	u3105
  6091  1A61                     l2399:
  6092  1A61  3001               	movlw	1
  6093  1A62  02F5               	subwf	___lwmod@counter,f
  6094  1A63  1D03               	btfss	3,2
  6095  1A64  2A66               	goto	u3111
  6096  1A65  2A67               	goto	u3110
  6097  1A66                     u3111:
  6098  1A66  2A4A               	goto	l2393
  6099  1A67                     u3110:
  6100  1A67                     l2401:
  6101  1A67  0873               	movf	___lwmod@dividend+1,w
  6102  1A68  00F1               	movwf	?___lwmod+1
  6103  1A69  0872               	movf	___lwmod@dividend,w
  6104  1A6A  00F0               	movwf	?___lwmod
  6105  1A6B                     l604:
  6106  1A6B  0008               	return
  6107  1A6C                     __end_of___lwmod:
  6108                           
  6109                           	psect	text8
  6110  1AAE                     __ptext8:	
  6111 ;; *************** function ___lwdiv *****************
  6112 ;; Defined at:
  6113 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  6114 ;; Parameters:    Size  Location     Type
  6115 ;;  divisor         2    6[COMMON] unsigned int 
  6116 ;;  dividend        2    8[COMMON] unsigned int 
  6117 ;; Auto vars:     Size  Location     Type
  6118 ;;  quotient        2   11[COMMON] unsigned int 
  6119 ;;  counter         1   13[COMMON] unsigned char 
  6120 ;; Return value:  Size  Location     Type
  6121 ;;                  2    6[COMMON] unsigned int 
  6122 ;; Registers used:
  6123 ;;		wreg, status,2, status,0
  6124 ;; Tracked objects:
  6125 ;;		On entry : 0/0
  6126 ;;		On exit  : 0/0
  6127 ;;		Unchanged: 0/0
  6128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6129 ;;      Params:         4       0       0       0       0
  6130 ;;      Locals:         3       0       0       0       0
  6131 ;;      Temps:          1       0       0       0       0
  6132 ;;      Totals:         8       0       0       0       0
  6133 ;;Total ram usage:        8 bytes
  6134 ;; Hardware stack levels used:    1
  6135 ;; This function calls:
  6136 ;;		Nothing
  6137 ;; This function is called by:
  6138 ;;		_fround
  6139 ;; This function uses a non-reentrant model
  6140 ;;
  6141                           
  6142                           
  6143                           ;psect for function ___lwdiv
  6144  1AAE                     ___lwdiv:
  6145  1AAE                     l2357:	
  6146                           ;incstack = 0
  6147                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6148                           
  6149  1AAE  01FB               	clrf	___lwdiv@quotient
  6150  1AAF  01FC               	clrf	___lwdiv@quotient+1
  6151  1AB0                     l2359:
  6152  1AB0  0876               	movf	___lwdiv@divisor,w
  6153  1AB1  0477               	iorwf	___lwdiv@divisor+1,w
  6154  1AB2  1903               	btfsc	3,2
  6155  1AB3  2AB5               	goto	u2991
  6156  1AB4  2AB6               	goto	u2990
  6157  1AB5                     u2991:
  6158  1AB5  2AED               	goto	l2379
  6159  1AB6                     u2990:
  6160  1AB6                     l2361:
  6161  1AB6  01FD               	clrf	___lwdiv@counter
  6162  1AB7  0AFD               	incf	___lwdiv@counter,f
  6163  1AB8  2AC4               	goto	l2367
  6164  1AB9                     l2363:
  6165  1AB9  3001               	movlw	1
  6166  1ABA                     u3005:
  6167  1ABA  1003               	clrc
  6168  1ABB  0DF6               	rlf	___lwdiv@divisor,f
  6169  1ABC  0DF7               	rlf	___lwdiv@divisor+1,f
  6170  1ABD  3EFF               	addlw	-1
  6171  1ABE  1D03               	skipz
  6172  1ABF  2ABA               	goto	u3005
  6173  1AC0                     l2365:
  6174  1AC0  3001               	movlw	1
  6175  1AC1  00FA               	movwf	??___lwdiv
  6176  1AC2  087A               	movf	??___lwdiv,w
  6177  1AC3  07FD               	addwf	___lwdiv@counter,f
  6178  1AC4                     l2367:
  6179  1AC4  1FF7               	btfss	___lwdiv@divisor+1,7
  6180  1AC5  2AC7               	goto	u3011
  6181  1AC6  2AC8               	goto	u3010
  6182  1AC7                     u3011:
  6183  1AC7  2AB9               	goto	l2363
  6184  1AC8                     u3010:
  6185  1AC8                     l2369:
  6186  1AC8  3001               	movlw	1
  6187  1AC9                     u3025:
  6188  1AC9  1003               	clrc
  6189  1ACA  0DFB               	rlf	___lwdiv@quotient,f
  6190  1ACB  0DFC               	rlf	___lwdiv@quotient+1,f
  6191  1ACC  3EFF               	addlw	-1
  6192  1ACD  1D03               	skipz
  6193  1ACE  2AC9               	goto	u3025
  6194  1ACF  0877               	movf	___lwdiv@divisor+1,w
  6195  1AD0  0279               	subwf	___lwdiv@dividend+1,w
  6196  1AD1  1D03               	skipz
  6197  1AD2  2AD5               	goto	u3035
  6198  1AD3  0876               	movf	___lwdiv@divisor,w
  6199  1AD4  0278               	subwf	___lwdiv@dividend,w
  6200  1AD5                     u3035:
  6201  1AD5  1C03               	skipc
  6202  1AD6  2AD8               	goto	u3031
  6203  1AD7  2AD9               	goto	u3030
  6204  1AD8                     u3031:
  6205  1AD8  2AE0               	goto	l2375
  6206  1AD9                     u3030:
  6207  1AD9                     l2371:
  6208  1AD9  0876               	movf	___lwdiv@divisor,w
  6209  1ADA  02F8               	subwf	___lwdiv@dividend,f
  6210  1ADB  0877               	movf	___lwdiv@divisor+1,w
  6211  1ADC  1C03               	skipc
  6212  1ADD  03F9               	decf	___lwdiv@dividend+1,f
  6213  1ADE  02F9               	subwf	___lwdiv@dividend+1,f
  6214  1ADF                     l2373:
  6215  1ADF  147B               	bsf	___lwdiv@quotient,0
  6216  1AE0                     l2375:
  6217  1AE0  3001               	movlw	1
  6218  1AE1                     u3045:
  6219  1AE1  1003               	clrc
  6220  1AE2  0CF7               	rrf	___lwdiv@divisor+1,f
  6221  1AE3  0CF6               	rrf	___lwdiv@divisor,f
  6222  1AE4  3EFF               	addlw	-1
  6223  1AE5  1D03               	skipz
  6224  1AE6  2AE1               	goto	u3045
  6225  1AE7                     l2377:
  6226  1AE7  3001               	movlw	1
  6227  1AE8  02FD               	subwf	___lwdiv@counter,f
  6228  1AE9  1D03               	btfss	3,2
  6229  1AEA  2AEC               	goto	u3051
  6230  1AEB  2AED               	goto	u3050
  6231  1AEC                     u3051:
  6232  1AEC  2AC8               	goto	l2369
  6233  1AED                     u3050:
  6234  1AED                     l2379:
  6235  1AED  087C               	movf	___lwdiv@quotient+1,w
  6236  1AEE  00F7               	movwf	?___lwdiv+1
  6237  1AEF  087B               	movf	___lwdiv@quotient,w
  6238  1AF0  00F6               	movwf	?___lwdiv
  6239  1AF1                     l594:
  6240  1AF1  0008               	return
  6241  1AF2                     __end_of___lwdiv:
  6242                           
  6243                           	psect	text9
  6244  0820                     __ptext9:	
  6245 ;; *************** function ___flmul *****************
  6246 ;; Defined at:
  6247 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  6248 ;; Parameters:    Size  Location     Type
  6249 ;;  b               4    4[BANK0 ] unsigned int 
  6250 ;;  a               4    8[BANK0 ] unsigned int 
  6251 ;; Auto vars:     Size  Location     Type
  6252 ;;  prod            4   24[BANK0 ] struct .
  6253 ;;  grs             4   18[BANK0 ] unsigned long 
  6254 ;;  temp            2   28[BANK0 ] struct .
  6255 ;;  bexp            1   23[BANK0 ] unsigned char 
  6256 ;;  aexp            1   22[BANK0 ] unsigned char 
  6257 ;;  sign            1   17[BANK0 ] unsigned char 
  6258 ;; Return value:  Size  Location     Type
  6259 ;;                  4    4[BANK0 ] unsigned char 
  6260 ;; Registers used:
  6261 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6262 ;; Tracked objects:
  6263 ;;		On entry : 0/0
  6264 ;;		On exit  : 0/0
  6265 ;;		Unchanged: 0/0
  6266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6267 ;;      Params:         0       8       0       0       0
  6268 ;;      Locals:         0      13       0       0       0
  6269 ;;      Temps:          0       5       0       0       0
  6270 ;;      Totals:         0      26       0       0       0
  6271 ;;Total ram usage:       26 bytes
  6272 ;; Hardware stack levels used:    1
  6273 ;; Hardware stack levels required when called:    1
  6274 ;; This function calls:
  6275 ;;		__Umul8_16
  6276 ;; This function is called by:
  6277 ;;		_fround
  6278 ;;		_scale
  6279 ;;		_sprintf
  6280 ;; This function uses a non-reentrant model
  6281 ;;
  6282                           
  6283                           
  6284                           ;psect for function ___flmul
  6285  0820                     ___flmul:
  6286  0820                     l2599:	
  6287                           ;incstack = 0
  6288                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6289                           
  6290  0820  1283               	bcf	3,5	;RP0=0, select bank0
  6291  0821  1303               	bcf	3,6	;RP1=0, select bank0
  6292  0822  0827               	movf	___flmul@b+3,w
  6293  0823  3980               	andlw	128
  6294  0824  00AC               	movwf	??___flmul
  6295  0825  082C               	movf	??___flmul,w
  6296  0826  00B1               	movwf	___flmul@sign
  6297  0827                     l2601:
  6298  0827  0827               	movf	___flmul@b+3,w
  6299  0828  00AC               	movwf	??___flmul
  6300  0829  072C               	addwf	??___flmul,w
  6301  082A  00AD               	movwf	??___flmul+1
  6302  082B  082D               	movf	??___flmul+1,w
  6303  082C  00B7               	movwf	___flmul@bexp
  6304  082D                     l2603:
  6305  082D  1FA6               	btfss	___flmul@b+2,7
  6306  082E  2830               	goto	u3581
  6307  082F  2831               	goto	u3580
  6308  0830                     u3581:
  6309  0830  2832               	goto	l2607
  6310  0831                     u3580:
  6311  0831                     l2605:
  6312  0831  1437               	bsf	___flmul@bexp,0
  6313  0832                     l2607:
  6314  0832  0837               	movf	___flmul@bexp,w
  6315  0833  1903               	btfsc	3,2
  6316  0834  2836               	goto	u3591
  6317  0835  2837               	goto	u3590
  6318  0836                     u3591:
  6319  0836  2846               	goto	l2615
  6320  0837                     u3590:
  6321  0837                     l2609:
  6322  0837  0A37               	incf	___flmul@bexp,w
  6323  0838  1D03               	btfss	3,2
  6324  0839  283B               	goto	u3601
  6325  083A  283C               	goto	u3600
  6326  083B                     u3601:
  6327  083B  2844               	goto	l2613
  6328  083C                     u3600:
  6329  083C                     l2611:
  6330  083C  3000               	movlw	0
  6331  083D  00A7               	movwf	___flmul@b+3
  6332  083E  3000               	movlw	0
  6333  083F  00A6               	movwf	___flmul@b+2
  6334  0840  3000               	movlw	0
  6335  0841  00A5               	movwf	___flmul@b+1
  6336  0842  3000               	movlw	0
  6337  0843  00A4               	movwf	___flmul@b
  6338  0844                     l2613:
  6339  0844  17A6               	bsf	___flmul@b+2,7
  6340  0845  284E               	goto	l2617
  6341  0846                     l2615:
  6342  0846  3000               	movlw	0
  6343  0847  00A7               	movwf	___flmul@b+3
  6344  0848  3000               	movlw	0
  6345  0849  00A6               	movwf	___flmul@b+2
  6346  084A  3000               	movlw	0
  6347  084B  00A5               	movwf	___flmul@b+1
  6348  084C  3000               	movlw	0
  6349  084D  00A4               	movwf	___flmul@b
  6350  084E                     l2617:
  6351  084E  082B               	movf	___flmul@a+3,w
  6352  084F  3980               	andlw	128
  6353  0850  00AC               	movwf	??___flmul
  6354  0851  082C               	movf	??___flmul,w
  6355  0852  06B1               	xorwf	___flmul@sign,f
  6356  0853                     l2619:
  6357  0853  082B               	movf	___flmul@a+3,w
  6358  0854  00AC               	movwf	??___flmul
  6359  0855  072C               	addwf	??___flmul,w
  6360  0856  00AD               	movwf	??___flmul+1
  6361  0857  082D               	movf	??___flmul+1,w
  6362  0858  00B6               	movwf	___flmul@aexp
  6363  0859                     l2621:
  6364  0859  1FAA               	btfss	___flmul@a+2,7
  6365  085A  285C               	goto	u3611
  6366  085B  285D               	goto	u3610
  6367  085C                     u3611:
  6368  085C  285E               	goto	l2625
  6369  085D                     u3610:
  6370  085D                     l2623:
  6371  085D  1436               	bsf	___flmul@aexp,0
  6372  085E                     l2625:
  6373  085E  0836               	movf	___flmul@aexp,w
  6374  085F  1903               	btfsc	3,2
  6375  0860  2862               	goto	u3621
  6376  0861  2863               	goto	u3620
  6377  0862                     u3621:
  6378  0862  2872               	goto	l2633
  6379  0863                     u3620:
  6380  0863                     l2627:
  6381  0863  0A36               	incf	___flmul@aexp,w
  6382  0864  1D03               	btfss	3,2
  6383  0865  2867               	goto	u3631
  6384  0866  2868               	goto	u3630
  6385  0867                     u3631:
  6386  0867  2870               	goto	l2631
  6387  0868                     u3630:
  6388  0868                     l2629:
  6389  0868  3000               	movlw	0
  6390  0869  00AB               	movwf	___flmul@a+3
  6391  086A  3000               	movlw	0
  6392  086B  00AA               	movwf	___flmul@a+2
  6393  086C  3000               	movlw	0
  6394  086D  00A9               	movwf	___flmul@a+1
  6395  086E  3000               	movlw	0
  6396  086F  00A8               	movwf	___flmul@a
  6397  0870                     l2631:
  6398  0870  17AA               	bsf	___flmul@a+2,7
  6399  0871  287A               	goto	l2635
  6400  0872                     l2633:
  6401  0872  3000               	movlw	0
  6402  0873  00AB               	movwf	___flmul@a+3
  6403  0874  3000               	movlw	0
  6404  0875  00AA               	movwf	___flmul@a+2
  6405  0876  3000               	movlw	0
  6406  0877  00A9               	movwf	___flmul@a+1
  6407  0878  3000               	movlw	0
  6408  0879  00A8               	movwf	___flmul@a
  6409  087A                     l2635:
  6410  087A  0836               	movf	___flmul@aexp,w
  6411  087B  1903               	btfsc	3,2
  6412  087C  287E               	goto	u3641
  6413  087D  287F               	goto	u3640
  6414  087E                     u3641:
  6415  087E  2884               	goto	l2639
  6416  087F                     u3640:
  6417  087F                     l2637:
  6418  087F  0837               	movf	___flmul@bexp,w
  6419  0880  1D03               	btfss	3,2
  6420  0881  2883               	goto	u3651
  6421  0882  2884               	goto	u3650
  6422  0883                     u3651:
  6423  0883  288D               	goto	l2643
  6424  0884                     u3650:
  6425  0884                     l2639:
  6426  0884  3000               	movlw	0
  6427  0885  00A7               	movwf	?___flmul+3
  6428  0886  3000               	movlw	0
  6429  0887  00A6               	movwf	?___flmul+2
  6430  0888  3000               	movlw	0
  6431  0889  00A5               	movwf	?___flmul+1
  6432  088A  3000               	movlw	0
  6433  088B  00A4               	movwf	?___flmul
  6434  088C  2B80               	goto	l711
  6435  088D                     l2643:
  6436  088D  0824               	movf	___flmul@b,w
  6437  088E  00AC               	movwf	??___flmul
  6438  088F  082C               	movf	??___flmul,w
  6439  0890  00F0               	movwf	__Umul8_16@multiplicand
  6440  0891  082A               	movf	___flmul@a+2,w
  6441  0892  160A  158A  21D4  120A  158A  	fcall	__Umul8_16
  6442  0897  0871               	movf	?__Umul8_16+1,w
  6443  0898  1283               	bcf	3,5	;RP0=0, select bank0
  6444  0899  1303               	bcf	3,6	;RP1=0, select bank0
  6445  089A  00BD               	movwf	___flmul@temp+1
  6446  089B  0870               	movf	?__Umul8_16,w
  6447  089C  00BC               	movwf	___flmul@temp
  6448  089D                     l2645:
  6449  089D  083C               	movf	___flmul@temp,w
  6450  089E  00AC               	movwf	??___flmul
  6451  089F  01AD               	clrf	??___flmul+1
  6452  08A0  01AE               	clrf	??___flmul+2
  6453  08A1  01AF               	clrf	??___flmul+3
  6454  08A2  082F               	movf	??___flmul+3,w
  6455  08A3  00B5               	movwf	___flmul@grs+3
  6456  08A4  082E               	movf	??___flmul+2,w
  6457  08A5  00B4               	movwf	___flmul@grs+2
  6458  08A6  082D               	movf	??___flmul+1,w
  6459  08A7  00B3               	movwf	___flmul@grs+1
  6460  08A8  082C               	movf	??___flmul,w
  6461  08A9  00B2               	movwf	___flmul@grs
  6462  08AA                     l2647:
  6463  08AA  083D               	movf	___flmul@temp+1,w
  6464  08AB  00AC               	movwf	??___flmul
  6465  08AC  01AD               	clrf	??___flmul+1
  6466  08AD  01AE               	clrf	??___flmul+2
  6467  08AE  01AF               	clrf	??___flmul+3
  6468  08AF  082F               	movf	??___flmul+3,w
  6469  08B0  00BB               	movwf	___flmul@prod+3
  6470  08B1  082E               	movf	??___flmul+2,w
  6471  08B2  00BA               	movwf	___flmul@prod+2
  6472  08B3  082D               	movf	??___flmul+1,w
  6473  08B4  00B9               	movwf	___flmul@prod+1
  6474  08B5  082C               	movf	??___flmul,w
  6475  08B6  00B8               	movwf	___flmul@prod
  6476  08B7  0825               	movf	___flmul@b+1,w
  6477  08B8  00AC               	movwf	??___flmul
  6478  08B9  082C               	movf	??___flmul,w
  6479  08BA  00F0               	movwf	__Umul8_16@multiplicand
  6480  08BB  0829               	movf	___flmul@a+1,w
  6481  08BC  160A  158A  21D4  120A  158A  	fcall	__Umul8_16
  6482  08C1  0871               	movf	?__Umul8_16+1,w
  6483  08C2  1283               	bcf	3,5	;RP0=0, select bank0
  6484  08C3  1303               	bcf	3,6	;RP1=0, select bank0
  6485  08C4  00BD               	movwf	___flmul@temp+1
  6486  08C5  0870               	movf	?__Umul8_16,w
  6487  08C6  00BC               	movwf	___flmul@temp
  6488  08C7                     l2649:
  6489  08C7  083C               	movf	___flmul@temp,w
  6490  08C8  00AC               	movwf	??___flmul
  6491  08C9  01AD               	clrf	??___flmul+1
  6492  08CA  01AE               	clrf	??___flmul+2
  6493  08CB  01AF               	clrf	??___flmul+3
  6494  08CC  082C               	movf	??___flmul,w
  6495  08CD  07B2               	addwf	___flmul@grs,f
  6496  08CE  082D               	movf	??___flmul+1,w
  6497  08CF  1103               	clrz
  6498  08D0  1803               	skipnc
  6499  08D1  3E01               	addlw	1
  6500  08D2  1903               	skipnz
  6501  08D3  28D5               	goto	u3661
  6502  08D4  07B3               	addwf	___flmul@grs+1,f
  6503  08D5                     u3661:
  6504  08D5  082E               	movf	??___flmul+2,w
  6505  08D6  1103               	clrz
  6506  08D7  1803               	skipnc
  6507  08D8  3E01               	addlw	1
  6508  08D9  1903               	skipnz
  6509  08DA  28DC               	goto	u3662
  6510  08DB  07B4               	addwf	___flmul@grs+2,f
  6511  08DC                     u3662:
  6512  08DC  082F               	movf	??___flmul+3,w
  6513  08DD  1103               	clrz
  6514  08DE  1803               	skipnc
  6515  08DF  3E01               	addlw	1
  6516  08E0  1903               	skipnz
  6517  08E1  28E3               	goto	u3663
  6518  08E2  07B5               	addwf	___flmul@grs+3,f
  6519  08E3                     u3663:
  6520  08E3                     l2651:
  6521  08E3  083D               	movf	___flmul@temp+1,w
  6522  08E4  00AC               	movwf	??___flmul
  6523  08E5  01AD               	clrf	??___flmul+1
  6524  08E6  01AE               	clrf	??___flmul+2
  6525  08E7  01AF               	clrf	??___flmul+3
  6526  08E8  082C               	movf	??___flmul,w
  6527  08E9  07B8               	addwf	___flmul@prod,f
  6528  08EA  082D               	movf	??___flmul+1,w
  6529  08EB  1103               	clrz
  6530  08EC  1803               	skipnc
  6531  08ED  3E01               	addlw	1
  6532  08EE  1903               	skipnz
  6533  08EF  28F1               	goto	u3671
  6534  08F0  07B9               	addwf	___flmul@prod+1,f
  6535  08F1                     u3671:
  6536  08F1  082E               	movf	??___flmul+2,w
  6537  08F2  1103               	clrz
  6538  08F3  1803               	skipnc
  6539  08F4  3E01               	addlw	1
  6540  08F5  1903               	skipnz
  6541  08F6  28F8               	goto	u3672
  6542  08F7  07BA               	addwf	___flmul@prod+2,f
  6543  08F8                     u3672:
  6544  08F8  082F               	movf	??___flmul+3,w
  6545  08F9  1103               	clrz
  6546  08FA  1803               	skipnc
  6547  08FB  3E01               	addlw	1
  6548  08FC  1903               	skipnz
  6549  08FD  28FF               	goto	u3673
  6550  08FE  07BB               	addwf	___flmul@prod+3,f
  6551  08FF                     u3673:
  6552  08FF  0826               	movf	___flmul@b+2,w
  6553  0900  00AC               	movwf	??___flmul
  6554  0901  082C               	movf	??___flmul,w
  6555  0902  00F0               	movwf	__Umul8_16@multiplicand
  6556  0903  0828               	movf	___flmul@a,w
  6557  0904  160A  158A  21D4  120A  158A  	fcall	__Umul8_16
  6558  0909  0871               	movf	?__Umul8_16+1,w
  6559  090A  1283               	bcf	3,5	;RP0=0, select bank0
  6560  090B  1303               	bcf	3,6	;RP1=0, select bank0
  6561  090C  00BD               	movwf	___flmul@temp+1
  6562  090D  0870               	movf	?__Umul8_16,w
  6563  090E  00BC               	movwf	___flmul@temp
  6564  090F                     l2653:
  6565  090F  083C               	movf	___flmul@temp,w
  6566  0910  00AC               	movwf	??___flmul
  6567  0911  01AD               	clrf	??___flmul+1
  6568  0912  01AE               	clrf	??___flmul+2
  6569  0913  01AF               	clrf	??___flmul+3
  6570  0914  082C               	movf	??___flmul,w
  6571  0915  07B2               	addwf	___flmul@grs,f
  6572  0916  082D               	movf	??___flmul+1,w
  6573  0917  1103               	clrz
  6574  0918  1803               	skipnc
  6575  0919  3E01               	addlw	1
  6576  091A  1903               	skipnz
  6577  091B  291D               	goto	u3681
  6578  091C  07B3               	addwf	___flmul@grs+1,f
  6579  091D                     u3681:
  6580  091D  082E               	movf	??___flmul+2,w
  6581  091E  1103               	clrz
  6582  091F  1803               	skipnc
  6583  0920  3E01               	addlw	1
  6584  0921  1903               	skipnz
  6585  0922  2924               	goto	u3682
  6586  0923  07B4               	addwf	___flmul@grs+2,f
  6587  0924                     u3682:
  6588  0924  082F               	movf	??___flmul+3,w
  6589  0925  1103               	clrz
  6590  0926  1803               	skipnc
  6591  0927  3E01               	addlw	1
  6592  0928  1903               	skipnz
  6593  0929  292B               	goto	u3683
  6594  092A  07B5               	addwf	___flmul@grs+3,f
  6595  092B                     u3683:
  6596  092B                     l2655:
  6597  092B  083D               	movf	___flmul@temp+1,w
  6598  092C  00AC               	movwf	??___flmul
  6599  092D  01AD               	clrf	??___flmul+1
  6600  092E  01AE               	clrf	??___flmul+2
  6601  092F  01AF               	clrf	??___flmul+3
  6602  0930  082C               	movf	??___flmul,w
  6603  0931  07B8               	addwf	___flmul@prod,f
  6604  0932  082D               	movf	??___flmul+1,w
  6605  0933  1103               	clrz
  6606  0934  1803               	skipnc
  6607  0935  3E01               	addlw	1
  6608  0936  1903               	skipnz
  6609  0937  2939               	goto	u3691
  6610  0938  07B9               	addwf	___flmul@prod+1,f
  6611  0939                     u3691:
  6612  0939  082E               	movf	??___flmul+2,w
  6613  093A  1103               	clrz
  6614  093B  1803               	skipnc
  6615  093C  3E01               	addlw	1
  6616  093D  1903               	skipnz
  6617  093E  2940               	goto	u3692
  6618  093F  07BA               	addwf	___flmul@prod+2,f
  6619  0940                     u3692:
  6620  0940  082F               	movf	??___flmul+3,w
  6621  0941  1103               	clrz
  6622  0942  1803               	skipnc
  6623  0943  3E01               	addlw	1
  6624  0944  1903               	skipnz
  6625  0945  2947               	goto	u3693
  6626  0946  07BB               	addwf	___flmul@prod+3,f
  6627  0947                     u3693:
  6628  0947                     l2657:
  6629  0947  3008               	movlw	8
  6630  0948  00AC               	movwf	??___flmul
  6631  0949                     u3705:
  6632  0949  1003               	clrc
  6633  094A  0DB2               	rlf	___flmul@grs,f
  6634  094B  0DB3               	rlf	___flmul@grs+1,f
  6635  094C  0DB4               	rlf	___flmul@grs+2,f
  6636  094D  0DB5               	rlf	___flmul@grs+3,f
  6637  094E  0BAC               	decfsz	??___flmul,f
  6638  094F  2949               	goto	u3705
  6639  0950                     l2659:
  6640  0950  0825               	movf	___flmul@b+1,w
  6641  0951  00AC               	movwf	??___flmul
  6642  0952  082C               	movf	??___flmul,w
  6643  0953  00F0               	movwf	__Umul8_16@multiplicand
  6644  0954  0828               	movf	___flmul@a,w
  6645  0955  160A  158A  21D4  120A  158A  	fcall	__Umul8_16
  6646  095A  0871               	movf	?__Umul8_16+1,w
  6647  095B  1283               	bcf	3,5	;RP0=0, select bank0
  6648  095C  1303               	bcf	3,6	;RP1=0, select bank0
  6649  095D  00BD               	movwf	___flmul@temp+1
  6650  095E  0870               	movf	?__Umul8_16,w
  6651  095F  00BC               	movwf	___flmul@temp
  6652  0960                     l2661:
  6653  0960  083C               	movf	___flmul@temp,w
  6654  0961  00AC               	movwf	??___flmul
  6655  0962  083D               	movf	___flmul@temp+1,w
  6656  0963  00AD               	movwf	??___flmul+1
  6657  0964  01AE               	clrf	??___flmul+2
  6658  0965  01AF               	clrf	??___flmul+3
  6659  0966  082C               	movf	??___flmul,w
  6660  0967  07B2               	addwf	___flmul@grs,f
  6661  0968  082D               	movf	??___flmul+1,w
  6662  0969  1103               	clrz
  6663  096A  1803               	skipnc
  6664  096B  3E01               	addlw	1
  6665  096C  1903               	skipnz
  6666  096D  296F               	goto	u3711
  6667  096E  07B3               	addwf	___flmul@grs+1,f
  6668  096F                     u3711:
  6669  096F  082E               	movf	??___flmul+2,w
  6670  0970  1103               	clrz
  6671  0971  1803               	skipnc
  6672  0972  3E01               	addlw	1
  6673  0973  1903               	skipnz
  6674  0974  2976               	goto	u3712
  6675  0975  07B4               	addwf	___flmul@grs+2,f
  6676  0976                     u3712:
  6677  0976  082F               	movf	??___flmul+3,w
  6678  0977  1103               	clrz
  6679  0978  1803               	skipnc
  6680  0979  3E01               	addlw	1
  6681  097A  1903               	skipnz
  6682  097B  297D               	goto	u3713
  6683  097C  07B5               	addwf	___flmul@grs+3,f
  6684  097D                     u3713:
  6685  097D                     l2663:
  6686  097D  0824               	movf	___flmul@b,w
  6687  097E  00AC               	movwf	??___flmul
  6688  097F  082C               	movf	??___flmul,w
  6689  0980  00F0               	movwf	__Umul8_16@multiplicand
  6690  0981  0829               	movf	___flmul@a+1,w
  6691  0982  160A  158A  21D4  120A  158A  	fcall	__Umul8_16
  6692  0987  0871               	movf	?__Umul8_16+1,w
  6693  0988  1283               	bcf	3,5	;RP0=0, select bank0
  6694  0989  1303               	bcf	3,6	;RP1=0, select bank0
  6695  098A  00BD               	movwf	___flmul@temp+1
  6696  098B  0870               	movf	?__Umul8_16,w
  6697  098C  00BC               	movwf	___flmul@temp
  6698  098D                     l2665:
  6699  098D  083C               	movf	___flmul@temp,w
  6700  098E  00AC               	movwf	??___flmul
  6701  098F  083D               	movf	___flmul@temp+1,w
  6702  0990  00AD               	movwf	??___flmul+1
  6703  0991  01AE               	clrf	??___flmul+2
  6704  0992  01AF               	clrf	??___flmul+3
  6705  0993  082C               	movf	??___flmul,w
  6706  0994  07B2               	addwf	___flmul@grs,f
  6707  0995  082D               	movf	??___flmul+1,w
  6708  0996  1103               	clrz
  6709  0997  1803               	skipnc
  6710  0998  3E01               	addlw	1
  6711  0999  1903               	skipnz
  6712  099A  299C               	goto	u3721
  6713  099B  07B3               	addwf	___flmul@grs+1,f
  6714  099C                     u3721:
  6715  099C  082E               	movf	??___flmul+2,w
  6716  099D  1103               	clrz
  6717  099E  1803               	skipnc
  6718  099F  3E01               	addlw	1
  6719  09A0  1903               	skipnz
  6720  09A1  29A3               	goto	u3722
  6721  09A2  07B4               	addwf	___flmul@grs+2,f
  6722  09A3                     u3722:
  6723  09A3  082F               	movf	??___flmul+3,w
  6724  09A4  1103               	clrz
  6725  09A5  1803               	skipnc
  6726  09A6  3E01               	addlw	1
  6727  09A7  1903               	skipnz
  6728  09A8  29AA               	goto	u3723
  6729  09A9  07B5               	addwf	___flmul@grs+3,f
  6730  09AA                     u3723:
  6731  09AA                     l2667:
  6732  09AA  3008               	movlw	8
  6733  09AB  00AC               	movwf	??___flmul
  6734  09AC                     u3735:
  6735  09AC  1003               	clrc
  6736  09AD  0DB2               	rlf	___flmul@grs,f
  6737  09AE  0DB3               	rlf	___flmul@grs+1,f
  6738  09AF  0DB4               	rlf	___flmul@grs+2,f
  6739  09B0  0DB5               	rlf	___flmul@grs+3,f
  6740  09B1  0BAC               	decfsz	??___flmul,f
  6741  09B2  29AC               	goto	u3735
  6742  09B3  0824               	movf	___flmul@b,w
  6743  09B4  00AC               	movwf	??___flmul
  6744  09B5  082C               	movf	??___flmul,w
  6745  09B6  00F0               	movwf	__Umul8_16@multiplicand
  6746  09B7  0828               	movf	___flmul@a,w
  6747  09B8  160A  158A  21D4  120A  158A  	fcall	__Umul8_16
  6748  09BD  0871               	movf	?__Umul8_16+1,w
  6749  09BE  1283               	bcf	3,5	;RP0=0, select bank0
  6750  09BF  1303               	bcf	3,6	;RP1=0, select bank0
  6751  09C0  00BD               	movwf	___flmul@temp+1
  6752  09C1  0870               	movf	?__Umul8_16,w
  6753  09C2  00BC               	movwf	___flmul@temp
  6754  09C3                     l2669:
  6755  09C3  083C               	movf	___flmul@temp,w
  6756  09C4  00AC               	movwf	??___flmul
  6757  09C5  083D               	movf	___flmul@temp+1,w
  6758  09C6  00AD               	movwf	??___flmul+1
  6759  09C7  01AE               	clrf	??___flmul+2
  6760  09C8  01AF               	clrf	??___flmul+3
  6761  09C9  082C               	movf	??___flmul,w
  6762  09CA  07B2               	addwf	___flmul@grs,f
  6763  09CB  082D               	movf	??___flmul+1,w
  6764  09CC  1103               	clrz
  6765  09CD  1803               	skipnc
  6766  09CE  3E01               	addlw	1
  6767  09CF  1903               	skipnz
  6768  09D0  29D2               	goto	u3741
  6769  09D1  07B3               	addwf	___flmul@grs+1,f
  6770  09D2                     u3741:
  6771  09D2  082E               	movf	??___flmul+2,w
  6772  09D3  1103               	clrz
  6773  09D4  1803               	skipnc
  6774  09D5  3E01               	addlw	1
  6775  09D6  1903               	skipnz
  6776  09D7  29D9               	goto	u3742
  6777  09D8  07B4               	addwf	___flmul@grs+2,f
  6778  09D9                     u3742:
  6779  09D9  082F               	movf	??___flmul+3,w
  6780  09DA  1103               	clrz
  6781  09DB  1803               	skipnc
  6782  09DC  3E01               	addlw	1
  6783  09DD  1903               	skipnz
  6784  09DE  29E0               	goto	u3743
  6785  09DF  07B5               	addwf	___flmul@grs+3,f
  6786  09E0                     u3743:
  6787  09E0                     l2671:
  6788  09E0  0825               	movf	___flmul@b+1,w
  6789  09E1  00AC               	movwf	??___flmul
  6790  09E2  082C               	movf	??___flmul,w
  6791  09E3  00F0               	movwf	__Umul8_16@multiplicand
  6792  09E4  082A               	movf	___flmul@a+2,w
  6793  09E5  160A  158A  21D4  120A  158A  	fcall	__Umul8_16
  6794  09EA  0871               	movf	?__Umul8_16+1,w
  6795  09EB  1283               	bcf	3,5	;RP0=0, select bank0
  6796  09EC  1303               	bcf	3,6	;RP1=0, select bank0
  6797  09ED  00BD               	movwf	___flmul@temp+1
  6798  09EE  0870               	movf	?__Umul8_16,w
  6799  09EF  00BC               	movwf	___flmul@temp
  6800  09F0  083C               	movf	___flmul@temp,w
  6801  09F1  00AC               	movwf	??___flmul
  6802  09F2  083D               	movf	___flmul@temp+1,w
  6803  09F3  00AD               	movwf	??___flmul+1
  6804  09F4  01AE               	clrf	??___flmul+2
  6805  09F5  01AF               	clrf	??___flmul+3
  6806  09F6  082C               	movf	??___flmul,w
  6807  09F7  07B8               	addwf	___flmul@prod,f
  6808  09F8  082D               	movf	??___flmul+1,w
  6809  09F9  1103               	clrz
  6810  09FA  1803               	skipnc
  6811  09FB  3E01               	addlw	1
  6812  09FC  1903               	skipnz
  6813  09FD  29FF               	goto	u3751
  6814  09FE  07B9               	addwf	___flmul@prod+1,f
  6815  09FF                     u3751:
  6816  09FF  082E               	movf	??___flmul+2,w
  6817  0A00  1103               	clrz
  6818  0A01  1803               	skipnc
  6819  0A02  3E01               	addlw	1
  6820  0A03  1903               	skipnz
  6821  0A04  2A06               	goto	u3752
  6822  0A05  07BA               	addwf	___flmul@prod+2,f
  6823  0A06                     u3752:
  6824  0A06  082F               	movf	??___flmul+3,w
  6825  0A07  1103               	clrz
  6826  0A08  1803               	skipnc
  6827  0A09  3E01               	addlw	1
  6828  0A0A  1903               	skipnz
  6829  0A0B  2A0D               	goto	u3753
  6830  0A0C  07BB               	addwf	___flmul@prod+3,f
  6831  0A0D                     u3753:
  6832  0A0D                     l2673:
  6833  0A0D  0826               	movf	___flmul@b+2,w
  6834  0A0E  00AC               	movwf	??___flmul
  6835  0A0F  082C               	movf	??___flmul,w
  6836  0A10  00F0               	movwf	__Umul8_16@multiplicand
  6837  0A11  0829               	movf	___flmul@a+1,w
  6838  0A12  160A  158A  21D4  120A  158A  	fcall	__Umul8_16
  6839  0A17  0871               	movf	?__Umul8_16+1,w
  6840  0A18  1283               	bcf	3,5	;RP0=0, select bank0
  6841  0A19  1303               	bcf	3,6	;RP1=0, select bank0
  6842  0A1A  00BD               	movwf	___flmul@temp+1
  6843  0A1B  0870               	movf	?__Umul8_16,w
  6844  0A1C  00BC               	movwf	___flmul@temp
  6845  0A1D                     l2675:
  6846  0A1D  083C               	movf	___flmul@temp,w
  6847  0A1E  00AC               	movwf	??___flmul
  6848  0A1F  083D               	movf	___flmul@temp+1,w
  6849  0A20  00AD               	movwf	??___flmul+1
  6850  0A21  01AE               	clrf	??___flmul+2
  6851  0A22  01AF               	clrf	??___flmul+3
  6852  0A23  082C               	movf	??___flmul,w
  6853  0A24  07B8               	addwf	___flmul@prod,f
  6854  0A25  082D               	movf	??___flmul+1,w
  6855  0A26  1103               	clrz
  6856  0A27  1803               	skipnc
  6857  0A28  3E01               	addlw	1
  6858  0A29  1903               	skipnz
  6859  0A2A  2A2C               	goto	u3761
  6860  0A2B  07B9               	addwf	___flmul@prod+1,f
  6861  0A2C                     u3761:
  6862  0A2C  082E               	movf	??___flmul+2,w
  6863  0A2D  1103               	clrz
  6864  0A2E  1803               	skipnc
  6865  0A2F  3E01               	addlw	1
  6866  0A30  1903               	skipnz
  6867  0A31  2A33               	goto	u3762
  6868  0A32  07BA               	addwf	___flmul@prod+2,f
  6869  0A33                     u3762:
  6870  0A33  082F               	movf	??___flmul+3,w
  6871  0A34  1103               	clrz
  6872  0A35  1803               	skipnc
  6873  0A36  3E01               	addlw	1
  6874  0A37  1903               	skipnz
  6875  0A38  2A3A               	goto	u3763
  6876  0A39  07BB               	addwf	___flmul@prod+3,f
  6877  0A3A                     u3763:
  6878  0A3A  0826               	movf	___flmul@b+2,w
  6879  0A3B  00AC               	movwf	??___flmul
  6880  0A3C  082C               	movf	??___flmul,w
  6881  0A3D  00F0               	movwf	__Umul8_16@multiplicand
  6882  0A3E  082A               	movf	___flmul@a+2,w
  6883  0A3F  160A  158A  21D4  120A  158A  	fcall	__Umul8_16
  6884  0A44  0871               	movf	?__Umul8_16+1,w
  6885  0A45  1283               	bcf	3,5	;RP0=0, select bank0
  6886  0A46  1303               	bcf	3,6	;RP1=0, select bank0
  6887  0A47  00BD               	movwf	___flmul@temp+1
  6888  0A48  0870               	movf	?__Umul8_16,w
  6889  0A49  00BC               	movwf	___flmul@temp
  6890  0A4A                     l2677:
  6891  0A4A  083C               	movf	___flmul@temp,w
  6892  0A4B  00AC               	movwf	??___flmul
  6893  0A4C  083D               	movf	___flmul@temp+1,w
  6894  0A4D  00AD               	movwf	??___flmul+1
  6895  0A4E  01AE               	clrf	??___flmul+2
  6896  0A4F  01AF               	clrf	??___flmul+3
  6897  0A50  3008               	movlw	8
  6898  0A51                     u3775:
  6899  0A51  1003               	clrc
  6900  0A52  0DAC               	rlf	??___flmul,f
  6901  0A53  0DAD               	rlf	??___flmul+1,f
  6902  0A54  0DAE               	rlf	??___flmul+2,f
  6903  0A55  0DAF               	rlf	??___flmul+3,f
  6904  0A56                     u3770:
  6905  0A56  3EFF               	addlw	-1
  6906  0A57  1D03               	skipz
  6907  0A58  2A51               	goto	u3775
  6908  0A59  082C               	movf	??___flmul,w
  6909  0A5A  07B8               	addwf	___flmul@prod,f
  6910  0A5B  082D               	movf	??___flmul+1,w
  6911  0A5C  1103               	clrz
  6912  0A5D  1803               	skipnc
  6913  0A5E  3E01               	addlw	1
  6914  0A5F  1903               	skipnz
  6915  0A60  2A62               	goto	u3781
  6916  0A61  07B9               	addwf	___flmul@prod+1,f
  6917  0A62                     u3781:
  6918  0A62  082E               	movf	??___flmul+2,w
  6919  0A63  1103               	clrz
  6920  0A64  1803               	skipnc
  6921  0A65  3E01               	addlw	1
  6922  0A66  1903               	skipnz
  6923  0A67  2A69               	goto	u3782
  6924  0A68  07BA               	addwf	___flmul@prod+2,f
  6925  0A69                     u3782:
  6926  0A69  082F               	movf	??___flmul+3,w
  6927  0A6A  1103               	clrz
  6928  0A6B  1803               	skipnc
  6929  0A6C  3E01               	addlw	1
  6930  0A6D  1903               	skipnz
  6931  0A6E  2A70               	goto	u3783
  6932  0A6F  07BB               	addwf	___flmul@prod+3,f
  6933  0A70                     u3783:
  6934  0A70                     l2679:
  6935  0A70  0832               	movf	___flmul@grs,w
  6936  0A71  00AC               	movwf	??___flmul
  6937  0A72  0833               	movf	___flmul@grs+1,w
  6938  0A73  00AD               	movwf	??___flmul+1
  6939  0A74  0834               	movf	___flmul@grs+2,w
  6940  0A75  00AE               	movwf	??___flmul+2
  6941  0A76  0835               	movf	___flmul@grs+3,w
  6942  0A77  00AF               	movwf	??___flmul+3
  6943  0A78  3018               	movlw	24
  6944  0A79                     u3795:
  6945  0A79  1003               	clrc
  6946  0A7A  0CAF               	rrf	??___flmul+3,f
  6947  0A7B  0CAE               	rrf	??___flmul+2,f
  6948  0A7C  0CAD               	rrf	??___flmul+1,f
  6949  0A7D  0CAC               	rrf	??___flmul,f
  6950  0A7E                     u3790:
  6951  0A7E  3EFF               	addlw	-1
  6952  0A7F  1D03               	skipz
  6953  0A80  2A79               	goto	u3795
  6954  0A81  082C               	movf	??___flmul,w
  6955  0A82  07B8               	addwf	___flmul@prod,f
  6956  0A83  082D               	movf	??___flmul+1,w
  6957  0A84  1103               	clrz
  6958  0A85  1803               	skipnc
  6959  0A86  3E01               	addlw	1
  6960  0A87  1903               	skipnz
  6961  0A88  2A8A               	goto	u3801
  6962  0A89  07B9               	addwf	___flmul@prod+1,f
  6963  0A8A                     u3801:
  6964  0A8A  082E               	movf	??___flmul+2,w
  6965  0A8B  1103               	clrz
  6966  0A8C  1803               	skipnc
  6967  0A8D  3E01               	addlw	1
  6968  0A8E  1903               	skipnz
  6969  0A8F  2A91               	goto	u3802
  6970  0A90  07BA               	addwf	___flmul@prod+2,f
  6971  0A91                     u3802:
  6972  0A91  082F               	movf	??___flmul+3,w
  6973  0A92  1103               	clrz
  6974  0A93  1803               	skipnc
  6975  0A94  3E01               	addlw	1
  6976  0A95  1903               	skipnz
  6977  0A96  2A98               	goto	u3803
  6978  0A97  07BB               	addwf	___flmul@prod+3,f
  6979  0A98                     u3803:
  6980  0A98                     l2681:
  6981  0A98  3008               	movlw	8
  6982  0A99  00AC               	movwf	??___flmul
  6983  0A9A                     u3815:
  6984  0A9A  1003               	clrc
  6985  0A9B  0DB2               	rlf	___flmul@grs,f
  6986  0A9C  0DB3               	rlf	___flmul@grs+1,f
  6987  0A9D  0DB4               	rlf	___flmul@grs+2,f
  6988  0A9E  0DB5               	rlf	___flmul@grs+3,f
  6989  0A9F  0BAC               	decfsz	??___flmul,f
  6990  0AA0  2A9A               	goto	u3815
  6991  0AA1                     l2683:
  6992  0AA1  0837               	movf	___flmul@bexp,w
  6993  0AA2  0736               	addwf	___flmul@aexp,w
  6994  0AA3  00AC               	movwf	??___flmul
  6995  0AA4  01AD               	clrf	??___flmul+1
  6996  0AA5  0DAD               	rlf	??___flmul+1,f
  6997  0AA6  082C               	movf	??___flmul,w
  6998  0AA7  3E82               	addlw	130
  6999  0AA8  00BC               	movwf	___flmul@temp
  7000  0AA9  082D               	movf	??___flmul+1,w
  7001  0AAA  1803               	skipnc
  7002  0AAB  3E01               	addlw	1
  7003  0AAC  3EFF               	addlw	255
  7004  0AAD  00BD               	movwf	___flmul@temp+1
  7005  0AAE  2ACC               	goto	l2695
  7006  0AAF                     l2685:
  7007  0AAF  3001               	movlw	1
  7008  0AB0  00AC               	movwf	??___flmul
  7009  0AB1                     u3825:
  7010  0AB1  1003               	clrc
  7011  0AB2  0DB8               	rlf	___flmul@prod,f
  7012  0AB3  0DB9               	rlf	___flmul@prod+1,f
  7013  0AB4  0DBA               	rlf	___flmul@prod+2,f
  7014  0AB5  0DBB               	rlf	___flmul@prod+3,f
  7015  0AB6  0BAC               	decfsz	??___flmul,f
  7016  0AB7  2AB1               	goto	u3825
  7017  0AB8                     l2687:
  7018  0AB8  1FB5               	btfss	___flmul@grs+3,7
  7019  0AB9  2ABB               	goto	u3831
  7020  0ABA  2ABC               	goto	u3830
  7021  0ABB                     u3831:
  7022  0ABB  2ABD               	goto	l2691
  7023  0ABC                     u3830:
  7024  0ABC                     l2689:
  7025  0ABC  1438               	bsf	___flmul@prod,0
  7026  0ABD                     l2691:
  7027  0ABD  3001               	movlw	1
  7028  0ABE  00AC               	movwf	??___flmul
  7029  0ABF                     u3845:
  7030  0ABF  1003               	clrc
  7031  0AC0  0DB2               	rlf	___flmul@grs,f
  7032  0AC1  0DB3               	rlf	___flmul@grs+1,f
  7033  0AC2  0DB4               	rlf	___flmul@grs+2,f
  7034  0AC3  0DB5               	rlf	___flmul@grs+3,f
  7035  0AC4  0BAC               	decfsz	??___flmul,f
  7036  0AC5  2ABF               	goto	u3845
  7037  0AC6                     l2693:
  7038  0AC6  30FF               	movlw	255
  7039  0AC7  07BC               	addwf	___flmul@temp,f
  7040  0AC8  1803               	skipnc
  7041  0AC9  0ABD               	incf	___flmul@temp+1,f
  7042  0ACA  30FF               	movlw	255
  7043  0ACB  07BD               	addwf	___flmul@temp+1,f
  7044  0ACC                     l2695:
  7045  0ACC  1FBA               	btfss	___flmul@prod+2,7
  7046  0ACD  2ACF               	goto	u3851
  7047  0ACE  2AD0               	goto	u3850
  7048  0ACF                     u3851:
  7049  0ACF  2AAF               	goto	l2685
  7050  0AD0                     u3850:
  7051  0AD0                     l2697:
  7052  0AD0  01B6               	clrf	___flmul@aexp
  7053  0AD1                     l2699:
  7054  0AD1  1FB5               	btfss	___flmul@grs+3,7
  7055  0AD2  2AD4               	goto	u3861
  7056  0AD3  2AD5               	goto	u3860
  7057  0AD4                     u3861:
  7058  0AD4  2AF1               	goto	l2707
  7059  0AD5                     u3860:
  7060  0AD5                     l2701:
  7061  0AD5  30FF               	movlw	255
  7062  0AD6  0532               	andwf	___flmul@grs,w
  7063  0AD7  00AC               	movwf	??___flmul
  7064  0AD8  30FF               	movlw	255
  7065  0AD9  0533               	andwf	___flmul@grs+1,w
  7066  0ADA  00AD               	movwf	??___flmul+1
  7067  0ADB  30FF               	movlw	255
  7068  0ADC  0534               	andwf	___flmul@grs+2,w
  7069  0ADD  00AE               	movwf	??___flmul+2
  7070  0ADE  307F               	movlw	127
  7071  0ADF  0535               	andwf	___flmul@grs+3,w
  7072  0AE0  00AF               	movwf	??___flmul+3
  7073  0AE1  082F               	movf	??___flmul+3,w
  7074  0AE2  042E               	iorwf	??___flmul+2,w
  7075  0AE3  042D               	iorwf	??___flmul+1,w
  7076  0AE4  042C               	iorwf	??___flmul,w
  7077  0AE5  1903               	skipnz
  7078  0AE6  2AE8               	goto	u3871
  7079  0AE7  2AE9               	goto	u3870
  7080  0AE8                     u3871:
  7081  0AE8  2AEC               	goto	l717
  7082  0AE9                     u3870:
  7083  0AE9                     l2703:
  7084  0AE9  01B6               	clrf	___flmul@aexp
  7085  0AEA  0AB6               	incf	___flmul@aexp,f
  7086  0AEB  2AF1               	goto	l2707
  7087  0AEC                     l717:
  7088  0AEC  1C38               	btfss	___flmul@prod,0
  7089  0AED  2AEF               	goto	u3881
  7090  0AEE  2AF0               	goto	u3880
  7091  0AEF                     u3881:
  7092  0AEF  2AF1               	goto	l2707
  7093  0AF0                     u3880:
  7094  0AF0  2AE9               	goto	l2703
  7095  0AF1                     l2707:
  7096  0AF1  0836               	movf	___flmul@aexp,w
  7097  0AF2  1903               	btfsc	3,2
  7098  0AF3  2AF5               	goto	u3891
  7099  0AF4  2AF6               	goto	u3890
  7100  0AF5                     u3891:
  7101  0AF5  2B27               	goto	l2717
  7102  0AF6                     u3890:
  7103  0AF6                     l2709:
  7104  0AF6  3001               	movlw	1
  7105  0AF7  07B8               	addwf	___flmul@prod,f
  7106  0AF8  3000               	movlw	0
  7107  0AF9  1803               	skipnc
  7108  0AFA  3001               	movlw	1
  7109  0AFB  07B9               	addwf	___flmul@prod+1,f
  7110  0AFC  3000               	movlw	0
  7111  0AFD  1803               	skipnc
  7112  0AFE  3001               	movlw	1
  7113  0AFF  07BA               	addwf	___flmul@prod+2,f
  7114  0B00  3000               	movlw	0
  7115  0B01  1803               	skipnc
  7116  0B02  3001               	movlw	1
  7117  0B03  07BB               	addwf	___flmul@prod+3,f
  7118  0B04                     l2711:
  7119  0B04  1C3B               	btfss	___flmul@prod+3,0
  7120  0B05  2B07               	goto	u3901
  7121  0B06  2B08               	goto	u3900
  7122  0B07                     u3901:
  7123  0B07  2B27               	goto	l2717
  7124  0B08                     u3900:
  7125  0B08                     l2713:
  7126  0B08  0838               	movf	___flmul@prod,w
  7127  0B09  00AC               	movwf	??___flmul
  7128  0B0A  0839               	movf	___flmul@prod+1,w
  7129  0B0B  00AD               	movwf	??___flmul+1
  7130  0B0C  083A               	movf	___flmul@prod+2,w
  7131  0B0D  00AE               	movwf	??___flmul+2
  7132  0B0E  083B               	movf	___flmul@prod+3,w
  7133  0B0F  00AF               	movwf	??___flmul+3
  7134  0B10  3001               	movlw	1
  7135  0B11  00B0               	movwf	??___flmul+4
  7136  0B12                     u3915:
  7137  0B12  0D2F               	rlf	??___flmul+3,w
  7138  0B13  0CAF               	rrf	??___flmul+3,f
  7139  0B14  0CAE               	rrf	??___flmul+2,f
  7140  0B15  0CAD               	rrf	??___flmul+1,f
  7141  0B16  0CAC               	rrf	??___flmul,f
  7142  0B17                     u3910:
  7143  0B17  0BB0               	decfsz	??___flmul+4,f
  7144  0B18  2B12               	goto	u3915
  7145  0B19  082F               	movf	??___flmul+3,w
  7146  0B1A  00BB               	movwf	___flmul@prod+3
  7147  0B1B  082E               	movf	??___flmul+2,w
  7148  0B1C  00BA               	movwf	___flmul@prod+2
  7149  0B1D  082D               	movf	??___flmul+1,w
  7150  0B1E  00B9               	movwf	___flmul@prod+1
  7151  0B1F  082C               	movf	??___flmul,w
  7152  0B20  00B8               	movwf	___flmul@prod
  7153  0B21                     l2715:
  7154  0B21  3001               	movlw	1
  7155  0B22  07BC               	addwf	___flmul@temp,f
  7156  0B23  1803               	skipnc
  7157  0B24  0ABD               	incf	___flmul@temp+1,f
  7158  0B25  3000               	movlw	0
  7159  0B26  07BD               	addwf	___flmul@temp+1,f
  7160  0B27                     l2717:
  7161  0B27  083D               	movf	___flmul@temp+1,w
  7162  0B28  3A80               	xorlw	128
  7163  0B29  00FF               	movwf	btemp+1
  7164  0B2A  3080               	movlw	128
  7165  0B2B  027F               	subwf	btemp+1,w
  7166  0B2C  1D03               	skipz
  7167  0B2D  2B30               	goto	u3925
  7168  0B2E  30FF               	movlw	255
  7169  0B2F  023C               	subwf	___flmul@temp,w
  7170  0B30                     u3925:
  7171  0B30  1C03               	skipc
  7172  0B31  2B33               	goto	u3921
  7173  0B32  2B34               	goto	u3920
  7174  0B33                     u3921:
  7175  0B33  2B3F               	goto	l2721
  7176  0B34                     u3920:
  7177  0B34                     l2719:
  7178  0B34  307F               	movlw	127
  7179  0B35  1283               	bcf	3,5	;RP0=0, select bank0
  7180  0B36  1303               	bcf	3,6	;RP1=0, select bank0
  7181  0B37  00BB               	movwf	___flmul@prod+3
  7182  0B38  3080               	movlw	128
  7183  0B39  00BA               	movwf	___flmul@prod+2
  7184  0B3A  3000               	movlw	0
  7185  0B3B  00B9               	movwf	___flmul@prod+1
  7186  0B3C  3000               	movlw	0
  7187  0B3D  00B8               	movwf	___flmul@prod
  7188  0B3E  2B74               	goto	l723
  7189  0B3F                     l2721:
  7190  0B3F  1283               	bcf	3,5	;RP0=0, select bank0
  7191  0B40  1303               	bcf	3,6	;RP1=0, select bank0
  7192  0B41  083D               	movf	___flmul@temp+1,w
  7193  0B42  3A80               	xorlw	128
  7194  0B43  00FF               	movwf	btemp+1
  7195  0B44  3080               	movlw	128
  7196  0B45  027F               	subwf	btemp+1,w
  7197  0B46  1D03               	skipz
  7198  0B47  2B4A               	goto	u3935
  7199  0B48  3001               	movlw	1
  7200  0B49  023C               	subwf	___flmul@temp,w
  7201  0B4A                     u3935:
  7202  0B4A  1803               	skipnc
  7203  0B4B  2B4D               	goto	u3931
  7204  0B4C  2B4E               	goto	u3930
  7205  0B4D                     u3931:
  7206  0B4D  2B5A               	goto	l2727
  7207  0B4E                     u3930:
  7208  0B4E                     l2723:
  7209  0B4E  3000               	movlw	0
  7210  0B4F  1283               	bcf	3,5	;RP0=0, select bank0
  7211  0B50  1303               	bcf	3,6	;RP1=0, select bank0
  7212  0B51  00BB               	movwf	___flmul@prod+3
  7213  0B52  3000               	movlw	0
  7214  0B53  00BA               	movwf	___flmul@prod+2
  7215  0B54  3000               	movlw	0
  7216  0B55  00B9               	movwf	___flmul@prod+1
  7217  0B56  3000               	movlw	0
  7218  0B57  00B8               	movwf	___flmul@prod
  7219  0B58                     l2725:
  7220  0B58  01B1               	clrf	___flmul@sign
  7221  0B59  2B74               	goto	l723
  7222  0B5A                     l2727:
  7223  0B5A  1283               	bcf	3,5	;RP0=0, select bank0
  7224  0B5B  1303               	bcf	3,6	;RP1=0, select bank0
  7225  0B5C  083C               	movf	___flmul@temp,w
  7226  0B5D  00AC               	movwf	??___flmul
  7227  0B5E  082C               	movf	??___flmul,w
  7228  0B5F  00B7               	movwf	___flmul@bexp
  7229  0B60  30FF               	movlw	255
  7230  0B61  05B8               	andwf	___flmul@prod,f
  7231  0B62  30FF               	movlw	255
  7232  0B63  05B9               	andwf	___flmul@prod+1,f
  7233  0B64  307F               	movlw	127
  7234  0B65  05BA               	andwf	___flmul@prod+2,f
  7235  0B66  3000               	movlw	0
  7236  0B67  05BB               	andwf	___flmul@prod+3,f
  7237  0B68                     l2729:
  7238  0B68  1C37               	btfss	___flmul@bexp,0
  7239  0B69  2B6B               	goto	u3941
  7240  0B6A  2B6C               	goto	u3940
  7241  0B6B                     u3941:
  7242  0B6B  2B6D               	goto	l2733
  7243  0B6C                     u3940:
  7244  0B6C                     l2731:
  7245  0B6C  17BA               	bsf	___flmul@prod+2,7
  7246  0B6D                     l2733:
  7247  0B6D  0837               	movf	___flmul@bexp,w
  7248  0B6E  00AC               	movwf	??___flmul
  7249  0B6F  1003               	clrc
  7250  0B70  0C2C               	rrf	??___flmul,w
  7251  0B71  00AD               	movwf	??___flmul+1
  7252  0B72  082D               	movf	??___flmul+1,w
  7253  0B73  00BB               	movwf	___flmul@prod+3
  7254  0B74                     l723:
  7255  0B74  0831               	movf	___flmul@sign,w
  7256  0B75  00AC               	movwf	??___flmul
  7257  0B76  082C               	movf	??___flmul,w
  7258  0B77  04BB               	iorwf	___flmul@prod+3,f
  7259  0B78                     l2735:
  7260  0B78  083B               	movf	___flmul@prod+3,w
  7261  0B79  00A7               	movwf	?___flmul+3
  7262  0B7A  083A               	movf	___flmul@prod+2,w
  7263  0B7B  00A6               	movwf	?___flmul+2
  7264  0B7C  0839               	movf	___flmul@prod+1,w
  7265  0B7D  00A5               	movwf	?___flmul+1
  7266  0B7E  0838               	movf	___flmul@prod,w
  7267  0B7F  00A4               	movwf	?___flmul
  7268  0B80                     l711:
  7269  0B80  0008               	return
  7270  0B81                     __end_of___flmul:
  7271                           
  7272                           	psect	text10
  7273  19D4                     __ptext10:	
  7274 ;; *************** function __Umul8_16 *****************
  7275 ;; Defined at:
  7276 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  7277 ;; Parameters:    Size  Location     Type
  7278 ;;  multiplier      1    wreg     unsigned char 
  7279 ;;  multiplicand    1    0[COMMON] unsigned char 
  7280 ;; Auto vars:     Size  Location     Type
  7281 ;;  multiplier      1    8[COMMON] unsigned char 
  7282 ;;  word_mpld       2    6[COMMON] unsigned int 
  7283 ;;  product         2    4[COMMON] unsigned int 
  7284 ;; Return value:  Size  Location     Type
  7285 ;;                  2    0[COMMON] unsigned int 
  7286 ;; Registers used:
  7287 ;;		wreg, status,2, status,0
  7288 ;; Tracked objects:
  7289 ;;		On entry : 0/0
  7290 ;;		On exit  : 0/0
  7291 ;;		Unchanged: 0/0
  7292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7293 ;;      Params:         2       0       0       0       0
  7294 ;;      Locals:         5       0       0       0       0
  7295 ;;      Temps:          2       0       0       0       0
  7296 ;;      Totals:         9       0       0       0       0
  7297 ;;Total ram usage:        9 bytes
  7298 ;; Hardware stack levels used:    1
  7299 ;; This function calls:
  7300 ;;		Nothing
  7301 ;; This function is called by:
  7302 ;;		___flmul
  7303 ;; This function uses a non-reentrant model
  7304 ;;
  7305                           
  7306                           
  7307                           ;psect for function __Umul8_16
  7308  19D4                     __Umul8_16:
  7309                           
  7310                           ;incstack = 0
  7311                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  7312                           ;__Umul8_16@multiplier stored from wreg
  7313  19D4  00F8               	movwf	__Umul8_16@multiplier
  7314  19D5                     l2251:
  7315  19D5  01F4               	clrf	__Umul8_16@product
  7316  19D6  01F5               	clrf	__Umul8_16@product+1
  7317  19D7                     l2253:
  7318  19D7  0870               	movf	__Umul8_16@multiplicand,w
  7319  19D8  00F2               	movwf	??__Umul8_16
  7320  19D9  01F3               	clrf	??__Umul8_16+1
  7321  19DA  0872               	movf	??__Umul8_16,w
  7322  19DB  00F6               	movwf	__Umul8_16@word_mpld
  7323  19DC  0873               	movf	??__Umul8_16+1,w
  7324  19DD  00F7               	movwf	__Umul8_16@word_mpld+1
  7325  19DE                     l2255:
  7326  19DE  1C78               	btfss	__Umul8_16@multiplier,0
  7327  19DF  29E1               	goto	u2731
  7328  19E0  29E2               	goto	u2730
  7329  19E1                     u2731:
  7330  19E1  29E8               	goto	l730
  7331  19E2                     u2730:
  7332  19E2                     l2257:
  7333  19E2  0876               	movf	__Umul8_16@word_mpld,w
  7334  19E3  07F4               	addwf	__Umul8_16@product,f
  7335  19E4  1803               	skipnc
  7336  19E5  0AF5               	incf	__Umul8_16@product+1,f
  7337  19E6  0877               	movf	__Umul8_16@word_mpld+1,w
  7338  19E7  07F5               	addwf	__Umul8_16@product+1,f
  7339  19E8                     l730:
  7340  19E8  3001               	movlw	1
  7341  19E9                     u2745:
  7342  19E9  1003               	clrc
  7343  19EA  0DF6               	rlf	__Umul8_16@word_mpld,f
  7344  19EB  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  7345  19EC  3EFF               	addlw	-1
  7346  19ED  1D03               	skipz
  7347  19EE  29E9               	goto	u2745
  7348  19EF  1003               	clrc
  7349  19F0  0CF8               	rrf	__Umul8_16@multiplier,f
  7350  19F1                     l2259:
  7351  19F1  0878               	movf	__Umul8_16@multiplier,w
  7352  19F2  1D03               	btfss	3,2
  7353  19F3  29F5               	goto	u2751
  7354  19F4  29F6               	goto	u2750
  7355  19F5                     u2751:
  7356  19F5  29DE               	goto	l2255
  7357  19F6                     u2750:
  7358  19F6                     l2261:
  7359  19F6  0875               	movf	__Umul8_16@product+1,w
  7360  19F7  00F1               	movwf	?__Umul8_16+1
  7361  19F8  0874               	movf	__Umul8_16@product,w
  7362  19F9  00F0               	movwf	?__Umul8_16
  7363  19FA                     l732:
  7364  19FA  0008               	return
  7365  19FB                     __end_of__Umul8_16:
  7366                           
  7367                           	psect	text11
  7368  1F43                     __ptext11:	
  7369 ;; *************** function __tdiv_to_l_ *****************
  7370 ;; Defined at:
  7371 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  7372 ;; Parameters:    Size  Location     Type
  7373 ;;  f1              4    0[COMMON] float 
  7374 ;;  f2              4    4[COMMON] float 
  7375 ;; Auto vars:     Size  Location     Type
  7376 ;;  quot            4    0[BANK0 ] unsigned long 
  7377 ;;  exp1            1    5[BANK0 ] unsigned char 
  7378 ;;  cntr            1    4[BANK0 ] unsigned char 
  7379 ;; Return value:  Size  Location     Type
  7380 ;;                  4    0[COMMON] unsigned long 
  7381 ;; Registers used:
  7382 ;;		wreg, status,2, status,0
  7383 ;; Tracked objects:
  7384 ;;		On entry : 0/0
  7385 ;;		On exit  : 0/0
  7386 ;;		Unchanged: 0/0
  7387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7388 ;;      Params:         8       0       0       0       0
  7389 ;;      Locals:         0       6       0       0       0
  7390 ;;      Temps:          4       0       0       0       0
  7391 ;;      Totals:        12       6       0       0       0
  7392 ;;Total ram usage:       18 bytes
  7393 ;; Hardware stack levels used:    1
  7394 ;; This function calls:
  7395 ;;		Nothing
  7396 ;; This function is called by:
  7397 ;;		_sprintf
  7398 ;; This function uses a non-reentrant model
  7399 ;;
  7400                           
  7401                           
  7402                           ;psect for function __tdiv_to_l_
  7403  1F43                     __tdiv_to_l_:
  7404  1F43                     l2839:	
  7405                           ;incstack = 0
  7406                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  7407                           
  7408  1F43  0870               	movf	__tdiv_to_l_@f1,w
  7409  1F44  00F8               	movwf	??__tdiv_to_l_
  7410  1F45  0871               	movf	__tdiv_to_l_@f1+1,w
  7411  1F46  00F9               	movwf	??__tdiv_to_l_+1
  7412  1F47  0872               	movf	__tdiv_to_l_@f1+2,w
  7413  1F48  00FA               	movwf	??__tdiv_to_l_+2
  7414  1F49  1003               	clrc
  7415  1F4A  0D79               	rlf	??__tdiv_to_l_+1,w
  7416  1F4B  0D7A               	rlf	??__tdiv_to_l_+2,w
  7417  1F4C  00FB               	movwf	??__tdiv_to_l_+3
  7418  1F4D  087B               	movf	??__tdiv_to_l_+3,w
  7419  1F4E  1283               	bcf	3,5	;RP0=0, select bank0
  7420  1F4F  1303               	bcf	3,6	;RP1=0, select bank0
  7421  1F50  00A5               	movwf	__tdiv_to_l_@exp1
  7422  1F51  0825               	movf	__tdiv_to_l_@exp1,w
  7423  1F52  1D03               	btfss	3,2
  7424  1F53  2F55               	goto	u4231
  7425  1F54  2F56               	goto	u4230
  7426  1F55                     u4231:
  7427  1F55  2F5F               	goto	l2845
  7428  1F56                     u4230:
  7429  1F56                     l2841:
  7430  1F56  3000               	movlw	0
  7431  1F57  00F3               	movwf	?__tdiv_to_l_+3
  7432  1F58  3000               	movlw	0
  7433  1F59  00F2               	movwf	?__tdiv_to_l_+2
  7434  1F5A  3000               	movlw	0
  7435  1F5B  00F1               	movwf	?__tdiv_to_l_+1
  7436  1F5C  3000               	movlw	0
  7437  1F5D  00F0               	movwf	?__tdiv_to_l_
  7438  1F5E  2FFF               	goto	l505
  7439  1F5F                     l2845:
  7440  1F5F  0874               	movf	__tdiv_to_l_@f2,w
  7441  1F60  00F8               	movwf	??__tdiv_to_l_
  7442  1F61  0875               	movf	__tdiv_to_l_@f2+1,w
  7443  1F62  00F9               	movwf	??__tdiv_to_l_+1
  7444  1F63  0876               	movf	__tdiv_to_l_@f2+2,w
  7445  1F64  00FA               	movwf	??__tdiv_to_l_+2
  7446  1F65  1003               	clrc
  7447  1F66  0D79               	rlf	??__tdiv_to_l_+1,w
  7448  1F67  0D7A               	rlf	??__tdiv_to_l_+2,w
  7449  1F68  00FB               	movwf	??__tdiv_to_l_+3
  7450  1F69  087B               	movf	??__tdiv_to_l_+3,w
  7451  1F6A  00A4               	movwf	__tdiv_to_l_@cntr
  7452  1F6B  0824               	movf	__tdiv_to_l_@cntr,w
  7453  1F6C  1D03               	btfss	3,2
  7454  1F6D  2F6F               	goto	u4241
  7455  1F6E  2F70               	goto	u4240
  7456  1F6F                     u4241:
  7457  1F6F  2F71               	goto	l506
  7458  1F70                     u4240:
  7459  1F70  2F56               	goto	l2841
  7460  1F71                     l506:
  7461  1F71  17F1               	bsf	__tdiv_to_l_@f1+1,7
  7462  1F72                     l2851:
  7463  1F72  30FF               	movlw	255
  7464  1F73  05F0               	andwf	__tdiv_to_l_@f1,f
  7465  1F74  30FF               	movlw	255
  7466  1F75  05F1               	andwf	__tdiv_to_l_@f1+1,f
  7467  1F76  3000               	movlw	0
  7468  1F77  05F2               	andwf	__tdiv_to_l_@f1+2,f
  7469  1F78                     l2853:
  7470  1F78  17F5               	bsf	__tdiv_to_l_@f2+1,7
  7471  1F79  30FF               	movlw	255
  7472  1F7A  05F4               	andwf	__tdiv_to_l_@f2,f
  7473  1F7B  30FF               	movlw	255
  7474  1F7C  05F5               	andwf	__tdiv_to_l_@f2+1,f
  7475  1F7D  3000               	movlw	0
  7476  1F7E  05F6               	andwf	__tdiv_to_l_@f2+2,f
  7477  1F7F  3000               	movlw	0
  7478  1F80  00A3               	movwf	__tdiv_to_l_@quot+3
  7479  1F81  3000               	movlw	0
  7480  1F82  00A2               	movwf	__tdiv_to_l_@quot+2
  7481  1F83  3000               	movlw	0
  7482  1F84  00A1               	movwf	__tdiv_to_l_@quot+1
  7483  1F85  3000               	movlw	0
  7484  1F86  00A0               	movwf	__tdiv_to_l_@quot
  7485  1F87                     l2855:
  7486  1F87  307F               	movlw	127
  7487  1F88  02A5               	subwf	__tdiv_to_l_@exp1,f
  7488  1F89                     l2857:
  7489  1F89  3098               	movlw	152
  7490  1F8A  0724               	addwf	__tdiv_to_l_@cntr,w
  7491  1F8B  00F8               	movwf	??__tdiv_to_l_
  7492  1F8C  0878               	movf	??__tdiv_to_l_,w
  7493  1F8D  02A5               	subwf	__tdiv_to_l_@exp1,f
  7494  1F8E  3018               	movlw	24
  7495  1F8F  00F8               	movwf	??__tdiv_to_l_
  7496  1F90  0878               	movf	??__tdiv_to_l_,w
  7497  1F91  00A4               	movwf	__tdiv_to_l_@cntr
  7498  1F92                     l2859:
  7499  1F92  3001               	movlw	1
  7500  1F93  00F8               	movwf	??__tdiv_to_l_
  7501  1F94                     u4255:
  7502  1F94  1003               	clrc
  7503  1F95  0DA0               	rlf	__tdiv_to_l_@quot,f
  7504  1F96  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  7505  1F97  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  7506  1F98  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  7507  1F99  0BF8               	decfsz	??__tdiv_to_l_,f
  7508  1F9A  2F94               	goto	u4255
  7509  1F9B                     l2861:
  7510  1F9B  0876               	movf	__tdiv_to_l_@f2+2,w
  7511  1F9C  0272               	subwf	__tdiv_to_l_@f1+2,w
  7512  1F9D  1D03               	skipz
  7513  1F9E  2FA5               	goto	u4265
  7514  1F9F  0875               	movf	__tdiv_to_l_@f2+1,w
  7515  1FA0  0271               	subwf	__tdiv_to_l_@f1+1,w
  7516  1FA1  1D03               	skipz
  7517  1FA2  2FA5               	goto	u4265
  7518  1FA3  0874               	movf	__tdiv_to_l_@f2,w
  7519  1FA4  0270               	subwf	__tdiv_to_l_@f1,w
  7520  1FA5                     u4265:
  7521  1FA5  1C03               	skipc
  7522  1FA6  2FA8               	goto	u4261
  7523  1FA7  2FA9               	goto	u4260
  7524  1FA8                     u4261:
  7525  1FA8  2FB4               	goto	l2867
  7526  1FA9                     u4260:
  7527  1FA9                     l2863:
  7528  1FA9  0874               	movf	__tdiv_to_l_@f2,w
  7529  1FAA  02F0               	subwf	__tdiv_to_l_@f1,f
  7530  1FAB  0875               	movf	__tdiv_to_l_@f2+1,w
  7531  1FAC  1C03               	skipc
  7532  1FAD  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  7533  1FAE  02F1               	subwf	__tdiv_to_l_@f1+1,f
  7534  1FAF  0876               	movf	__tdiv_to_l_@f2+2,w
  7535  1FB0  1C03               	skipc
  7536  1FB1  0A76               	incf	__tdiv_to_l_@f2+2,w
  7537  1FB2  02F2               	subwf	__tdiv_to_l_@f1+2,f
  7538  1FB3                     l2865:
  7539  1FB3  1420               	bsf	__tdiv_to_l_@quot,0
  7540  1FB4                     l2867:
  7541  1FB4  3001               	movlw	1
  7542  1FB5                     u4275:
  7543  1FB5  1003               	clrc
  7544  1FB6  0DF0               	rlf	__tdiv_to_l_@f1,f
  7545  1FB7  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  7546  1FB8  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  7547  1FB9  3EFF               	addlw	-1
  7548  1FBA  1D03               	skipz
  7549  1FBB  2FB5               	goto	u4275
  7550  1FBC                     l2869:
  7551  1FBC  3001               	movlw	1
  7552  1FBD  02A4               	subwf	__tdiv_to_l_@cntr,f
  7553  1FBE  1D03               	btfss	3,2
  7554  1FBF  2FC1               	goto	u4281
  7555  1FC0  2FC2               	goto	u4280
  7556  1FC1                     u4281:
  7557  1FC1  2F92               	goto	l2859
  7558  1FC2                     u4280:
  7559  1FC2                     l509:
  7560  1FC2  1FA5               	btfss	__tdiv_to_l_@exp1,7
  7561  1FC3  2FC5               	goto	u4291
  7562  1FC4  2FC6               	goto	u4290
  7563  1FC5                     u4291:
  7564  1FC5  2FE0               	goto	l2879
  7565  1FC6                     u4290:
  7566  1FC6                     l2871:
  7567  1FC6  0825               	movf	__tdiv_to_l_@exp1,w
  7568  1FC7  3A80               	xorlw	128
  7569  1FC8  3E97               	addlw	151
  7570  1FC9  1803               	skipnc
  7571  1FCA  2FCC               	goto	u4301
  7572  1FCB  2FCD               	goto	u4300
  7573  1FCC                     u4301:
  7574  1FCC  2FCE               	goto	l2877
  7575  1FCD                     u4300:
  7576  1FCD  2F56               	goto	l2841
  7577  1FCE                     l2877:
  7578  1FCE  3001               	movlw	1
  7579  1FCF                     u4315:
  7580  1FCF  1003               	clrc
  7581  1FD0  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  7582  1FD1  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  7583  1FD2  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  7584  1FD3  0CA0               	rrf	__tdiv_to_l_@quot,f
  7585  1FD4  3EFF               	addlw	-1
  7586  1FD5  1D03               	skipz
  7587  1FD6  2FCF               	goto	u4315
  7588  1FD7  3001               	movlw	1
  7589  1FD8  00F8               	movwf	??__tdiv_to_l_
  7590  1FD9  0878               	movf	??__tdiv_to_l_,w
  7591  1FDA  07A5               	addwf	__tdiv_to_l_@exp1,f
  7592  1FDB  1D03               	btfss	3,2
  7593  1FDC  2FDE               	goto	u4321
  7594  1FDD  2FDF               	goto	u4320
  7595  1FDE                     u4321:
  7596  1FDE  2FCE               	goto	l2877
  7597  1FDF                     u4320:
  7598  1FDF  2FF7               	goto	l2887
  7599  1FE0                     l2879:
  7600  1FE0  3018               	movlw	24
  7601  1FE1  0225               	subwf	__tdiv_to_l_@exp1,w
  7602  1FE2  1C03               	skipc
  7603  1FE3  2FE5               	goto	u4331
  7604  1FE4  2FE6               	goto	u4330
  7605  1FE5                     u4331:
  7606  1FE5  2FF2               	goto	l516
  7607  1FE6                     u4330:
  7608  1FE6  2F56               	goto	l2841
  7609  1FE7                     l2885:
  7610  1FE7  3001               	movlw	1
  7611  1FE8  00F8               	movwf	??__tdiv_to_l_
  7612  1FE9                     u4345:
  7613  1FE9  1003               	clrc
  7614  1FEA  0DA0               	rlf	__tdiv_to_l_@quot,f
  7615  1FEB  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  7616  1FEC  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  7617  1FED  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  7618  1FEE  0BF8               	decfsz	??__tdiv_to_l_,f
  7619  1FEF  2FE9               	goto	u4345
  7620  1FF0  3001               	movlw	1
  7621  1FF1  02A5               	subwf	__tdiv_to_l_@exp1,f
  7622  1FF2                     l516:
  7623  1FF2  0825               	movf	__tdiv_to_l_@exp1,w
  7624  1FF3  1D03               	btfss	3,2
  7625  1FF4  2FF6               	goto	u4351
  7626  1FF5  2FF7               	goto	u4350
  7627  1FF6                     u4351:
  7628  1FF6  2FE7               	goto	l2885
  7629  1FF7                     u4350:
  7630  1FF7                     l2887:
  7631  1FF7  0823               	movf	__tdiv_to_l_@quot+3,w
  7632  1FF8  00F3               	movwf	?__tdiv_to_l_+3
  7633  1FF9  0822               	movf	__tdiv_to_l_@quot+2,w
  7634  1FFA  00F2               	movwf	?__tdiv_to_l_+2
  7635  1FFB  0821               	movf	__tdiv_to_l_@quot+1,w
  7636  1FFC  00F1               	movwf	?__tdiv_to_l_+1
  7637  1FFD  0820               	movf	__tdiv_to_l_@quot,w
  7638  1FFE  00F0               	movwf	?__tdiv_to_l_
  7639  1FFF                     l505:
  7640  1FFF  0008               	return
  7641  2000                     __end_of__tdiv_to_l_:
  7642                           
  7643                           	psect	text12
  7644  00C2                     __ptext12:	
  7645 ;; *************** function __div_to_l_ *****************
  7646 ;; Defined at:
  7647 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  7648 ;; Parameters:    Size  Location     Type
  7649 ;;  f1              4    0[COMMON] unsigned long 
  7650 ;;  f2              4    4[COMMON] unsigned long 
  7651 ;; Auto vars:     Size  Location     Type
  7652 ;;  quot            4    0[BANK0 ] unsigned long 
  7653 ;;  exp1            1    5[BANK0 ] unsigned char 
  7654 ;;  cntr            1    4[BANK0 ] unsigned char 
  7655 ;; Return value:  Size  Location     Type
  7656 ;;                  4    0[COMMON] unsigned long 
  7657 ;; Registers used:
  7658 ;;		wreg, status,2, status,0
  7659 ;; Tracked objects:
  7660 ;;		On entry : 0/0
  7661 ;;		On exit  : 0/0
  7662 ;;		Unchanged: 0/0
  7663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7664 ;;      Params:         8       0       0       0       0
  7665 ;;      Locals:         0       6       0       0       0
  7666 ;;      Temps:          1       0       0       0       0
  7667 ;;      Totals:         9       6       0       0       0
  7668 ;;Total ram usage:       15 bytes
  7669 ;; Hardware stack levels used:    1
  7670 ;; This function calls:
  7671 ;;		Nothing
  7672 ;; This function is called by:
  7673 ;;		_sprintf
  7674 ;; This function uses a non-reentrant model
  7675 ;;
  7676                           
  7677                           
  7678                           ;psect for function __div_to_l_
  7679  00C2                     __div_to_l_:
  7680  00C2                     l2891:	
  7681                           ;incstack = 0
  7682                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  7683                           
  7684  00C2  1003               	clrc
  7685  00C3  0D72               	rlf	__div_to_l_@f1+2,w
  7686  00C4  0D73               	rlf	__div_to_l_@f1+3,w
  7687  00C5  00F8               	movwf	??__div_to_l_
  7688  00C6  0878               	movf	??__div_to_l_,w
  7689  00C7  1283               	bcf	3,5	;RP0=0, select bank0
  7690  00C8  1303               	bcf	3,6	;RP1=0, select bank0
  7691  00C9  00A5               	movwf	__div_to_l_@exp1
  7692  00CA  0825               	movf	__div_to_l_@exp1,w
  7693  00CB  1D03               	btfss	3,2
  7694  00CC  28CE               	goto	u4361
  7695  00CD  28CF               	goto	u4360
  7696  00CE                     u4361:
  7697  00CE  28D8               	goto	l2897
  7698  00CF                     u4360:
  7699  00CF                     l2893:
  7700  00CF  3000               	movlw	0
  7701  00D0  00F3               	movwf	?__div_to_l_+3
  7702  00D1  3000               	movlw	0
  7703  00D2  00F2               	movwf	?__div_to_l_+2
  7704  00D3  3000               	movlw	0
  7705  00D4  00F1               	movwf	?__div_to_l_+1
  7706  00D5  3000               	movlw	0
  7707  00D6  00F0               	movwf	?__div_to_l_
  7708  00D7  297F               	goto	l458
  7709  00D8                     l2897:
  7710  00D8  1003               	clrc
  7711  00D9  0D76               	rlf	__div_to_l_@f2+2,w
  7712  00DA  0D77               	rlf	__div_to_l_@f2+3,w
  7713  00DB  00F8               	movwf	??__div_to_l_
  7714  00DC  0878               	movf	??__div_to_l_,w
  7715  00DD  00A4               	movwf	__div_to_l_@cntr
  7716  00DE  0824               	movf	__div_to_l_@cntr,w
  7717  00DF  1D03               	btfss	3,2
  7718  00E0  28E2               	goto	u4371
  7719  00E1  28E3               	goto	u4370
  7720  00E2                     u4371:
  7721  00E2  28E4               	goto	l459
  7722  00E3                     u4370:
  7723  00E3  28CF               	goto	l2893
  7724  00E4                     l459:
  7725  00E4  17F2               	bsf	__div_to_l_@f1+2,7
  7726  00E5                     l2903:
  7727  00E5  30FF               	movlw	255
  7728  00E6  05F0               	andwf	__div_to_l_@f1,f
  7729  00E7  30FF               	movlw	255
  7730  00E8  05F1               	andwf	__div_to_l_@f1+1,f
  7731  00E9  30FF               	movlw	255
  7732  00EA  05F2               	andwf	__div_to_l_@f1+2,f
  7733  00EB  3000               	movlw	0
  7734  00EC  05F3               	andwf	__div_to_l_@f1+3,f
  7735  00ED                     l2905:
  7736  00ED  17F6               	bsf	__div_to_l_@f2+2,7
  7737  00EE  30FF               	movlw	255
  7738  00EF  05F4               	andwf	__div_to_l_@f2,f
  7739  00F0  30FF               	movlw	255
  7740  00F1  05F5               	andwf	__div_to_l_@f2+1,f
  7741  00F2  30FF               	movlw	255
  7742  00F3  05F6               	andwf	__div_to_l_@f2+2,f
  7743  00F4  3000               	movlw	0
  7744  00F5  05F7               	andwf	__div_to_l_@f2+3,f
  7745  00F6  3000               	movlw	0
  7746  00F7  00A3               	movwf	__div_to_l_@quot+3
  7747  00F8  3000               	movlw	0
  7748  00F9  00A2               	movwf	__div_to_l_@quot+2
  7749  00FA  3000               	movlw	0
  7750  00FB  00A1               	movwf	__div_to_l_@quot+1
  7751  00FC  3000               	movlw	0
  7752  00FD  00A0               	movwf	__div_to_l_@quot
  7753  00FE                     l2907:
  7754  00FE  307F               	movlw	127
  7755  00FF  02A5               	subwf	__div_to_l_@exp1,f
  7756  0100                     l2909:
  7757  0100  30A0               	movlw	160
  7758  0101  0724               	addwf	__div_to_l_@cntr,w
  7759  0102  00F8               	movwf	??__div_to_l_
  7760  0103  0878               	movf	??__div_to_l_,w
  7761  0104  02A5               	subwf	__div_to_l_@exp1,f
  7762  0105  3020               	movlw	32
  7763  0106  00F8               	movwf	??__div_to_l_
  7764  0107  0878               	movf	??__div_to_l_,w
  7765  0108  00A4               	movwf	__div_to_l_@cntr
  7766  0109                     l2911:
  7767  0109  3001               	movlw	1
  7768  010A  00F8               	movwf	??__div_to_l_
  7769  010B                     u4385:
  7770  010B  1003               	clrc
  7771  010C  0DA0               	rlf	__div_to_l_@quot,f
  7772  010D  0DA1               	rlf	__div_to_l_@quot+1,f
  7773  010E  0DA2               	rlf	__div_to_l_@quot+2,f
  7774  010F  0DA3               	rlf	__div_to_l_@quot+3,f
  7775  0110  0BF8               	decfsz	??__div_to_l_,f
  7776  0111  290B               	goto	u4385
  7777  0112                     l2913:
  7778  0112  0877               	movf	__div_to_l_@f2+3,w
  7779  0113  0273               	subwf	__div_to_l_@f1+3,w
  7780  0114  1D03               	skipz
  7781  0115  2920               	goto	u4395
  7782  0116  0876               	movf	__div_to_l_@f2+2,w
  7783  0117  0272               	subwf	__div_to_l_@f1+2,w
  7784  0118  1D03               	skipz
  7785  0119  2920               	goto	u4395
  7786  011A  0875               	movf	__div_to_l_@f2+1,w
  7787  011B  0271               	subwf	__div_to_l_@f1+1,w
  7788  011C  1D03               	skipz
  7789  011D  2920               	goto	u4395
  7790  011E  0874               	movf	__div_to_l_@f2,w
  7791  011F  0270               	subwf	__div_to_l_@f1,w
  7792  0120                     u4395:
  7793  0120  1C03               	skipc
  7794  0121  2923               	goto	u4391
  7795  0122  2924               	goto	u4390
  7796  0123                     u4391:
  7797  0123  2933               	goto	l2919
  7798  0124                     u4390:
  7799  0124                     l2915:
  7800  0124  0874               	movf	__div_to_l_@f2,w
  7801  0125  02F0               	subwf	__div_to_l_@f1,f
  7802  0126  0875               	movf	__div_to_l_@f2+1,w
  7803  0127  1C03               	skipc
  7804  0128  0F75               	incfsz	__div_to_l_@f2+1,w
  7805  0129  02F1               	subwf	__div_to_l_@f1+1,f
  7806  012A  0876               	movf	__div_to_l_@f2+2,w
  7807  012B  1C03               	skipc
  7808  012C  0F76               	incfsz	__div_to_l_@f2+2,w
  7809  012D  02F2               	subwf	__div_to_l_@f1+2,f
  7810  012E  0877               	movf	__div_to_l_@f2+3,w
  7811  012F  1C03               	skipc
  7812  0130  0F77               	incfsz	__div_to_l_@f2+3,w
  7813  0131  02F3               	subwf	__div_to_l_@f1+3,f
  7814  0132                     l2917:
  7815  0132  1420               	bsf	__div_to_l_@quot,0
  7816  0133                     l2919:
  7817  0133  3001               	movlw	1
  7818  0134  00F8               	movwf	??__div_to_l_
  7819  0135                     u4405:
  7820  0135  1003               	clrc
  7821  0136  0DF0               	rlf	__div_to_l_@f1,f
  7822  0137  0DF1               	rlf	__div_to_l_@f1+1,f
  7823  0138  0DF2               	rlf	__div_to_l_@f1+2,f
  7824  0139  0DF3               	rlf	__div_to_l_@f1+3,f
  7825  013A  0BF8               	decfsz	??__div_to_l_,f
  7826  013B  2935               	goto	u4405
  7827  013C                     l2921:
  7828  013C  3001               	movlw	1
  7829  013D  02A4               	subwf	__div_to_l_@cntr,f
  7830  013E  1D03               	btfss	3,2
  7831  013F  2941               	goto	u4411
  7832  0140  2942               	goto	u4410
  7833  0141                     u4411:
  7834  0141  2909               	goto	l2911
  7835  0142                     u4410:
  7836  0142                     l462:
  7837  0142  1FA5               	btfss	__div_to_l_@exp1,7
  7838  0143  2945               	goto	u4421
  7839  0144  2946               	goto	u4420
  7840  0145                     u4421:
  7841  0145  2960               	goto	l2931
  7842  0146                     u4420:
  7843  0146                     l2923:
  7844  0146  0825               	movf	__div_to_l_@exp1,w
  7845  0147  3A80               	xorlw	128
  7846  0148  3E9F               	addlw	159
  7847  0149  1803               	skipnc
  7848  014A  294C               	goto	u4431
  7849  014B  294D               	goto	u4430
  7850  014C                     u4431:
  7851  014C  294E               	goto	l2929
  7852  014D                     u4430:
  7853  014D  28CF               	goto	l2893
  7854  014E                     l2929:
  7855  014E  3001               	movlw	1
  7856  014F                     u4445:
  7857  014F  1003               	clrc
  7858  0150  0CA3               	rrf	__div_to_l_@quot+3,f
  7859  0151  0CA2               	rrf	__div_to_l_@quot+2,f
  7860  0152  0CA1               	rrf	__div_to_l_@quot+1,f
  7861  0153  0CA0               	rrf	__div_to_l_@quot,f
  7862  0154  3EFF               	addlw	-1
  7863  0155  1D03               	skipz
  7864  0156  294F               	goto	u4445
  7865  0157  3001               	movlw	1
  7866  0158  00F8               	movwf	??__div_to_l_
  7867  0159  0878               	movf	??__div_to_l_,w
  7868  015A  07A5               	addwf	__div_to_l_@exp1,f
  7869  015B  1D03               	btfss	3,2
  7870  015C  295E               	goto	u4451
  7871  015D  295F               	goto	u4450
  7872  015E                     u4451:
  7873  015E  294E               	goto	l2929
  7874  015F                     u4450:
  7875  015F  2977               	goto	l2939
  7876  0160                     l2931:
  7877  0160  3020               	movlw	32
  7878  0161  0225               	subwf	__div_to_l_@exp1,w
  7879  0162  1C03               	skipc
  7880  0163  2965               	goto	u4461
  7881  0164  2966               	goto	u4460
  7882  0165                     u4461:
  7883  0165  2972               	goto	l469
  7884  0166                     u4460:
  7885  0166  28CF               	goto	l2893
  7886  0167                     l2937:
  7887  0167  3001               	movlw	1
  7888  0168  00F8               	movwf	??__div_to_l_
  7889  0169                     u4475:
  7890  0169  1003               	clrc
  7891  016A  0DA0               	rlf	__div_to_l_@quot,f
  7892  016B  0DA1               	rlf	__div_to_l_@quot+1,f
  7893  016C  0DA2               	rlf	__div_to_l_@quot+2,f
  7894  016D  0DA3               	rlf	__div_to_l_@quot+3,f
  7895  016E  0BF8               	decfsz	??__div_to_l_,f
  7896  016F  2969               	goto	u4475
  7897  0170  3001               	movlw	1
  7898  0171  02A5               	subwf	__div_to_l_@exp1,f
  7899  0172                     l469:
  7900  0172  0825               	movf	__div_to_l_@exp1,w
  7901  0173  1D03               	btfss	3,2
  7902  0174  2976               	goto	u4481
  7903  0175  2977               	goto	u4480
  7904  0176                     u4481:
  7905  0176  2967               	goto	l2937
  7906  0177                     u4480:
  7907  0177                     l2939:
  7908  0177  0823               	movf	__div_to_l_@quot+3,w
  7909  0178  00F3               	movwf	?__div_to_l_+3
  7910  0179  0822               	movf	__div_to_l_@quot+2,w
  7911  017A  00F2               	movwf	?__div_to_l_+2
  7912  017B  0821               	movf	__div_to_l_@quot+1,w
  7913  017C  00F1               	movwf	?__div_to_l_+1
  7914  017D  0820               	movf	__div_to_l_@quot,w
  7915  017E  00F0               	movwf	?__div_to_l_
  7916  017F                     l458:
  7917  017F  0008               	return
  7918  0180                     __end_of__div_to_l_:
  7919                           
  7920                           	psect	text13
  7921  1E89                     __ptext13:	
  7922 ;; *************** function ___xxtofl *****************
  7923 ;; Defined at:
  7924 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  7925 ;; Parameters:    Size  Location     Type
  7926 ;;  sign            1    wreg     unsigned char 
  7927 ;;  val             4    0[COMMON] long 
  7928 ;; Auto vars:     Size  Location     Type
  7929 ;;  sign            1    8[COMMON] unsigned char 
  7930 ;;  arg             4   10[COMMON] unsigned long 
  7931 ;;  exp             1    9[COMMON] unsigned char 
  7932 ;; Return value:  Size  Location     Type
  7933 ;;                  4    0[COMMON] unsigned char 
  7934 ;; Registers used:
  7935 ;;		wreg, status,2, status,0
  7936 ;; Tracked objects:
  7937 ;;		On entry : 0/0
  7938 ;;		On exit  : 0/0
  7939 ;;		Unchanged: 0/0
  7940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7941 ;;      Params:         4       0       0       0       0
  7942 ;;      Locals:         6       0       0       0       0
  7943 ;;      Temps:          4       0       0       0       0
  7944 ;;      Totals:        14       0       0       0       0
  7945 ;;Total ram usage:       14 bytes
  7946 ;; Hardware stack levels used:    1
  7947 ;; This function calls:
  7948 ;;		Nothing
  7949 ;; This function is called by:
  7950 ;;		_main
  7951 ;;		_sprintf
  7952 ;; This function uses a non-reentrant model
  7953 ;;
  7954                           
  7955                           
  7956                           ;psect for function ___xxtofl
  7957  1E89                     ___xxtofl:
  7958                           
  7959                           ;incstack = 0
  7960                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7961                           ;___xxtofl@sign stored from wreg
  7962  1E89  00F8               	movwf	___xxtofl@sign
  7963  1E8A                     l3083:
  7964  1E8A  0878               	movf	___xxtofl@sign,w
  7965  1E8B  1903               	btfsc	3,2
  7966  1E8C  2E8E               	goto	u4871
  7967  1E8D  2E8F               	goto	u4870
  7968  1E8E                     u4871:
  7969  1E8E  2EA3               	goto	l3089
  7970  1E8F                     u4870:
  7971  1E8F                     l3085:
  7972  1E8F  1FF3               	btfss	___xxtofl@val+3,7
  7973  1E90  2E92               	goto	u4881
  7974  1E91  2E93               	goto	u4880
  7975  1E92                     u4881:
  7976  1E92  2EA3               	goto	l3089
  7977  1E93                     u4880:
  7978  1E93                     l3087:
  7979  1E93  0970               	comf	___xxtofl@val,w
  7980  1E94  00FA               	movwf	___xxtofl@arg
  7981  1E95  0971               	comf	___xxtofl@val+1,w
  7982  1E96  00FB               	movwf	___xxtofl@arg+1
  7983  1E97  0972               	comf	___xxtofl@val+2,w
  7984  1E98  00FC               	movwf	___xxtofl@arg+2
  7985  1E99  0973               	comf	___xxtofl@val+3,w
  7986  1E9A  00FD               	movwf	___xxtofl@arg+3
  7987  1E9B  0AFA               	incf	___xxtofl@arg,f
  7988  1E9C  1903               	skipnz
  7989  1E9D  0AFB               	incf	___xxtofl@arg+1,f
  7990  1E9E  1903               	skipnz
  7991  1E9F  0AFC               	incf	___xxtofl@arg+2,f
  7992  1EA0  1903               	skipnz
  7993  1EA1  0AFD               	incf	___xxtofl@arg+3,f
  7994  1EA2  2EAB               	goto	l755
  7995  1EA3                     l3089:
  7996  1EA3  0873               	movf	___xxtofl@val+3,w
  7997  1EA4  00FD               	movwf	___xxtofl@arg+3
  7998  1EA5  0872               	movf	___xxtofl@val+2,w
  7999  1EA6  00FC               	movwf	___xxtofl@arg+2
  8000  1EA7  0871               	movf	___xxtofl@val+1,w
  8001  1EA8  00FB               	movwf	___xxtofl@arg+1
  8002  1EA9  0870               	movf	___xxtofl@val,w
  8003  1EAA  00FA               	movwf	___xxtofl@arg
  8004  1EAB                     l755:
  8005  1EAB  0873               	movf	___xxtofl@val+3,w
  8006  1EAC  0472               	iorwf	___xxtofl@val+2,w
  8007  1EAD  0471               	iorwf	___xxtofl@val+1,w
  8008  1EAE  0470               	iorwf	___xxtofl@val,w
  8009  1EAF  1D03               	skipz
  8010  1EB0  2EB2               	goto	u4891
  8011  1EB1  2EB3               	goto	u4890
  8012  1EB2                     u4891:
  8013  1EB2  2EBC               	goto	l3095
  8014  1EB3                     u4890:
  8015  1EB3                     l3091:
  8016  1EB3  3000               	movlw	0
  8017  1EB4  00F3               	movwf	?___xxtofl+3
  8018  1EB5  3000               	movlw	0
  8019  1EB6  00F2               	movwf	?___xxtofl+2
  8020  1EB7  3000               	movlw	0
  8021  1EB8  00F1               	movwf	?___xxtofl+1
  8022  1EB9  3000               	movlw	0
  8023  1EBA  00F0               	movwf	?___xxtofl
  8024  1EBB  2F42               	goto	l757
  8025  1EBC                     l3095:
  8026  1EBC  3096               	movlw	150
  8027  1EBD  00F4               	movwf	??___xxtofl
  8028  1EBE  0874               	movf	??___xxtofl,w
  8029  1EBF  00F9               	movwf	___xxtofl@exp
  8030  1EC0  2ECE               	goto	l3099
  8031  1EC1                     l3097:
  8032  1EC1  3001               	movlw	1
  8033  1EC2  00F4               	movwf	??___xxtofl
  8034  1EC3  0874               	movf	??___xxtofl,w
  8035  1EC4  07F9               	addwf	___xxtofl@exp,f
  8036  1EC5  3001               	movlw	1
  8037  1EC6                     u4905:
  8038  1EC6  1003               	clrc
  8039  1EC7  0CFD               	rrf	___xxtofl@arg+3,f
  8040  1EC8  0CFC               	rrf	___xxtofl@arg+2,f
  8041  1EC9  0CFB               	rrf	___xxtofl@arg+1,f
  8042  1ECA  0CFA               	rrf	___xxtofl@arg,f
  8043  1ECB  3EFF               	addlw	-1
  8044  1ECC  1D03               	skipz
  8045  1ECD  2EC6               	goto	u4905
  8046  1ECE                     l3099:
  8047  1ECE  30FE               	movlw	254
  8048  1ECF  057D               	andwf	___xxtofl@arg+3,w
  8049  1ED0  1D03               	btfss	3,2
  8050  1ED1  2ED3               	goto	u4911
  8051  1ED2  2ED4               	goto	u4910
  8052  1ED3                     u4911:
  8053  1ED3  2EC1               	goto	l3097
  8054  1ED4                     u4910:
  8055  1ED4  2EF0               	goto	l761
  8056  1ED5                     l3101:
  8057  1ED5  3001               	movlw	1
  8058  1ED6  00F4               	movwf	??___xxtofl
  8059  1ED7  0874               	movf	??___xxtofl,w
  8060  1ED8  07F9               	addwf	___xxtofl@exp,f
  8061  1ED9                     l3103:
  8062  1ED9  3001               	movlw	1
  8063  1EDA  07FA               	addwf	___xxtofl@arg,f
  8064  1EDB  3000               	movlw	0
  8065  1EDC  1803               	skipnc
  8066  1EDD  3001               	movlw	1
  8067  1EDE  07FB               	addwf	___xxtofl@arg+1,f
  8068  1EDF  3000               	movlw	0
  8069  1EE0  1803               	skipnc
  8070  1EE1  3001               	movlw	1
  8071  1EE2  07FC               	addwf	___xxtofl@arg+2,f
  8072  1EE3  3000               	movlw	0
  8073  1EE4  1803               	skipnc
  8074  1EE5  3001               	movlw	1
  8075  1EE6  07FD               	addwf	___xxtofl@arg+3,f
  8076  1EE7                     l3105:
  8077  1EE7  3001               	movlw	1
  8078  1EE8                     u4925:
  8079  1EE8  1003               	clrc
  8080  1EE9  0CFD               	rrf	___xxtofl@arg+3,f
  8081  1EEA  0CFC               	rrf	___xxtofl@arg+2,f
  8082  1EEB  0CFB               	rrf	___xxtofl@arg+1,f
  8083  1EEC  0CFA               	rrf	___xxtofl@arg,f
  8084  1EED  3EFF               	addlw	-1
  8085  1EEE  1D03               	skipz
  8086  1EEF  2EE8               	goto	u4925
  8087  1EF0                     l761:
  8088  1EF0  30FF               	movlw	255
  8089  1EF1  057D               	andwf	___xxtofl@arg+3,w
  8090  1EF2  1D03               	btfss	3,2
  8091  1EF3  2EF5               	goto	u4931
  8092  1EF4  2EF6               	goto	u4930
  8093  1EF5                     u4931:
  8094  1EF5  2ED5               	goto	l3101
  8095  1EF6                     u4930:
  8096  1EF6  2F02               	goto	l3109
  8097  1EF7                     l3107:
  8098  1EF7  3001               	movlw	1
  8099  1EF8  02F9               	subwf	___xxtofl@exp,f
  8100  1EF9  3001               	movlw	1
  8101  1EFA  00F4               	movwf	??___xxtofl
  8102  1EFB                     u4945:
  8103  1EFB  1003               	clrc
  8104  1EFC  0DFA               	rlf	___xxtofl@arg,f
  8105  1EFD  0DFB               	rlf	___xxtofl@arg+1,f
  8106  1EFE  0DFC               	rlf	___xxtofl@arg+2,f
  8107  1EFF  0DFD               	rlf	___xxtofl@arg+3,f
  8108  1F00  0BF4               	decfsz	??___xxtofl,f
  8109  1F01  2EFB               	goto	u4945
  8110  1F02                     l3109:
  8111  1F02  1BFC               	btfsc	___xxtofl@arg+2,7
  8112  1F03  2F05               	goto	u4951
  8113  1F04  2F06               	goto	u4950
  8114  1F05                     u4951:
  8115  1F05  2F0C               	goto	l768
  8116  1F06                     u4950:
  8117  1F06                     l3111:
  8118  1F06  3002               	movlw	2
  8119  1F07  0279               	subwf	___xxtofl@exp,w
  8120  1F08  1803               	skipnc
  8121  1F09  2F0B               	goto	u4961
  8122  1F0A  2F0C               	goto	u4960
  8123  1F0B                     u4961:
  8124  1F0B  2EF7               	goto	l3107
  8125  1F0C                     u4960:
  8126  1F0C                     l768:
  8127  1F0C  1879               	btfsc	___xxtofl@exp,0
  8128  1F0D  2F0F               	goto	u4971
  8129  1F0E  2F10               	goto	u4970
  8130  1F0F                     u4971:
  8131  1F0F  2F18               	goto	l769
  8132  1F10                     u4970:
  8133  1F10                     l3113:
  8134  1F10  30FF               	movlw	255
  8135  1F11  05FA               	andwf	___xxtofl@arg,f
  8136  1F12  30FF               	movlw	255
  8137  1F13  05FB               	andwf	___xxtofl@arg+1,f
  8138  1F14  307F               	movlw	127
  8139  1F15  05FC               	andwf	___xxtofl@arg+2,f
  8140  1F16  30FF               	movlw	255
  8141  1F17  05FD               	andwf	___xxtofl@arg+3,f
  8142  1F18                     l769:
  8143  1F18  1003               	clrc
  8144  1F19  0CF9               	rrf	___xxtofl@exp,f
  8145  1F1A                     l3115:
  8146  1F1A  0879               	movf	___xxtofl@exp,w
  8147  1F1B  00F4               	movwf	??___xxtofl
  8148  1F1C  01F5               	clrf	??___xxtofl+1
  8149  1F1D  01F6               	clrf	??___xxtofl+2
  8150  1F1E  01F7               	clrf	??___xxtofl+3
  8151  1F1F  3018               	movlw	24
  8152  1F20                     u4985:
  8153  1F20  1003               	clrc
  8154  1F21  0DF4               	rlf	??___xxtofl,f
  8155  1F22  0DF5               	rlf	??___xxtofl+1,f
  8156  1F23  0DF6               	rlf	??___xxtofl+2,f
  8157  1F24  0DF7               	rlf	??___xxtofl+3,f
  8158  1F25                     u4980:
  8159  1F25  3EFF               	addlw	-1
  8160  1F26  1D03               	skipz
  8161  1F27  2F20               	goto	u4985
  8162  1F28  0874               	movf	??___xxtofl,w
  8163  1F29  04FA               	iorwf	___xxtofl@arg,f
  8164  1F2A  0875               	movf	??___xxtofl+1,w
  8165  1F2B  04FB               	iorwf	___xxtofl@arg+1,f
  8166  1F2C  0876               	movf	??___xxtofl+2,w
  8167  1F2D  04FC               	iorwf	___xxtofl@arg+2,f
  8168  1F2E  0877               	movf	??___xxtofl+3,w
  8169  1F2F  04FD               	iorwf	___xxtofl@arg+3,f
  8170  1F30                     l3117:
  8171  1F30  0878               	movf	___xxtofl@sign,w
  8172  1F31  1903               	btfsc	3,2
  8173  1F32  2F34               	goto	u4991
  8174  1F33  2F35               	goto	u4990
  8175  1F34                     u4991:
  8176  1F34  2F3A               	goto	l3123
  8177  1F35                     u4990:
  8178  1F35                     l3119:
  8179  1F35  1FF3               	btfss	___xxtofl@val+3,7
  8180  1F36  2F38               	goto	u5001
  8181  1F37  2F39               	goto	u5000
  8182  1F38                     u5001:
  8183  1F38  2F3A               	goto	l3123
  8184  1F39                     u5000:
  8185  1F39                     l3121:
  8186  1F39  17FD               	bsf	___xxtofl@arg+3,7
  8187  1F3A                     l3123:
  8188  1F3A  087D               	movf	___xxtofl@arg+3,w
  8189  1F3B  00F3               	movwf	?___xxtofl+3
  8190  1F3C  087C               	movf	___xxtofl@arg+2,w
  8191  1F3D  00F2               	movwf	?___xxtofl+2
  8192  1F3E  087B               	movf	___xxtofl@arg+1,w
  8193  1F3F  00F1               	movwf	?___xxtofl+1
  8194  1F40  087A               	movf	___xxtofl@arg,w
  8195  1F41  00F0               	movwf	?___xxtofl
  8196  1F42                     l757:
  8197  1F42  0008               	return
  8198  1F43                     __end_of___xxtofl:
  8199                           
  8200                           	psect	text14
  8201  19AF                     __ptext14:	
  8202 ;; *************** function ___wmul *****************
  8203 ;; Defined at:
  8204 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  8205 ;; Parameters:    Size  Location     Type
  8206 ;;  multiplier      2    0[COMMON] unsigned int 
  8207 ;;  multiplicand    2    2[COMMON] unsigned int 
  8208 ;; Auto vars:     Size  Location     Type
  8209 ;;  product         2    4[COMMON] unsigned int 
  8210 ;; Return value:  Size  Location     Type
  8211 ;;                  2    0[COMMON] unsigned int 
  8212 ;; Registers used:
  8213 ;;		wreg, status,2, status,0
  8214 ;; Tracked objects:
  8215 ;;		On entry : 0/0
  8216 ;;		On exit  : 0/0
  8217 ;;		Unchanged: 0/0
  8218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8219 ;;      Params:         4       0       0       0       0
  8220 ;;      Locals:         2       0       0       0       0
  8221 ;;      Temps:          0       0       0       0       0
  8222 ;;      Totals:         6       0       0       0       0
  8223 ;;Total ram usage:        6 bytes
  8224 ;; Hardware stack levels used:    1
  8225 ;; This function calls:
  8226 ;;		Nothing
  8227 ;; This function is called by:
  8228 ;;		_sprintf
  8229 ;; This function uses a non-reentrant model
  8230 ;;
  8231                           
  8232                           
  8233                           ;psect for function ___wmul
  8234  19AF                     ___wmul:
  8235  19AF                     l2943:	
  8236                           ;incstack = 0
  8237                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8238                           
  8239  19AF  01F4               	clrf	___wmul@product
  8240  19B0  01F5               	clrf	___wmul@product+1
  8241  19B1                     l2945:
  8242  19B1  1C70               	btfss	___wmul@multiplier,0
  8243  19B2  29B4               	goto	u4491
  8244  19B3  29B5               	goto	u4490
  8245  19B4                     u4491:
  8246  19B4  29BB               	goto	l288
  8247  19B5                     u4490:
  8248  19B5                     l2947:
  8249  19B5  0872               	movf	___wmul@multiplicand,w
  8250  19B6  07F4               	addwf	___wmul@product,f
  8251  19B7  1803               	skipnc
  8252  19B8  0AF5               	incf	___wmul@product+1,f
  8253  19B9  0873               	movf	___wmul@multiplicand+1,w
  8254  19BA  07F5               	addwf	___wmul@product+1,f
  8255  19BB                     l288:
  8256  19BB  3001               	movlw	1
  8257  19BC                     u4505:
  8258  19BC  1003               	clrc
  8259  19BD  0DF2               	rlf	___wmul@multiplicand,f
  8260  19BE  0DF3               	rlf	___wmul@multiplicand+1,f
  8261  19BF  3EFF               	addlw	-1
  8262  19C0  1D03               	skipz
  8263  19C1  29BC               	goto	u4505
  8264  19C2                     l2949:
  8265  19C2  3001               	movlw	1
  8266  19C3                     u4515:
  8267  19C3  1003               	clrc
  8268  19C4  0CF1               	rrf	___wmul@multiplier+1,f
  8269  19C5  0CF0               	rrf	___wmul@multiplier,f
  8270  19C6  3EFF               	addlw	-1
  8271  19C7  1D03               	skipz
  8272  19C8  29C3               	goto	u4515
  8273  19C9                     l2951:
  8274  19C9  0870               	movf	___wmul@multiplier,w
  8275  19CA  0471               	iorwf	___wmul@multiplier+1,w
  8276  19CB  1D03               	btfss	3,2
  8277  19CC  29CE               	goto	u4521
  8278  19CD  29CF               	goto	u4520
  8279  19CE                     u4521:
  8280  19CE  29B1               	goto	l2945
  8281  19CF                     u4520:
  8282  19CF                     l2953:
  8283  19CF  0875               	movf	___wmul@product+1,w
  8284  19D0  00F1               	movwf	?___wmul+1
  8285  19D1  0874               	movf	___wmul@product,w
  8286  19D2  00F0               	movwf	?___wmul
  8287  19D3                     l290:
  8288  19D3  0008               	return
  8289  19D4                     __end_of___wmul:
  8290                           
  8291                           	psect	text15
  8292  1B92                     __ptext15:	
  8293 ;; *************** function ___llmod *****************
  8294 ;; Defined at:
  8295 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  8296 ;; Parameters:    Size  Location     Type
  8297 ;;  divisor         4    0[COMMON] unsigned long 
  8298 ;;  dividend        4    4[COMMON] unsigned long 
  8299 ;; Auto vars:     Size  Location     Type
  8300 ;;  counter         1    9[COMMON] unsigned char 
  8301 ;; Return value:  Size  Location     Type
  8302 ;;                  4    0[COMMON] unsigned long 
  8303 ;; Registers used:
  8304 ;;		wreg, status,2, status,0
  8305 ;; Tracked objects:
  8306 ;;		On entry : 0/0
  8307 ;;		On exit  : 0/0
  8308 ;;		Unchanged: 0/0
  8309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8310 ;;      Params:         8       0       0       0       0
  8311 ;;      Locals:         1       0       0       0       0
  8312 ;;      Temps:          1       0       0       0       0
  8313 ;;      Totals:        10       0       0       0       0
  8314 ;;Total ram usage:       10 bytes
  8315 ;; Hardware stack levels used:    1
  8316 ;; This function calls:
  8317 ;;		Nothing
  8318 ;; This function is called by:
  8319 ;;		_sprintf
  8320 ;; This function uses a non-reentrant model
  8321 ;;
  8322                           
  8323                           
  8324                           ;psect for function ___llmod
  8325  1B92                     ___llmod:
  8326  1B92                     l3057:	
  8327                           ;incstack = 0
  8328                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  8329                           
  8330  1B92  0873               	movf	___llmod@divisor+3,w
  8331  1B93  0472               	iorwf	___llmod@divisor+2,w
  8332  1B94  0471               	iorwf	___llmod@divisor+1,w
  8333  1B95  0470               	iorwf	___llmod@divisor,w
  8334  1B96  1903               	skipnz
  8335  1B97  2B99               	goto	u4811
  8336  1B98  2B9A               	goto	u4810
  8337  1B99                     u4811:
  8338  1B99  2BDD               	goto	l3073
  8339  1B9A                     u4810:
  8340  1B9A                     l3059:
  8341  1B9A  01F9               	clrf	___llmod@counter
  8342  1B9B  0AF9               	incf	___llmod@counter,f
  8343  1B9C  2BAA               	goto	l3063
  8344  1B9D                     l3061:
  8345  1B9D  3001               	movlw	1
  8346  1B9E  00F8               	movwf	??___llmod
  8347  1B9F                     u4825:
  8348  1B9F  1003               	clrc
  8349  1BA0  0DF0               	rlf	___llmod@divisor,f
  8350  1BA1  0DF1               	rlf	___llmod@divisor+1,f
  8351  1BA2  0DF2               	rlf	___llmod@divisor+2,f
  8352  1BA3  0DF3               	rlf	___llmod@divisor+3,f
  8353  1BA4  0BF8               	decfsz	??___llmod,f
  8354  1BA5  2B9F               	goto	u4825
  8355  1BA6  3001               	movlw	1
  8356  1BA7  00F8               	movwf	??___llmod
  8357  1BA8  0878               	movf	??___llmod,w
  8358  1BA9  07F9               	addwf	___llmod@counter,f
  8359  1BAA                     l3063:
  8360  1BAA  1FF3               	btfss	___llmod@divisor+3,7
  8361  1BAB  2BAD               	goto	u4831
  8362  1BAC  2BAE               	goto	u4830
  8363  1BAD                     u4831:
  8364  1BAD  2B9D               	goto	l3061
  8365  1BAE                     u4830:
  8366  1BAE                     l3065:
  8367  1BAE  0873               	movf	___llmod@divisor+3,w
  8368  1BAF  0277               	subwf	___llmod@dividend+3,w
  8369  1BB0  1D03               	skipz
  8370  1BB1  2BBC               	goto	u4845
  8371  1BB2  0872               	movf	___llmod@divisor+2,w
  8372  1BB3  0276               	subwf	___llmod@dividend+2,w
  8373  1BB4  1D03               	skipz
  8374  1BB5  2BBC               	goto	u4845
  8375  1BB6  0871               	movf	___llmod@divisor+1,w
  8376  1BB7  0275               	subwf	___llmod@dividend+1,w
  8377  1BB8  1D03               	skipz
  8378  1BB9  2BBC               	goto	u4845
  8379  1BBA  0870               	movf	___llmod@divisor,w
  8380  1BBB  0274               	subwf	___llmod@dividend,w
  8381  1BBC                     u4845:
  8382  1BBC  1C03               	skipc
  8383  1BBD  2BBF               	goto	u4841
  8384  1BBE  2BC0               	goto	u4840
  8385  1BBF                     u4841:
  8386  1BBF  2BCE               	goto	l3069
  8387  1BC0                     u4840:
  8388  1BC0                     l3067:
  8389  1BC0  0870               	movf	___llmod@divisor,w
  8390  1BC1  02F4               	subwf	___llmod@dividend,f
  8391  1BC2  0871               	movf	___llmod@divisor+1,w
  8392  1BC3  1C03               	skipc
  8393  1BC4  0F71               	incfsz	___llmod@divisor+1,w
  8394  1BC5  02F5               	subwf	___llmod@dividend+1,f
  8395  1BC6  0872               	movf	___llmod@divisor+2,w
  8396  1BC7  1C03               	skipc
  8397  1BC8  0F72               	incfsz	___llmod@divisor+2,w
  8398  1BC9  02F6               	subwf	___llmod@dividend+2,f
  8399  1BCA  0873               	movf	___llmod@divisor+3,w
  8400  1BCB  1C03               	skipc
  8401  1BCC  0F73               	incfsz	___llmod@divisor+3,w
  8402  1BCD  02F7               	subwf	___llmod@dividend+3,f
  8403  1BCE                     l3069:
  8404  1BCE  3001               	movlw	1
  8405  1BCF                     u4855:
  8406  1BCF  1003               	clrc
  8407  1BD0  0CF3               	rrf	___llmod@divisor+3,f
  8408  1BD1  0CF2               	rrf	___llmod@divisor+2,f
  8409  1BD2  0CF1               	rrf	___llmod@divisor+1,f
  8410  1BD3  0CF0               	rrf	___llmod@divisor,f
  8411  1BD4  3EFF               	addlw	-1
  8412  1BD5  1D03               	skipz
  8413  1BD6  2BCF               	goto	u4855
  8414  1BD7                     l3071:
  8415  1BD7  3001               	movlw	1
  8416  1BD8  02F9               	subwf	___llmod@counter,f
  8417  1BD9  1D03               	btfss	3,2
  8418  1BDA  2BDC               	goto	u4861
  8419  1BDB  2BDD               	goto	u4860
  8420  1BDC                     u4861:
  8421  1BDC  2BAE               	goto	l3065
  8422  1BDD                     u4860:
  8423  1BDD                     l3073:
  8424  1BDD  0877               	movf	___llmod@dividend+3,w
  8425  1BDE  00F3               	movwf	?___llmod+3
  8426  1BDF  0876               	movf	___llmod@dividend+2,w
  8427  1BE0  00F2               	movwf	?___llmod+2
  8428  1BE1  0875               	movf	___llmod@dividend+1,w
  8429  1BE2  00F1               	movwf	?___llmod+1
  8430  1BE3  0874               	movf	___llmod@dividend,w
  8431  1BE4  00F0               	movwf	?___llmod
  8432  1BE5                     l544:
  8433  1BE5  0008               	return
  8434  1BE6                     __end_of___llmod:
  8435                           
  8436                           	psect	text16
  8437  1C9C                     __ptext16:	
  8438 ;; *************** function ___lldiv *****************
  8439 ;; Defined at:
  8440 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  8441 ;; Parameters:    Size  Location     Type
  8442 ;;  divisor         4    0[COMMON] unsigned long 
  8443 ;;  dividend        4    4[COMMON] unsigned long 
  8444 ;; Auto vars:     Size  Location     Type
  8445 ;;  quotient        4    9[COMMON] unsigned long 
  8446 ;;  counter         1   13[COMMON] unsigned char 
  8447 ;; Return value:  Size  Location     Type
  8448 ;;                  4    0[COMMON] unsigned long 
  8449 ;; Registers used:
  8450 ;;		wreg, status,2, status,0
  8451 ;; Tracked objects:
  8452 ;;		On entry : 0/0
  8453 ;;		On exit  : 0/0
  8454 ;;		Unchanged: 0/0
  8455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8456 ;;      Params:         8       0       0       0       0
  8457 ;;      Locals:         5       0       0       0       0
  8458 ;;      Temps:          1       0       0       0       0
  8459 ;;      Totals:        14       0       0       0       0
  8460 ;;Total ram usage:       14 bytes
  8461 ;; Hardware stack levels used:    1
  8462 ;; This function calls:
  8463 ;;		Nothing
  8464 ;; This function is called by:
  8465 ;;		_sprintf
  8466 ;; This function uses a non-reentrant model
  8467 ;;
  8468                           
  8469                           
  8470                           ;psect for function ___lldiv
  8471  1C9C                     ___lldiv:
  8472  1C9C                     l2957:	
  8473                           ;incstack = 0
  8474                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  8475                           
  8476  1C9C  3000               	movlw	0
  8477  1C9D  00FC               	movwf	___lldiv@quotient+3
  8478  1C9E  3000               	movlw	0
  8479  1C9F  00FB               	movwf	___lldiv@quotient+2
  8480  1CA0  3000               	movlw	0
  8481  1CA1  00FA               	movwf	___lldiv@quotient+1
  8482  1CA2  3000               	movlw	0
  8483  1CA3  00F9               	movwf	___lldiv@quotient
  8484  1CA4  0873               	movf	___lldiv@divisor+3,w
  8485  1CA5  0472               	iorwf	___lldiv@divisor+2,w
  8486  1CA6  0471               	iorwf	___lldiv@divisor+1,w
  8487  1CA7  0470               	iorwf	___lldiv@divisor,w
  8488  1CA8  1903               	skipnz
  8489  1CA9  2CAB               	goto	u4531
  8490  1CAA  2CAC               	goto	u4530
  8491  1CAB                     u4531:
  8492  1CAB  2CF9               	goto	l2977
  8493  1CAC                     u4530:
  8494  1CAC                     l2959:
  8495  1CAC  01FD               	clrf	___lldiv@counter
  8496  1CAD  0AFD               	incf	___lldiv@counter,f
  8497  1CAE  2CBC               	goto	l2963
  8498  1CAF                     l2961:
  8499  1CAF  3001               	movlw	1
  8500  1CB0  00F8               	movwf	??___lldiv
  8501  1CB1                     u4545:
  8502  1CB1  1003               	clrc
  8503  1CB2  0DF0               	rlf	___lldiv@divisor,f
  8504  1CB3  0DF1               	rlf	___lldiv@divisor+1,f
  8505  1CB4  0DF2               	rlf	___lldiv@divisor+2,f
  8506  1CB5  0DF3               	rlf	___lldiv@divisor+3,f
  8507  1CB6  0BF8               	decfsz	??___lldiv,f
  8508  1CB7  2CB1               	goto	u4545
  8509  1CB8  3001               	movlw	1
  8510  1CB9  00F8               	movwf	??___lldiv
  8511  1CBA  0878               	movf	??___lldiv,w
  8512  1CBB  07FD               	addwf	___lldiv@counter,f
  8513  1CBC                     l2963:
  8514  1CBC  1FF3               	btfss	___lldiv@divisor+3,7
  8515  1CBD  2CBF               	goto	u4551
  8516  1CBE  2CC0               	goto	u4550
  8517  1CBF                     u4551:
  8518  1CBF  2CAF               	goto	l2961
  8519  1CC0                     u4550:
  8520  1CC0                     l2965:
  8521  1CC0  3001               	movlw	1
  8522  1CC1  00F8               	movwf	??___lldiv
  8523  1CC2                     u4565:
  8524  1CC2  1003               	clrc
  8525  1CC3  0DF9               	rlf	___lldiv@quotient,f
  8526  1CC4  0DFA               	rlf	___lldiv@quotient+1,f
  8527  1CC5  0DFB               	rlf	___lldiv@quotient+2,f
  8528  1CC6  0DFC               	rlf	___lldiv@quotient+3,f
  8529  1CC7  0BF8               	decfsz	??___lldiv,f
  8530  1CC8  2CC2               	goto	u4565
  8531  1CC9                     l2967:
  8532  1CC9  0873               	movf	___lldiv@divisor+3,w
  8533  1CCA  0277               	subwf	___lldiv@dividend+3,w
  8534  1CCB  1D03               	skipz
  8535  1CCC  2CD7               	goto	u4575
  8536  1CCD  0872               	movf	___lldiv@divisor+2,w
  8537  1CCE  0276               	subwf	___lldiv@dividend+2,w
  8538  1CCF  1D03               	skipz
  8539  1CD0  2CD7               	goto	u4575
  8540  1CD1  0871               	movf	___lldiv@divisor+1,w
  8541  1CD2  0275               	subwf	___lldiv@dividend+1,w
  8542  1CD3  1D03               	skipz
  8543  1CD4  2CD7               	goto	u4575
  8544  1CD5  0870               	movf	___lldiv@divisor,w
  8545  1CD6  0274               	subwf	___lldiv@dividend,w
  8546  1CD7                     u4575:
  8547  1CD7  1C03               	skipc
  8548  1CD8  2CDA               	goto	u4571
  8549  1CD9  2CDB               	goto	u4570
  8550  1CDA                     u4571:
  8551  1CDA  2CEA               	goto	l2973
  8552  1CDB                     u4570:
  8553  1CDB                     l2969:
  8554  1CDB  0870               	movf	___lldiv@divisor,w
  8555  1CDC  02F4               	subwf	___lldiv@dividend,f
  8556  1CDD  0871               	movf	___lldiv@divisor+1,w
  8557  1CDE  1C03               	skipc
  8558  1CDF  0F71               	incfsz	___lldiv@divisor+1,w
  8559  1CE0  02F5               	subwf	___lldiv@dividend+1,f
  8560  1CE1  0872               	movf	___lldiv@divisor+2,w
  8561  1CE2  1C03               	skipc
  8562  1CE3  0F72               	incfsz	___lldiv@divisor+2,w
  8563  1CE4  02F6               	subwf	___lldiv@dividend+2,f
  8564  1CE5  0873               	movf	___lldiv@divisor+3,w
  8565  1CE6  1C03               	skipc
  8566  1CE7  0F73               	incfsz	___lldiv@divisor+3,w
  8567  1CE8  02F7               	subwf	___lldiv@dividend+3,f
  8568  1CE9                     l2971:
  8569  1CE9  1479               	bsf	___lldiv@quotient,0
  8570  1CEA                     l2973:
  8571  1CEA  3001               	movlw	1
  8572  1CEB                     u4585:
  8573  1CEB  1003               	clrc
  8574  1CEC  0CF3               	rrf	___lldiv@divisor+3,f
  8575  1CED  0CF2               	rrf	___lldiv@divisor+2,f
  8576  1CEE  0CF1               	rrf	___lldiv@divisor+1,f
  8577  1CEF  0CF0               	rrf	___lldiv@divisor,f
  8578  1CF0  3EFF               	addlw	-1
  8579  1CF1  1D03               	skipz
  8580  1CF2  2CEB               	goto	u4585
  8581  1CF3                     l2975:
  8582  1CF3  3001               	movlw	1
  8583  1CF4  02FD               	subwf	___lldiv@counter,f
  8584  1CF5  1D03               	btfss	3,2
  8585  1CF6  2CF8               	goto	u4591
  8586  1CF7  2CF9               	goto	u4590
  8587  1CF8                     u4591:
  8588  1CF8  2CC0               	goto	l2965
  8589  1CF9                     u4590:
  8590  1CF9                     l2977:
  8591  1CF9  087C               	movf	___lldiv@quotient+3,w
  8592  1CFA  00F3               	movwf	?___lldiv+3
  8593  1CFB  087B               	movf	___lldiv@quotient+2,w
  8594  1CFC  00F2               	movwf	?___lldiv+2
  8595  1CFD  087A               	movf	___lldiv@quotient+1,w
  8596  1CFE  00F1               	movwf	?___lldiv+1
  8597  1CFF  0879               	movf	___lldiv@quotient,w
  8598  1D00  00F0               	movwf	?___lldiv
  8599  1D01                     l324:
  8600  1D01  0008               	return
  8601  1D02                     __end_of___lldiv:
  8602                           
  8603                           	psect	text17
  8604  1D6B                     __ptext17:	
  8605 ;; *************** function ___fltol *****************
  8606 ;; Defined at:
  8607 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  8608 ;; Parameters:    Size  Location     Type
  8609 ;;  f1              4   49[BANK0 ] unsigned long 
  8610 ;; Auto vars:     Size  Location     Type
  8611 ;;  exp1            1   59[BANK0 ] unsigned char 
  8612 ;;  sign1           1   58[BANK0 ] unsigned char 
  8613 ;; Return value:  Size  Location     Type
  8614 ;;                  4   49[BANK0 ] long 
  8615 ;; Registers used:
  8616 ;;		wreg, status,2, status,0
  8617 ;; Tracked objects:
  8618 ;;		On entry : 0/0
  8619 ;;		On exit  : 0/0
  8620 ;;		Unchanged: 0/0
  8621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8622 ;;      Params:         0       4       0       0       0
  8623 ;;      Locals:         0       2       0       0       0
  8624 ;;      Temps:          0       5       0       0       0
  8625 ;;      Totals:         0      11       0       0       0
  8626 ;;Total ram usage:       11 bytes
  8627 ;; Hardware stack levels used:    1
  8628 ;; This function calls:
  8629 ;;		Nothing
  8630 ;; This function is called by:
  8631 ;;		_sprintf
  8632 ;; This function uses a non-reentrant model
  8633 ;;
  8634                           
  8635                           
  8636                           ;psect for function ___fltol
  8637  1D6B                     ___fltol:
  8638  1D6B                     l3021:	
  8639                           ;incstack = 0
  8640                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8641                           
  8642  1D6B  1003               	clrc
  8643  1D6C  1283               	bcf	3,5	;RP0=0, select bank0
  8644  1D6D  1303               	bcf	3,6	;RP1=0, select bank0
  8645  1D6E  0D53               	rlf	___fltol@f1+2,w
  8646  1D6F  0D54               	rlf	___fltol@f1+3,w
  8647  1D70  00D5               	movwf	??___fltol
  8648  1D71  0855               	movf	??___fltol,w
  8649  1D72  00DB               	movwf	___fltol@exp1
  8650  1D73  085B               	movf	___fltol@exp1,w
  8651  1D74  1D03               	btfss	3,2
  8652  1D75  2D77               	goto	u4711
  8653  1D76  2D78               	goto	u4710
  8654  1D77                     u4711:
  8655  1D77  2D81               	goto	l3027
  8656  1D78                     u4710:
  8657  1D78                     l3023:
  8658  1D78  3000               	movlw	0
  8659  1D79  00D4               	movwf	?___fltol+3
  8660  1D7A  3000               	movlw	0
  8661  1D7B  00D3               	movwf	?___fltol+2
  8662  1D7C  3000               	movlw	0
  8663  1D7D  00D2               	movwf	?___fltol+1
  8664  1D7E  3000               	movlw	0
  8665  1D7F  00D1               	movwf	?___fltol
  8666  1D80  2DE6               	goto	l491
  8667  1D81                     l3027:
  8668  1D81  0851               	movf	___fltol@f1,w
  8669  1D82  00D5               	movwf	??___fltol
  8670  1D83  0852               	movf	___fltol@f1+1,w
  8671  1D84  00D6               	movwf	??___fltol+1
  8672  1D85  0853               	movf	___fltol@f1+2,w
  8673  1D86  00D7               	movwf	??___fltol+2
  8674  1D87  0854               	movf	___fltol@f1+3,w
  8675  1D88  00D8               	movwf	??___fltol+3
  8676  1D89  301F               	movlw	31
  8677  1D8A                     u4725:
  8678  1D8A  1003               	clrc
  8679  1D8B  0CD8               	rrf	??___fltol+3,f
  8680  1D8C  0CD7               	rrf	??___fltol+2,f
  8681  1D8D  0CD6               	rrf	??___fltol+1,f
  8682  1D8E  0CD5               	rrf	??___fltol,f
  8683  1D8F                     u4720:
  8684  1D8F  3EFF               	addlw	-1
  8685  1D90  1D03               	skipz
  8686  1D91  2D8A               	goto	u4725
  8687  1D92  0855               	movf	??___fltol,w
  8688  1D93  00D9               	movwf	??___fltol+4
  8689  1D94  0859               	movf	??___fltol+4,w
  8690  1D95  00DA               	movwf	___fltol@sign1
  8691  1D96                     l3029:
  8692  1D96  17D3               	bsf	___fltol@f1+2,7
  8693  1D97                     l3031:
  8694  1D97  30FF               	movlw	255
  8695  1D98  05D1               	andwf	___fltol@f1,f
  8696  1D99  30FF               	movlw	255
  8697  1D9A  05D2               	andwf	___fltol@f1+1,f
  8698  1D9B  30FF               	movlw	255
  8699  1D9C  05D3               	andwf	___fltol@f1+2,f
  8700  1D9D  3000               	movlw	0
  8701  1D9E  05D4               	andwf	___fltol@f1+3,f
  8702  1D9F                     l3033:
  8703  1D9F  3096               	movlw	150
  8704  1DA0  02DB               	subwf	___fltol@exp1,f
  8705  1DA1                     l3035:
  8706  1DA1  1FDB               	btfss	___fltol@exp1,7
  8707  1DA2  2DA4               	goto	u4731
  8708  1DA3  2DA5               	goto	u4730
  8709  1DA4                     u4731:
  8710  1DA4  2DBF               	goto	l3045
  8711  1DA5                     u4730:
  8712  1DA5                     l3037:
  8713  1DA5  085B               	movf	___fltol@exp1,w
  8714  1DA6  3A80               	xorlw	128
  8715  1DA7  3E97               	addlw	151
  8716  1DA8  1803               	skipnc
  8717  1DA9  2DAB               	goto	u4741
  8718  1DAA  2DAC               	goto	u4740
  8719  1DAB                     u4741:
  8720  1DAB  2DAD               	goto	l3043
  8721  1DAC                     u4740:
  8722  1DAC  2D78               	goto	l3023
  8723  1DAD                     l3043:
  8724  1DAD  3001               	movlw	1
  8725  1DAE                     u4755:
  8726  1DAE  1003               	clrc
  8727  1DAF  0CD4               	rrf	___fltol@f1+3,f
  8728  1DB0  0CD3               	rrf	___fltol@f1+2,f
  8729  1DB1  0CD2               	rrf	___fltol@f1+1,f
  8730  1DB2  0CD1               	rrf	___fltol@f1,f
  8731  1DB3  3EFF               	addlw	-1
  8732  1DB4  1D03               	skipz
  8733  1DB5  2DAE               	goto	u4755
  8734  1DB6  3001               	movlw	1
  8735  1DB7  00D5               	movwf	??___fltol
  8736  1DB8  0855               	movf	??___fltol,w
  8737  1DB9  07DB               	addwf	___fltol@exp1,f
  8738  1DBA  1D03               	btfss	3,2
  8739  1DBB  2DBD               	goto	u4761
  8740  1DBC  2DBE               	goto	u4760
  8741  1DBD                     u4761:
  8742  1DBD  2DAD               	goto	l3043
  8743  1DBE                     u4760:
  8744  1DBE  2DD6               	goto	l3053
  8745  1DBF                     l3045:
  8746  1DBF  3020               	movlw	32
  8747  1DC0  025B               	subwf	___fltol@exp1,w
  8748  1DC1  1C03               	skipc
  8749  1DC2  2DC4               	goto	u4771
  8750  1DC3  2DC5               	goto	u4770
  8751  1DC4                     u4771:
  8752  1DC4  2DD1               	goto	l498
  8753  1DC5                     u4770:
  8754  1DC5  2D78               	goto	l3023
  8755  1DC6                     l3051:
  8756  1DC6  3001               	movlw	1
  8757  1DC7  00D5               	movwf	??___fltol
  8758  1DC8                     u4785:
  8759  1DC8  1003               	clrc
  8760  1DC9  0DD1               	rlf	___fltol@f1,f
  8761  1DCA  0DD2               	rlf	___fltol@f1+1,f
  8762  1DCB  0DD3               	rlf	___fltol@f1+2,f
  8763  1DCC  0DD4               	rlf	___fltol@f1+3,f
  8764  1DCD  0BD5               	decfsz	??___fltol,f
  8765  1DCE  2DC8               	goto	u4785
  8766  1DCF  3001               	movlw	1
  8767  1DD0  02DB               	subwf	___fltol@exp1,f
  8768  1DD1                     l498:
  8769  1DD1  085B               	movf	___fltol@exp1,w
  8770  1DD2  1D03               	btfss	3,2
  8771  1DD3  2DD5               	goto	u4791
  8772  1DD4  2DD6               	goto	u4790
  8773  1DD5                     u4791:
  8774  1DD5  2DC6               	goto	l3051
  8775  1DD6                     u4790:
  8776  1DD6                     l3053:
  8777  1DD6  085A               	movf	___fltol@sign1,w
  8778  1DD7  1903               	btfsc	3,2
  8779  1DD8  2DDA               	goto	u4801
  8780  1DD9  2DDB               	goto	u4800
  8781  1DDA                     u4801:
  8782  1DDA  2DE6               	goto	l501
  8783  1DDB                     u4800:
  8784  1DDB                     l3055:
  8785  1DDB  09D1               	comf	___fltol@f1,f
  8786  1DDC  09D2               	comf	___fltol@f1+1,f
  8787  1DDD  09D3               	comf	___fltol@f1+2,f
  8788  1DDE  09D4               	comf	___fltol@f1+3,f
  8789  1DDF  0AD1               	incf	___fltol@f1,f
  8790  1DE0  1903               	skipnz
  8791  1DE1  0AD2               	incf	___fltol@f1+1,f
  8792  1DE2  1903               	skipnz
  8793  1DE3  0AD3               	incf	___fltol@f1+2,f
  8794  1DE4  1903               	skipnz
  8795  1DE5  0AD4               	incf	___fltol@f1+3,f
  8796  1DE6                     l501:
  8797  1DE6                     l491:
  8798  1DE6  0008               	return
  8799  1DE7                     __end_of___fltol:
  8800                           
  8801                           	psect	text18
  8802  198B                     __ptext18:	
  8803 ;; *************** function ___flsub *****************
  8804 ;; Defined at:
  8805 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  8806 ;; Parameters:    Size  Location     Type
  8807 ;;  a               4   70[BANK0 ] long 
  8808 ;;  b               4   74[BANK0 ] long 
  8809 ;; Auto vars:     Size  Location     Type
  8810 ;;		None
  8811 ;; Return value:  Size  Location     Type
  8812 ;;                  4   70[BANK0 ] long 
  8813 ;; Registers used:
  8814 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8815 ;; Tracked objects:
  8816 ;;		On entry : 0/0
  8817 ;;		On exit  : 0/0
  8818 ;;		Unchanged: 0/0
  8819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8820 ;;      Params:         0       8       0       0       0
  8821 ;;      Locals:         0       0       0       0       0
  8822 ;;      Temps:          0       0       0       0       0
  8823 ;;      Totals:         0       8       0       0       0
  8824 ;;Total ram usage:        8 bytes
  8825 ;; Hardware stack levels used:    1
  8826 ;; Hardware stack levels required when called:    1
  8827 ;; This function calls:
  8828 ;;		___fladd
  8829 ;; This function is called by:
  8830 ;;		_sprintf
  8831 ;; This function uses a non-reentrant model
  8832 ;;
  8833                           
  8834                           
  8835                           ;psect for function ___flsub
  8836  198B                     ___flsub:
  8837  198B                     l3077:	
  8838                           ;incstack = 0
  8839                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8840                           
  8841  198B  3080               	movlw	128
  8842  198C  1283               	bcf	3,5	;RP0=0, select bank0
  8843  198D  1303               	bcf	3,6	;RP1=0, select bank0
  8844  198E  06E9               	xorwf	___flsub@a+3,f
  8845  198F                     l3079:
  8846  198F  086D               	movf	___flsub@b+3,w
  8847  1990  00D5               	movwf	___fladd@b+3
  8848  1991  086C               	movf	___flsub@b+2,w
  8849  1992  00D4               	movwf	___fladd@b+2
  8850  1993  086B               	movf	___flsub@b+1,w
  8851  1994  00D3               	movwf	___fladd@b+1
  8852  1995  086A               	movf	___flsub@b,w
  8853  1996  00D2               	movwf	___fladd@b
  8854  1997  0869               	movf	___flsub@a+3,w
  8855  1998  00D9               	movwf	___fladd@a+3
  8856  1999  0868               	movf	___flsub@a+2,w
  8857  199A  00D8               	movwf	___fladd@a+2
  8858  199B  0867               	movf	___flsub@a+1,w
  8859  199C  00D7               	movwf	___fladd@a+1
  8860  199D  0866               	movf	___flsub@a,w
  8861  199E  00D6               	movwf	___fladd@a
  8862  199F  160A  118A  2219  160A  158A  	fcall	___fladd
  8863  19A4  1283               	bcf	3,5	;RP0=0, select bank0
  8864  19A5  1303               	bcf	3,6	;RP1=0, select bank0
  8865  19A6  0855               	movf	?___fladd+3,w
  8866  19A7  00E9               	movwf	?___flsub+3
  8867  19A8  0854               	movf	?___fladd+2,w
  8868  19A9  00E8               	movwf	?___flsub+2
  8869  19AA  0853               	movf	?___fladd+1,w
  8870  19AB  00E7               	movwf	?___flsub+1
  8871  19AC  0852               	movf	?___fladd,w
  8872  19AD  00E6               	movwf	?___flsub
  8873  19AE                     l661:
  8874  19AE  0008               	return
  8875  19AF                     __end_of___flsub:
  8876                           
  8877                           	psect	text19
  8878  1219                     __ptext19:	
  8879 ;; *************** function ___fladd *****************
  8880 ;; Defined at:
  8881 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  8882 ;; Parameters:    Size  Location     Type
  8883 ;;  b               4   50[BANK0 ] long 
  8884 ;;  a               4   54[BANK0 ] long 
  8885 ;; Auto vars:     Size  Location     Type
  8886 ;;  grs             1   69[BANK0 ] unsigned char 
  8887 ;;  bexp            1   68[BANK0 ] unsigned char 
  8888 ;;  aexp            1   67[BANK0 ] unsigned char 
  8889 ;;  signs           1   66[BANK0 ] unsigned char 
  8890 ;; Return value:  Size  Location     Type
  8891 ;;                  4   50[BANK0 ] unsigned char 
  8892 ;; Registers used:
  8893 ;;		wreg, status,2, status,0, btemp+1
  8894 ;; Tracked objects:
  8895 ;;		On entry : 0/0
  8896 ;;		On exit  : 0/0
  8897 ;;		Unchanged: 0/0
  8898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8899 ;;      Params:         0       8       0       0       0
  8900 ;;      Locals:         0       4       0       0       0
  8901 ;;      Temps:          0       8       0       0       0
  8902 ;;      Totals:         0      20       0       0       0
  8903 ;;Total ram usage:       20 bytes
  8904 ;; Hardware stack levels used:    1
  8905 ;; This function calls:
  8906 ;;		Nothing
  8907 ;; This function is called by:
  8908 ;;		_sprintf
  8909 ;;		___flsub
  8910 ;; This function uses a non-reentrant model
  8911 ;;
  8912                           
  8913                           
  8914                           ;psect for function ___fladd
  8915  1219                     ___fladd:
  8916  1219                     l2405:	
  8917                           ;incstack = 0
  8918                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  8919                           
  8920  1219  1283               	bcf	3,5	;RP0=0, select bank0
  8921  121A  1303               	bcf	3,6	;RP1=0, select bank0
  8922  121B  0855               	movf	___fladd@b+3,w
  8923  121C  3980               	andlw	128
  8924  121D  00DA               	movwf	??___fladd
  8925  121E  085A               	movf	??___fladd,w
  8926  121F  00E2               	movwf	___fladd@signs
  8927  1220                     l2407:
  8928  1220  0855               	movf	___fladd@b+3,w
  8929  1221  00DA               	movwf	??___fladd
  8930  1222  075A               	addwf	??___fladd,w
  8931  1223  00DB               	movwf	??___fladd+1
  8932  1224  085B               	movf	??___fladd+1,w
  8933  1225  00E4               	movwf	___fladd@bexp
  8934  1226                     l2409:
  8935  1226  1FD4               	btfss	___fladd@b+2,7
  8936  1227  2A29               	goto	u3121
  8937  1228  2A2A               	goto	u3120
  8938  1229                     u3121:
  8939  1229  2A2B               	goto	l2413
  8940  122A                     u3120:
  8941  122A                     l2411:
  8942  122A  1464               	bsf	___fladd@bexp,0
  8943  122B                     l2413:
  8944  122B  0864               	movf	___fladd@bexp,w
  8945  122C  1903               	btfsc	3,2
  8946  122D  2A2F               	goto	u3131
  8947  122E  2A30               	goto	u3130
  8948  122F                     u3131:
  8949  122F  2A40               	goto	l2423
  8950  1230                     u3130:
  8951  1230                     l2415:
  8952  1230  0A64               	incf	___fladd@bexp,w
  8953  1231  1D03               	btfss	3,2
  8954  1232  2A34               	goto	u3141
  8955  1233  2A35               	goto	u3140
  8956  1234                     u3141:
  8957  1234  2A3D               	goto	l2419
  8958  1235                     u3140:
  8959  1235                     l2417:
  8960  1235  3000               	movlw	0
  8961  1236  00D5               	movwf	___fladd@b+3
  8962  1237  3000               	movlw	0
  8963  1238  00D4               	movwf	___fladd@b+2
  8964  1239  3000               	movlw	0
  8965  123A  00D3               	movwf	___fladd@b+1
  8966  123B  3000               	movlw	0
  8967  123C  00D2               	movwf	___fladd@b
  8968  123D                     l2419:
  8969  123D  17D4               	bsf	___fladd@b+2,7
  8970  123E                     l2421:
  8971  123E  01D5               	clrf	___fladd@b+3
  8972  123F  2A48               	goto	l2425
  8973  1240                     l2423:
  8974  1240  3000               	movlw	0
  8975  1241  00D5               	movwf	___fladd@b+3
  8976  1242  3000               	movlw	0
  8977  1243  00D4               	movwf	___fladd@b+2
  8978  1244  3000               	movlw	0
  8979  1245  00D3               	movwf	___fladd@b+1
  8980  1246  3000               	movlw	0
  8981  1247  00D2               	movwf	___fladd@b
  8982  1248                     l2425:
  8983  1248  0859               	movf	___fladd@a+3,w
  8984  1249  3980               	andlw	128
  8985  124A  00DA               	movwf	??___fladd
  8986  124B  085A               	movf	??___fladd,w
  8987  124C  00E3               	movwf	___fladd@aexp
  8988  124D                     l2427:
  8989  124D  0863               	movf	___fladd@aexp,w
  8990  124E  0662               	xorwf	___fladd@signs,w
  8991  124F  1903               	skipnz
  8992  1250  2A52               	goto	u3151
  8993  1251  2A53               	goto	u3150
  8994  1252                     u3151:
  8995  1252  2A54               	goto	l2431
  8996  1253                     u3150:
  8997  1253                     l2429:
  8998  1253  1762               	bsf	___fladd@signs,6
  8999  1254                     l2431:
  9000  1254  0859               	movf	___fladd@a+3,w
  9001  1255  00DA               	movwf	??___fladd
  9002  1256  075A               	addwf	??___fladd,w
  9003  1257  00DB               	movwf	??___fladd+1
  9004  1258  085B               	movf	??___fladd+1,w
  9005  1259  00E3               	movwf	___fladd@aexp
  9006  125A                     l2433:
  9007  125A  1FD8               	btfss	___fladd@a+2,7
  9008  125B  2A5D               	goto	u3161
  9009  125C  2A5E               	goto	u3160
  9010  125D                     u3161:
  9011  125D  2A5F               	goto	l2437
  9012  125E                     u3160:
  9013  125E                     l2435:
  9014  125E  1463               	bsf	___fladd@aexp,0
  9015  125F                     l2437:
  9016  125F  0863               	movf	___fladd@aexp,w
  9017  1260  1903               	btfsc	3,2
  9018  1261  2A63               	goto	u3171
  9019  1262  2A64               	goto	u3170
  9020  1263                     u3171:
  9021  1263  2A74               	goto	l2447
  9022  1264                     u3170:
  9023  1264                     l2439:
  9024  1264  0A63               	incf	___fladd@aexp,w
  9025  1265  1D03               	btfss	3,2
  9026  1266  2A68               	goto	u3181
  9027  1267  2A69               	goto	u3180
  9028  1268                     u3181:
  9029  1268  2A71               	goto	l2443
  9030  1269                     u3180:
  9031  1269                     l2441:
  9032  1269  3000               	movlw	0
  9033  126A  00D9               	movwf	___fladd@a+3
  9034  126B  3000               	movlw	0
  9035  126C  00D8               	movwf	___fladd@a+2
  9036  126D  3000               	movlw	0
  9037  126E  00D7               	movwf	___fladd@a+1
  9038  126F  3000               	movlw	0
  9039  1270  00D6               	movwf	___fladd@a
  9040  1271                     l2443:
  9041  1271  17D8               	bsf	___fladd@a+2,7
  9042  1272                     l2445:
  9043  1272  01D9               	clrf	___fladd@a+3
  9044  1273  2A7C               	goto	l615
  9045  1274                     l2447:
  9046  1274  3000               	movlw	0
  9047  1275  00D9               	movwf	___fladd@a+3
  9048  1276  3000               	movlw	0
  9049  1277  00D8               	movwf	___fladd@a+2
  9050  1278  3000               	movlw	0
  9051  1279  00D7               	movwf	___fladd@a+1
  9052  127A  3000               	movlw	0
  9053  127B  00D6               	movwf	___fladd@a
  9054  127C                     l615:
  9055  127C  0864               	movf	___fladd@bexp,w
  9056  127D  0263               	subwf	___fladd@aexp,w
  9057  127E  1803               	skipnc
  9058  127F  2A81               	goto	u3191
  9059  1280  2A82               	goto	u3190
  9060  1281                     u3191:
  9061  1281  2AC6               	goto	l2483
  9062  1282                     u3190:
  9063  1282                     l2449:
  9064  1282  1F62               	btfss	___fladd@signs,6
  9065  1283  2A85               	goto	u3201
  9066  1284  2A86               	goto	u3200
  9067  1285                     u3201:
  9068  1285  2A8A               	goto	l2453
  9069  1286                     u3200:
  9070  1286                     l2451:
  9071  1286  3080               	movlw	128
  9072  1287  00DA               	movwf	??___fladd
  9073  1288  085A               	movf	??___fladd,w
  9074  1289  06E2               	xorwf	___fladd@signs,f
  9075  128A                     l2453:
  9076  128A  0864               	movf	___fladd@bexp,w
  9077  128B  00DA               	movwf	??___fladd
  9078  128C  085A               	movf	??___fladd,w
  9079  128D  00E5               	movwf	___fladd@grs
  9080  128E                     l2455:
  9081  128E  0863               	movf	___fladd@aexp,w
  9082  128F  00DA               	movwf	??___fladd
  9083  1290  085A               	movf	??___fladd,w
  9084  1291  00E4               	movwf	___fladd@bexp
  9085  1292                     l2457:
  9086  1292  0865               	movf	___fladd@grs,w
  9087  1293  00DA               	movwf	??___fladd
  9088  1294  085A               	movf	??___fladd,w
  9089  1295  00E3               	movwf	___fladd@aexp
  9090  1296                     l2459:
  9091  1296  0852               	movf	___fladd@b,w
  9092  1297  00DA               	movwf	??___fladd
  9093  1298  085A               	movf	??___fladd,w
  9094  1299  00E5               	movwf	___fladd@grs
  9095  129A                     l2461:
  9096  129A  0856               	movf	___fladd@a,w
  9097  129B  00DA               	movwf	??___fladd
  9098  129C  085A               	movf	??___fladd,w
  9099  129D  00D2               	movwf	___fladd@b
  9100  129E                     l2463:
  9101  129E  0865               	movf	___fladd@grs,w
  9102  129F  00DA               	movwf	??___fladd
  9103  12A0  085A               	movf	??___fladd,w
  9104  12A1  00D6               	movwf	___fladd@a
  9105  12A2                     l2465:
  9106  12A2  0853               	movf	___fladd@b+1,w
  9107  12A3  00DA               	movwf	??___fladd
  9108  12A4  085A               	movf	??___fladd,w
  9109  12A5  00E5               	movwf	___fladd@grs
  9110  12A6                     l2467:
  9111  12A6  0857               	movf	___fladd@a+1,w
  9112  12A7  00DA               	movwf	??___fladd
  9113  12A8  085A               	movf	??___fladd,w
  9114  12A9  00D3               	movwf	___fladd@b+1
  9115  12AA                     l2469:
  9116  12AA  0865               	movf	___fladd@grs,w
  9117  12AB  00DA               	movwf	??___fladd
  9118  12AC  085A               	movf	??___fladd,w
  9119  12AD  00D7               	movwf	___fladd@a+1
  9120  12AE                     l2471:
  9121  12AE  0854               	movf	___fladd@b+2,w
  9122  12AF  00DA               	movwf	??___fladd
  9123  12B0  085A               	movf	??___fladd,w
  9124  12B1  00E5               	movwf	___fladd@grs
  9125  12B2                     l2473:
  9126  12B2  0858               	movf	___fladd@a+2,w
  9127  12B3  00DA               	movwf	??___fladd
  9128  12B4  085A               	movf	??___fladd,w
  9129  12B5  00D4               	movwf	___fladd@b+2
  9130  12B6                     l2475:
  9131  12B6  0865               	movf	___fladd@grs,w
  9132  12B7  00DA               	movwf	??___fladd
  9133  12B8  085A               	movf	??___fladd,w
  9134  12B9  00D8               	movwf	___fladd@a+2
  9135  12BA                     l2477:
  9136  12BA  0855               	movf	___fladd@b+3,w
  9137  12BB  00DA               	movwf	??___fladd
  9138  12BC  085A               	movf	??___fladd,w
  9139  12BD  00E5               	movwf	___fladd@grs
  9140  12BE                     l2479:
  9141  12BE  0859               	movf	___fladd@a+3,w
  9142  12BF  00DA               	movwf	??___fladd
  9143  12C0  085A               	movf	??___fladd,w
  9144  12C1  00D5               	movwf	___fladd@b+3
  9145  12C2                     l2481:
  9146  12C2  0865               	movf	___fladd@grs,w
  9147  12C3  00DA               	movwf	??___fladd
  9148  12C4  085A               	movf	??___fladd,w
  9149  12C5  00D9               	movwf	___fladd@a+3
  9150  12C6                     l2483:
  9151  12C6  01E5               	clrf	___fladd@grs
  9152  12C7                     l2485:
  9153  12C7  0863               	movf	___fladd@aexp,w
  9154  12C8  00DA               	movwf	??___fladd
  9155  12C9  01DB               	clrf	??___fladd+1
  9156  12CA  085B               	movf	??___fladd+1,w
  9157  12CB  00DD               	movwf	??___fladd+3
  9158  12CC  0864               	movf	___fladd@bexp,w
  9159  12CD  025A               	subwf	??___fladd,w
  9160  12CE  00DC               	movwf	??___fladd+2
  9161  12CF  1C03               	skipc
  9162  12D0  03DD               	decf	??___fladd+3,f
  9163  12D1  085D               	movf	??___fladd+3,w
  9164  12D2  3A80               	xorlw	128
  9165  12D3  00FF               	movwf	btemp+1
  9166  12D4  3080               	movlw	128
  9167  12D5  027F               	subwf	btemp+1,w
  9168  12D6  1D03               	skipz
  9169  12D7  2ADA               	goto	u3215
  9170  12D8  301A               	movlw	26
  9171  12D9  025C               	subwf	??___fladd+2,w
  9172  12DA                     u3215:
  9173  12DA  1C03               	skipc
  9174  12DB  2ADD               	goto	u3211
  9175  12DC  2ADE               	goto	u3210
  9176  12DD                     u3211:
  9177  12DD  2B1B               	goto	l2501
  9178  12DE                     u3210:
  9179  12DE                     l2487:
  9180  12DE  1283               	bcf	3,5	;RP0=0, select bank0
  9181  12DF  1303               	bcf	3,6	;RP1=0, select bank0
  9182  12E0  0855               	movf	___fladd@b+3,w
  9183  12E1  0454               	iorwf	___fladd@b+2,w
  9184  12E2  0453               	iorwf	___fladd@b+1,w
  9185  12E3  0452               	iorwf	___fladd@b,w
  9186  12E4  1D03               	skipz
  9187  12E5  2AE7               	goto	u3221
  9188  12E6  2AE9               	goto	u3220
  9189  12E7                     u3221:
  9190  12E7  3001               	movlw	1
  9191  12E8  2AEA               	goto	u3230
  9192  12E9                     u3220:
  9193  12E9  3000               	movlw	0
  9194  12EA                     u3230:
  9195  12EA  00DA               	movwf	??___fladd
  9196  12EB  085A               	movf	??___fladd,w
  9197  12EC  00E5               	movwf	___fladd@grs
  9198  12ED  3000               	movlw	0
  9199  12EE  00D5               	movwf	___fladd@b+3
  9200  12EF  3000               	movlw	0
  9201  12F0  00D4               	movwf	___fladd@b+2
  9202  12F1  3000               	movlw	0
  9203  12F2  00D3               	movwf	___fladd@b+1
  9204  12F3  3000               	movlw	0
  9205  12F4  00D2               	movwf	___fladd@b
  9206  12F5  0863               	movf	___fladd@aexp,w
  9207  12F6  00DA               	movwf	??___fladd
  9208  12F7  085A               	movf	??___fladd,w
  9209  12F8  00E4               	movwf	___fladd@bexp
  9210  12F9  2B23               	goto	l619
  9211  12FA                     l621:
  9212  12FA  1C65               	btfss	___fladd@grs,0
  9213  12FB  2AFD               	goto	u3241
  9214  12FC  2AFE               	goto	u3240
  9215  12FD                     u3241:
  9216  12FD  2B07               	goto	l2491
  9217  12FE                     u3240:
  9218  12FE                     l2489:
  9219  12FE  0865               	movf	___fladd@grs,w
  9220  12FF  00DA               	movwf	??___fladd
  9221  1300  1003               	clrc
  9222  1301  0C5A               	rrf	??___fladd,w
  9223  1302  3801               	iorlw	1
  9224  1303  00DB               	movwf	??___fladd+1
  9225  1304  085B               	movf	??___fladd+1,w
  9226  1305  00E5               	movwf	___fladd@grs
  9227  1306  2B09               	goto	l2493
  9228  1307                     l2491:
  9229  1307  1003               	clrc
  9230  1308  0CE5               	rrf	___fladd@grs,f
  9231  1309                     l2493:
  9232  1309  1C52               	btfss	___fladd@b,0
  9233  130A  2B0C               	goto	u3251
  9234  130B  2B0D               	goto	u3250
  9235  130C                     u3251:
  9236  130C  2B0E               	goto	l2497
  9237  130D                     u3250:
  9238  130D                     l2495:
  9239  130D  17E5               	bsf	___fladd@grs,7
  9240  130E                     l2497:
  9241  130E  3001               	movlw	1
  9242  130F  00DA               	movwf	??___fladd
  9243  1310                     u3265:
  9244  1310  0D55               	rlf	___fladd@b+3,w
  9245  1311  0CD5               	rrf	___fladd@b+3,f
  9246  1312  0CD4               	rrf	___fladd@b+2,f
  9247  1313  0CD3               	rrf	___fladd@b+1,f
  9248  1314  0CD2               	rrf	___fladd@b,f
  9249  1315  0BDA               	decfsz	??___fladd& (0+127),f
  9250  1316  2B10               	goto	u3265
  9251  1317                     l2499:
  9252  1317  3001               	movlw	1
  9253  1318  00DA               	movwf	??___fladd
  9254  1319  085A               	movf	??___fladd,w
  9255  131A  07E4               	addwf	___fladd@bexp,f
  9256  131B                     l2501:
  9257  131B  1283               	bcf	3,5	;RP0=0, select bank0
  9258  131C  1303               	bcf	3,6	;RP1=0, select bank0
  9259  131D  0863               	movf	___fladd@aexp,w
  9260  131E  0264               	subwf	___fladd@bexp,w
  9261  131F  1C03               	skipc
  9262  1320  2B22               	goto	u3271
  9263  1321  2B23               	goto	u3270
  9264  1322                     u3271:
  9265  1322  2AFA               	goto	l621
  9266  1323                     u3270:
  9267  1323                     l619:
  9268  1323  1B62               	btfsc	___fladd@signs,6
  9269  1324  2B26               	goto	u3281
  9270  1325  2B27               	goto	u3280
  9271  1326                     u3281:
  9272  1326  2B72               	goto	l2527
  9273  1327                     u3280:
  9274  1327                     l2503:
  9275  1327  0864               	movf	___fladd@bexp,w
  9276  1328  1D03               	btfss	3,2
  9277  1329  2B2B               	goto	u3291
  9278  132A  2B2C               	goto	u3290
  9279  132B                     u3291:
  9280  132B  2B35               	goto	l2509
  9281  132C                     u3290:
  9282  132C                     l2505:
  9283  132C  3000               	movlw	0
  9284  132D  00D5               	movwf	?___fladd+3
  9285  132E  3000               	movlw	0
  9286  132F  00D4               	movwf	?___fladd+2
  9287  1330  3000               	movlw	0
  9288  1331  00D3               	movwf	?___fladd+1
  9289  1332  3000               	movlw	0
  9290  1333  00D2               	movwf	?___fladd
  9291  1334  2CA0               	goto	l628
  9292  1335                     l2509:
  9293  1335  0856               	movf	___fladd@a,w
  9294  1336  07D2               	addwf	___fladd@b,f
  9295  1337  0857               	movf	___fladd@a+1,w
  9296  1338  1103               	clrz
  9297  1339  1803               	skipnc
  9298  133A  3E01               	addlw	1
  9299  133B  1903               	skipnz
  9300  133C  2B3E               	goto	u3301
  9301  133D  07D3               	addwf	___fladd@b+1,f
  9302  133E                     u3301:
  9303  133E  0858               	movf	___fladd@a+2,w
  9304  133F  1103               	clrz
  9305  1340  1803               	skipnc
  9306  1341  3E01               	addlw	1
  9307  1342  1903               	skipnz
  9308  1343  2B45               	goto	u3302
  9309  1344  07D4               	addwf	___fladd@b+2,f
  9310  1345                     u3302:
  9311  1345  0859               	movf	___fladd@a+3,w
  9312  1346  1103               	clrz
  9313  1347  1803               	skipnc
  9314  1348  3E01               	addlw	1
  9315  1349  1903               	skipnz
  9316  134A  2B4C               	goto	u3303
  9317  134B  07D5               	addwf	___fladd@b+3,f
  9318  134C                     u3303:
  9319  134C                     l2511:
  9320  134C  1C55               	btfss	___fladd@b+3,0
  9321  134D  2B4F               	goto	u3311
  9322  134E  2B50               	goto	u3310
  9323  134F                     u3311:
  9324  134F  2C26               	goto	l2561
  9325  1350                     u3310:
  9326  1350                     l2513:
  9327  1350  1C65               	btfss	___fladd@grs,0
  9328  1351  2B53               	goto	u3321
  9329  1352  2B54               	goto	u3320
  9330  1353                     u3321:
  9331  1353  2B5D               	goto	l2517
  9332  1354                     u3320:
  9333  1354                     l2515:
  9334  1354  0865               	movf	___fladd@grs,w
  9335  1355  00DA               	movwf	??___fladd
  9336  1356  1003               	clrc
  9337  1357  0C5A               	rrf	??___fladd,w
  9338  1358  3801               	iorlw	1
  9339  1359  00DB               	movwf	??___fladd+1
  9340  135A  085B               	movf	??___fladd+1,w
  9341  135B  00E5               	movwf	___fladd@grs
  9342  135C  2B5F               	goto	l2519
  9343  135D                     l2517:
  9344  135D  1003               	clrc
  9345  135E  0CE5               	rrf	___fladd@grs,f
  9346  135F                     l2519:
  9347  135F  1C52               	btfss	___fladd@b,0
  9348  1360  2B62               	goto	u3331
  9349  1361  2B63               	goto	u3330
  9350  1362                     u3331:
  9351  1362  2B64               	goto	l2523
  9352  1363                     u3330:
  9353  1363                     l2521:
  9354  1363  17E5               	bsf	___fladd@grs,7
  9355  1364                     l2523:
  9356  1364  3001               	movlw	1
  9357  1365  00DA               	movwf	??___fladd
  9358  1366                     u3345:
  9359  1366  0D55               	rlf	___fladd@b+3,w
  9360  1367  0CD5               	rrf	___fladd@b+3,f
  9361  1368  0CD4               	rrf	___fladd@b+2,f
  9362  1369  0CD3               	rrf	___fladd@b+1,f
  9363  136A  0CD2               	rrf	___fladd@b,f
  9364  136B  0BDA               	decfsz	??___fladd& (0+127),f
  9365  136C  2B66               	goto	u3345
  9366  136D                     l2525:
  9367  136D  3001               	movlw	1
  9368  136E  00DA               	movwf	??___fladd
  9369  136F  085A               	movf	??___fladd,w
  9370  1370  07E4               	addwf	___fladd@bexp,f
  9371  1371  2C26               	goto	l2561
  9372  1372                     l2527:
  9373  1372  0855               	movf	___fladd@b+3,w
  9374  1373  3A80               	xorlw	128
  9375  1374  00FF               	movwf	btemp+1
  9376  1375  0859               	movf	___fladd@a+3,w
  9377  1376  3A80               	xorlw	128
  9378  1377  027F               	subwf	btemp+1,w
  9379  1378  1D03               	skipz
  9380  1379  2B84               	goto	u3353
  9381  137A  0858               	movf	___fladd@a+2,w
  9382  137B  0254               	subwf	___fladd@b+2,w
  9383  137C  1D03               	skipz
  9384  137D  2B84               	goto	u3353
  9385  137E  0857               	movf	___fladd@a+1,w
  9386  137F  0253               	subwf	___fladd@b+1,w
  9387  1380  1D03               	skipz
  9388  1381  2B84               	goto	u3353
  9389  1382  0856               	movf	___fladd@a,w
  9390  1383  0252               	subwf	___fladd@b,w
  9391  1384                     u3353:
  9392  1384  1803               	skipnc
  9393  1385  2B87               	goto	u3351
  9394  1386  2B88               	goto	u3350
  9395  1387                     u3351:
  9396  1387  2BE0               	goto	l2537
  9397  1388                     u3350:
  9398  1388                     l2529:
  9399  1388  30FF               	movlw	255
  9400  1389  00DA               	movwf	??___fladd
  9401  138A  30FF               	movlw	255
  9402  138B  00DB               	movwf	??___fladd+1
  9403  138C  30FF               	movlw	255
  9404  138D  00DC               	movwf	??___fladd+2
  9405  138E  30FF               	movlw	255
  9406  138F  00DD               	movwf	??___fladd+3
  9407  1390  0856               	movf	___fladd@a,w
  9408  1391  00DE               	movwf	??___fladd+4
  9409  1392  0857               	movf	___fladd@a+1,w
  9410  1393  00DF               	movwf	??___fladd+5
  9411  1394  0858               	movf	___fladd@a+2,w
  9412  1395  00E0               	movwf	??___fladd+6
  9413  1396  0859               	movf	___fladd@a+3,w
  9414  1397  00E1               	movwf	??___fladd+7
  9415  1398  0852               	movf	___fladd@b,w
  9416  1399  02DE               	subwf	??___fladd+4,f
  9417  139A  0853               	movf	___fladd@b+1,w
  9418  139B  1C03               	skipc
  9419  139C  0F53               	incfsz	___fladd@b+1,w
  9420  139D  2B9F               	goto	u3361
  9421  139E  2BA0               	goto	u3362
  9422  139F                     u3361:
  9423  139F  02DF               	subwf	??___fladd+5,f
  9424  13A0                     u3362:
  9425  13A0  0854               	movf	___fladd@b+2,w
  9426  13A1  1C03               	skipc
  9427  13A2  0F54               	incfsz	___fladd@b+2,w
  9428  13A3  2BA5               	goto	u3363
  9429  13A4  2BA6               	goto	u3364
  9430  13A5                     u3363:
  9431  13A5  02E0               	subwf	??___fladd+6,f
  9432  13A6                     u3364:
  9433  13A6  0855               	movf	___fladd@b+3,w
  9434  13A7  1C03               	skipc
  9435  13A8  0F55               	incfsz	___fladd@b+3,w
  9436  13A9  2BAB               	goto	u3365
  9437  13AA  2BAC               	goto	u3366
  9438  13AB                     u3365:
  9439  13AB  02E1               	subwf	??___fladd+7,f
  9440  13AC                     u3366:
  9441  13AC  085E               	movf	??___fladd+4,w
  9442  13AD  07DA               	addwf	??___fladd,f
  9443  13AE  085F               	movf	??___fladd+5,w
  9444  13AF  1803               	skipnc
  9445  13B0  0F5F               	incfsz	??___fladd+5,w
  9446  13B1  2BB3               	goto	u3370
  9447  13B2  2BB4               	goto	u3371
  9448  13B3                     u3370:
  9449  13B3  07DB               	addwf	??___fladd+1,f
  9450  13B4                     u3371:
  9451  13B4  0860               	movf	??___fladd+6,w
  9452  13B5  1803               	skipnc
  9453  13B6  0F60               	incfsz	??___fladd+6,w
  9454  13B7  2BB9               	goto	u3372
  9455  13B8  2BBA               	goto	u3373
  9456  13B9                     u3372:
  9457  13B9  07DC               	addwf	??___fladd+2,f
  9458  13BA                     u3373:
  9459  13BA  0861               	movf	??___fladd+7,w
  9460  13BB  1803               	skipnc
  9461  13BC  0A61               	incf	??___fladd+7,w
  9462  13BD  07DD               	addwf	??___fladd+3,f
  9463  13BE  085D               	movf	??___fladd+3,w
  9464  13BF  00D5               	movwf	___fladd@b+3
  9465  13C0  085C               	movf	??___fladd+2,w
  9466  13C1  00D4               	movwf	___fladd@b+2
  9467  13C2  085B               	movf	??___fladd+1,w
  9468  13C3  00D3               	movwf	___fladd@b+1
  9469  13C4  085A               	movf	??___fladd,w
  9470  13C5  00D2               	movwf	___fladd@b
  9471  13C6                     l2531:
  9472  13C6  3080               	movlw	128
  9473  13C7  00DA               	movwf	??___fladd
  9474  13C8  085A               	movf	??___fladd,w
  9475  13C9  06E2               	xorwf	___fladd@signs,f
  9476  13CA  09E5               	comf	___fladd@grs,f
  9477  13CB  0AE5               	incf	___fladd@grs,f
  9478  13CC                     l2533:
  9479  13CC  0865               	movf	___fladd@grs,w
  9480  13CD  1D03               	btfss	3,2
  9481  13CE  2BD0               	goto	u3381
  9482  13CF  2BD1               	goto	u3380
  9483  13D0                     u3381:
  9484  13D0  2BEE               	goto	l636
  9485  13D1                     u3380:
  9486  13D1                     l2535:
  9487  13D1  3001               	movlw	1
  9488  13D2  07D2               	addwf	___fladd@b,f
  9489  13D3  3000               	movlw	0
  9490  13D4  1803               	skipnc
  9491  13D5  3001               	movlw	1
  9492  13D6  07D3               	addwf	___fladd@b+1,f
  9493  13D7  3000               	movlw	0
  9494  13D8  1803               	skipnc
  9495  13D9  3001               	movlw	1
  9496  13DA  07D4               	addwf	___fladd@b+2,f
  9497  13DB  3000               	movlw	0
  9498  13DC  1803               	skipnc
  9499  13DD  3001               	movlw	1
  9500  13DE  07D5               	addwf	___fladd@b+3,f
  9501  13DF  2BEE               	goto	l636
  9502  13E0                     l2537:
  9503  13E0  0856               	movf	___fladd@a,w
  9504  13E1  02D2               	subwf	___fladd@b,f
  9505  13E2  0857               	movf	___fladd@a+1,w
  9506  13E3  1C03               	skipc
  9507  13E4  0F57               	incfsz	___fladd@a+1,w
  9508  13E5  02D3               	subwf	___fladd@b+1,f
  9509  13E6  0858               	movf	___fladd@a+2,w
  9510  13E7  1C03               	skipc
  9511  13E8  0F58               	incfsz	___fladd@a+2,w
  9512  13E9  02D4               	subwf	___fladd@b+2,f
  9513  13EA  0859               	movf	___fladd@a+3,w
  9514  13EB  1C03               	skipc
  9515  13EC  0F59               	incfsz	___fladd@a+3,w
  9516  13ED  02D5               	subwf	___fladd@b+3,f
  9517  13EE                     l636:
  9518  13EE  0855               	movf	___fladd@b+3,w
  9519  13EF  0454               	iorwf	___fladd@b+2,w
  9520  13F0  0453               	iorwf	___fladd@b+1,w
  9521  13F1  0452               	iorwf	___fladd@b,w
  9522  13F2  1D03               	skipz
  9523  13F3  2BF5               	goto	u3391
  9524  13F4  2BF6               	goto	u3390
  9525  13F5                     u3391:
  9526  13F5  2C22               	goto	l2559
  9527  13F6                     u3390:
  9528  13F6                     l2539:
  9529  13F6  0865               	movf	___fladd@grs,w
  9530  13F7  1D03               	btfss	3,2
  9531  13F8  2BFA               	goto	u3401
  9532  13F9  2BFB               	goto	u3400
  9533  13FA                     u3401:
  9534  13FA  2C22               	goto	l2559
  9535  13FB                     u3400:
  9536  13FB                     l2541:
  9537  13FB  3000               	movlw	0
  9538  13FC  00D5               	movwf	?___fladd+3
  9539  13FD  3000               	movlw	0
  9540  13FE  00D4               	movwf	?___fladd+2
  9541  13FF  3000               	movlw	0
  9542  1400  00D3               	movwf	?___fladd+1
  9543  1401  3000               	movlw	0
  9544  1402  00D2               	movwf	?___fladd
  9545  1403  2CA0               	goto	l628
  9546  1404                     l2545:
  9547  1404  3001               	movlw	1
  9548  1405  00DA               	movwf	??___fladd
  9549  1406                     u3415:
  9550  1406  1003               	clrc
  9551  1407  0DD2               	rlf	___fladd@b,f
  9552  1408  0DD3               	rlf	___fladd@b+1,f
  9553  1409  0DD4               	rlf	___fladd@b+2,f
  9554  140A  0DD5               	rlf	___fladd@b+3,f
  9555  140B  0BDA               	decfsz	??___fladd,f
  9556  140C  2C06               	goto	u3415
  9557  140D                     l2547:
  9558  140D  1FE5               	btfss	___fladd@grs,7
  9559  140E  2C10               	goto	u3421
  9560  140F  2C11               	goto	u3420
  9561  1410                     u3421:
  9562  1410  2C12               	goto	l640
  9563  1411                     u3420:
  9564  1411                     l2549:
  9565  1411  1452               	bsf	___fladd@b,0
  9566  1412                     l640:
  9567  1412  1C65               	btfss	___fladd@grs,0
  9568  1413  2C15               	goto	u3431
  9569  1414  2C16               	goto	u3430
  9570  1415                     u3431:
  9571  1415  2C19               	goto	l2553
  9572  1416                     u3430:
  9573  1416                     l2551:
  9574  1416  1403               	setc
  9575  1417  0DE5               	rlf	___fladd@grs,f
  9576  1418  2C1B               	goto	l2555
  9577  1419                     l2553:
  9578  1419  1003               	clrc
  9579  141A  0DE5               	rlf	___fladd@grs,f
  9580  141B                     l2555:
  9581  141B  0864               	movf	___fladd@bexp,w
  9582  141C  1903               	btfsc	3,2
  9583  141D  2C1F               	goto	u3441
  9584  141E  2C20               	goto	u3440
  9585  141F                     u3441:
  9586  141F  2C22               	goto	l2559
  9587  1420                     u3440:
  9588  1420                     l2557:
  9589  1420  3001               	movlw	1
  9590  1421  02E4               	subwf	___fladd@bexp,f
  9591  1422                     l2559:
  9592  1422  1FD4               	btfss	___fladd@b+2,7
  9593  1423  2C25               	goto	u3451
  9594  1424  2C26               	goto	u3450
  9595  1425                     u3451:
  9596  1425  2C04               	goto	l2545
  9597  1426                     u3450:
  9598  1426                     l2561:
  9599  1426  01E3               	clrf	___fladd@aexp
  9600  1427                     l2563:
  9601  1427  1FE5               	btfss	___fladd@grs,7
  9602  1428  2C2A               	goto	u3461
  9603  1429  2C2B               	goto	u3460
  9604  142A                     u3461:
  9605  142A  2C39               	goto	l2571
  9606  142B                     u3460:
  9607  142B                     l2565:
  9608  142B  0865               	movf	___fladd@grs,w
  9609  142C  397F               	andlw	127
  9610  142D  1903               	btfsc	3,2
  9611  142E  2C30               	goto	u3471
  9612  142F  2C31               	goto	u3470
  9613  1430                     u3471:
  9614  1430  2C34               	goto	l646
  9615  1431                     u3470:
  9616  1431                     l2567:
  9617  1431  01E3               	clrf	___fladd@aexp
  9618  1432  0AE3               	incf	___fladd@aexp,f
  9619  1433  2C39               	goto	l2571
  9620  1434                     l646:
  9621  1434  1C52               	btfss	___fladd@b,0
  9622  1435  2C37               	goto	u3481
  9623  1436  2C38               	goto	u3480
  9624  1437                     u3481:
  9625  1437  2C39               	goto	l2571
  9626  1438                     u3480:
  9627  1438  2C31               	goto	l2567
  9628  1439                     l2571:
  9629  1439  0863               	movf	___fladd@aexp,w
  9630  143A  1903               	btfsc	3,2
  9631  143B  2C3D               	goto	u3491
  9632  143C  2C3E               	goto	u3490
  9633  143D                     u3491:
  9634  143D  2C72               	goto	l649
  9635  143E                     u3490:
  9636  143E                     l2573:
  9637  143E  3001               	movlw	1
  9638  143F  07D2               	addwf	___fladd@b,f
  9639  1440  3000               	movlw	0
  9640  1441  1803               	skipnc
  9641  1442  3001               	movlw	1
  9642  1443  07D3               	addwf	___fladd@b+1,f
  9643  1444  3000               	movlw	0
  9644  1445  1803               	skipnc
  9645  1446  3001               	movlw	1
  9646  1447  07D4               	addwf	___fladd@b+2,f
  9647  1448  3000               	movlw	0
  9648  1449  1803               	skipnc
  9649  144A  3001               	movlw	1
  9650  144B  07D5               	addwf	___fladd@b+3,f
  9651  144C                     l2575:
  9652  144C  1C55               	btfss	___fladd@b+3,0
  9653  144D  2C4F               	goto	u3501
  9654  144E  2C50               	goto	u3500
  9655  144F                     u3501:
  9656  144F  2C72               	goto	l649
  9657  1450                     u3500:
  9658  1450                     l2577:
  9659  1450  0852               	movf	___fladd@b,w
  9660  1451  00DA               	movwf	??___fladd
  9661  1452  0853               	movf	___fladd@b+1,w
  9662  1453  00DB               	movwf	??___fladd+1
  9663  1454  0854               	movf	___fladd@b+2,w
  9664  1455  00DC               	movwf	??___fladd+2
  9665  1456  0855               	movf	___fladd@b+3,w
  9666  1457  00DD               	movwf	??___fladd+3
  9667  1458  3001               	movlw	1
  9668  1459  00DE               	movwf	??___fladd+4
  9669  145A                     u3515:
  9670  145A  0D5D               	rlf	??___fladd+3,w
  9671  145B  0CDD               	rrf	??___fladd+3,f
  9672  145C  0CDC               	rrf	??___fladd+2,f
  9673  145D  0CDB               	rrf	??___fladd+1,f
  9674  145E  0CDA               	rrf	??___fladd,f
  9675  145F                     u3510:
  9676  145F  0BDE               	decfsz	??___fladd+4,f
  9677  1460  2C5A               	goto	u3515
  9678  1461  085D               	movf	??___fladd+3,w
  9679  1462  00D5               	movwf	___fladd@b+3
  9680  1463  085C               	movf	??___fladd+2,w
  9681  1464  00D4               	movwf	___fladd@b+2
  9682  1465  085B               	movf	??___fladd+1,w
  9683  1466  00D3               	movwf	___fladd@b+1
  9684  1467  085A               	movf	??___fladd,w
  9685  1468  00D2               	movwf	___fladd@b
  9686  1469  0A64               	incf	___fladd@bexp,w
  9687  146A  1903               	btfsc	3,2
  9688  146B  2C6D               	goto	u3521
  9689  146C  2C6E               	goto	u3520
  9690  146D                     u3521:
  9691  146D  2C72               	goto	l649
  9692  146E                     u3520:
  9693  146E                     l2579:
  9694  146E  3001               	movlw	1
  9695  146F  00DA               	movwf	??___fladd
  9696  1470  085A               	movf	??___fladd,w
  9697  1471  07E4               	addwf	___fladd@bexp,f
  9698  1472                     l649:
  9699  1472  0A64               	incf	___fladd@bexp,w
  9700  1473  1903               	btfsc	3,2
  9701  1474  2C76               	goto	u3531
  9702  1475  2C77               	goto	u3530
  9703  1476                     u3531:
  9704  1476  2C7C               	goto	l2583
  9705  1477                     u3530:
  9706  1477                     l2581:
  9707  1477  0864               	movf	___fladd@bexp,w
  9708  1478  1D03               	btfss	3,2
  9709  1479  2C7B               	goto	u3541
  9710  147A  2C7C               	goto	u3540
  9711  147B                     u3541:
  9712  147B  2C8A               	goto	l2589
  9713  147C                     u3540:
  9714  147C                     l2583:
  9715  147C  3000               	movlw	0
  9716  147D  00D5               	movwf	___fladd@b+3
  9717  147E  3000               	movlw	0
  9718  147F  00D4               	movwf	___fladd@b+2
  9719  1480  3000               	movlw	0
  9720  1481  00D3               	movwf	___fladd@b+1
  9721  1482  3000               	movlw	0
  9722  1483  00D2               	movwf	___fladd@b
  9723  1484                     l2585:
  9724  1484  0864               	movf	___fladd@bexp,w
  9725  1485  1D03               	btfss	3,2
  9726  1486  2C88               	goto	u3551
  9727  1487  2C89               	goto	u3550
  9728  1488                     u3551:
  9729  1488  2C8A               	goto	l2589
  9730  1489                     u3550:
  9731  1489                     l2587:
  9732  1489  01E2               	clrf	___fladd@signs
  9733  148A                     l2589:
  9734  148A  1C64               	btfss	___fladd@bexp,0
  9735  148B  2C8D               	goto	u3561
  9736  148C  2C8E               	goto	u3560
  9737  148D                     u3561:
  9738  148D  2C90               	goto	l2593
  9739  148E                     u3560:
  9740  148E                     l2591:
  9741  148E  17D4               	bsf	___fladd@b+2,7
  9742  148F  2C94               	goto	l657
  9743  1490                     l2593:
  9744  1490  307F               	movlw	127
  9745  1491  00DA               	movwf	??___fladd
  9746  1492  085A               	movf	??___fladd,w
  9747  1493  05D4               	andwf	___fladd@b+2,f
  9748  1494                     l657:
  9749  1494  0864               	movf	___fladd@bexp,w
  9750  1495  00DA               	movwf	??___fladd
  9751  1496  1003               	clrc
  9752  1497  0C5A               	rrf	??___fladd,w
  9753  1498  00DB               	movwf	??___fladd+1
  9754  1499  085B               	movf	??___fladd+1,w
  9755  149A  00D5               	movwf	___fladd@b+3
  9756  149B                     l2595:
  9757  149B  1FE2               	btfss	___fladd@signs,7
  9758  149C  2C9E               	goto	u3571
  9759  149D  2C9F               	goto	u3570
  9760  149E                     u3571:
  9761  149E  2CA0               	goto	l658
  9762  149F                     u3570:
  9763  149F                     l2597:
  9764  149F  17D5               	bsf	___fladd@b+3,7
  9765  14A0                     l658:
  9766  14A0                     l628:
  9767  14A0  0008               	return
  9768  14A1                     __end_of___fladd:
  9769                           
  9770                           	psect	text20
  9771  194C                     __ptext20:	
  9772 ;; *************** function ___flneg *****************
  9773 ;; Defined at:
  9774 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  9775 ;; Parameters:    Size  Location     Type
  9776 ;;  f1              4    0[COMMON] unsigned char 
  9777 ;; Auto vars:     Size  Location     Type
  9778 ;;		None
  9779 ;; Return value:  Size  Location     Type
  9780 ;;                  4    0[COMMON] unsigned char 
  9781 ;; Registers used:
  9782 ;;		wreg
  9783 ;; Tracked objects:
  9784 ;;		On entry : 0/0
  9785 ;;		On exit  : 0/0
  9786 ;;		Unchanged: 0/0
  9787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9788 ;;      Params:         4       0       0       0       0
  9789 ;;      Locals:         0       0       0       0       0
  9790 ;;      Temps:          0       0       0       0       0
  9791 ;;      Totals:         4       0       0       0       0
  9792 ;;Total ram usage:        4 bytes
  9793 ;; Hardware stack levels used:    1
  9794 ;; This function calls:
  9795 ;;		Nothing
  9796 ;; This function is called by:
  9797 ;;		_sprintf
  9798 ;; This function uses a non-reentrant model
  9799 ;;
  9800                           
  9801                           
  9802                           ;psect for function ___flneg
  9803  194C                     ___flneg:
  9804  194C                     l3013:	
  9805                           ;incstack = 0
  9806                           ; Regs used in ___flneg: [wreg]
  9807                           
  9808  194C  0873               	movf	___flneg@f1+3,w
  9809  194D  0472               	iorwf	___flneg@f1+2,w
  9810  194E  0471               	iorwf	___flneg@f1+1,w
  9811  194F  0470               	iorwf	___flneg@f1,w
  9812  1950  1903               	skipnz
  9813  1951  2953               	goto	u4701
  9814  1952  2954               	goto	u4700
  9815  1953                     u4701:
  9816  1953  2956               	goto	l3017
  9817  1954                     u4700:
  9818  1954                     l3015:
  9819  1954  3080               	movlw	128
  9820  1955  06F3               	xorwf	___flneg@f1+3,f
  9821  1956                     l3017:
  9822  1956                     l487:
  9823  1956  0008               	return
  9824  1957                     __end_of___flneg:
  9825                           
  9826                           	psect	text21
  9827  1DE7                     __ptext21:	
  9828 ;; *************** function ___flge *****************
  9829 ;; Defined at:
  9830 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  9831 ;; Parameters:    Size  Location     Type
  9832 ;;  ff1             4    0[COMMON] unsigned char 
  9833 ;;  ff2             4    4[COMMON] unsigned char 
  9834 ;; Auto vars:     Size  Location     Type
  9835 ;;		None
  9836 ;; Return value:  Size  Location     Type
  9837 ;;		None               void
  9838 ;; Registers used:
  9839 ;;		wreg, status,2, status,0
  9840 ;; Tracked objects:
  9841 ;;		On entry : 0/0
  9842 ;;		On exit  : 0/0
  9843 ;;		Unchanged: 0/0
  9844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9845 ;;      Params:         8       0       0       0       0
  9846 ;;      Locals:         0       0       0       0       0
  9847 ;;      Temps:          4       0       0       0       0
  9848 ;;      Totals:        12       0       0       0       0
  9849 ;;Total ram usage:       12 bytes
  9850 ;; Hardware stack levels used:    1
  9851 ;; This function calls:
  9852 ;;		Nothing
  9853 ;; This function is called by:
  9854 ;;		_main
  9855 ;;		_sprintf
  9856 ;; This function uses a non-reentrant model
  9857 ;;
  9858                           
  9859                           
  9860                           ;psect for function ___flge
  9861  1DE7                     ___flge:
  9862  1DE7                     l2993:	
  9863                           ;incstack = 0
  9864                           ; Regs used in ___flge: [wreg+status,2+status,0]
  9865                           
  9866  1DE7  3000               	movlw	0
  9867  1DE8  0570               	andwf	___flge@ff1,w
  9868  1DE9  00F8               	movwf	??___flge
  9869  1DEA  3000               	movlw	0
  9870  1DEB  0571               	andwf	___flge@ff1+1,w
  9871  1DEC  00F9               	movwf	??___flge+1
  9872  1DED  3080               	movlw	128
  9873  1DEE  0572               	andwf	___flge@ff1+2,w
  9874  1DEF  00FA               	movwf	??___flge+2
  9875  1DF0  307F               	movlw	127
  9876  1DF1  0573               	andwf	___flge@ff1+3,w
  9877  1DF2  00FB               	movwf	??___flge+3
  9878  1DF3  087B               	movf	??___flge+3,w
  9879  1DF4  047A               	iorwf	??___flge+2,w
  9880  1DF5  0479               	iorwf	??___flge+1,w
  9881  1DF6  0478               	iorwf	??___flge,w
  9882  1DF7  1D03               	skipz
  9883  1DF8  2DFA               	goto	u4631
  9884  1DF9  2DFB               	goto	u4630
  9885  1DFA                     u4631:
  9886  1DFA  2E03               	goto	l479
  9887  1DFB                     u4630:
  9888  1DFB                     l2995:
  9889  1DFB  3000               	movlw	0
  9890  1DFC  00F3               	movwf	___flge@ff1+3
  9891  1DFD  3000               	movlw	0
  9892  1DFE  00F2               	movwf	___flge@ff1+2
  9893  1DFF  3000               	movlw	0
  9894  1E00  00F1               	movwf	___flge@ff1+1
  9895  1E01  3000               	movlw	0
  9896  1E02  00F0               	movwf	___flge@ff1
  9897  1E03                     l479:
  9898  1E03  3000               	movlw	0
  9899  1E04  0574               	andwf	___flge@ff2,w
  9900  1E05  00F8               	movwf	??___flge
  9901  1E06  3000               	movlw	0
  9902  1E07  0575               	andwf	___flge@ff2+1,w
  9903  1E08  00F9               	movwf	??___flge+1
  9904  1E09  3080               	movlw	128
  9905  1E0A  0576               	andwf	___flge@ff2+2,w
  9906  1E0B  00FA               	movwf	??___flge+2
  9907  1E0C  307F               	movlw	127
  9908  1E0D  0577               	andwf	___flge@ff2+3,w
  9909  1E0E  00FB               	movwf	??___flge+3
  9910  1E0F  087B               	movf	??___flge+3,w
  9911  1E10  047A               	iorwf	??___flge+2,w
  9912  1E11  0479               	iorwf	??___flge+1,w
  9913  1E12  0478               	iorwf	??___flge,w
  9914  1E13  1D03               	skipz
  9915  1E14  2E16               	goto	u4641
  9916  1E15  2E17               	goto	u4640
  9917  1E16                     u4641:
  9918  1E16  2E1F               	goto	l2999
  9919  1E17                     u4640:
  9920  1E17                     l2997:
  9921  1E17  3000               	movlw	0
  9922  1E18  00F7               	movwf	___flge@ff2+3
  9923  1E19  3000               	movlw	0
  9924  1E1A  00F6               	movwf	___flge@ff2+2
  9925  1E1B  3000               	movlw	0
  9926  1E1C  00F5               	movwf	___flge@ff2+1
  9927  1E1D  3000               	movlw	0
  9928  1E1E  00F4               	movwf	___flge@ff2
  9929  1E1F                     l2999:
  9930  1E1F  1FF3               	btfss	___flge@ff1+3,7
  9931  1E20  2E22               	goto	u4651
  9932  1E21  2E23               	goto	u4650
  9933  1E22                     u4651:
  9934  1E22  2E47               	goto	l3003
  9935  1E23                     u4650:
  9936  1E23                     l3001:
  9937  1E23  3000               	movlw	0
  9938  1E24  00F8               	movwf	??___flge
  9939  1E25  3000               	movlw	0
  9940  1E26  00F9               	movwf	??___flge+1
  9941  1E27  3000               	movlw	0
  9942  1E28  00FA               	movwf	??___flge+2
  9943  1E29  3080               	movlw	128
  9944  1E2A  00FB               	movwf	??___flge+3
  9945  1E2B  0870               	movf	___flge@ff1,w
  9946  1E2C  02F8               	subwf	??___flge,f
  9947  1E2D  0871               	movf	___flge@ff1+1,w
  9948  1E2E  1C03               	skipc
  9949  1E2F  0F71               	incfsz	___flge@ff1+1,w
  9950  1E30  2E32               	goto	u4661
  9951  1E31  2E33               	goto	u4662
  9952  1E32                     u4661:
  9953  1E32  02F9               	subwf	??___flge+1,f
  9954  1E33                     u4662:
  9955  1E33  0872               	movf	___flge@ff1+2,w
  9956  1E34  1C03               	skipc
  9957  1E35  0F72               	incfsz	___flge@ff1+2,w
  9958  1E36  2E38               	goto	u4663
  9959  1E37  2E39               	goto	u4664
  9960  1E38                     u4663:
  9961  1E38  02FA               	subwf	??___flge+2,f
  9962  1E39                     u4664:
  9963  1E39  0873               	movf	___flge@ff1+3,w
  9964  1E3A  1C03               	skipc
  9965  1E3B  0F73               	incfsz	___flge@ff1+3,w
  9966  1E3C  2E3E               	goto	u4665
  9967  1E3D  2E3F               	goto	u4666
  9968  1E3E                     u4665:
  9969  1E3E  02FB               	subwf	??___flge+3,f
  9970  1E3F                     u4666:
  9971  1E3F  087B               	movf	??___flge+3,w
  9972  1E40  00F3               	movwf	___flge@ff1+3
  9973  1E41  087A               	movf	??___flge+2,w
  9974  1E42  00F2               	movwf	___flge@ff1+2
  9975  1E43  0879               	movf	??___flge+1,w
  9976  1E44  00F1               	movwf	___flge@ff1+1
  9977  1E45  0878               	movf	??___flge,w
  9978  1E46  00F0               	movwf	___flge@ff1
  9979  1E47                     l3003:
  9980  1E47  1FF7               	btfss	___flge@ff2+3,7
  9981  1E48  2E4A               	goto	u4671
  9982  1E49  2E4B               	goto	u4670
  9983  1E4A                     u4671:
  9984  1E4A  2E6F               	goto	l482
  9985  1E4B                     u4670:
  9986  1E4B                     l3005:
  9987  1E4B  3000               	movlw	0
  9988  1E4C  00F8               	movwf	??___flge
  9989  1E4D  3000               	movlw	0
  9990  1E4E  00F9               	movwf	??___flge+1
  9991  1E4F  3000               	movlw	0
  9992  1E50  00FA               	movwf	??___flge+2
  9993  1E51  3080               	movlw	128
  9994  1E52  00FB               	movwf	??___flge+3
  9995  1E53  0874               	movf	___flge@ff2,w
  9996  1E54  02F8               	subwf	??___flge,f
  9997  1E55  0875               	movf	___flge@ff2+1,w
  9998  1E56  1C03               	skipc
  9999  1E57  0F75               	incfsz	___flge@ff2+1,w
 10000  1E58  2E5A               	goto	u4681
 10001  1E59  2E5B               	goto	u4682
 10002  1E5A                     u4681:
 10003  1E5A  02F9               	subwf	??___flge+1,f
 10004  1E5B                     u4682:
 10005  1E5B  0876               	movf	___flge@ff2+2,w
 10006  1E5C  1C03               	skipc
 10007  1E5D  0F76               	incfsz	___flge@ff2+2,w
 10008  1E5E  2E60               	goto	u4683
 10009  1E5F  2E61               	goto	u4684
 10010  1E60                     u4683:
 10011  1E60  02FA               	subwf	??___flge+2,f
 10012  1E61                     u4684:
 10013  1E61  0877               	movf	___flge@ff2+3,w
 10014  1E62  1C03               	skipc
 10015  1E63  0F77               	incfsz	___flge@ff2+3,w
 10016  1E64  2E66               	goto	u4685
 10017  1E65  2E67               	goto	u4686
 10018  1E66                     u4685:
 10019  1E66  02FB               	subwf	??___flge+3,f
 10020  1E67                     u4686:
 10021  1E67  087B               	movf	??___flge+3,w
 10022  1E68  00F7               	movwf	___flge@ff2+3
 10023  1E69  087A               	movf	??___flge+2,w
 10024  1E6A  00F6               	movwf	___flge@ff2+2
 10025  1E6B  0879               	movf	??___flge+1,w
 10026  1E6C  00F5               	movwf	___flge@ff2+1
 10027  1E6D  0878               	movf	??___flge,w
 10028  1E6E  00F4               	movwf	___flge@ff2
 10029  1E6F                     l482:
 10030  1E6F  3080               	movlw	128
 10031  1E70  06F3               	xorwf	___flge@ff1+3,f
 10032  1E71  3080               	movlw	128
 10033  1E72  06F7               	xorwf	___flge@ff2+3,f
 10034  1E73  0877               	movf	___flge@ff2+3,w
 10035  1E74  0273               	subwf	___flge@ff1+3,w
 10036  1E75  1D03               	skipz
 10037  1E76  2E81               	goto	u4695
 10038  1E77  0876               	movf	___flge@ff2+2,w
 10039  1E78  0272               	subwf	___flge@ff1+2,w
 10040  1E79  1D03               	skipz
 10041  1E7A  2E81               	goto	u4695
 10042  1E7B  0875               	movf	___flge@ff2+1,w
 10043  1E7C  0271               	subwf	___flge@ff1+1,w
 10044  1E7D  1D03               	skipz
 10045  1E7E  2E81               	goto	u4695
 10046  1E7F  0874               	movf	___flge@ff2,w
 10047  1E80  0270               	subwf	___flge@ff1,w
 10048  1E81                     u4695:
 10049  1E81  1803               	skipnc
 10050  1E82  2E84               	goto	u4691
 10051  1E83  2E85               	goto	u4690
 10052  1E84                     u4691:
 10053  1E84  2E87               	goto	l3009
 10054  1E85                     u4690:
 10055  1E85                     l3007:
 10056  1E85  1003               	clrc
 10057  1E86  2E88               	goto	l483
 10058  1E87                     l3009:
 10059  1E87  1403               	setc
 10060  1E88                     l483:
 10061  1E88  0008               	return
 10062  1E89                     __end_of___flge:
 10063                           
 10064                           	psect	text22
 10065  1AF2                     __ptext22:	
 10066 ;; *************** function ___fleq *****************
 10067 ;; Defined at:
 10068 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
 10069 ;; Parameters:    Size  Location     Type
 10070 ;;  ff1             4    0[COMMON] unsigned char 
 10071 ;;  ff2             4    4[COMMON] unsigned char 
 10072 ;; Auto vars:     Size  Location     Type
 10073 ;;		None
 10074 ;; Return value:  Size  Location     Type
 10075 ;;		None               void
 10076 ;; Registers used:
 10077 ;;		wreg, status,2, status,0
 10078 ;; Tracked objects:
 10079 ;;		On entry : 0/0
 10080 ;;		On exit  : 0/0
 10081 ;;		Unchanged: 0/0
 10082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10083 ;;      Params:         8       0       0       0       0
 10084 ;;      Locals:         0       0       0       0       0
 10085 ;;      Temps:          4       0       0       0       0
 10086 ;;      Totals:        12       0       0       0       0
 10087 ;;Total ram usage:       12 bytes
 10088 ;; Hardware stack levels used:    1
 10089 ;; This function calls:
 10090 ;;		Nothing
 10091 ;; This function is called by:
 10092 ;;		_sprintf
 10093 ;; This function uses a non-reentrant model
 10094 ;;
 10095                           
 10096                           
 10097                           ;psect for function ___fleq
 10098  1AF2                     ___fleq:
 10099  1AF2                     l2981:	
 10100                           ;incstack = 0
 10101                           ; Regs used in ___fleq: [wreg+status,2+status,0]
 10102                           
 10103  1AF2  3000               	movlw	0
 10104  1AF3  0570               	andwf	___fleq@ff1,w
 10105  1AF4  00F8               	movwf	??___fleq
 10106  1AF5  3000               	movlw	0
 10107  1AF6  0571               	andwf	___fleq@ff1+1,w
 10108  1AF7  00F9               	movwf	??___fleq+1
 10109  1AF8  3080               	movlw	128
 10110  1AF9  0572               	andwf	___fleq@ff1+2,w
 10111  1AFA  00FA               	movwf	??___fleq+2
 10112  1AFB  307F               	movlw	127
 10113  1AFC  0573               	andwf	___fleq@ff1+3,w
 10114  1AFD  00FB               	movwf	??___fleq+3
 10115  1AFE  087B               	movf	??___fleq+3,w
 10116  1AFF  047A               	iorwf	??___fleq+2,w
 10117  1B00  0479               	iorwf	??___fleq+1,w
 10118  1B01  0478               	iorwf	??___fleq,w
 10119  1B02  1D03               	skipz
 10120  1B03  2B05               	goto	u4601
 10121  1B04  2B06               	goto	u4600
 10122  1B05                     u4601:
 10123  1B05  2B0E               	goto	l474
 10124  1B06                     u4600:
 10125  1B06                     l2983:
 10126  1B06  3000               	movlw	0
 10127  1B07  00F3               	movwf	___fleq@ff1+3
 10128  1B08  3000               	movlw	0
 10129  1B09  00F2               	movwf	___fleq@ff1+2
 10130  1B0A  3000               	movlw	0
 10131  1B0B  00F1               	movwf	___fleq@ff1+1
 10132  1B0C  3000               	movlw	0
 10133  1B0D  00F0               	movwf	___fleq@ff1
 10134  1B0E                     l474:
 10135  1B0E  3000               	movlw	0
 10136  1B0F  0574               	andwf	___fleq@ff2,w
 10137  1B10  00F8               	movwf	??___fleq
 10138  1B11  3000               	movlw	0
 10139  1B12  0575               	andwf	___fleq@ff2+1,w
 10140  1B13  00F9               	movwf	??___fleq+1
 10141  1B14  3080               	movlw	128
 10142  1B15  0576               	andwf	___fleq@ff2+2,w
 10143  1B16  00FA               	movwf	??___fleq+2
 10144  1B17  307F               	movlw	127
 10145  1B18  0577               	andwf	___fleq@ff2+3,w
 10146  1B19  00FB               	movwf	??___fleq+3
 10147  1B1A  087B               	movf	??___fleq+3,w
 10148  1B1B  047A               	iorwf	??___fleq+2,w
 10149  1B1C  0479               	iorwf	??___fleq+1,w
 10150  1B1D  0478               	iorwf	??___fleq,w
 10151  1B1E  1D03               	skipz
 10152  1B1F  2B21               	goto	u4611
 10153  1B20  2B22               	goto	u4610
 10154  1B21                     u4611:
 10155  1B21  2B2A               	goto	l475
 10156  1B22                     u4610:
 10157  1B22                     l2985:
 10158  1B22  3000               	movlw	0
 10159  1B23  00F7               	movwf	___fleq@ff2+3
 10160  1B24  3000               	movlw	0
 10161  1B25  00F6               	movwf	___fleq@ff2+2
 10162  1B26  3000               	movlw	0
 10163  1B27  00F5               	movwf	___fleq@ff2+1
 10164  1B28  3000               	movlw	0
 10165  1B29  00F4               	movwf	___fleq@ff2
 10166  1B2A                     l475:
 10167  1B2A  0877               	movf	___fleq@ff2+3,w
 10168  1B2B  0673               	xorwf	___fleq@ff1+3,w
 10169  1B2C  1D03               	skipz
 10170  1B2D  2B38               	goto	u4625
 10171  1B2E  0876               	movf	___fleq@ff2+2,w
 10172  1B2F  0672               	xorwf	___fleq@ff1+2,w
 10173  1B30  1D03               	skipz
 10174  1B31  2B38               	goto	u4625
 10175  1B32  0875               	movf	___fleq@ff2+1,w
 10176  1B33  0671               	xorwf	___fleq@ff1+1,w
 10177  1B34  1D03               	skipz
 10178  1B35  2B38               	goto	u4625
 10179  1B36  0874               	movf	___fleq@ff2,w
 10180  1B37  0670               	xorwf	___fleq@ff1,w
 10181  1B38                     u4625:
 10182  1B38  1903               	skipnz
 10183  1B39  2B3B               	goto	u4621
 10184  1B3A  2B3C               	goto	u4620
 10185  1B3B                     u4621:
 10186  1B3B  2B3E               	goto	l2989
 10187  1B3C                     u4620:
 10188  1B3C                     l2987:
 10189  1B3C  1003               	clrc
 10190  1B3D  2B3F               	goto	l476
 10191  1B3E                     l2989:
 10192  1B3E  1403               	setc
 10193  1B3F                     l476:
 10194  1B3F  0008               	return
 10195  1B40                     __end_of___fleq:
 10196                           
 10197                           	psect	text23
 10198  1A6C                     __ptext23:	
 10199 ;; *************** function _Lcd_Write_String *****************
 10200 ;; Defined at:
 10201 ;;		line 97 in file "./lcd.h"
 10202 ;; Parameters:    Size  Location     Type
 10203 ;;  a               2    5[COMMON] PTR unsigned char 
 10204 ;;		 -> main@buffer6(20), STR_13(4), main@buffer5(20), STR_11(4), 
 10205 ;;		 -> main@buffer4(20), STR_9(4), main@buffer3(20), STR_7(4), 
 10206 ;;		 -> main@buffer2(20), STR_5(3), main@buffer1(20), STR_3(3), 
 10207 ;;		 -> main@buffer0(20), STR_1(3), 
 10208 ;; Auto vars:     Size  Location     Type
 10209 ;;  i               2   10[COMMON] int 
 10210 ;; Return value:  Size  Location     Type
 10211 ;;                  1    wreg      void 
 10212 ;; Registers used:
 10213 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10214 ;; Tracked objects:
 10215 ;;		On entry : 0/0
 10216 ;;		On exit  : 0/0
 10217 ;;		Unchanged: 0/0
 10218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10219 ;;      Params:         2       0       0       0       0
 10220 ;;      Locals:         2       0       0       0       0
 10221 ;;      Temps:          3       0       0       0       0
 10222 ;;      Totals:         7       0       0       0       0
 10223 ;;Total ram usage:        7 bytes
 10224 ;; Hardware stack levels used:    1
 10225 ;; Hardware stack levels required when called:    2
 10226 ;; This function calls:
 10227 ;;		_Lcd_Write_Char
 10228 ;; This function is called by:
 10229 ;;		_main
 10230 ;; This function uses a non-reentrant model
 10231 ;;
 10232                           
 10233                           
 10234                           ;psect for function _Lcd_Write_String
 10235  1A6C                     _Lcd_Write_String:
 10236  1A6C                     l3159:	
 10237                           ;incstack = 0
 10238                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10239                           
 10240                           
 10241                           ;./lcd.h: 97: void Lcd_Write_String(char *a);./lcd.h: 98: {;./lcd.h: 99:  int i;;./lcd.h
      +                          : 100:  for(i=0;a[i]!='\0';i++)
 10242  1A6C  01FA               	clrf	Lcd_Write_String@i
 10243  1A6D  01FB               	clrf	Lcd_Write_String@i+1
 10244  1A6E  2A91               	goto	l3165
 10245  1A6F                     l3161:
 10246                           
 10247                           ;./lcd.h: 101:     Lcd_Write_Char(a[i]);
 10248  1A6F  087A               	movf	Lcd_Write_String@i,w
 10249  1A70  0775               	addwf	Lcd_Write_String@a,w
 10250  1A71  00F8               	movwf	??_Lcd_Write_String+1
 10251  1A72  0876               	movf	Lcd_Write_String@a+1,w
 10252  1A73  00F7               	movwf	??_Lcd_Write_String
 10253  1A74  1803               	skipnc
 10254  1A75  0AF7               	incf	??_Lcd_Write_String,f
 10255  1A76  1FFA               	btfss	Lcd_Write_String@i,7
 10256  1A77  2A79               	goto	u5050
 10257  1A78  03F7               	decf	??_Lcd_Write_String,f
 10258  1A79                     u5050:
 10259  1A79  0877               	movf	??_Lcd_Write_String,w
 10260  1A7A  00F9               	movwf	??_Lcd_Write_String+2
 10261  1A7B  0879               	movf	??_Lcd_Write_String+2,w
 10262  1A7C  1283               	bcf	3,5	;RP0=0, select bank0
 10263  1A7D  1303               	bcf	3,6	;RP1=0, select bank0
 10264  1A7E  00FF               	movwf	btemp+1
 10265  1A7F  0878               	movf	??_Lcd_Write_String+1,w
 10266  1A80  0084               	movwf	4
 10267  1A81  120A  118A  2003  160A  158A  	fcall	stringtab
 10268  1A86  160A  158A  21FB  160A  158A  	fcall	_Lcd_Write_Char
 10269  1A8B                     l3163:
 10270  1A8B  3001               	movlw	1
 10271  1A8C  07FA               	addwf	Lcd_Write_String@i,f
 10272  1A8D  1803               	skipnc
 10273  1A8E  0AFB               	incf	Lcd_Write_String@i+1,f
 10274  1A8F  3000               	movlw	0
 10275  1A90  07FB               	addwf	Lcd_Write_String@i+1,f
 10276  1A91                     l3165:
 10277  1A91  087A               	movf	Lcd_Write_String@i,w
 10278  1A92  0775               	addwf	Lcd_Write_String@a,w
 10279  1A93  00F8               	movwf	??_Lcd_Write_String+1
 10280  1A94  0876               	movf	Lcd_Write_String@a+1,w
 10281  1A95  00F7               	movwf	??_Lcd_Write_String
 10282  1A96  1803               	skipnc
 10283  1A97  0AF7               	incf	??_Lcd_Write_String,f
 10284  1A98  1FFA               	btfss	Lcd_Write_String@i,7
 10285  1A99  2A9B               	goto	u5060
 10286  1A9A  03F7               	decf	??_Lcd_Write_String,f
 10287  1A9B                     u5060:
 10288  1A9B  0877               	movf	??_Lcd_Write_String,w
 10289  1A9C  00F9               	movwf	??_Lcd_Write_String+2
 10290  1A9D  0879               	movf	??_Lcd_Write_String+2,w
 10291  1A9E  1283               	bcf	3,5	;RP0=0, select bank0
 10292  1A9F  1303               	bcf	3,6	;RP1=0, select bank0
 10293  1AA0  00FF               	movwf	btemp+1
 10294  1AA1  0878               	movf	??_Lcd_Write_String+1,w
 10295  1AA2  0084               	movwf	4
 10296  1AA3  120A  118A  2003  160A  158A  	fcall	stringtab
 10297  1AA8  3A00               	xorlw	0
 10298  1AA9  1D03               	skipz
 10299  1AAA  2AAC               	goto	u5071
 10300  1AAB  2AAD               	goto	u5070
 10301  1AAC                     u5071:
 10302  1AAC  2A6F               	goto	l3161
 10303  1AAD                     u5070:
 10304  1AAD                     l93:
 10305  1AAD  0008               	return
 10306  1AAE                     __end_of_Lcd_Write_String:
 10307                           
 10308                           	psect	text24
 10309  19FB                     __ptext24:	
 10310 ;; *************** function _Lcd_Write_Char *****************
 10311 ;; Defined at:
 10312 ;;		line 81 in file "./lcd.h"
 10313 ;; Parameters:    Size  Location     Type
 10314 ;;  a               1    wreg     unsigned char 
 10315 ;; Auto vars:     Size  Location     Type
 10316 ;;  a               1    4[COMMON] unsigned char 
 10317 ;;  y               1    3[COMMON] unsigned char 
 10318 ;;  temp            1    2[COMMON] unsigned char 
 10319 ;; Return value:  Size  Location     Type
 10320 ;;                  1    wreg      void 
 10321 ;; Registers used:
 10322 ;;		wreg, status,2, status,0, pclath, cstack
 10323 ;; Tracked objects:
 10324 ;;		On entry : 0/0
 10325 ;;		On exit  : 0/0
 10326 ;;		Unchanged: 0/0
 10327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10328 ;;      Params:         0       0       0       0       0
 10329 ;;      Locals:         3       0       0       0       0
 10330 ;;      Temps:          1       0       0       0       0
 10331 ;;      Totals:         4       0       0       0       0
 10332 ;;Total ram usage:        4 bytes
 10333 ;; Hardware stack levels used:    1
 10334 ;; Hardware stack levels required when called:    1
 10335 ;; This function calls:
 10336 ;;		_Lcd_Port
 10337 ;; This function is called by:
 10338 ;;		_Lcd_Write_String
 10339 ;; This function uses a non-reentrant model
 10340 ;;
 10341                           
 10342                           
 10343                           ;psect for function _Lcd_Write_Char
 10344  19FB                     _Lcd_Write_Char:
 10345                           
 10346                           ;incstack = 0
 10347                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 10348                           ;Lcd_Write_Char@a stored from wreg
 10349  19FB  00F4               	movwf	Lcd_Write_Char@a
 10350  19FC                     l2749:
 10351                           
 10352                           ;./lcd.h: 81: void Lcd_Write_Char(char a);./lcd.h: 82: {;./lcd.h: 83:    char temp,y;;./
      +                          lcd.h: 84:    temp = a&0x0F;
 10353  19FC  0874               	movf	Lcd_Write_Char@a,w
 10354  19FD  390F               	andlw	15
 10355  19FE  00F1               	movwf	??_Lcd_Write_Char
 10356  19FF  0871               	movf	??_Lcd_Write_Char,w
 10357  1A00  00F2               	movwf	Lcd_Write_Char@temp
 10358                           
 10359                           ;./lcd.h: 85:    y = a&0xF0;
 10360  1A01  0874               	movf	Lcd_Write_Char@a,w
 10361  1A02  39F0               	andlw	240
 10362  1A03  00F1               	movwf	??_Lcd_Write_Char
 10363  1A04  0871               	movf	??_Lcd_Write_Char,w
 10364  1A05  00F3               	movwf	Lcd_Write_Char@y
 10365  1A06                     l2751:
 10366                           
 10367                           ;./lcd.h: 86:    RB2 = 1;
 10368  1A06  1283               	bcf	3,5	;RP0=0, select bank0
 10369  1A07  1303               	bcf	3,6	;RP1=0, select bank0
 10370  1A08  1506               	bsf	6,2	;volatile
 10371  1A09                     l2753:
 10372                           
 10373                           ;./lcd.h: 87:    Lcd_Port(y>>4);
 10374  1A09  0873               	movf	Lcd_Write_Char@y,w
 10375  1A0A  00F1               	movwf	??_Lcd_Write_Char
 10376  1A0B  3004               	movlw	4
 10377  1A0C                     u3955:
 10378  1A0C  1003               	clrc
 10379  1A0D  0CF1               	rrf	??_Lcd_Write_Char,f
 10380  1A0E  3EFF               	addlw	-1
 10381  1A0F  1D03               	skipz
 10382  1A10  2A0C               	goto	u3955
 10383  1A11  0871               	movf	??_Lcd_Write_Char,w
 10384  1A12  160A  158A  2169  160A  158A  	fcall	_Lcd_Port
 10385  1A17                     l2755:
 10386                           
 10387                           ;./lcd.h: 88:    RB1 = 1;
 10388  1A17  1283               	bcf	3,5	;RP0=0, select bank0
 10389  1A18  1303               	bcf	3,6	;RP1=0, select bank0
 10390  1A19  1486               	bsf	6,1	;volatile
 10391  1A1A                     l2757:
 10392                           
 10393                           ;./lcd.h: 89:    _delay((unsigned long)((40)*(4000000/4000000.0)));
 10394  1A1A  300D               	movlw	13
 10395  1A1B  00F1               	movwf	??_Lcd_Write_Char
 10396  1A1C                     u5637:
 10397  1A1C  0BF1               	decfsz	??_Lcd_Write_Char,f
 10398  1A1D  2A1C               	goto	u5637
 10399  1A1E                     l2759:
 10400                           
 10401                           ;./lcd.h: 90:    RB1 = 0;
 10402  1A1E  1283               	bcf	3,5	;RP0=0, select bank0
 10403  1A1F  1303               	bcf	3,6	;RP1=0, select bank0
 10404  1A20  1086               	bcf	6,1	;volatile
 10405  1A21                     l2761:
 10406                           
 10407                           ;./lcd.h: 91:    Lcd_Port(temp);
 10408  1A21  0872               	movf	Lcd_Write_Char@temp,w
 10409  1A22  160A  158A  2169  160A  158A  	fcall	_Lcd_Port
 10410  1A27                     l2763:
 10411                           
 10412                           ;./lcd.h: 92:    RB1 = 1;
 10413  1A27  1283               	bcf	3,5	;RP0=0, select bank0
 10414  1A28  1303               	bcf	3,6	;RP1=0, select bank0
 10415  1A29  1486               	bsf	6,1	;volatile
 10416  1A2A                     l2765:
 10417                           
 10418                           ;./lcd.h: 93:    _delay((unsigned long)((40)*(4000000/4000000.0)));
 10419  1A2A  300D               	movlw	13
 10420  1A2B  00F1               	movwf	??_Lcd_Write_Char
 10421  1A2C                     u5647:
 10422  1A2C  0BF1               	decfsz	??_Lcd_Write_Char,f
 10423  1A2D  2A2C               	goto	u5647
 10424  1A2E                     l2767:
 10425                           
 10426                           ;./lcd.h: 94:    RB1 = 0;
 10427  1A2E  1283               	bcf	3,5	;RP0=0, select bank0
 10428  1A2F  1303               	bcf	3,6	;RP1=0, select bank0
 10429  1A30  1086               	bcf	6,1	;volatile
 10430  1A31                     l87:
 10431  1A31  0008               	return
 10432  1A32                     __end_of_Lcd_Write_Char:
 10433                           
 10434                           	psect	text25
 10435  1B40                     __ptext25:	
 10436 ;; *************** function _Lcd_Set_Cursor *****************
 10437 ;; Defined at:
 10438 ;;		line 41 in file "./lcd.h"
 10439 ;; Parameters:    Size  Location     Type
 10440 ;;  a               1    wreg     unsigned char 
 10441 ;;  b               1    4[COMMON] unsigned char 
 10442 ;; Auto vars:     Size  Location     Type
 10443 ;;  a               1    7[COMMON] unsigned char 
 10444 ;;  temp            1   10[COMMON] unsigned char 
 10445 ;;  y               1    9[COMMON] unsigned char 
 10446 ;;  z               1    8[COMMON] unsigned char 
 10447 ;; Return value:  Size  Location     Type
 10448 ;;                  1    wreg      void 
 10449 ;; Registers used:
 10450 ;;		wreg, status,2, status,0, pclath, cstack
 10451 ;; Tracked objects:
 10452 ;;		On entry : 0/0
 10453 ;;		On exit  : 0/0
 10454 ;;		Unchanged: 0/0
 10455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10456 ;;      Params:         1       0       0       0       0
 10457 ;;      Locals:         4       0       0       0       0
 10458 ;;      Temps:          2       0       0       0       0
 10459 ;;      Totals:         7       0       0       0       0
 10460 ;;Total ram usage:        7 bytes
 10461 ;; Hardware stack levels used:    1
 10462 ;; Hardware stack levels required when called:    2
 10463 ;; This function calls:
 10464 ;;		_Lcd_Cmd
 10465 ;; This function is called by:
 10466 ;;		_main
 10467 ;; This function uses a non-reentrant model
 10468 ;;
 10469                           
 10470                           
 10471                           ;psect for function _Lcd_Set_Cursor
 10472  1B40                     _Lcd_Set_Cursor:
 10473                           
 10474                           ;incstack = 0
 10475                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 10476                           ;Lcd_Set_Cursor@a stored from wreg
 10477  1B40  00F7               	movwf	Lcd_Set_Cursor@a
 10478  1B41                     l3129:
 10479                           
 10480                           ;./lcd.h: 41: void Lcd_Set_Cursor(char a, char b);./lcd.h: 42: {;./lcd.h: 43:  char temp
      +                          ,z,y;;./lcd.h: 44:  if(a == 1)
 10481  1B41  0377               	decf	Lcd_Set_Cursor@a,w
 10482  1B42  1D03               	btfss	3,2
 10483  1B43  2B45               	goto	u5011
 10484  1B44  2B46               	goto	u5010
 10485  1B45                     u5011:
 10486  1B45  2B69               	goto	l3139
 10487  1B46                     u5010:
 10488  1B46                     l3131:
 10489                           
 10490                           ;./lcd.h: 45:  {;./lcd.h: 46:    temp = 0x80 + b - 1;
 10491  1B46  0874               	movf	Lcd_Set_Cursor@b,w
 10492  1B47  3E7F               	addlw	127
 10493  1B48  00F5               	movwf	??_Lcd_Set_Cursor
 10494  1B49  0875               	movf	??_Lcd_Set_Cursor,w
 10495  1B4A  00FA               	movwf	Lcd_Set_Cursor@temp
 10496                           
 10497                           ;./lcd.h: 47:   z = temp>>4;
 10498  1B4B  087A               	movf	Lcd_Set_Cursor@temp,w
 10499  1B4C  00F5               	movwf	??_Lcd_Set_Cursor
 10500  1B4D  3004               	movlw	4
 10501  1B4E                     u5025:
 10502  1B4E  1003               	clrc
 10503  1B4F  0CF5               	rrf	??_Lcd_Set_Cursor,f
 10504  1B50  3EFF               	addlw	-1
 10505  1B51  1D03               	skipz
 10506  1B52  2B4E               	goto	u5025
 10507  1B53  0875               	movf	??_Lcd_Set_Cursor,w
 10508  1B54  00F6               	movwf	??_Lcd_Set_Cursor+1
 10509  1B55  0876               	movf	??_Lcd_Set_Cursor+1,w
 10510  1B56  00F8               	movwf	Lcd_Set_Cursor@z
 10511  1B57                     l3133:
 10512                           
 10513                           ;./lcd.h: 48:   y = temp & 0x0F;
 10514  1B57  087A               	movf	Lcd_Set_Cursor@temp,w
 10515  1B58  390F               	andlw	15
 10516  1B59  00F5               	movwf	??_Lcd_Set_Cursor
 10517  1B5A  0875               	movf	??_Lcd_Set_Cursor,w
 10518  1B5B  00F9               	movwf	Lcd_Set_Cursor@y
 10519  1B5C                     l3135:
 10520                           
 10521                           ;./lcd.h: 49:   Lcd_Cmd(z);
 10522  1B5C  0878               	movf	Lcd_Set_Cursor@z,w
 10523  1B5D  120A  158A  2006  160A  158A  	fcall	_Lcd_Cmd
 10524  1B62                     l3137:
 10525                           
 10526                           ;./lcd.h: 50:   Lcd_Cmd(y);
 10527  1B62  0879               	movf	Lcd_Set_Cursor@y,w
 10528  1B63  120A  158A  2006  160A  158A  	fcall	_Lcd_Cmd
 10529                           
 10530                           ;./lcd.h: 51:  }
 10531  1B68  2B91               	goto	l81
 10532  1B69                     l3139:
 10533  1B69  3002               	movlw	2
 10534  1B6A  0677               	xorwf	Lcd_Set_Cursor@a,w
 10535  1B6B  1D03               	btfss	3,2
 10536  1B6C  2B6E               	goto	u5031
 10537  1B6D  2B6F               	goto	u5030
 10538  1B6E                     u5031:
 10539  1B6E  2B91               	goto	l81
 10540  1B6F                     u5030:
 10541  1B6F                     l3141:
 10542                           
 10543                           ;./lcd.h: 53:  {;./lcd.h: 54:   temp = 0xC0 + b - 1;
 10544  1B6F  0874               	movf	Lcd_Set_Cursor@b,w
 10545  1B70  3EBF               	addlw	191
 10546  1B71  00F5               	movwf	??_Lcd_Set_Cursor
 10547  1B72  0875               	movf	??_Lcd_Set_Cursor,w
 10548  1B73  00FA               	movwf	Lcd_Set_Cursor@temp
 10549                           
 10550                           ;./lcd.h: 55:   z = temp>>4;
 10551  1B74  087A               	movf	Lcd_Set_Cursor@temp,w
 10552  1B75  00F5               	movwf	??_Lcd_Set_Cursor
 10553  1B76  3004               	movlw	4
 10554  1B77                     u5045:
 10555  1B77  1003               	clrc
 10556  1B78  0CF5               	rrf	??_Lcd_Set_Cursor,f
 10557  1B79  3EFF               	addlw	-1
 10558  1B7A  1D03               	skipz
 10559  1B7B  2B77               	goto	u5045
 10560  1B7C  0875               	movf	??_Lcd_Set_Cursor,w
 10561  1B7D  00F6               	movwf	??_Lcd_Set_Cursor+1
 10562  1B7E  0876               	movf	??_Lcd_Set_Cursor+1,w
 10563  1B7F  00F8               	movwf	Lcd_Set_Cursor@z
 10564  1B80                     l3143:
 10565                           
 10566                           ;./lcd.h: 56:   y = temp & 0x0F;
 10567  1B80  087A               	movf	Lcd_Set_Cursor@temp,w
 10568  1B81  390F               	andlw	15
 10569  1B82  00F5               	movwf	??_Lcd_Set_Cursor
 10570  1B83  0875               	movf	??_Lcd_Set_Cursor,w
 10571  1B84  00F9               	movwf	Lcd_Set_Cursor@y
 10572  1B85                     l3145:
 10573                           
 10574                           ;./lcd.h: 57:   Lcd_Cmd(z);
 10575  1B85  0878               	movf	Lcd_Set_Cursor@z,w
 10576  1B86  120A  158A  2006  160A  158A  	fcall	_Lcd_Cmd
 10577  1B8B                     l3147:
 10578                           
 10579                           ;./lcd.h: 58:   Lcd_Cmd(y);
 10580  1B8B  0879               	movf	Lcd_Set_Cursor@y,w
 10581  1B8C  120A  158A  2006  160A  158A  	fcall	_Lcd_Cmd
 10582  1B91                     l81:
 10583  1B91  0008               	return
 10584  1B92                     __end_of_Lcd_Set_Cursor:
 10585                           
 10586                           	psect	text26
 10587  1C3F                     __ptext26:	
 10588 ;; *************** function _Lcd_Init *****************
 10589 ;; Defined at:
 10590 ;;		line 62 in file "./lcd.h"
 10591 ;; Parameters:    Size  Location     Type
 10592 ;;		None
 10593 ;; Auto vars:     Size  Location     Type
 10594 ;;		None
 10595 ;; Return value:  Size  Location     Type
 10596 ;;                  1    wreg      void 
 10597 ;; Registers used:
 10598 ;;		wreg, status,2, status,0, pclath, cstack
 10599 ;; Tracked objects:
 10600 ;;		On entry : 0/0
 10601 ;;		On exit  : 0/0
 10602 ;;		Unchanged: 0/0
 10603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10604 ;;      Params:         0       0       0       0       0
 10605 ;;      Locals:         0       0       0       0       0
 10606 ;;      Temps:          2       0       0       0       0
 10607 ;;      Totals:         2       0       0       0       0
 10608 ;;Total ram usage:        2 bytes
 10609 ;; Hardware stack levels used:    1
 10610 ;; Hardware stack levels required when called:    2
 10611 ;; This function calls:
 10612 ;;		_Lcd_Cmd
 10613 ;;		_Lcd_Port
 10614 ;; This function is called by:
 10615 ;;		_main
 10616 ;; This function uses a non-reentrant model
 10617 ;;
 10618                           
 10619                           
 10620                           ;psect for function _Lcd_Init
 10621  1C3F                     _Lcd_Init:
 10622  1C3F                     l3149:	
 10623                           ;incstack = 0
 10624                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
 10625                           
 10626                           
 10627                           ;./lcd.h: 64:   Lcd_Port(0x00);
 10628  1C3F  3000               	movlw	0
 10629  1C40  160A  158A  2169  160A  158A  	fcall	_Lcd_Port
 10630  1C45                     l3151:
 10631                           
 10632                           ;./lcd.h: 65:    _delay((unsigned long)((20)*(4000000/4000.0)));
 10633  1C45  301A               	movlw	26
 10634  1C46  00F5               	movwf	??_Lcd_Init+1
 10635  1C47  30F8               	movlw	248
 10636  1C48  00F4               	movwf	??_Lcd_Init
 10637  1C49                     u5657:
 10638  1C49  0BF4               	decfsz	??_Lcd_Init,f
 10639  1C4A  2C49               	goto	u5657
 10640  1C4B  0BF5               	decfsz	??_Lcd_Init+1,f
 10641  1C4C  2C49               	goto	u5657
 10642  1C4D  0000               	nop
 10643  1C4E                     l3153:
 10644                           
 10645                           ;./lcd.h: 66:   Lcd_Cmd(0x03);
 10646  1C4E  3003               	movlw	3
 10647  1C4F  120A  158A  2006  160A  158A  	fcall	_Lcd_Cmd
 10648                           
 10649                           ;./lcd.h: 67:  _delay((unsigned long)((5)*(4000000/4000.0)));
 10650  1C54  3007               	movlw	7
 10651  1C55  00F5               	movwf	??_Lcd_Init+1
 10652  1C56  307D               	movlw	125
 10653  1C57  00F4               	movwf	??_Lcd_Init
 10654  1C58                     u5667:
 10655  1C58  0BF4               	decfsz	??_Lcd_Init,f
 10656  1C59  2C58               	goto	u5667
 10657  1C5A  0BF5               	decfsz	??_Lcd_Init+1,f
 10658  1C5B  2C58               	goto	u5667
 10659  1C5C                     l3155:
 10660                           
 10661                           ;./lcd.h: 68:   Lcd_Cmd(0x03);
 10662  1C5C  3003               	movlw	3
 10663  1C5D  120A  158A  2006  160A  158A  	fcall	_Lcd_Cmd
 10664  1C62                     l3157:
 10665                           
 10666                           ;./lcd.h: 69:  _delay((unsigned long)((11)*(4000000/4000.0)));
 10667  1C62  300F               	movlw	15
 10668  1C63  00F5               	movwf	??_Lcd_Init+1
 10669  1C64  3047               	movlw	71
 10670  1C65  00F4               	movwf	??_Lcd_Init
 10671  1C66                     u5677:
 10672  1C66  0BF4               	decfsz	??_Lcd_Init,f
 10673  1C67  2C66               	goto	u5677
 10674  1C68  0BF5               	decfsz	??_Lcd_Init+1,f
 10675  1C69  2C66               	goto	u5677
 10676  1C6A  2C6B               	nop2
 10677                           
 10678                           ;./lcd.h: 70:   Lcd_Cmd(0x03);
 10679  1C6B  3003               	movlw	3
 10680  1C6C  120A  158A  2006  160A  158A  	fcall	_Lcd_Cmd
 10681                           
 10682                           ;./lcd.h: 72:   Lcd_Cmd(0x02);
 10683  1C71  3002               	movlw	2
 10684  1C72  120A  158A  2006  160A  158A  	fcall	_Lcd_Cmd
 10685                           
 10686                           ;./lcd.h: 73:   Lcd_Cmd(0x02);
 10687  1C77  3002               	movlw	2
 10688  1C78  120A  158A  2006  160A  158A  	fcall	_Lcd_Cmd
 10689                           
 10690                           ;./lcd.h: 74:   Lcd_Cmd(0x08);
 10691  1C7D  3008               	movlw	8
 10692  1C7E  120A  158A  2006  160A  158A  	fcall	_Lcd_Cmd
 10693                           
 10694                           ;./lcd.h: 75:   Lcd_Cmd(0x00);
 10695  1C83  3000               	movlw	0
 10696  1C84  120A  158A  2006  160A  158A  	fcall	_Lcd_Cmd
 10697                           
 10698                           ;./lcd.h: 76:   Lcd_Cmd(0x0C);
 10699  1C89  300C               	movlw	12
 10700  1C8A  120A  158A  2006  160A  158A  	fcall	_Lcd_Cmd
 10701                           
 10702                           ;./lcd.h: 77:   Lcd_Cmd(0x00);
 10703  1C8F  3000               	movlw	0
 10704  1C90  120A  158A  2006  160A  158A  	fcall	_Lcd_Cmd
 10705                           
 10706                           ;./lcd.h: 78:   Lcd_Cmd(0x06);
 10707  1C95  3006               	movlw	6
 10708  1C96  120A  158A  2006  160A  158A  	fcall	_Lcd_Cmd
 10709  1C9B                     l84:
 10710  1C9B  0008               	return
 10711  1C9C                     __end_of_Lcd_Init:
 10712                           
 10713                           	psect	text27
 10714  1001                     __ptext27:	
 10715 ;; *************** function _Lcd_Clear *****************
 10716 ;; Defined at:
 10717 ;;		line 35 in file "./lcd.h"
 10718 ;; Parameters:    Size  Location     Type
 10719 ;;		None
 10720 ;; Auto vars:     Size  Location     Type
 10721 ;;		None
 10722 ;; Return value:  Size  Location     Type
 10723 ;;                  1    wreg      void 
 10724 ;; Registers used:
 10725 ;;		wreg, status,2, status,0, pclath, cstack
 10726 ;; Tracked objects:
 10727 ;;		On entry : 0/0
 10728 ;;		On exit  : 0/0
 10729 ;;		Unchanged: 0/0
 10730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10731 ;;      Params:         0       0       0       0       0
 10732 ;;      Locals:         0       0       0       0       0
 10733 ;;      Temps:          0       0       0       0       0
 10734 ;;      Totals:         0       0       0       0       0
 10735 ;;Total ram usage:        0 bytes
 10736 ;; Hardware stack levels used:    1
 10737 ;; Hardware stack levels required when called:    2
 10738 ;; This function calls:
 10739 ;;		_Lcd_Cmd
 10740 ;; This function is called by:
 10741 ;;		_main
 10742 ;; This function uses a non-reentrant model
 10743 ;;
 10744                           
 10745                           
 10746                           ;psect for function _Lcd_Clear
 10747  1001                     _Lcd_Clear:
 10748  1001                     l3127:	
 10749                           ;incstack = 0
 10750                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
 10751                           
 10752                           
 10753                           ;./lcd.h: 37:  Lcd_Cmd(0);
 10754  1001  3000               	movlw	0
 10755  1002  120A  158A  2006  160A  118A  	fcall	_Lcd_Cmd
 10756                           
 10757                           ;./lcd.h: 38:  Lcd_Cmd(1);
 10758  1007  3001               	movlw	1
 10759  1008  120A  158A  2006  160A  118A  	fcall	_Lcd_Cmd
 10760  100D                     l75:
 10761  100D  0008               	return
 10762  100E                     __end_of_Lcd_Clear:
 10763                           
 10764                           	psect	text28
 10765  0806                     __ptext28:	
 10766 ;; *************** function _Lcd_Cmd *****************
 10767 ;; Defined at:
 10768 ;;		line 26 in file "./lcd.h"
 10769 ;; Parameters:    Size  Location     Type
 10770 ;;  a               1    wreg     unsigned char 
 10771 ;; Auto vars:     Size  Location     Type
 10772 ;;  a               1    3[COMMON] unsigned char 
 10773 ;; Return value:  Size  Location     Type
 10774 ;;                  1    wreg      void 
 10775 ;; Registers used:
 10776 ;;		wreg, status,2, status,0, pclath, cstack
 10777 ;; Tracked objects:
 10778 ;;		On entry : 0/0
 10779 ;;		On exit  : 0/0
 10780 ;;		Unchanged: 0/0
 10781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10782 ;;      Params:         0       0       0       0       0
 10783 ;;      Locals:         1       0       0       0       0
 10784 ;;      Temps:          2       0       0       0       0
 10785 ;;      Totals:         3       0       0       0       0
 10786 ;;Total ram usage:        3 bytes
 10787 ;; Hardware stack levels used:    1
 10788 ;; Hardware stack levels required when called:    1
 10789 ;; This function calls:
 10790 ;;		_Lcd_Port
 10791 ;; This function is called by:
 10792 ;;		_Lcd_Clear
 10793 ;;		_Lcd_Set_Cursor
 10794 ;;		_Lcd_Init
 10795 ;;		_Lcd_Shift_Right
 10796 ;;		_Lcd_Shift_Left
 10797 ;; This function uses a non-reentrant model
 10798 ;;
 10799                           
 10800                           
 10801                           ;psect for function _Lcd_Cmd
 10802  0806                     _Lcd_Cmd:
 10803                           
 10804                           ;incstack = 0
 10805                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
 10806                           ;Lcd_Cmd@a stored from wreg
 10807  0806  00F3               	movwf	Lcd_Cmd@a
 10808  0807                     l2739:
 10809                           
 10810                           ;./lcd.h: 26: void Lcd_Cmd(char a);./lcd.h: 27: {;./lcd.h: 28:  RB2 = 0;
 10811  0807  1283               	bcf	3,5	;RP0=0, select bank0
 10812  0808  1303               	bcf	3,6	;RP1=0, select bank0
 10813  0809  1106               	bcf	6,2	;volatile
 10814  080A                     l2741:
 10815                           
 10816                           ;./lcd.h: 29:  Lcd_Port(a);
 10817  080A  0873               	movf	Lcd_Cmd@a,w
 10818  080B  160A  158A  2169  120A  158A  	fcall	_Lcd_Port
 10819  0810                     l2743:
 10820                           
 10821                           ;./lcd.h: 30:  RB1 = 1;
 10822  0810  1283               	bcf	3,5	;RP0=0, select bank0
 10823  0811  1303               	bcf	3,6	;RP1=0, select bank0
 10824  0812  1486               	bsf	6,1	;volatile
 10825  0813                     l2745:
 10826                           
 10827                           ;./lcd.h: 31:         _delay((unsigned long)((4)*(4000000/4000.0)));
 10828  0813  3006               	movlw	6
 10829  0814  00F2               	movwf	??_Lcd_Cmd+1
 10830  0815  3030               	movlw	48
 10831  0816  00F1               	movwf	??_Lcd_Cmd
 10832  0817                     u5687:
 10833  0817  0BF1               	decfsz	??_Lcd_Cmd,f
 10834  0818  2817               	goto	u5687
 10835  0819  0BF2               	decfsz	??_Lcd_Cmd+1,f
 10836  081A  2817               	goto	u5687
 10837  081B  0000               	nop
 10838  081C                     l2747:
 10839                           
 10840                           ;./lcd.h: 32:         RB1 = 0;
 10841  081C  1283               	bcf	3,5	;RP0=0, select bank0
 10842  081D  1303               	bcf	3,6	;RP1=0, select bank0
 10843  081E  1086               	bcf	6,1	;volatile
 10844  081F                     l72:
 10845  081F  0008               	return
 10846  0820                     __end_of_Lcd_Cmd:
 10847                           
 10848                           	psect	text29
 10849  1969                     __ptext29:	
 10850 ;; *************** function _Lcd_Port *****************
 10851 ;; Defined at:
 10852 ;;		line 4 in file "./lcd.h"
 10853 ;; Parameters:    Size  Location     Type
 10854 ;;  a               1    wreg     unsigned char 
 10855 ;; Auto vars:     Size  Location     Type
 10856 ;;  a               1    0[COMMON] unsigned char 
 10857 ;; Return value:  Size  Location     Type
 10858 ;;                  1    wreg      void 
 10859 ;; Registers used:
 10860 ;;		wreg
 10861 ;; Tracked objects:
 10862 ;;		On entry : 0/0
 10863 ;;		On exit  : 0/0
 10864 ;;		Unchanged: 0/0
 10865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10866 ;;      Params:         0       0       0       0       0
 10867 ;;      Locals:         1       0       0       0       0
 10868 ;;      Temps:          0       0       0       0       0
 10869 ;;      Totals:         1       0       0       0       0
 10870 ;;Total ram usage:        1 bytes
 10871 ;; Hardware stack levels used:    1
 10872 ;; This function calls:
 10873 ;;		Nothing
 10874 ;; This function is called by:
 10875 ;;		_Lcd_Cmd
 10876 ;;		_Lcd_Init
 10877 ;;		_Lcd_Write_Char
 10878 ;; This function uses a non-reentrant model
 10879 ;;
 10880                           
 10881                           
 10882                           ;psect for function _Lcd_Port
 10883  1969                     _Lcd_Port:
 10884                           
 10885                           ;incstack = 0
 10886                           ; Regs used in _Lcd_Port: [wreg]
 10887                           ;Lcd_Port@a stored from wreg
 10888  1969  00F0               	movwf	Lcd_Port@a
 10889  196A                     l2265:
 10890                           
 10891                           ;./lcd.h: 4: void Lcd_Port(char a);./lcd.h: 5: {;./lcd.h: 6:  if(a & 1)
 10892  196A  1C70               	btfss	Lcd_Port@a,0
 10893  196B  296D               	goto	u2761
 10894  196C  296E               	goto	u2760
 10895  196D                     u2761:
 10896  196D  2972               	goto	l61
 10897  196E                     u2760:
 10898  196E                     l2267:
 10899                           
 10900                           ;./lcd.h: 7:   RB4 = 1;
 10901  196E  1283               	bcf	3,5	;RP0=0, select bank0
 10902  196F  1303               	bcf	3,6	;RP1=0, select bank0
 10903  1970  1606               	bsf	6,4	;volatile
 10904  1971  2975               	goto	l62
 10905  1972                     l61:	
 10906                           ;./lcd.h: 8:  else
 10907                           
 10908                           
 10909                           ;./lcd.h: 9:   RB4 = 0;
 10910  1972  1283               	bcf	3,5	;RP0=0, select bank0
 10911  1973  1303               	bcf	3,6	;RP1=0, select bank0
 10912  1974  1206               	bcf	6,4	;volatile
 10913  1975                     l62:
 10914                           
 10915                           ;./lcd.h: 11:  if(a & 2)
 10916  1975  1CF0               	btfss	Lcd_Port@a,1
 10917  1976  2978               	goto	u2771
 10918  1977  2979               	goto	u2770
 10919  1978                     u2771:
 10920  1978  297B               	goto	l63
 10921  1979                     u2770:
 10922  1979                     l2269:
 10923                           
 10924                           ;./lcd.h: 12:   RB5 = 1;
 10925  1979  1686               	bsf	6,5	;volatile
 10926  197A  297C               	goto	l64
 10927  197B                     l63:	
 10928                           ;./lcd.h: 13:  else
 10929                           
 10930                           
 10931                           ;./lcd.h: 14:   RB5 = 0;
 10932  197B  1286               	bcf	6,5	;volatile
 10933  197C                     l64:
 10934                           
 10935                           ;./lcd.h: 16:  if(a & 4)
 10936  197C  1D70               	btfss	Lcd_Port@a,2
 10937  197D  297F               	goto	u2781
 10938  197E  2980               	goto	u2780
 10939  197F                     u2781:
 10940  197F  2982               	goto	l65
 10941  1980                     u2780:
 10942  1980                     l2271:
 10943                           
 10944                           ;./lcd.h: 17:   RB6 = 1;
 10945  1980  1706               	bsf	6,6	;volatile
 10946  1981  2983               	goto	l66
 10947  1982                     l65:	
 10948                           ;./lcd.h: 18:  else
 10949                           
 10950                           
 10951                           ;./lcd.h: 19:   RB6 = 0;
 10952  1982  1306               	bcf	6,6	;volatile
 10953  1983                     l66:
 10954                           
 10955                           ;./lcd.h: 21:  if(a & 8)
 10956  1983  1DF0               	btfss	Lcd_Port@a,3
 10957  1984  2986               	goto	u2791
 10958  1985  2987               	goto	u2790
 10959  1986                     u2791:
 10960  1986  2989               	goto	l67
 10961  1987                     u2790:
 10962  1987                     l2273:
 10963                           
 10964                           ;./lcd.h: 22:   RB7 = 1;
 10965  1987  1786               	bsf	6,7	;volatile
 10966  1988  298A               	goto	l69
 10967  1989                     l67:	
 10968                           ;./lcd.h: 23:  else
 10969                           
 10970                           
 10971                           ;./lcd.h: 24:   RB7 = 0;
 10972  1989  1386               	bcf	6,7	;volatile
 10973  198A                     l69:
 10974  198A  0008               	return
 10975  198B                     __end_of_Lcd_Port:
 10976  007E                     btemp	set	126	;btemp
 10977  007E                     wtemp0	set	126
 10978                           
 10979                           	psect	config
 10980                           
 10981                           ;Config register CONFIG @ 0x2007
 10982                           ;	Oscillator Selection bits
 10983                           ;	FOSC = HS, HS oscillator
 10984                           ;	Watchdog Timer Enable bit
 10985                           ;	WDTE = OFF, WDT disabled
 10986                           ;	Power-up Timer Enable bit
 10987                           ;	PWRTE = ON, PWRT enabled
 10988                           ;	Brown-out Reset Enable bit
 10989                           ;	BOREN = ON, BOR enabled
 10990                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
 10991                           ;	LVP = 0x1, unprogrammed default
 10992                           ;	Data EEPROM Memory Code Protection bit
 10993                           ;	CPD = 0x1, unprogrammed default
 10994                           ;	Flash Program Memory Write Enable bits
 10995                           ;	WRT = 0x3, unprogrammed default
 10996                           ;	In-Circuit Debugger Mode bit
 10997                           ;	DEBUG = 0x1, unprogrammed default
 10998                           ;	Flash Program Memory Code Protection bit
 10999                           ;	CP = 0x1, unprogrammed default
 11000  2007                     	org	8199
 11001  2007  3FF2               	dw	16370

Data Sizes:
    Strings     30
    Constant    144
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      78
    BANK1            80     80      80
    BANK3            96     96      96
    BANK2            96     32      32

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_14(CODE[5]), STR_12(CODE[5]), STR_10(CODE[5]), STR_8(CODE[5]), 
		 -> STR_6(CODE[5]), STR_4(CODE[5]), STR_2(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> main@buffer6(BANK2[20]), main@buffer5(BANK3[20]), main@buffer4(BANK3[20]), main@buffer3(BANK3[20]), 
		 -> main@buffer2(BANK3[20]), main@buffer1(BANK1[20]), main@buffer0(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> main@buffer6(BANK2[20]), STR_13(CODE[4]), main@buffer5(BANK3[20]), STR_11(CODE[4]), 
		 -> main@buffer4(BANK3[20]), STR_9(CODE[4]), main@buffer3(BANK3[20]), STR_7(CODE[4]), 
		 -> main@buffer2(BANK3[20]), STR_5(CODE[3]), main@buffer1(BANK1[20]), STR_3(CODE[3]), 
		 -> main@buffer0(BANK1[20]), STR_1(CODE[3]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___flsub->___xxtofl
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               172   172      0   37702
                                             36 BANK1     44    44      0
                                              0 BANK3     96    96      0
                                              0 BANK2     32    32      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                             ___flge
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             43    36      7   31940
                                              0 BANK1     36    29      7
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7408
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    5871
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4393
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     930
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             49 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1094
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2    1332
                                              5 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1    1444
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___flge
   ___xxtofl
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60     60      60       9      100.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60     20      20      11       33.3%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed May 05 17:52:40 2021

                        pc 0002                         l61 1972                         l62 1975  
                       l63 197B                         l64 197C                         l72 081F  
                       l65 1982                         l81 1B91                         l66 1983  
                       l67 1989                         l75 100D                         l84 1C9B  
                       l69 198A                         l93 1AAD                         l87 1A31  
             ___awdiv@sign 0021                         fsr 0004        ___wmul@multiplicand 0072  
      __Umul8_16@word_mpld 0076                        l211 1218                        l218 17FF  
                      l324 1D01                        l501 1DE6                        l237 01F4  
                      l270 0638                        l505 1FFF                        l441 1D6A  
                      l290 19D3                        l506 1F71                        l516 1FF2  
                      l604 1A6B                        l284 07FB                        l621 12FA  
                      l509 1FC2                        l462 0142                        l454 1C3E  
                      l278 07AB                        l615 127C                        l711 0B80  
                      l640 1412                        l544 1BE5                        l288 19BB  
                      l474 1B0E                        l482 1E6F                        l458 017F  
                      l730 19E8                        l475 1B2A                        l483 1E88  
                      l619 1323                        l491 1DE6                        l459 00E4  
                      l723 0B74                        l476 1B3F                        l636 13EE  
                      l628 14A0                        l732 19FA                        l661 19AE  
                      l469 0172                        l717 0AEC                        l646 1434  
                      l479 1E03                        l487 1956                        l657 1494  
                      l649 1472                        l761 1EF0                        l658 14A0  
                      l498 1DD1                        l594 1AF1                        l755 1EAB  
                      l757 1F42                        l775 1968                        l768 1F0C  
                      l769 1F18                        _RB1 0031                        _RB2 0032  
                      _RC0 0038                        _RC1 0039                        _RB4 0034  
                      _RD0 0040                        _RC2 003A                        _RB5 0035  
                      _RD1 0041                        _RC3 003B                        _RB6 0036  
                      _RD2 0042                        _RB7 0037                        _RD3 0043  
                      _RD4 0044                        _RD5 0045                        _RD6 0046  
                      _RD7 0047                        fsr0 0004                        indf 0000  
             ___awmod@sign 0076               ___flmul@aexp 0036               ___flmul@bexp 0037  
              _sprintf$940 00AC               ___flmul@sign 0031               ___flmul@temp 003C  
             ___flmul@prod 0038                main@buffer0 00C8                main@buffer1 00DC  
              main@buffer2 0190                main@buffer3 01A4                main@buffer4 01B8  
              main@buffer5 01CC                main@buffer6 0110               ___fltol@exp1 005B  
                     l3001 1E23                       l3003 1E47                       l3005 1E4B  
                     l3013 194C                       l3021 1D6B                       l3101 1ED5  
                     l2301 1D37                       l3007 1E85                       l3015 1954  
                     l3031 1D97                       l3023 1D78                       l3111 1F06  
                     l3103 1ED9                       l2303 1D48                       l2311 1D5C  
                     l3009 1E87                       l3017 1956                       l3033 1D9F  
                     l3121 1F39                       l3113 1F10                       l3105 1EE7  
                     l2401 1A67                       l2313 1D61                       l2305 1D4E  
                     l2321 1BE7                       l3201 0212                       l3131 1B46  
                     l2411 122A                       l3051 1DC6                       l3043 1DAD  
                     l3035 1DA1                       l3027 1D81                       l3123 1F3A  
                     l3115 1F1A                       l3107 1EF7                       l2251 19D5  
                     l2315 1D66                       l2307 1D4F                       l2331 1BFB  
                     l2323 1BEB                       l3211 0238                       l3203 021E  
                     l3141 1B6F                       l3133 1B57                       l2501 131B  
                     l2421 123E                       l2413 122B                       l2405 1219  
                     l3053 1DD6                       l3037 1DA5                       l3045 1DBF  
                     l3029 1D96                       l3061 1B9D                       l3117 1F30  
                     l3109 1F02                       l2261 19F6                       l2253 19D7  
                     l2309 1D56                       l2341 1C13                       l2333 1C01  
                     l2325 1BF0                       l3301 05EA                       l3221 028B  
                     l3213 0251                       l3205 0222                       l2271 1980  
                     l3127 1001                       l3151 1C45                       l3143 1B80  
                     l3135 1B5C                       l2511 134C                       l2503 1327  
                     l2431 1254                       l2415 1230                       l2423 1240  
                     l2407 1220                       l3055 1DDB                       l3071 1BD7  
                     l3063 1BAA                       l3119 1F35                       l2255 19DE  
                     l2351 1C35                       l2343 1C1D                       l2335 1C04  
                     l2327 1BF2                       l2319 1BE6                       l3311 060F  
                     l3303 05F0                       l3231 02C6                       l3223 0296  
                     l3215 026A                       l3207 0226                       l2273 1987  
                     l2265 196A                       l3153 1C4E                       l3145 1B85  
                     l3137 1B62                       l3129 1B41                       l3161 1A6F  
                     l2521 1363                       l2513 1350                       l2505 132C  
                     l2441 1269                       l2433 125A                       l2425 1248  
                     l2417 1235                       l2409 1226                       l3065 1BAE  
                     l3073 1BDD                       l3057 1B92                       l2257 19E2  
                     l2601 0827                       l2361 1AB6                       l2281 1D0E  
                     l2353 1C3A                       l2345 1C23                       l2337 1C0B  
                     l2329 1BF6                       l3321 0646                       l3313 061C  
                     l3305 05F8                       l3241 0358                       l3233 02CC  
                     l3225 029C                       l3217 026E                       l3209 0234  
                     l3401 0B91                       l2267 196E                       l3155 1C5C  
                     l3147 1B8B                       l3139 1B69                       l3163 1A8B  
                     l2531 13C6                       l2523 1364                       l2515 1354  
                     l2451 1286                       l2443 1271                       l2435 125E  
                     l2427 124D                       l2419 123D                       l3067 1BC0  
                     l3059 1B9A                       l3091 1EB3                       l3083 1E8A  
                     l2259 19F1                       l2611 083C                       l2603 082D  
                     l2371 1AD9                       l2363 1AB9                       l2291 1D1F  
                     l2283 1D10                       l2275 1D02                       l2347 1C2A  
                     l2339 1C0F                       l3331 0728                       l3323 064F  
                     l3315 062B                       l3307 0603                       l3251 03E0  
                     l3243 0373                       l3235 02EB                       l3227 02AF  
                     l3219 0272                       l3171 018D                       l3411 0B9E  
                     l3403 0B94                       l2269 1979                       l3157 1C62  
                     l3149 1C3F                       l3165 1A91                       l2541 13FB  
                     l2533 13CC                       l2525 136D                       l2517 135D  
                     l2509 1335                       l2461 129A                       l2453 128A  
                     l2445 1272                       l2437 125F                       l2429 1253  
                     l3077 198B                       l3069 1BCE                       l3085 1E8F  
                     l2701 0AD5                       l2621 0859                       l2613 0844  
                     l2605 0831                       l2373 1ADF                       l2365 1AC0  
                     l2357 1AAE                       l2293 1D25                       l2285 1D14  
                     l2277 1D05                       l2349 1C30                       l3341 0784  
                     l3333 0732                       l3325 0655                       l3317 0632  
                     l3309 0609                       l3261 0455                       l3253 03FB  
                     l3237 0336                       l3229 02C2                       l3245 037B  
                     l3181 01AC                       l3173 0196                       l3501 0CD1  
                     l3421 0BA4                       l3413 0B9E                       l3405 0B95  
                     l3159 1A6C                       l2551 1416                       l2535 13D1  
                     l2519 135F                       l2527 1372                       l2471 12AE  
                     l2463 129E                       l2455 128E                       l2439 1264  
                     l2447 1274                       l3079 198F                       l3095 1EBC  
                     l3087 1E93                       l2711 0B04                       l2703 0AE9  
                     l2631 0870                       l2623 085D                       l2615 0846  
                     l2607 0832                       l2375 1AE0                       l2367 1AC4  
                     l2359 1AB0                       l2391 1A46                       l2383 1A32  
                     l2295 1D28                       l2287 1D19                       l2279 1D09  
                     l3351 07A5                       l3343 078A                       l3335 0738  
                     l3327 06CE                       l3319 0641                       l3263 045D  
                     l3255 0422                       l3271 04A3                       l3247 038A  
                     l3239 034F                       l3191 01DF                       l3183 01B0  
                     l3175 019D                       l3167 0180                       l3511 0CF8  
                     l3503 0CF2                       l3431 0BD1                       l3423 0BAB  
                     l3415 0BA1                       l3407 0B98                       l2553 1419  
                     l2545 1404                       l2529 1388                       l2537 13E0  
                     l2561 1426                       l2481 12C2                       l2473 12B2  
                     l2465 12A2                       l2457 1292                       l2449 1282  
                     l3097 1EC1                       l3089 1EA3                       l2721 0B3F  
                     l2713 0B08                       l2633 0872                       l2625 085E  
                     l2617 084E                       l2609 0837                       l2377 1AE7  
                     l2369 1AC8                       l2393 1A4A                       l2385 1A38  
                     l2297 1D2F                       l2289 1D1D                       l2801 15A0  
                     l3361 07D4                       l3353 07B6                       l3345 0790  
                     l3329 0709                       l3337 0773                       l3273 04D8  
                     l3265 047B                       l3257 0431                       l3249 03D1  
                     l3185 01B3                       l3193 01F0                       l3177 019F  
                     l3169 0187                       l3601 0FA1                       l3521 0D26  
                     l3513 0D20                       l3505 0CF5                       l3441 0BFE  
                     l3433 0BD2                       l3425 0BCC                       l3417 0BA2  
                     l3409 0B99                       l2571 1439                       l2563 1427  
                     l2555 141B                       l2547 140D                       l2539 13F6  
                     l2491 1307                       l2475 12B6                       l2467 12A6  
                     l2459 1296                       l2483 12C6                       l3099 1ECE  
                     l2731 0B6C                       l2723 0B4E                       l2715 0B21  
                     l2707 0AF1                       l2651 08E3                       l2643 088D  
                     l2635 087A                       l2627 0863                       l2619 0853  
                     l2379 1AED                       l2395 1A54                       l2387 1A3B  
                     l2299 1D33                       l2811 165C                       l3363 07DD  
                     l3355 07B7                       l3339 077B                       l3291 0576  
                     l3283 0529                       l3275 0525                       l3259 044C  
                     l3347 0797                       l3195 01F2                       l3187 01C8  
                     l3179 01AB                       l3611 0FF2                       l3603 0FAD  
                     l3531 0D53                       l3523 0D2D                       l3515 0D23  
                     l3507 0CF6                       l3451 0C41                       l3443 0BFF  
                     l3435 0BD9                       l3427 0BCF                       l3419 0BA3  
                     l2741 080A                       l2581 1477                       l2573 143E  
                     l2565 142B                       l2557 1420                       l2549 1411  
                     l2493 1309                       l2485 12C7                       l2477 12BA  
                     l2469 12AA                       l2733 0B6D                       l2725 0B58  
                     l2709 0AF6                       l2717 0B27                       l2661 0960  
                     l2653 090F                       l2645 089D                       l2637 087F  
                     l2629 0868                       l2397 1A5A                       l2389 1A42  
                     l2805 1628                       l3357 07C6                       l3349 079D  
                     l3293 057F                       l3277 0527                       l3269 049A  
                     l3189 01DB                       l3365 07E3                       l3605 0FB6  
                     l3541 0D92                       l3533 0D5B                       l3525 0D4E  
                     l3517 0D24                       l3509 0CF7                       l3461 0C62  
                     l3453 0C4F                       l3445 0C00                       l3437 0BFA  
                     l3429 0BD0                       l3381 0B84                       l2743 0810  
                     l2751 1A06                       l2591 148E                       l2583 147C  
                     l2575 144C                       l2567 1431                       l2559 1422  
                     l2495 130D                       l2487 12DE                       l2479 12BE  
                     l2911 0109                       l2903 00E5                       l2735 0B78  
                     l2727 0B5A                       l2719 0B34                       l2671 09E0  
                     l2663 097D                       l2655 092B                       l2647 08AA  
                     l2639 0884                       l2399 1A61                       l2831 195F  
                     l2823 17D3                       l3359 07C6                       l3295 0586  
                     l3287 0560                       l3367 07F5                       l3199 01F6  
                     l3607 0FDD                       l3551 0DE5                       l3543 0DB9  
                     l3535 0D7C                       l3527 0D51                       l3519 0D25  
                     l3463 0C63                       l3455 0C5D                       l3471 0C75  
                     l3447 0C07                       l3439 0BFD                       l3391 0B8A  
                     l3383 0B86                       l2745 0813                       l2761 1A21  
                     l2753 1A09                       l2593 1490                       l2585 1484  
                     l2577 1450                       l2497 130E                       l2489 12FE  
                     l2921 013C                       l2913 0112                       l2905 00ED  
                     l2841 1F56                       l2729 0B68                       l2681 0A98  
                     l2673 0A0D                       l2665 098D                       l2657 0947  
                     l2649 08C7                       l2833 1965                       l2817 1744  
                     l2809 1655                       l3297 05C1                       l3289 056A  
                     l3633 020A                       l3609 0FE9                       l3561 0E41  
                     l3553 0DEE                       l3545 0DC5                       l3537 0D81  
                     l3529 0D52                       l3481 0CB0                       l3473 0C90  
                     l3465 0C64                       l3457 0C60                       l3449 0C28  
                     l3393 0B8B                       l3385 0B87                       l2747 081C  
                     l2739 0807                       l2763 1A27                       l2755 1A17  
                     l2595 149B                       l2587 1489                       l2579 146E  
                     l2499 1317                       l2923 0146                       l2931 0160  
                     l2915 0124                       l2907 00FE                       l2851 1F72  
                     l2691 0ABD                       l2683 0AA1                       l2675 0A1D  
                     l2667 09AA                       l2659 0950                       l2771 1017  
                     l2835 1967                       l2827 1958                       l2819 174B  
                     l3299 05E0                       l3571 0E9D                       l3563 0E4A  
                     l3555 0E15                       l3547 0DCE                       l3539 0D89  
                     l3491 0CB5                       l3483 0CB1                       l3475 0C9E  
                     l3467 0C65                       l3459 0C61                       l3395 0B8C  
                     l3387 0B88                       l3379 0B81                       l2765 1A2A  
                     l2757 1A1A                       l2749 19FC                       l2597 149F  
                     l2589 148A                       l2917 0132                       l2909 0100  
                     l2861 1F9B                       l2853 1F78                       l2845 1F5F  
                     l2693 0AC6                       l2685 0AAF                       l2677 0A4A  
                     l2669 09C3                       l2829 1959                       l3581 0EED  
                     l3573 0EA6                       l3565 0E71                       l3557 0E2A  
                     l3549 0DD9                       l3485 0CB2                       l3477 0CAC  
                     l3493 0CC4                       l3469 0C66                       l3397 0B8D  
                     l3389 0B89                       l2767 1A2E                       l2759 1A1E  
                     l2951 19C9                       l2943 19AF                       l2919 0133  
                     l2871 1FC6                       l2863 1FA9                       l2855 1F87  
                     l2839 1F43                       l2687 0AB8                       l2695 0ACC  
                     l2679 0A70                       l2599 0820                       l2783 11D5  
                     l2791 14AA                       l3591 0F45                       l3583 0EF5  
                     l3575 0ECD                       l3567 0E7D                       l3559 0E35  
                     l3495 0CC7                       l3487 0CB3                       l3479 0CAF  
                     l3399 0B90                       l2961 1CAF                       l2953 19CF  
                     l2945 19B1                       l2937 0167                       l2929 014E  
                     l2865 1FB3                       l2857 1F89                       l2697 0AD0  
                     l2689 0ABC                       l2777 1124                       l2769 1011  
                     l2793 14B1                       l3593 0F51                       l3585 0EFE  
                     l3577 0ED9                       l3569 0E91                       l3497 0CC8  
                     l3489 0CB4                       l2971 1CE9                       l2963 1CBC  
                     l2947 19B5                       l2939 0177                       l2891 00C2  
                     l2867 1FB4                       l2859 1F92                       l2699 0AD1  
                     l2779 112A                       l2787 14A4                       l3595 0F5A  
                     l3587 0F25                       l3579 0EE2                       l3499 0CC9  
                     l2981 1AF2                       l2973 1CEA                       l2965 1CC0  
                     l2957 1C9C                       l2949 19C2                       l2893 00CF  
                     l2885 1FE7                       l2877 1FCE                       l2869 1FBC  
                     l2789 14A8                       l3597 0F81                       l3589 0F3A  
                     l2983 1B06                       l2975 1CF3                       l2967 1CC9  
                     l2959 1CAC                       l2887 1FF7                       l2879 1FE0  
                     l2799 1599                       l3599 0F8D                       l2985 1B22  
                     l2993 1DE7                       l2969 1CDB                       l2977 1CF9  
                     l2897 00D8                       l2987 1B3C                       l2995 1DFB  
                     l2989 1B3E                       l2997 1E17                       l2999 1E1F  
                     STR_1 00BB                       STR_2 00A3                       STR_3 00B8  
                     STR_4 00A3                       STR_5 00BE                       STR_6 00A3  
                     STR_7 00A8                       STR_8 00A3                       STR_9 00AC  
                     u3010 1AC8                       u3011 1AC7                       u3005 1ABA  
                     u3030 1AD9                       u3110 1A67                       u3031 1AD8  
                     u3111 1A66                       u3200 1286                       u3120 122A  
                     u4000 112A                       u3201 1285                       u3121 1229  
                     u3025 1AC9                       u3105 1A5B                       u4001 1129  
                     u3210 12DE                       u3130 1230                       u3050 1AED  
                     u3211 12DD                       u3131 122F                       u3051 1AEC  
                     u3035 1AD5                       u3220 12E9                       u3140 1235  
                     u3060 1A38                       u3301 133E                       u3221 12E7  
                     u3141 1234                       u3045 1AE1                       u3061 1A37  
                     u3310 1350                       u3302 1345                       u3230 12EA  
                     u3150 1253                       u3311 134F                       u3303 134C  
                     u3215 12DA                       u3151 1252                       u4015 1147  
                     u3400 13FB                       u3320 1354                       u3240 12FE  
                     u3160 125E                       u5000 1F39                       u3080 1A4A  
                     u4040 14A8                       u3401 13FA                       u3321 1353  
                     u3241 12FD                       u3161 125D                       u5001 1F38  
                     u3081 1A49                       u4025 1194                       u4105 15B3  
                     u4041 14A7                       u5010 1B46                       u3330 1363  
                     u3250 130D                       u3170 1264                       u3090 1A54  
                     u4210 195F                       u4130 165C                       u4050 14B1  
                     u5011 1B45                       u3331 1362                       u3251 130C  
                     u3171 1263                       u3091 1A53                       u3075 1A3C  
                     u4035 11E0                       u4211 195E                       u4131 165B  
                     u4115 15EF                       u4051 14B0                       u3500 1450  
                     u3420 1411                       u3180 1269                       u4300 1FCD  
                     u4220 1965                       u5100 01EF                       u3501 144F  
                     u3421 1410                       u3181 1268                       u4301 1FCC  
                     u4221 1964                       u4205 17D6                       u4125 162B  
                     u5101 01EE                       u5030 1B6F                       u3510 145F  
                     u3430 1416                       u3350 1388                       u3270 1323  
                     u3190 1282                       u4230 1F56                       u5110 021E  
                     u5031 1B6E                       u3431 1415                       u3415 1406  
                     u3351 1387                       u3271 1322                       u3191 1281  
                     u4231 1F55                       u3095 1A50                       u5111 021D  
                     u3520 146E                       u3440 1420                       u3280 1327  
                     u4320 1FDF                       u4240 1F70                       u3600 083C  
                     u2800 1D09                       u5200 03FB                       u5120 0222  
                     u5025 1B4E                       u3521 146D                       u3441 141F  
                     u3361 139F                       u3353 1384                       u3345 1366  
                     u3281 1326                       u3265 1310                       u4321 1FDE  
                     u4241 1F6F                       u3601 083B                       u2801 1D08  
                     u4145 167C                       u4065 14D1                       u5201 03FA  
                     u5121 0221                       u5050 1A79                       u3530 1477  
                     u3450 1426                       u3370 13B3                       u3362 13A0  
                     u3290 132C                       u4410 0142                       u4330 1FE6  
                     u2730 19E2                       u3610 085D                       u2810 1D14  
                     u4170 174B                       u4090 15A0                       u5210 0422  
                     u5130 0251                       u3531 1476                       u3515 145A  
                     u3451 1425                       u3371 13B4                       u3363 13A5  
                     u3291 132B                       u4411 0141                       u4331 1FE5  
                     u4315 1FCF                       u2731 19E1                       u3611 085C  
                     u2811 1D13                       u4171 174A                       u4155 16B8  
                     u4091 159F                       u4075 150D                       u5211 0421  
                     u5131 0250                       u5060 1A9B                       u3540 147C  
                     u3460 142B                       u3380 13D1                       u3372 13B9  
                     u3364 13A6                       u4420 0146                       u4260 1FA9  
                     u3620 0863                       u2820 1D25                       u2900 1BEB  
                     u5300 061C                       u5220 0431                       u5140 028B  
                     u5045 1B77                       u3541 147B                       u3461 142A  
                     u3381 13D0                       u3373 13BA                       u3365 13AB  
                     u4421 0145                       u4405 0135                       u4261 1FA8  
                     u3621 0862                       u2821 1D24                       u2901 1BEA  
                     u4165 1703                       u4085 1558                       u5301 061B  
                     u5221 0430                       u5141 028A                       u5070 1AAD  
                     u3550 1489                       u3470 1431                       u3390 13F6  
                     u3366 13AC                       u4430 014D                       u4350 1FF7  
                     u2750 19F6                       u3630 0868                       u2910 1BF6  
                     u5310 062B                       u5230 044C                       u5150 02C6  
                     u5071 1AAC                       u3551 1488                       u3471 1430  
                     u3391 13F5                       u4431 014C                       u4351 1FF6  
                     u4255 1F94                       u2751 19F5                       u3711 096F  
                     u3631 0867                       u2911 1BF5                       u5311 062A  
                     u5231 044B                       u5151 02C5                       u2760 196E  
                     u4600 1B06                       u3560 148E                       u3480 1438  
                     u4520 19CF                       u4360 00CF                       u4280 1FC2  
                     u3712 0976                       u3640 087F                       u2840 1D37  
                     u2920 1C01                       u5400 07C6                       u5320 0646  
                     u5160 034F                       u5080 018D                       u2761 196D  
                     u4601 1B05                       u3561 148D                       u3481 1437  
                     u4521 19CE                       u4505 19BC                       u4361 00CE  
                     u4345 1FE9                       u4281 1FC1                       u4265 1FA5  
                     u2745 19E9                       u3801 0A8A                       u3721 099C  
                     u3713 097D                       u3705 0949                       u3641 087E  
                     u2841 1D36                       u2921 1C00                       u4185 175E  
                     u5401 07C5                       u5321 0645                       u5305 0618  
                     u5225 042D                       u5161 034E                       u5081 018C  
                     u2770 1979                       u4610 1B22                       u3570 149F  
                     u3490 143E                       u4530 1CAC                       u4450 015F  
                     u4370 00E3                       u4290 1FC6                       u3802 0A91  
                     u3722 09A3                       u3650 0884                       u5410 07D4  
                     u5250 055F                       u5170 0373                       u5090 01AB  
                     u2771 1978                       u4611 1B21                       u3571 149E  
                     u3491 143D                       u4531 1CAB                       u4515 19C3  
                     u4451 015E                       u4371 00E2                       u4291 1FC5  
                     u4275 1FB5                       u3803 0A98                       u3723 09AA  
                     u3651 0883                       u2835 1D29                       u4195 179A  
                     u5411 07D3                       u5315 0627                       u5251 055E  
                     u5171 0372                       u5091 01AA                       u2780 1980  
                     u4620 1B3C                       u4700 1954                       u4460 0166  
                     u3900 0B08                       u3580 0831                       u2860 1D48  
                     u2940 1C13                       u5420 07F5                       u5260 056A  
                     u5180 038A                       u2781 197F                       u4621 1B3B  
                     u4701 1953                       u4461 0165                       u4445 014F  
                     u3901 0B07                       u3741 09D2                       u3661 08D5  
                     u3581 0830                       u2861 1D47                       u2941 1C12  
                     u5421 07F4                       u5405 07C2                       u5261 0569  
                     u5245 052C                       u5181 0389                       u2790 1987  
                     u4630 1DFB                       u4710 1D78                       u4550 1CC0  
                     u4390 0124                       u3910 0B17                       u3830 0ABC  
                     u3742 09D9                       u3662 08DC                       u3590 0837  
                     u2950 1C1D                       u5350 077A                       u5270 0576  
                     u5190 03E0                       u5430 0C41                       u2791 1986  
                     u4631 1DFA                       u4711 1D77                       u4551 1CBF  
                     u4391 0123                       u3831 0ABB                       u3815 0A9A  
                     u3751 09FF                       u3743 09E0                       u3735 09AC  
                     u3671 08F1                       u3663 08E3                       u3591 0836  
                     u2855 1D38                       u2951 1C1C                       u2935 1C05  
                     u5351 0779                       u5335 06D1                       u5271 0575  
                     u5255 055B                       u5191 03DF                       u5431 0C40  
                     u4640 1E17                       u4800 1DDB                       u4720 1D8F  
                     u4480 0177                       u3920 0B34                       u3752 0A06  
                     u3672 08F8                       u2880 1D5C                       u5360 0796  
                     u5440 0C90                       u4625 1B38                       u4641 1E16  
                     u4801 1DDA                       u4545 1CB1                       u4481 0176  
                     u4385 010B                       u3921 0B33                       u3825 0AB1  
                     u3761 0A2C                       u3753 0A0D                       u3681 091D  
                     u3673 08FF                       u2881 1D5B                       u2865 1D44  
                     u5361 0795                       u5345 073B                       u5185 0386  
                     u5441 0C8F                       u4650 1E23                       u4730 1DA5  
                     u4570 1CDB                       u4810 1B9A                       u4490 19B5  
                     u3930 0B4E                       u3850 0AD0                       u3770 0A56  
                     u3762 0A33                       u3682 0924                       u2890 1D61  
                     u2970 1C30                       u5370 079D                       u5290 05F7  
                     u4651 1E22                       u4731 1DA4                       u4571 1CDA  
                     u4811 1B99                       u4491 19B4                       u4475 0169  
                     u4395 0120                       u3931 0B4D                       u3915 0B12  
                     u3851 0ACF                       u3763 0A3A                       u3691 0939  
                     u3683 092B                       u2891 1D60                       u2875 1D50  
                     u2971 1C2F                       u2955 1C19                       u5371 079C  
                     u5291 05F6                       u5195 03DC                       u5507 0CA6  
                     u4740 1DAC                       u3940 0B6C                       u3860 0AD5  
                     u3692 0940                       u2980 1C35                       u5380 07A5  
                     u4661 1E32                       u4741 1DAB                       u4725 1D8A  
                     u4565 1CC2                       u3941 0B6B                       u3925 0B30  
                     u3861 0AD4                       u3845 0ABF                       u3781 0A62  
                     u3693 0947                       u2981 1C34                       u2965 1C24  
                     u5381 07A4                       u5285 0589                       u5517 0CBE  
                     u4670 1E4B                       u4662 1E33                       u4590 1CF9  
                     u4830 1BAE                       u4910 1ED4                       u3870 0AE9  
                     u3790 0A7E                       u3782 0A69                       u2990 1AB6  
                     u5390 07B6                       u4671 1E4A                       u4663 1E38  
                     u4591 1CF8                       u4575 1CD7                       u4831 1BAD  
                     u4911 1ED3                       u3935 0B4A                       u3871 0AE8  
                     u3783 0A70                       u3775 0A51                       u2991 1AB5  
                     u5391 07B5                       u5607 0F40                       u5527 0CCE  
                     u4664 1E39                       u4760 1DBE                       u4840 1BC0  
                     u3880 0AF0                       u3960 1017                       u4681 1E5A  
                     u4665 1E3E                       u4761 1DBD                       u4585 1CEB  
                     u4841 1BBF                       u4825 1B9F                       u4905 1EC6  
                     u3881 0AEF                       u3961 1016                       u5617 0F9C  
                     u5537 0CFC                       u5457 0BA8                       u4690 1E85  
                     u4682 1E5B                       u4666 1E3F                       u4770 1DC5  
                     u4930 1EF6                       u3890 0AF6                       u3955 1A0C  
                     u4691 1E84                       u4683 1E60                       u4771 1DC4  
                     u4755 1DAE                       u4931 1EF5                       u3891 0AF5  
                     u3795 0A79                       u5395 07B2                       u5627 0FF8  
                     u5547 0D2A                       u5467 0BD6                       u4684 1E61  
                     u4860 1BDD                       u5637 1A1C                       u4685 1E66  
                     u4861 1BDC                       u4845 1BBC                       u4925 1EE8  
                     u5557 0D58                       u5477 0C04                       u4686 1E67  
                     u4790 1DD6                       u4950 1F06                       u4870 1E8F  
                     u5647 1A2C                       u4695 1E81                       u4791 1DD5  
                     u4855 1BCF                       u4951 1F05                       u4871 1E8E  
                     u3975 1034                       u5567 0DD4                       u5487 0C57  
                     u4960 1F0C                       u4880 1E93                       u5657 1C49  
                     u4785 1DC8                       u4961 1F0B                       u4945 1EFB  
                     u4881 1E92                       u3985 108E                       u5577 0E30  
                     u5497 0C6F                       u4970 1F10                       u4890 1EB3  
                     u5667 1C58                       u4971 1F0F                       u4891 1EB2  
                     u3995 10E3                       u5587 0E8C                       u4980 1F25  
                     u5677 1C66                       u5597 0EE8                       u4990 1F35  
                     u5687 0817                       u4991 1F34                       u4985 1F20  
        ?_Lcd_Write_String 0075                       _main 0B81                       btemp 007E  
                     start 0000         ??_Lcd_Write_String 0077            __end_of_Lcd_Cmd 0820  
            ___fltol@sign1 005A            __end_of___fladd 14A1                      ?_main 0070  
          __end_of___awdiv 1D6B            __end_of___flneg 1957                      STR_10 00A3  
                    STR_11 00B0                      STR_12 00A3                      STR_13 00B4  
                    STR_14 00A3            __end_of___awmod 1C3F            __end_of___flmul 0B81  
          __end_of___flsub 19AF            __end_of___fltol 1DE7            __end_of___lldiv 1D02  
          ___awdiv@divisor 0077            __end_of___llmod 1BE6            __end_of___lwdiv 1AF2  
          __end_of___lwmod 1A6C            ___awdiv@counter 0020    __size_of_Lcd_Set_Cursor 0052  
                    _TRISA 0085                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088            __end_of_dpowers 00A3                      _scale 14A1  
          __end_of_isdigit 1969                      pclath 000A                      status 0003  
                    wtemp0 007E            __end_of_sprintf 07FC           __end_of_Lcd_Init 1C9C  
         __end_of_Lcd_Port 198B            __initialization 07FC               __end_of_main 1000  
                   ??_main 00C4         __size_of_Lcd_Clear 000D       __size_of__tdiv_to_l_ 00BD  
         ___llmod@dividend 0074                     ?_scale 003E                     _ADRESH 001E  
                   _ADRESL 009E           ___awdiv@dividend 0079                  ??_Lcd_Cmd 0071  
  __size_of_Lcd_Write_Char 0037           __end_of___xxtofl 1F43           __end_of__powers_ 0047  
                   ___flge 1DE7                     ___fleq 1AF2                  ??___fladd 005A  
                   ___wmul 19AF                  ??___awdiv 007B                  ??___flneg 0074  
                ??___awmod 0074                  ??___flmul 002C                  ??___flsub 007E  
                ??___fltol 0055                  ??___lldiv 0078                  ??___llmod 0078  
                ??___lwdiv 007A                  ??___lwmod 0074                     _fround 100E  
         ___awdiv@quotient 0022            ___awmod@divisor 0070            ___awmod@counter 0075  
                ??_isdigit 0070         __size_of__Umul8_16 0027                  ??_sprintf 00A7  
          Lcd_Set_Cursor@a 0077            Lcd_Set_Cursor@b 0074            Lcd_Set_Cursor@y 0079  
          Lcd_Set_Cursor@z 0078                 ___flge@ff1 0070                 ___flge@ff2 0074  
             ___xxtofl@arg 007A               ___xxtofl@exp 0079               ___xxtofl@val 0070  
               ___fleq@ff1 0070                 ___fleq@ff2 0074    __end_of__initialization 07FC  
               ___flneg@f1 0070          __end_of_Lcd_Clear 100E                 ___fltol@f1 0051  
           __pcstackCOMMON 0070              __end_of_scale 1800             _Lcd_Set_Cursor 1B40  
               __div_to_l_ 00C2             _OPTION_REGbits 0081                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070            __div_to_l_@exp1 0025            __div_to_l_@cntr 0024  
                  ??_scale 0042            __div_to_l_@quot 0020              __div_to_l_@f1 0070  
            __div_to_l_@f2 0074          __end_of__Umul8_16 19FB                 __pmaintext 0B81  
                  ?___flge 0070                    ?___fleq 0070                    ?___wmul 0070  
                  ?_fround 003E  __size_of_Lcd_Write_String 0042     __end_of_Lcd_Set_Cursor 1B92  
                ?___xxtofl 0070                 ??_Lcd_Init 0074                 ??_Lcd_Port 0070  
               __stringtab 0003             _Lcd_Write_Char 19FB                    _Lcd_Cmd 0806  
        __end_of__npowers_ 007B            __size_of___flge 00A2            __size_of___fleq 004E  
                  ___fladd 1219                    ___awdiv 1D02                    ___flneg 194C  
                  ___awmod 1BE6                    ___flmul 0820                    ___flsub 198B  
                  ___fltol 1D6B                    ___lldiv 1C9C            __size_of___wmul 0025  
                  ___llmod 1B92                    ___lwdiv 1AAE                 _fround$937 004D  
               _fround$938 0049                    ___lwmod 1A32            __size_of_fround 020B  
          ?_Lcd_Set_Cursor 0074                    __ptext1 0180                    __ptext2 14A1  
                  __ptext3 1BE6                    __ptext4 1D02                    __ptext5 1957  
                  __ptext6 100E                    __ptext7 1A32                    __ptext8 1AAE  
                  __ptext9 0820                ?__div_to_l_ 0070                    _dpowers 007B  
                  _isdigit 1957                 ??___xxtofl 0074           ___awmod@dividend 0072  
                  _sprintf 0180     __end_of_Lcd_Write_Char 1A32       end_of_initialization 07FC  
          ___lldiv@divisor 0070            ___lldiv@counter 007D                  Lcd_Port@a 0070  
           __tdiv_to_l_@f1 0070             __tdiv_to_l_@f2 0074              ??__tdiv_to_l_ 0078  
              ___fladd@grs 0065              ___xxtofl@sign 0078            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0075          Lcd_Write_String@i 007A                ___flmul@grs 0032  
      __size_of__div_to_l_ 00BE                  _Lcd_Clear 1001             __end_of___flge 1E89  
           __end_of___fleq 1B40             __end_of___wmul 19D4           _Lcd_Write_String 1A6C  
           __end_of_fround 1219        start_initialization 07FC        __end_of__tdiv_to_l_ 2000  
        __size_of_Lcd_Init 005D          __size_of_Lcd_Port 0022            ___llmod@divisor 0070  
          ___llmod@counter 0079                 ?_Lcd_Clear 0070                   ??___flge 0078  
                 ??___fleq 0078                   ??___wmul 0074                  __Umul8_16 19D4  
          Lcd_Write_Char@a 0074            Lcd_Write_Char@y 0073                   ??_fround 0042  
            sprintf@tmpval 00B9                  ___fladd@a 0056                  ___fladd@b 0052  
               fround@prec 0051                  ___flmul@a 0028                  ___flmul@b 0024  
                ___flsub@a 0066                  ___flsub@b 006A                  ___latbits 0002  
            __pcstackBANK0 0020              __pcstackBANK1 00A0              __pcstackBANK2 0110  
            __pcstackBANK3 0190          __size_of___xxtofl 00BA                   ?_Lcd_Cmd 0070  
              sprintf@flag 00B1                sprintf@eexp 00B7                sprintf@fval 00BF  
              sprintf@prec 00BD           ___lwdiv@dividend 0078           ??_Lcd_Set_Cursor 0075  
                 ?___fladd 0052                   ?___awdiv 0077                   ?___flneg 0070  
                 ?___awmod 0070                   ?___flmul 0024                   ?___flsub 0066  
                 ?___fltol 0051                   ?___lldiv 0070                   ?___llmod 0070  
                __npowers_ 0047                 ?__Umul8_16 0070                   ?___lwdiv 0076  
                 ?___lwmod 0070                  __pstrings 0003                __tdiv_to_l_ 1F43  
             ??__div_to_l_ 0078                   ?_isdigit 0070                  _scale$939 004C  
         ___lwdiv@quotient 007B                   ?_sprintf 00A0             __size_of_scale 035F  
           ___wmul@product 0074                   Lcd_Cmd@a 0073         __end_of__div_to_l_ 0180  
              ??_Lcd_Clear 0074                 _ADCON0bits 001F                __stringbase 0012  
               _ADCON1bits 009F          ___wmul@multiplier 0070           ??_Lcd_Write_Char 0071  
                 _Lcd_Init 1C3F                   _Lcd_Port 1969           main@valor_entry0 01E0  
         main@valor_entry1 01E4           main@valor_entry2 012C           main@valor_entry3 01E8  
         main@valor_entry4 01EC           main@valor_entry5 0124           main@valor_entry6 0128  
 __end_of_Lcd_Write_String 1AAE           __size_of_Lcd_Cmd 001A                ??__Umul8_16 0072  
         __size_of___fladd 0288           __size_of___awdiv 0069           __size_of___flneg 000B  
         __size_of___awmod 0059           __size_of___flmul 0361           __size_of___flsub 0024  
         __size_of___fltol 007C           __size_of___lldiv 0066           __size_of___llmod 0054  
         __size_of___lwdiv 0044           __size_of___lwmod 003A         __end_of__stringtab 0013  
              _isdigit$751 0070                 sprintf@val 00B3                   ___xxtofl 1E89  
         __size_of_isdigit 0012            ___lwdiv@divisor 0076            ___lwdiv@counter 007D  
                 __ptext10 19D4                   __ptext11 1F43                   __ptext20 194C  
                 __ptext12 00C2                   __ptext21 1DE7                   __ptext13 1E89  
                 __ptext22 1AF2                   __ptext14 19AF                   __ptext23 1A6C  
                 __ptext15 1B92                   __ptext24 19FB                   __ptext16 1C9C  
                 __ptext25 1B40                   __ptext17 1D6B                   __ptext26 1C3F  
                 __ptext18 198B                   __ptext27 1001                   __ptext19 1219  
                 __ptext28 0806                   __ptext29 1969                   __powers_ 0013  
         __size_of_sprintf 067C              __size_of_main 047F                   isdigit@c 0071  
                 scale@scl 0050         Lcd_Write_Char@temp 0072                  sprintf@ap 00B0  
         __tdiv_to_l_@exp1 0025           __tdiv_to_l_@cntr 0024                  sprintf@sp 00A0  
         __tdiv_to_l_@quot 0020           ___lwmod@dividend 0072           ___lldiv@dividend 0074  
                stringcode 000D         Lcd_Set_Cursor@temp 007A               ?__tdiv_to_l_ 0070  
   __Umul8_16@multiplicand 0070                   sprintf@c 00C3                   sprintf@f 00A2  
         ___lldiv@quotient 0079            ___lwmod@divisor 0070            ___lwmod@counter 0075  
                 stringdir 000D                   stringtab 0003              ___fladd@signs 0062  
             ___fladd@aexp 0063               ___fladd@bexp 0064       __Umul8_16@multiplier 0078  
        __Umul8_16@product 0074  
